,id,results,revisions,comments,inline_comments,status,is_accepted,url,commit_message,exist_target_file,added_satd,is_added_satd,deleted_satd,is_deleted_satd,added_and_deleted_satd
0,164,"[{'revision': 1, 'changed_files': []}, {'revision': 2, 'changed_files': []}]",2,2,0,MERGED,True,https://review.opendev.org/#/c/164,Fixes bug lp:821296,False,{},False,{},False,{}
1,146,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 40, 'end_line': 40, 'comment': ""# This file is automatically generated by setup.py, So don't edit it. :)"", 'include_SATD': False}], 'filename': 'setup.py'}]}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/146,Changed setup.py to pull version info from git.,True,{},False,{},False,{}
2,156,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 208, 'end_line': 210, 'comment': ""# TODO(sirp): snet=False for now, however, if the instance of # swift we're talking to is within our same region, we should set # snet=True"", 'include_SATD': True}, {'start_line': 331, 'end_line': 333, 'comment': ""# TODO(sirp): snet=False for now, however, if the instance of # swift we're talking to is within our same region, we should set # snet=True"", 'include_SATD': True}], 'b_comments': [], 'filename': 'glance/store/swift.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [{'start_line': 208, 'end_line': 210, 'comment': ""# TODO(sirp): snet=False for now, however, if the instance of # swift we're talking to is within our same region, we should set # snet=True"", 'include_SATD': True}, {'start_line': 331, 'end_line': 333, 'comment': ""# TODO(sirp): snet=False for now, however, if the instance of # swift we're talking to is within our same region, we should set # snet=True"", 'include_SATD': True}], 'b_comments': [], 'filename': 'glance/store/swift.py'}]}]",2,6,4,MERGED,True,https://review.opendev.org/#/c/156,Adds swift_enable_snet config,True,{},False,"{""# TODO(sirp): snet=False for now, however, if the instance of # swift we're talking to is within our same region, we should set # snet=True"": 1}",True,{}
3,165,"[{'revision': 1, 'changed_files': []}]",1,2,0,ABANDONED,False,https://review.opendev.org/#/c/165,Adding snet description,False,{},False,{},False,{}
4,158,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'tools/install_venv.py'}]}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/158,Detect python version in install_venv,True,{},False,{},False,{}
5,199,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_bin_glance.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_bin_glance.py'}]}]",2,7,0,MERGED,True,https://review.opendev.org/#/c/199,Improves logging by including traceback,True,{},False,{},False,{}
6,170,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 168, 'end_line': 168, 'comment': '# if no value is configured, provide a sane default', 'include_SATD': False}], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/__init__.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 168, 'end_line': 168, 'comment': '# if no value is configured, provide a sane default', 'include_SATD': False}], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/__init__.py'}]}]",2,5,1,MERGED,True,https://review.opendev.org/#/c/170,breaking up MAX_ITEM_LIMIT and making the new values configurable,True,{},False,{},False,{}
7,176,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/common/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'run_tests.py'}, {'a_comments': [], 'b_comments': [{'start_line': 23, 'end_line': 27, 'comment': ""# In order to run the i18n commands for compiling and # installing message catalogs, we use DistUtilsExtra. # Don't make this a hard requirement, but warn that # i18n commands won't be available if DistUtilsExtra is # not installed..."", 'include_SATD': False}], 'filename': 'setup.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/common/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'run_tests.py'}, {'a_comments': [], 'b_comments': [{'start_line': 23, 'end_line': 27, 'comment': ""# In order to run the i18n commands for compiling and # installing message catalogs, we use DistUtilsExtra. # Don't make this a hard requirement, but warn that # i18n commands won't be available if DistUtilsExtra is # not installed..."", 'include_SATD': False}], 'filename': 'setup.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/common/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'run_tests.py'}, {'a_comments': [], 'b_comments': [{'start_line': 23, 'end_line': 27, 'comment': ""# In order to run the i18n commands for compiling and # installing message catalogs, we use DistUtilsExtra. # Don't make this a hard requirement, but warn that # i18n commands won't be available if DistUtilsExtra is # not installed..."", 'include_SATD': False}], 'filename': 'setup.py'}]}]",3,16,3,MERGED,True,https://review.opendev.org/#/c/176,Addresses glance/+spec/i18n,True,{},False,{},False,{}
8,180,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 1124, 'end_line': 1125, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 1132, 'end_line': 1133, 'comment': '# 1. DELETE /images/1 # Verify 404 returned', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_api.py'}, {'a_comments': [{'start_line': 51, 'end_line': 51, 'comment': '# to override the location of the config file for migration testing', 'include_SATD': False}, {'start_line': 173, 'end_line': 174, 'comment': '# 0. GET /images/1 # Verify 404 returned', 'include_SATD': False}, {'start_line': 184, 'end_line': 185, 'comment': '# 1. DELETE /images/1 # Verify 404 returned', 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/tests/functional/test_s3.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 46, 'end_line': 47, 'comment': '# Test machines can set the GLANCE_TEST_SWIFT_CONF variable # to override the location of the config file for migration testing', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_swift.py'}]}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/180,"Consolidates the functional API test cases into /glance/tests/functional/test_api.py, adds a new Swift functional test case, verified that it works on Cloud Files with a test account.",True,{},False,{},False,{}
9,177,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 279, 'end_line': 281, 'comment': '# We destroy the test data store between each test case, # and recreate it, which ensures that we have no side-effects # from the tests', 'include_SATD': False}], 'b_comments': [{'start_line': 282, 'end_line': 284, 'comment': '# We destroy the test data store between each test case, # and recreate it, which ensures that we have no side-effects # from the tests', 'include_SATD': False}], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_api.py'}, {'a_comments': [{'start_line': 49, 'end_line': 49, 'comment': '# Test machines can set the GLANCE_TEST_MIGRATIONS_CONF variable', 'include_SATD': False}, {'start_line': 191, 'end_line': 192, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 200, 'end_line': 201, 'comment': '# 1. GET /images/detail # Verify no public images', 'include_SATD': False}, {'start_line': 209, 'end_line': 210, 'comment': '# 2. HEAD /images/1 # Verify 404 returned', 'include_SATD': False}, {'start_line': 222, 'end_line': 223, 'comment': '# 3. POST /images with public image named Image1 # attribute and no custom properties. Verify a 200 OK is returned', 'include_SATD': False}, {'start_line': 227, 'end_line': 227, 'comment': '# Necessary otherwise sends 100 Continue', 'include_SATD': False}, {'start_line': 242, 'end_line': 243, 'comment': '# 4. HEAD /images # Verify image found now', 'include_SATD': False}, {'start_line': 256, 'end_line': 257, 'comment': '# 5. GET /images/1 # Verify all information on image we just added is correct', 'include_SATD': False}, {'start_line': 269, 'end_line': 269, 'comment': '# Handle the headers', 'include_SATD': False}, {'start_line': 327, 'end_line': 327, 'comment': '# Now the image data...', 'include_SATD': False}, {'start_line': 330, 'end_line': 331, 'comment': '# Should only be a single ""line"" left, and # that\'s the image data', 'include_SATD': False}, {'start_line': 335, 'end_line': 336, 'comment': '# 6. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 352, 'end_line': 353, 'comment': '# 7. GET /images/detail # Verify image and all its metadata', 'include_SATD': False}, {'start_line': 389, 'end_line': 390, 'comment': '# 8. PUT /images/1 with custom properties of ""distro"" and ""arch"" # Verify 200 returned', 'include_SATD': False}, {'start_line': 405, 'end_line': 406, 'comment': '# 9. GET /images/detail # Verify image and all its metadata', 'include_SATD': False}, {'start_line': 442, 'end_line': 442, 'comment': '# 10. PUT /images/1 and remove a previously existing property.', 'include_SATD': False}, {'start_line': 465, 'end_line': 465, 'comment': '# 11. PUT /images/1 and add a previously deleted property.', 'include_SATD': False}], 'b_comments': [{'start_line': 50, 'end_line': 50, 'comment': '# Test machines can set the GLANCE_TEST_S3_CONF variable', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_s3.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/utils.py'}]}]",1,5,0,MERGED,True,https://review.opendev.org/#/c/177,Add @skip_if_disabled decorator to test.utils and integrate it into the base functional API test case. The S3 functional test case now uses test_api.TestApi as its base class and the setUp() method sets the disabled and disabled_message attributes that th,True,{},False,{},False,{}
10,188,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 124, 'end_line': 125, 'comment': '#NOTE(bcwaldon): this is to prevent false matches when mysql compares # an integer to a string that begins with that integer', 'include_SATD': False}], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 105, 'end_line': 105, 'comment': ""#2',"", 'include_SATD': False}], 'filename': 'glance/tests/unit/test_api.py'}]}]",1,4,0,MERGED,True,https://review.opendev.org/#/c/188,casting image_id to int in db api to prevent false matching in database lookups,True,{},False,{},False,{}
11,185,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 36, 'end_line': 36, 'comment': '#781410 -- glance should fail more gracefully', 'include_SATD': False}, {'start_line': 43, 'end_line': 44, 'comment': '# 1. POST /images with public image named Image1 # attribute and no custom properties. Verify a 200 OK is returned', 'include_SATD': False}, {'start_line': 61, 'end_line': 61, 'comment': '# 2. REMOVE the image from the filesystem', 'include_SATD': False}, {'start_line': 65, 'end_line': 66, 'comment': '# 3. HEAD /images/1 # Verify image found now', 'include_SATD': False}, {'start_line': 73, 'end_line': 74, 'comment': '# 4. GET /images/1 # Verify the api throws the apropriate 404 error', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_misc.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 35, 'end_line': 35, 'comment': '#781410 -- glance should fail more gracefully', 'include_SATD': False}, {'start_line': 42, 'end_line': 43, 'comment': '# 1. POST /images with public image named Image1 # attribute and no custom properties. Verify a 200 OK is returned', 'include_SATD': False}, {'start_line': 60, 'end_line': 60, 'comment': '# 2. REMOVE the image from the filesystem', 'include_SATD': False}, {'start_line': 64, 'end_line': 65, 'comment': '# 3. HEAD /images/1 # Verify image found now', 'include_SATD': False}, {'start_line': 72, 'end_line': 73, 'comment': '# 4. GET /images/1 # Verify the api throws the apropriate 404 error', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_misc.py'}]}]",2,5,1,MERGED,True,https://review.opendev.org/#/c/185,Addresses Bug lp:781410,True,{},False,{},False,{}
12,192,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/exception.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/common/notifier.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_notifier.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/exception.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/common/notifier.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_notifier.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/exception.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/common/notifier.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_notifier.py'}]}]",3,14,0,MERGED,True,https://review.opendev.org/#/c/192,"Add notifications for uploads, updates and deletes",True,{},False,{},False,{}
13,184,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 313, 'end_line': 313, 'comment': ""# Don't drop created_at if we're passing it in..."", 'include_SATD': False}], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [{'start_line': 210, 'end_line': 210, 'comment': ""#1',"", 'include_SATD': False}, {'start_line': 226, 'end_line': 226, 'comment': ""#2',"", 'include_SATD': False}, {'start_line': 362, 'end_line': 362, 'comment': '# sorted func expects func that compares in descending order', 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/tests/stubs.py'}, {'a_comments': [{'start_line': 1444, 'end_line': 1446, 'comment': ""# NOTE(sirp): in-memory DBs don't play well with sqlalchemy migrate # (see httpcode.google.com/p/sqlalchemy-migrate/ #            issues/detail?id=72)"", 'include_SATD': False}], 'b_comments': [{'start_line': 52, 'end_line': 52, 'comment': ""#1',"", 'include_SATD': False}, {'start_line': 66, 'end_line': 66, 'comment': ""#2',"", 'include_SATD': False}, {'start_line': 95, 'end_line': 95, 'comment': '# Easiest to just drop the models and re-create them...', 'include_SATD': False}, {'start_line': 1503, 'end_line': 1503, 'comment': ""#1',"", 'include_SATD': False}, {'start_line': 1517, 'end_line': 1517, 'comment': ""#2',"", 'include_SATD': False}, {'start_line': 1546, 'end_line': 1546, 'comment': '# Easiest to just drop the models and re-create them...', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 64, 'end_line': 64, 'comment': ""#1',"", 'include_SATD': False}, {'start_line': 78, 'end_line': 78, 'comment': ""#2',"", 'include_SATD': False}, {'start_line': 105, 'end_line': 105, 'comment': '# Easiest to just drop the models and re-create them...', 'include_SATD': False}, {'start_line': 947, 'end_line': 947, 'comment': ""#1',"", 'include_SATD': False}, {'start_line': 961, 'end_line': 961, 'comment': ""#2',"", 'include_SATD': False}, {'start_line': 989, 'end_line': 989, 'comment': '# Easiest to just drop the models and re-create them...', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_clients.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 313, 'end_line': 313, 'comment': ""# Don't drop created_at if we're passing it in..."", 'include_SATD': False}], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [{'start_line': 210, 'end_line': 210, 'comment': ""#1',"", 'include_SATD': False}, {'start_line': 226, 'end_line': 226, 'comment': ""#2',"", 'include_SATD': False}, {'start_line': 362, 'end_line': 362, 'comment': '# sorted func expects func that compares in descending order', 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/tests/stubs.py'}, {'a_comments': [{'start_line': 1444, 'end_line': 1446, 'comment': ""# NOTE(sirp): in-memory DBs don't play well with sqlalchemy migrate # (see httpcode.google.com/p/sqlalchemy-migrate/ #            issues/detail?id=72)"", 'include_SATD': False}], 'b_comments': [{'start_line': 52, 'end_line': 52, 'comment': ""#1',"", 'include_SATD': False}, {'start_line': 66, 'end_line': 66, 'comment': ""#2',"", 'include_SATD': False}, {'start_line': 95, 'end_line': 95, 'comment': '# Easiest to just drop the models and re-create them...', 'include_SATD': False}, {'start_line': 1498, 'end_line': 1498, 'comment': ""#1',"", 'include_SATD': False}, {'start_line': 1512, 'end_line': 1512, 'comment': ""#2',"", 'include_SATD': False}, {'start_line': 1541, 'end_line': 1541, 'comment': '# Easiest to just drop the models and re-create them...', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 64, 'end_line': 64, 'comment': ""#1',"", 'include_SATD': False}, {'start_line': 78, 'end_line': 78, 'comment': ""#2',"", 'include_SATD': False}, {'start_line': 105, 'end_line': 105, 'comment': '# Easiest to just drop the models and re-create them...', 'include_SATD': False}, {'start_line': 947, 'end_line': 947, 'comment': ""#1',"", 'include_SATD': False}, {'start_line': 961, 'end_line': 961, 'comment': ""#2',"", 'include_SATD': False}, {'start_line': 989, 'end_line': 989, 'comment': '# Easiest to just drop the models and re-create them...', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_clients.py'}]}]",2,5,2,MERGED,True,https://review.opendev.org/#/c/184,"Removes faked out datastore entirely, allowing the DB API to be unit tested.",True,{},False,{},False,{}
14,217,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/common/config.py'}]}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/217,Adds syslog support,True,{},False,{},False,{}
15,277,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/store/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/filesystem.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/location.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/s3.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/scrubber.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/swift.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/utils.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/store/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/filesystem.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/location.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/s3.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/scrubber.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/swift.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/utils.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/store/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/filesystem.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/location.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/s3.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/scrubber.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/swift.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/utils.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/store/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/filesystem.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/location.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/s3.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/scrubber.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/swift.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/utils.py'}]}]",4,9,20,MERGED,True,https://review.opendev.org/#/c/277,Addresses glance/+spec/i18n,True,{},False,{},False,{}
16,200,"[{'revision': 1, 'changed_files': []}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/exception.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/common/notifier.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_notifier.py'}]}]",2,5,0,ABANDONED,False,https://review.opendev.org/#/c/200,"Add notifications for uploads, updates and deletes",True,{},False,{},False,{}
17,286,"[{'revision': 1, 'changed_files': []}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/286,Add rfc.sh for git review.,False,{},False,{},False,{}
18,302,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/api/middleware/version_negotiation.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/image_cache/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/image_cache/prefetcher.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/image_cache/pruner.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/migrate_repo/schema.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/migration.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/http.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/api/middleware/version_negotiation.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/image_cache/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/image_cache/prefetcher.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/image_cache/pruner.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/migrate_repo/schema.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/migration.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/http.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/api/middleware/version_negotiation.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/image_cache/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/image_cache/prefetcher.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/image_cache/pruner.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/migrate_repo/schema.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/migration.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/http.py'}]}]",3,8,7,MERGED,True,https://review.opendev.org/#/c/302,Addresses glance/+spec/i18n,True,{},False,{},False,{}
19,331,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_api.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_api.py'}]}]",2,3,0,MERGED,True,https://review.opendev.org/#/c/331,Bug lp:829654,True,{},False,{},False,{}
20,327,"[{'revision': 1, 'changed_files': []}]",1,1,0,MERGED,True,https://review.opendev.org/#/c/327,Update rfc.sh to use 'true'.,False,{},False,{},False,{}
21,213,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/image_cache/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_image_cache.py'}]}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/213,Fixes image cache enabled config,True,{},False,{},False,{}
22,226,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/common/client.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 5, 'end_line': 6, 'comment': '# See httpcode.google.com/p/python-nose/issues/detail?id=373 # The code below enables glance.client standalone to work with i18n _() blocks', 'include_SATD': False}], 'filename': 'glance/common/client.py'}]}]",2,3,0,MERGED,True,https://review.opendev.org/#/c/226,Bug Fix lp:825493,True,{},False,{},False,{}
23,340,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/common/config.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_logging.py'}]}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/340,Switch file based logging to WatchedFileHandler for logrotate,True,{},False,{},False,{}
24,229,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 17, 'end_line': 18, 'comment': '# See httpcode.google.com/p/python-nose/issues/detail?id=373 # The code below enables nosetests to work with i18n _() blocks', 'include_SATD': False}], 'filename': 'glance/tests/__init__.py'}]}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/229,Bug fix lp:824706,True,{},False,{},False,{}
25,343,"[{'revision': 1, 'changed_files': []}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/343,Update rfc.sh to use 'true'.,False,{},False,{},False,{}
26,295,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/common/context.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 149, 'end_line': 149, 'comment': '# The same for deleted', 'include_SATD': False}, {'start_line': 153, 'end_line': 155, 'comment': '# NOTE(jkoelker): This is technically unnecessary since the db #                 api will force deleted=False if its not an #                 admin context. But explicit > implicit.', 'include_SATD': False}], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/scrubber.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_scrubber.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/common/context.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 150, 'end_line': 150, 'comment': '# The same for deleted', 'include_SATD': False}, {'start_line': 154, 'end_line': 156, 'comment': '# NOTE(jkoelker): This is technically unnecessary since the db #                 api will force deleted=False if its not an #                 admin context. But explicit > implicit.', 'include_SATD': False}], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/scrubber.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_scrubber.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/common/context.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 150, 'end_line': 150, 'comment': '# The same for deleted', 'include_SATD': False}, {'start_line': 154, 'end_line': 156, 'comment': '# NOTE(jkoelker): This is technically unnecessary since the db #                 api will force deleted=False if its not an #                 admin context. But explicit > implicit.', 'include_SATD': False}], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/scrubber.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_scrubber.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/common/context.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 150, 'end_line': 150, 'comment': '# The same for deleted', 'include_SATD': False}, {'start_line': 154, 'end_line': 156, 'comment': '# NOTE(jkoelker): This is technically unnecessary since the db #                 api will force deleted=False if its not an #                 admin context. But explicit > implicit.', 'include_SATD': False}], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/scrubber.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_scrubber.py'}]}, {'revision': 5, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/common/context.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 150, 'end_line': 150, 'comment': '# The same for deleted', 'include_SATD': False}, {'start_line': 154, 'end_line': 156, 'comment': '# NOTE(jkoelker): This is technically unnecessary since the db #                 api will force deleted=False if its not an #                 admin context. But explicit > implicit.', 'include_SATD': False}], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/scrubber.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_scrubber.py'}]}, {'revision': 6, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/common/context.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 150, 'end_line': 150, 'comment': '# The same for deleted', 'include_SATD': False}, {'start_line': 154, 'end_line': 156, 'comment': '# NOTE(jkoelker): This is technically unnecessary since the db #                 api will force deleted=False if its not an #                 admin context. But explicit > implicit.', 'include_SATD': False}], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/scrubber.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_scrubber.py'}]}]",6,13,30,MERGED,True,https://review.opendev.org/#/c/295,"* Scrubber now uses registry client to communicate with registry * glance-api writes out to a scrubber ""queue"" dir on delete * Scrubber determines images to deleted from ""queue"" dir not db",True,{},False,{},False,{}
27,344,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_api.py'}]}]",1,1,0,MERGED,True,https://review.opendev.org/#/c/344,Bug lp:829654,True,{},False,{},False,{}
28,348,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/common/config.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_logging.py'}]}]",1,1,0,MERGED,True,https://review.opendev.org/#/c/348,Switch file based logging to WatchedFileHandler for logrotate,True,{},False,{},False,{}
29,332,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 91, 'end_line': 97, 'comment': '#    c = pycurl.Curl() #    fp = open(target, ""wb"") #    c.setopt(c.URL, url) #    c.setopt(c.WRITEDATA, fp) #    c.perform() #    c.close() #    fp.close()', 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/common/utils.py'}]}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/332,Bug lp:829064,True,{},False,{},False,{}
30,352,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'auth/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/client.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/352,Improving authorization failure message,True,{},False,{},False,{}
31,367,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/api/cached_images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/scrubber.py'}]}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/367,Bug fix lp:726864,True,{},False,{},False,{}
32,368,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/cached_images.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/cached_images.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/cached_images.py'}]}]",3,8,0,MERGED,True,https://review.opendev.org/#/c/368,Fix cached-images API endpoint,True,{},False,{},False,{}
33,345,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 91, 'end_line': 97, 'comment': '#    c = pycurl.Curl() #    fp = open(target, ""wb"") #    c.setopt(c.URL, url) #    c.setopt(c.WRITEDATA, fp) #    c.perform() #    c.close() #    fp.close()', 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/common/utils.py'}]}]",1,1,0,MERGED,True,https://review.opendev.org/#/c/345,Bug lp:829064,True,{},False,{},False,{}
34,374,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/common/config.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/common/config.py'}]}]",2,3,0,MERGED,True,https://review.opendev.org/#/c/374,Remove PWD from possible config_file_dirs.,True,{},False,{},False,{}
35,377,"[{'revision': 1, 'changed_files': []}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/377,Update paste config files with keystone examples. see ticket: lp839559,False,{},False,{},False,{}
36,190,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010-2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/common/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_clients.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010-2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 17, 'end_line': 19, 'comment': '# HTTPSClientAuthConnection code comes courtesy of ActiveState website: # httpcode.activestate.com/recipes/ #   577548-https-httplib-client-connection-with-certificate-v/', 'include_SATD': False}, {'start_line': 92, 'end_line': 92, 'comment': ""# If there's no CA File, don't force Server Certificate Check"", 'include_SATD': False}], 'filename': 'glance/common/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_clients.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010-2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 17, 'end_line': 19, 'comment': '# HTTPSClientAuthConnection code comes courtesy of ActiveState website: # httpcode.activestate.com/recipes/ #   577548-https-httplib-client-connection-with-certificate-v/', 'include_SATD': False}, {'start_line': 92, 'end_line': 92, 'comment': ""# If there's no CA File, don't force Server Certificate Check"", 'include_SATD': False}], 'filename': 'glance/common/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_clients.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010-2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 17, 'end_line': 19, 'comment': '# HTTPSClientAuthConnection code comes courtesy of ActiveState website: # httpcode.activestate.com/recipes/ #   577548-https-httplib-client-connection-with-certificate-v/', 'include_SATD': False}, {'start_line': 98, 'end_line': 98, 'comment': ""# If there's no CA File, don't force Server Certificate Check"", 'include_SATD': False}], 'filename': 'glance/common/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/exception.py'}, {'a_comments': [], 'b_comments': [{'start_line': 95, 'end_line': 95, 'comment': '# in my experience, sockets can hang around forever without keepalive', 'include_SATD': False}], 'filename': 'glance/common/wsgi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_clients.py'}]}, {'revision': 5, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010-2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 17, 'end_line': 19, 'comment': '# HTTPSClientAuthConnection code comes courtesy of ActiveState website: # httpcode.activestate.com/recipes/ #   577548-https-httplib-client-connection-with-certificate-v/', 'include_SATD': False}, {'start_line': 100, 'end_line': 100, 'comment': ""# If there's no CA File, don't force Server Certificate Check"", 'include_SATD': False}, {'start_line': 153, 'end_line': 154, 'comment': '# doc_root can be a nullstring, which is valid, and why we # cannot simply do doc_root or self.DEFAULT_DOC_ROOT below.', 'include_SATD': True}], 'filename': 'glance/common/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/exception.py'}, {'a_comments': [], 'b_comments': [{'start_line': 95, 'end_line': 95, 'comment': '# in my experience, sockets can hang around forever without keepalive', 'include_SATD': False}], 'filename': 'glance/common/wsgi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_clients.py'}]}, {'revision': 6, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010-2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 17, 'end_line': 19, 'comment': '# HTTPSClientAuthConnection code comes courtesy of ActiveState website: # httpcode.activestate.com/recipes/ #   577548-https-httplib-client-connection-with-certificate-v/', 'include_SATD': False}, {'start_line': 100, 'end_line': 100, 'comment': ""# If there's no CA File, don't force Server Certificate Check"", 'include_SATD': False}, {'start_line': 153, 'end_line': 154, 'comment': '# doc_root can be a nullstring, which is valid, and why we # cannot simply do doc_root or self.DEFAULT_DOC_ROOT below.', 'include_SATD': True}], 'filename': 'glance/common/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/exception.py'}, {'a_comments': [], 'b_comments': [{'start_line': 95, 'end_line': 95, 'comment': '# in my experience, sockets can hang around forever without keepalive', 'include_SATD': False}], 'filename': 'glance/common/wsgi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_clients.py'}]}, {'revision': 7, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010-2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 17, 'end_line': 19, 'comment': '# HTTPSClientAuthConnection code comes courtesy of ActiveState website: # httpcode.activestate.com/recipes/ #   577548-https-httplib-client-connection-with-certificate-v/', 'include_SATD': False}, {'start_line': 100, 'end_line': 100, 'comment': ""# If there's no CA File, don't force Server Certificate Check"", 'include_SATD': False}, {'start_line': 154, 'end_line': 155, 'comment': '# doc_root can be a nullstring, which is valid, and why we # cannot simply do doc_root or self.DEFAULT_DOC_ROOT below.', 'include_SATD': True}], 'filename': 'glance/common/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/exception.py'}, {'a_comments': [], 'b_comments': [{'start_line': 95, 'end_line': 95, 'comment': '# in my experience, sockets can hang around forever without keepalive', 'include_SATD': False}], 'filename': 'glance/common/wsgi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_clients.py'}]}, {'revision': 8, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/members.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010-2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 17, 'end_line': 19, 'comment': '# HTTPSClientAuthConnection code comes courtesy of ActiveState website: # httpcode.activestate.com/recipes/ #   577548-https-httplib-client-connection-with-certificate-v/', 'include_SATD': False}, {'start_line': 100, 'end_line': 100, 'comment': ""# If there's no CA File, don't force Server Certificate Check"", 'include_SATD': False}, {'start_line': 154, 'end_line': 155, 'comment': '# doc_root can be a nullstring, which is valid, and why we # cannot simply do doc_root or self.DEFAULT_DOC_ROOT below.', 'include_SATD': True}], 'filename': 'glance/common/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/exception.py'}, {'a_comments': [], 'b_comments': [{'start_line': 95, 'end_line': 95, 'comment': '# in my experience, sockets can hang around forever without keepalive', 'include_SATD': False}], 'filename': 'glance/common/wsgi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpswww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 114, 'end_line': 115, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 122, 'end_line': 123, 'comment': '# 1. GET /images/detail # Verify no public images', 'include_SATD': False}, {'start_line': 130, 'end_line': 131, 'comment': '# 2. HEAD /images/1 # Verify 404 returned', 'include_SATD': False}, {'start_line': 137, 'end_line': 138, 'comment': '# 3. POST /images with public image named Image1 # attribute and no custom properties. Verify a 200 OK is returned', 'include_SATD': False}, {'start_line': 155, 'end_line': 156, 'comment': '# 4. HEAD /images/1 # Verify image found now', 'include_SATD': False}, {'start_line': 163, 'end_line': 164, 'comment': '# 5. GET /images/1 # Verify all information on image we just added is correct', 'include_SATD': False}, {'start_line': 200, 'end_line': 201, 'comment': '# 6. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 216, 'end_line': 217, 'comment': '# 7. GET /images/detail # Verify image and all its metadata', 'include_SATD': False}, {'start_line': 244, 'end_line': 245, 'comment': '# 8. PUT /images/1 with custom properties of ""distro"" and ""arch"" # Verify 200 returned', 'include_SATD': False}, {'start_line': 256, 'end_line': 257, 'comment': '# 9. GET /images/detail # Verify image and all its metadata', 'include_SATD': False}, {'start_line': 284, 'end_line': 284, 'comment': '# 10. PUT /images/1 and remove a previously existing property.', 'include_SATD': False}, {'start_line': 298, 'end_line': 298, 'comment': '# 11. PUT /images/1 and add a previously deleted property.', 'include_SATD': False}, {'start_line': 345, 'end_line': 346, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 353, 'end_line': 354, 'comment': '# 1. POST /images with public image named Image1 # with no location or image data', 'include_SATD': False}, {'start_line': 370, 'end_line': 371, 'comment': '# 2. GET /images # Verify 1 public image', 'include_SATD': False}, {'start_line': 384, 'end_line': 385, 'comment': '# 3. HEAD /images # Verify status is in queued', 'include_SATD': False}, {'start_line': 395, 'end_line': 395, 'comment': '# 4. PUT /images/1 with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 410, 'end_line': 411, 'comment': '# 5. HEAD /images # Verify status is in active', 'include_SATD': False}, {'start_line': 419, 'end_line': 420, 'comment': '# 6. GET /images # Verify 1 public image still...', 'include_SATD': False}, {'start_line': 462, 'end_line': 464, 'comment': '# 0. GET / with no Accept: header # Verify version choices returned. # Bug lp:803260  no Accept header causes a 500 in glance-api', 'include_SATD': True}, {'start_line': 471, 'end_line': 472, 'comment': '# 1. GET /images with no Accept: header # Verify version choices returned.', 'include_SATD': False}, {'start_line': 479, 'end_line': 480, 'comment': '# 2. GET /v1/images with no Accept: header # Verify empty images list returned.', 'include_SATD': False}, {'start_line': 487, 'end_line': 489, 'comment': '# 3. GET / with Accept: unknown header # Verify version choices returned. Verify message in API log about # unknown accept header.', 'include_SATD': False}, {'start_line': 499, 'end_line': 500, 'comment': '# 4. GET / with an Accept: application/vnd.openstack.images-v1 # Verify empty image list returned', 'include_SATD': False}, {'start_line': 508, 'end_line': 510, 'comment': '# 5. GET /images with a Accept: application/vnd.openstack.compute-v1 # header. Verify version choices returned. Verify message in API log # about unknown accept header.', 'include_SATD': False}, {'start_line': 520, 'end_line': 521, 'comment': '# 6. GET /v1.0/images with no Accept: header # Verify empty image list returned', 'include_SATD': False}, {'start_line': 528, 'end_line': 529, 'comment': '# 7. GET /v1.a/images with no Accept: header # Verify empty image list returned', 'include_SATD': False}, {'start_line': 536, 'end_line': 537, 'comment': '# 8. GET /va.1/images with no Accept: header # Verify version choices returned', 'include_SATD': False}, {'start_line': 544, 'end_line': 545, 'comment': '# 9. GET /versions with no Accept: header # Verify version choices returned', 'include_SATD': False}, {'start_line': 552, 'end_line': 553, 'comment': '# 10. GET /versions with a Accept: application/vnd.openstack.images-v1 # header. Verify version choices returned.', 'include_SATD': False}, {'start_line': 561, 'end_line': 562, 'comment': '# 11. GET /v1/versions with no Accept: header # Verify 404 returned', 'include_SATD': False}, {'start_line': 568, 'end_line': 569, 'comment': '# 12. GET /v2/versions with no Accept: header # Verify version choices returned', 'include_SATD': False}, {'start_line': 576, 'end_line': 578, 'comment': '# 13. GET /images with a Accept: application/vnd.openstack.compute-v2 # header. Verify version choices returned. Verify message in API log # about unknown version in accept header.', 'include_SATD': False}, {'start_line': 588, 'end_line': 589, 'comment': '# 14. GET /v1.2/images with no Accept: header # Verify version choices returned', 'include_SATD': False}, {'start_line': 612, 'end_line': 616, 'comment': '# 1. POST /images with public image named Image1 # attribute and a size of 5G. Use the HTTP engine with an # X-Image-Meta-Location attribute to make Glance forego # ""adding"" the image data. # Verify a 201 OK is returned', 'include_SATD': False}, {'start_line': 627, 'end_line': 628, 'comment': '# 2. HEAD /images # Verify image size is what was passed in, and not truncated', 'include_SATD': False}, {'start_line': 651, 'end_line': 653, 'comment': '# POST /images with binary data, but not setting # Content-Type to application/octet-stream, verify a # 400 returned and that the error is readable.', 'include_SATD': False}, {'start_line': 676, 'end_line': 677, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 684, 'end_line': 685, 'comment': '# 1. POST /images with three public images, and one private image # with various attributes', 'include_SATD': False}, {'start_line': 748, 'end_line': 749, 'comment': '# 2. GET /images # Verify three public images', 'include_SATD': False}, {'start_line': 756, 'end_line': 757, 'comment': '# 3. GET /images with name filter # Verify correct images returned with name', 'include_SATD': False}, {'start_line': 768, 'end_line': 769, 'comment': '# 4. GET /images with status filter # Verify correct images returned with status', 'include_SATD': False}, {'start_line': 788, 'end_line': 789, 'comment': '# 5. GET /images with container_format filter # Verify correct images returned with container_format', 'include_SATD': False}, {'start_line': 800, 'end_line': 801, 'comment': '# 6. GET /images with disk_format filter # Verify correct images returned with disk_format', 'include_SATD': False}, {'start_line': 812, 'end_line': 813, 'comment': '# 7. GET /images with size_max filter # Verify correct images returned with size <= expected', 'include_SATD': False}, {'start_line': 824, 'end_line': 825, 'comment': '# 8. GET /images with size_min filter # Verify correct images returned with size >= expected', 'include_SATD': False}, {'start_line': 836, 'end_line': 838, 'comment': '# 9. Get /images with is_public=None filter # Verify correct images returned with property # Bug lp:803656  Support is_public in filtering', 'include_SATD': False}, {'start_line': 847, 'end_line': 849, 'comment': '# 10. Get /images with is_public=False filter # Verify correct images returned with property # Bug lp:803656  Support is_public in filtering', 'include_SATD': False}, {'start_line': 860, 'end_line': 862, 'comment': '# 11. Get /images with is_public=True filter # Verify correct images returned with property # Bug lp:803656  Support is_public in filtering', 'include_SATD': False}, {'start_line': 873, 'end_line': 874, 'comment': '# 12. GET /images with property filter # Verify correct images returned with property', 'include_SATD': False}, {'start_line': 885, 'end_line': 887, 'comment': '# 13. GET /images with property filter and name filter # Verify correct images returned with property and name # Make sure you quote the url when using more than one param!', 'include_SATD': False}, {'start_line': 899, 'end_line': 899, 'comment': '# 14. GET /images with past changes-since filter', 'include_SATD': False}, {'start_line': 909, 'end_line': 909, 'comment': '# 15. GET /images with future changes-since filter', 'include_SATD': False}, {'start_line': 929, 'end_line': 930, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 937, 'end_line': 937, 'comment': '# 1. POST /images with three public images with various attributes', 'include_SATD': False}, {'start_line': 962, 'end_line': 963, 'comment': '# 2. GET /images with limit of 2 # Verify only two images were returned', 'include_SATD': False}, {'start_line': 974, 'end_line': 975, 'comment': '# 3. GET /images with marker # Verify only two images were returned', 'include_SATD': False}, {'start_line': 986, 'end_line': 987, 'comment': '# 4. GET /images with marker and limit # Verify only one image was returned with the correct id', 'include_SATD': False}, {'start_line': 997, 'end_line': 998, 'comment': '# 5. GET /images/detail with marker and limit # Verify only one image was returned with the correct id', 'include_SATD': False}, {'start_line': 1018, 'end_line': 1019, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 1026, 'end_line': 1026, 'comment': '# 1. POST /images with three public images with various attributes', 'include_SATD': False}, {'start_line': 1063, 'end_line': 1064, 'comment': '# 2. GET /images with no query params # Verify three public images sorted by created_at desc', 'include_SATD': False}, {'start_line': 1075, 'end_line': 1075, 'comment': '# 3. GET /images sorted by name asc', 'include_SATD': False}, {'start_line': 1087, 'end_line': 1087, 'comment': '# 4. GET /images sorted by size desc', 'include_SATD': False}, {'start_line': 1099, 'end_line': 1099, 'comment': '# 5. GET /images sorted by size desc with a marker', 'include_SATD': False}, {'start_line': 1110, 'end_line': 1110, 'comment': '# 6. GET /images sorted by name asc with a marker', 'include_SATD': False}, {'start_line': 1129, 'end_line': 1130, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 1137, 'end_line': 1137, 'comment': '# 1. POST /images with public image named Image1', 'include_SATD': False}, {'start_line': 1150, 'end_line': 1150, 'comment': '# 2. POST /images with public image named Image1, and ID: 1', 'include_SATD': False}, {'start_line': 1185, 'end_line': 1186, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 1193, 'end_line': 1194, 'comment': '# 1. DELETE /images/1 # Verify 404 returned', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_ssl.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_clients.py'}]}, {'revision': 9, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/members.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010-2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 17, 'end_line': 19, 'comment': '# HTTPSClientAuthConnection code comes courtesy of ActiveState website: # httpcode.activestate.com/recipes/ #   577548-https-httplib-client-connection-with-certificate-v/', 'include_SATD': False}, {'start_line': 100, 'end_line': 100, 'comment': ""# If there's no CA File, don't force Server Certificate Check"", 'include_SATD': False}, {'start_line': 154, 'end_line': 155, 'comment': '# doc_root can be a nullstring, which is valid, and why we # cannot simply do doc_root or self.DEFAULT_DOC_ROOT below.', 'include_SATD': True}], 'filename': 'glance/common/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/exception.py'}, {'a_comments': [], 'b_comments': [{'start_line': 95, 'end_line': 95, 'comment': '# in my experience, sockets can hang around forever without keepalive', 'include_SATD': False}], 'filename': 'glance/common/wsgi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpswww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 115, 'end_line': 116, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 123, 'end_line': 124, 'comment': '# 1. GET /images/detail # Verify no public images', 'include_SATD': False}, {'start_line': 131, 'end_line': 132, 'comment': '# 2. HEAD /images/1 # Verify 404 returned', 'include_SATD': False}, {'start_line': 138, 'end_line': 139, 'comment': '# 3. POST /images with public image named Image1 # attribute and no custom properties. Verify a 200 OK is returned', 'include_SATD': False}, {'start_line': 156, 'end_line': 157, 'comment': '# 4. HEAD /images/1 # Verify image found now', 'include_SATD': False}, {'start_line': 164, 'end_line': 165, 'comment': '# 5. GET /images/1 # Verify all information on image we just added is correct', 'include_SATD': False}, {'start_line': 201, 'end_line': 202, 'comment': '# 6. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 217, 'end_line': 218, 'comment': '# 7. GET /images/detail # Verify image and all its metadata', 'include_SATD': False}, {'start_line': 245, 'end_line': 246, 'comment': '# 8. PUT /images/1 with custom properties of ""distro"" and ""arch"" # Verify 200 returned', 'include_SATD': False}, {'start_line': 257, 'end_line': 258, 'comment': '# 9. GET /images/detail # Verify image and all its metadata', 'include_SATD': False}, {'start_line': 285, 'end_line': 285, 'comment': '# 10. PUT /images/1 and remove a previously existing property.', 'include_SATD': False}, {'start_line': 299, 'end_line': 299, 'comment': '# 11. PUT /images/1 and add a previously deleted property.', 'include_SATD': False}, {'start_line': 346, 'end_line': 347, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 354, 'end_line': 355, 'comment': '# 1. POST /images with public image named Image1 # with no location or image data', 'include_SATD': False}, {'start_line': 371, 'end_line': 372, 'comment': '# 2. GET /images # Verify 1 public image', 'include_SATD': False}, {'start_line': 385, 'end_line': 386, 'comment': '# 3. HEAD /images # Verify status is in queued', 'include_SATD': False}, {'start_line': 396, 'end_line': 396, 'comment': '# 4. PUT /images/1 with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 411, 'end_line': 412, 'comment': '# 5. HEAD /images # Verify status is in active', 'include_SATD': False}, {'start_line': 420, 'end_line': 421, 'comment': '# 6. GET /images # Verify 1 public image still...', 'include_SATD': False}, {'start_line': 463, 'end_line': 465, 'comment': '# 0. GET / with no Accept: header # Verify version choices returned. # Bug lp:803260  no Accept header causes a 500 in glance-api', 'include_SATD': True}, {'start_line': 472, 'end_line': 473, 'comment': '# 1. GET /images with no Accept: header # Verify version choices returned.', 'include_SATD': False}, {'start_line': 480, 'end_line': 481, 'comment': '# 2. GET /v1/images with no Accept: header # Verify empty images list returned.', 'include_SATD': False}, {'start_line': 488, 'end_line': 490, 'comment': '# 3. GET / with Accept: unknown header # Verify version choices returned. Verify message in API log about # unknown accept header.', 'include_SATD': False}, {'start_line': 500, 'end_line': 501, 'comment': '# 4. GET / with an Accept: application/vnd.openstack.images-v1 # Verify empty image list returned', 'include_SATD': False}, {'start_line': 509, 'end_line': 511, 'comment': '# 5. GET /images with a Accept: application/vnd.openstack.compute-v1 # header. Verify version choices returned. Verify message in API log # about unknown accept header.', 'include_SATD': False}, {'start_line': 521, 'end_line': 522, 'comment': '# 6. GET /v1.0/images with no Accept: header # Verify empty image list returned', 'include_SATD': False}, {'start_line': 529, 'end_line': 530, 'comment': '# 7. GET /v1.a/images with no Accept: header # Verify empty image list returned', 'include_SATD': False}, {'start_line': 537, 'end_line': 538, 'comment': '# 8. GET /va.1/images with no Accept: header # Verify version choices returned', 'include_SATD': False}, {'start_line': 545, 'end_line': 546, 'comment': '# 9. GET /versions with no Accept: header # Verify version choices returned', 'include_SATD': False}, {'start_line': 553, 'end_line': 554, 'comment': '# 10. GET /versions with a Accept: application/vnd.openstack.images-v1 # header. Verify version choices returned.', 'include_SATD': False}, {'start_line': 562, 'end_line': 563, 'comment': '# 11. GET /v1/versions with no Accept: header # Verify 404 returned', 'include_SATD': False}, {'start_line': 569, 'end_line': 570, 'comment': '# 12. GET /v2/versions with no Accept: header # Verify version choices returned', 'include_SATD': False}, {'start_line': 577, 'end_line': 579, 'comment': '# 13. GET /images with a Accept: application/vnd.openstack.compute-v2 # header. Verify version choices returned. Verify message in API log # about unknown version in accept header.', 'include_SATD': False}, {'start_line': 589, 'end_line': 590, 'comment': '# 14. GET /v1.2/images with no Accept: header # Verify version choices returned', 'include_SATD': False}, {'start_line': 613, 'end_line': 617, 'comment': '# 1. POST /images with public image named Image1 # attribute and a size of 5G. Use the HTTP engine with an # X-Image-Meta-Location attribute to make Glance forego # ""adding"" the image data. # Verify a 201 OK is returned', 'include_SATD': False}, {'start_line': 628, 'end_line': 629, 'comment': '# 2. HEAD /images # Verify image size is what was passed in, and not truncated', 'include_SATD': False}, {'start_line': 652, 'end_line': 654, 'comment': '# POST /images with binary data, but not setting # Content-Type to application/octet-stream, verify a # 400 returned and that the error is readable.', 'include_SATD': False}, {'start_line': 677, 'end_line': 678, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 685, 'end_line': 686, 'comment': '# 1. POST /images with three public images, and one private image # with various attributes', 'include_SATD': False}, {'start_line': 749, 'end_line': 750, 'comment': '# 2. GET /images # Verify three public images', 'include_SATD': False}, {'start_line': 757, 'end_line': 758, 'comment': '# 3. GET /images with name filter # Verify correct images returned with name', 'include_SATD': False}, {'start_line': 769, 'end_line': 770, 'comment': '# 4. GET /images with status filter # Verify correct images returned with status', 'include_SATD': False}, {'start_line': 789, 'end_line': 790, 'comment': '# 5. GET /images with container_format filter # Verify correct images returned with container_format', 'include_SATD': False}, {'start_line': 801, 'end_line': 802, 'comment': '# 6. GET /images with disk_format filter # Verify correct images returned with disk_format', 'include_SATD': False}, {'start_line': 813, 'end_line': 814, 'comment': '# 7. GET /images with size_max filter # Verify correct images returned with size <= expected', 'include_SATD': False}, {'start_line': 825, 'end_line': 826, 'comment': '# 8. GET /images with size_min filter # Verify correct images returned with size >= expected', 'include_SATD': False}, {'start_line': 837, 'end_line': 839, 'comment': '# 9. Get /images with is_public=None filter # Verify correct images returned with property # Bug lp:803656  Support is_public in filtering', 'include_SATD': False}, {'start_line': 848, 'end_line': 850, 'comment': '# 10. Get /images with is_public=False filter # Verify correct images returned with property # Bug lp:803656  Support is_public in filtering', 'include_SATD': False}, {'start_line': 861, 'end_line': 863, 'comment': '# 11. Get /images with is_public=True filter # Verify correct images returned with property # Bug lp:803656  Support is_public in filtering', 'include_SATD': False}, {'start_line': 874, 'end_line': 875, 'comment': '# 12. GET /images with property filter # Verify correct images returned with property', 'include_SATD': False}, {'start_line': 886, 'end_line': 888, 'comment': '# 13. GET /images with property filter and name filter # Verify correct images returned with property and name # Make sure you quote the url when using more than one param!', 'include_SATD': False}, {'start_line': 900, 'end_line': 900, 'comment': '# 14. GET /images with past changes-since filter', 'include_SATD': False}, {'start_line': 911, 'end_line': 911, 'comment': '# 15. GET /images with future changes-since filter', 'include_SATD': False}, {'start_line': 932, 'end_line': 933, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 940, 'end_line': 940, 'comment': '# 1. POST /images with three public images with various attributes', 'include_SATD': False}, {'start_line': 965, 'end_line': 966, 'comment': '# 2. GET /images with limit of 2 # Verify only two images were returned', 'include_SATD': False}, {'start_line': 977, 'end_line': 978, 'comment': '# 3. GET /images with marker # Verify only two images were returned', 'include_SATD': False}, {'start_line': 989, 'end_line': 990, 'comment': '# 4. GET /images with marker and limit # Verify only one image was returned with the correct id', 'include_SATD': False}, {'start_line': 1000, 'end_line': 1001, 'comment': '# 5. GET /images/detail with marker and limit # Verify only one image was returned with the correct id', 'include_SATD': False}, {'start_line': 1021, 'end_line': 1022, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 1029, 'end_line': 1029, 'comment': '# 1. POST /images with three public images with various attributes', 'include_SATD': False}, {'start_line': 1066, 'end_line': 1067, 'comment': '# 2. GET /images with no query params # Verify three public images sorted by created_at desc', 'include_SATD': False}, {'start_line': 1078, 'end_line': 1078, 'comment': '# 3. GET /images sorted by name asc', 'include_SATD': False}, {'start_line': 1091, 'end_line': 1091, 'comment': '# 4. GET /images sorted by size desc', 'include_SATD': False}, {'start_line': 1104, 'end_line': 1104, 'comment': '# 5. GET /images sorted by size desc with a marker', 'include_SATD': False}, {'start_line': 1116, 'end_line': 1116, 'comment': '# 6. GET /images sorted by name asc with a marker', 'include_SATD': False}, {'start_line': 1136, 'end_line': 1137, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 1144, 'end_line': 1144, 'comment': '# 1. POST /images with public image named Image1', 'include_SATD': False}, {'start_line': 1157, 'end_line': 1157, 'comment': '# 2. POST /images with public image named Image1, and ID: 1', 'include_SATD': False}, {'start_line': 1192, 'end_line': 1193, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 1200, 'end_line': 1201, 'comment': '# 1. DELETE /images/1 # Verify 404 returned', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_ssl.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_clients.py'}]}, {'revision': 10, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/members.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010-2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 17, 'end_line': 19, 'comment': '# HTTPSClientAuthConnection code comes courtesy of ActiveState website: # httpcode.activestate.com/recipes/ #   577548-https-httplib-client-connection-with-certificate-v/', 'include_SATD': False}, {'start_line': 100, 'end_line': 100, 'comment': ""# If there's no CA File, don't force Server Certificate Check"", 'include_SATD': False}, {'start_line': 154, 'end_line': 155, 'comment': '# doc_root can be a nullstring, which is valid, and why we # cannot simply do doc_root or self.DEFAULT_DOC_ROOT below.', 'include_SATD': True}], 'filename': 'glance/common/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/exception.py'}, {'a_comments': [], 'b_comments': [{'start_line': 65, 'end_line': 67, 'comment': ""# TODO(jaypipes): eventlet's greened socket module does not actually # support IPv6 in getaddrinfo(). We need to get around this in the # future or monitor upstream for a fix"", 'include_SATD': True}, {'start_line': 98, 'end_line': 98, 'comment': '# in my experience, sockets can hang around forever without keepalive', 'include_SATD': False}], 'filename': 'glance/common/wsgi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpswww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 115, 'end_line': 116, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 123, 'end_line': 124, 'comment': '# 1. GET /images/detail # Verify no public images', 'include_SATD': False}, {'start_line': 131, 'end_line': 132, 'comment': '# 2. HEAD /images/1 # Verify 404 returned', 'include_SATD': False}, {'start_line': 138, 'end_line': 139, 'comment': '# 3. POST /images with public image named Image1 # attribute and no custom properties. Verify a 200 OK is returned', 'include_SATD': False}, {'start_line': 156, 'end_line': 157, 'comment': '# 4. HEAD /images/1 # Verify image found now', 'include_SATD': False}, {'start_line': 164, 'end_line': 165, 'comment': '# 5. GET /images/1 # Verify all information on image we just added is correct', 'include_SATD': False}, {'start_line': 201, 'end_line': 202, 'comment': '# 6. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 217, 'end_line': 218, 'comment': '# 7. GET /images/detail # Verify image and all its metadata', 'include_SATD': False}, {'start_line': 245, 'end_line': 246, 'comment': '# 8. PUT /images/1 with custom properties of ""distro"" and ""arch"" # Verify 200 returned', 'include_SATD': False}, {'start_line': 257, 'end_line': 258, 'comment': '# 9. GET /images/detail # Verify image and all its metadata', 'include_SATD': False}, {'start_line': 285, 'end_line': 285, 'comment': '# 10. PUT /images/1 and remove a previously existing property.', 'include_SATD': False}, {'start_line': 299, 'end_line': 299, 'comment': '# 11. PUT /images/1 and add a previously deleted property.', 'include_SATD': False}, {'start_line': 346, 'end_line': 347, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 354, 'end_line': 355, 'comment': '# 1. POST /images with public image named Image1 # with no location or image data', 'include_SATD': False}, {'start_line': 371, 'end_line': 372, 'comment': '# 2. GET /images # Verify 1 public image', 'include_SATD': False}, {'start_line': 385, 'end_line': 386, 'comment': '# 3. HEAD /images # Verify status is in queued', 'include_SATD': False}, {'start_line': 396, 'end_line': 396, 'comment': '# 4. PUT /images/1 with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 411, 'end_line': 412, 'comment': '# 5. HEAD /images # Verify status is in active', 'include_SATD': False}, {'start_line': 420, 'end_line': 421, 'comment': '# 6. GET /images # Verify 1 public image still...', 'include_SATD': False}, {'start_line': 463, 'end_line': 465, 'comment': '# 0. GET / with no Accept: header # Verify version choices returned. # Bug lp:803260  no Accept header causes a 500 in glance-api', 'include_SATD': True}, {'start_line': 472, 'end_line': 473, 'comment': '# 1. GET /images with no Accept: header # Verify version choices returned.', 'include_SATD': False}, {'start_line': 480, 'end_line': 481, 'comment': '# 2. GET /v1/images with no Accept: header # Verify empty images list returned.', 'include_SATD': False}, {'start_line': 488, 'end_line': 490, 'comment': '# 3. GET / with Accept: unknown header # Verify version choices returned. Verify message in API log about # unknown accept header.', 'include_SATD': False}, {'start_line': 500, 'end_line': 501, 'comment': '# 4. GET / with an Accept: application/vnd.openstack.images-v1 # Verify empty image list returned', 'include_SATD': False}, {'start_line': 509, 'end_line': 511, 'comment': '# 5. GET /images with a Accept: application/vnd.openstack.compute-v1 # header. Verify version choices returned. Verify message in API log # about unknown accept header.', 'include_SATD': False}, {'start_line': 521, 'end_line': 522, 'comment': '# 6. GET /v1.0/images with no Accept: header # Verify empty image list returned', 'include_SATD': False}, {'start_line': 529, 'end_line': 530, 'comment': '# 7. GET /v1.a/images with no Accept: header # Verify empty image list returned', 'include_SATD': False}, {'start_line': 537, 'end_line': 538, 'comment': '# 8. GET /va.1/images with no Accept: header # Verify version choices returned', 'include_SATD': False}, {'start_line': 545, 'end_line': 546, 'comment': '# 9. GET /versions with no Accept: header # Verify version choices returned', 'include_SATD': False}, {'start_line': 553, 'end_line': 554, 'comment': '# 10. GET /versions with a Accept: application/vnd.openstack.images-v1 # header. Verify version choices returned.', 'include_SATD': False}, {'start_line': 562, 'end_line': 563, 'comment': '# 11. GET /v1/versions with no Accept: header # Verify 404 returned', 'include_SATD': False}, {'start_line': 569, 'end_line': 570, 'comment': '# 12. GET /v2/versions with no Accept: header # Verify version choices returned', 'include_SATD': False}, {'start_line': 577, 'end_line': 579, 'comment': '# 13. GET /images with a Accept: application/vnd.openstack.compute-v2 # header. Verify version choices returned. Verify message in API log # about unknown version in accept header.', 'include_SATD': False}, {'start_line': 589, 'end_line': 590, 'comment': '# 14. GET /v1.2/images with no Accept: header # Verify version choices returned', 'include_SATD': False}, {'start_line': 613, 'end_line': 617, 'comment': '# 1. POST /images with public image named Image1 # attribute and a size of 5G. Use the HTTP engine with an # X-Image-Meta-Location attribute to make Glance forego # ""adding"" the image data. # Verify a 201 OK is returned', 'include_SATD': False}, {'start_line': 628, 'end_line': 629, 'comment': '# 2. HEAD /images # Verify image size is what was passed in, and not truncated', 'include_SATD': False}, {'start_line': 652, 'end_line': 654, 'comment': '# POST /images with binary data, but not setting # Content-Type to application/octet-stream, verify a # 400 returned and that the error is readable.', 'include_SATD': False}, {'start_line': 677, 'end_line': 678, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 685, 'end_line': 686, 'comment': '# 1. POST /images with three public images, and one private image # with various attributes', 'include_SATD': False}, {'start_line': 749, 'end_line': 750, 'comment': '# 2. GET /images # Verify three public images', 'include_SATD': False}, {'start_line': 757, 'end_line': 758, 'comment': '# 3. GET /images with name filter # Verify correct images returned with name', 'include_SATD': False}, {'start_line': 769, 'end_line': 770, 'comment': '# 4. GET /images with status filter # Verify correct images returned with status', 'include_SATD': False}, {'start_line': 789, 'end_line': 790, 'comment': '# 5. GET /images with container_format filter # Verify correct images returned with container_format', 'include_SATD': False}, {'start_line': 801, 'end_line': 802, 'comment': '# 6. GET /images with disk_format filter # Verify correct images returned with disk_format', 'include_SATD': False}, {'start_line': 813, 'end_line': 814, 'comment': '# 7. GET /images with size_max filter # Verify correct images returned with size <= expected', 'include_SATD': False}, {'start_line': 825, 'end_line': 826, 'comment': '# 8. GET /images with size_min filter # Verify correct images returned with size >= expected', 'include_SATD': False}, {'start_line': 837, 'end_line': 839, 'comment': '# 9. Get /images with is_public=None filter # Verify correct images returned with property # Bug lp:803656  Support is_public in filtering', 'include_SATD': False}, {'start_line': 848, 'end_line': 850, 'comment': '# 10. Get /images with is_public=False filter # Verify correct images returned with property # Bug lp:803656  Support is_public in filtering', 'include_SATD': False}, {'start_line': 861, 'end_line': 863, 'comment': '# 11. Get /images with is_public=True filter # Verify correct images returned with property # Bug lp:803656  Support is_public in filtering', 'include_SATD': False}, {'start_line': 874, 'end_line': 875, 'comment': '# 12. GET /images with property filter # Verify correct images returned with property', 'include_SATD': False}, {'start_line': 886, 'end_line': 888, 'comment': '# 13. GET /images with property filter and name filter # Verify correct images returned with property and name # Make sure you quote the url when using more than one param!', 'include_SATD': False}, {'start_line': 900, 'end_line': 900, 'comment': '# 14. GET /images with past changes-since filter', 'include_SATD': False}, {'start_line': 911, 'end_line': 911, 'comment': '# 15. GET /images with future changes-since filter', 'include_SATD': False}, {'start_line': 932, 'end_line': 933, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 940, 'end_line': 940, 'comment': '# 1. POST /images with three public images with various attributes', 'include_SATD': False}, {'start_line': 965, 'end_line': 966, 'comment': '# 2. GET /images with limit of 2 # Verify only two images were returned', 'include_SATD': False}, {'start_line': 977, 'end_line': 978, 'comment': '# 3. GET /images with marker # Verify only two images were returned', 'include_SATD': False}, {'start_line': 989, 'end_line': 990, 'comment': '# 4. GET /images with marker and limit # Verify only one image was returned with the correct id', 'include_SATD': False}, {'start_line': 1000, 'end_line': 1001, 'comment': '# 5. GET /images/detail with marker and limit # Verify only one image was returned with the correct id', 'include_SATD': False}, {'start_line': 1021, 'end_line': 1022, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 1029, 'end_line': 1029, 'comment': '# 1. POST /images with three public images with various attributes', 'include_SATD': False}, {'start_line': 1066, 'end_line': 1067, 'comment': '# 2. GET /images with no query params # Verify three public images sorted by created_at desc', 'include_SATD': False}, {'start_line': 1078, 'end_line': 1078, 'comment': '# 3. GET /images sorted by name asc', 'include_SATD': False}, {'start_line': 1091, 'end_line': 1091, 'comment': '# 4. GET /images sorted by size desc', 'include_SATD': False}, {'start_line': 1104, 'end_line': 1104, 'comment': '# 5. GET /images sorted by size desc with a marker', 'include_SATD': False}, {'start_line': 1116, 'end_line': 1116, 'comment': '# 6. GET /images sorted by name asc with a marker', 'include_SATD': False}, {'start_line': 1136, 'end_line': 1137, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 1144, 'end_line': 1144, 'comment': '# 1. POST /images with public image named Image1', 'include_SATD': False}, {'start_line': 1157, 'end_line': 1157, 'comment': '# 2. POST /images with public image named Image1, and ID: 1', 'include_SATD': False}, {'start_line': 1192, 'end_line': 1193, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 1200, 'end_line': 1201, 'comment': '# 1. DELETE /images/1 # Verify 404 returned', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_ssl.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_clients.py'}]}, {'revision': 11, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/members.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010-2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 17, 'end_line': 19, 'comment': '# HTTPSClientAuthConnection code comes courtesy of ActiveState website: # httpcode.activestate.com/recipes/ #   577548-https-httplib-client-connection-with-certificate-v/', 'include_SATD': False}, {'start_line': 100, 'end_line': 100, 'comment': ""# If there's no CA File, don't force Server Certificate Check"", 'include_SATD': False}, {'start_line': 154, 'end_line': 155, 'comment': '# doc_root can be a nullstring, which is valid, and why we # cannot simply do doc_root or self.DEFAULT_DOC_ROOT below.', 'include_SATD': True}], 'filename': 'glance/common/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/exception.py'}, {'a_comments': [], 'b_comments': [{'start_line': 65, 'end_line': 67, 'comment': ""# TODO(jaypipes): eventlet's greened socket module does not actually # support IPv6 in getaddrinfo(). We need to get around this in the # future or monitor upstream for a fix"", 'include_SATD': True}, {'start_line': 98, 'end_line': 98, 'comment': '# in my experience, sockets can hang around forever without keepalive', 'include_SATD': False}], 'filename': 'glance/common/wsgi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpswww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 115, 'end_line': 116, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 123, 'end_line': 124, 'comment': '# 1. GET /images/detail # Verify no public images', 'include_SATD': False}, {'start_line': 131, 'end_line': 132, 'comment': '# 2. HEAD /images/1 # Verify 404 returned', 'include_SATD': False}, {'start_line': 138, 'end_line': 139, 'comment': '# 3. POST /images with public image named Image1 # attribute and no custom properties. Verify a 200 OK is returned', 'include_SATD': False}, {'start_line': 156, 'end_line': 157, 'comment': '# 4. HEAD /images/1 # Verify image found now', 'include_SATD': False}, {'start_line': 164, 'end_line': 165, 'comment': '# 5. GET /images/1 # Verify all information on image we just added is correct', 'include_SATD': False}, {'start_line': 201, 'end_line': 202, 'comment': '# 6. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 217, 'end_line': 218, 'comment': '# 7. GET /images/detail # Verify image and all its metadata', 'include_SATD': False}, {'start_line': 245, 'end_line': 246, 'comment': '# 8. PUT /images/1 with custom properties of ""distro"" and ""arch"" # Verify 200 returned', 'include_SATD': False}, {'start_line': 257, 'end_line': 258, 'comment': '# 9. GET /images/detail # Verify image and all its metadata', 'include_SATD': False}, {'start_line': 285, 'end_line': 285, 'comment': '# 10. PUT /images/1 and remove a previously existing property.', 'include_SATD': False}, {'start_line': 299, 'end_line': 299, 'comment': '# 11. PUT /images/1 and add a previously deleted property.', 'include_SATD': False}, {'start_line': 346, 'end_line': 347, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 354, 'end_line': 355, 'comment': '# 1. POST /images with public image named Image1 # with no location or image data', 'include_SATD': False}, {'start_line': 371, 'end_line': 372, 'comment': '# 2. GET /images # Verify 1 public image', 'include_SATD': False}, {'start_line': 385, 'end_line': 386, 'comment': '# 3. HEAD /images # Verify status is in queued', 'include_SATD': False}, {'start_line': 396, 'end_line': 396, 'comment': '# 4. PUT /images/1 with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 411, 'end_line': 412, 'comment': '# 5. HEAD /images # Verify status is in active', 'include_SATD': False}, {'start_line': 420, 'end_line': 421, 'comment': '# 6. GET /images # Verify 1 public image still...', 'include_SATD': False}, {'start_line': 463, 'end_line': 465, 'comment': '# 0. GET / with no Accept: header # Verify version choices returned. # Bug lp:803260  no Accept header causes a 500 in glance-api', 'include_SATD': True}, {'start_line': 472, 'end_line': 473, 'comment': '# 1. GET /images with no Accept: header # Verify version choices returned.', 'include_SATD': False}, {'start_line': 480, 'end_line': 481, 'comment': '# 2. GET /v1/images with no Accept: header # Verify empty images list returned.', 'include_SATD': False}, {'start_line': 488, 'end_line': 490, 'comment': '# 3. GET / with Accept: unknown header # Verify version choices returned. Verify message in API log about # unknown accept header.', 'include_SATD': False}, {'start_line': 500, 'end_line': 501, 'comment': '# 4. GET / with an Accept: application/vnd.openstack.images-v1 # Verify empty image list returned', 'include_SATD': False}, {'start_line': 509, 'end_line': 511, 'comment': '# 5. GET /images with a Accept: application/vnd.openstack.compute-v1 # header. Verify version choices returned. Verify message in API log # about unknown accept header.', 'include_SATD': False}, {'start_line': 521, 'end_line': 522, 'comment': '# 6. GET /v1.0/images with no Accept: header # Verify empty image list returned', 'include_SATD': False}, {'start_line': 529, 'end_line': 530, 'comment': '# 7. GET /v1.a/images with no Accept: header # Verify empty image list returned', 'include_SATD': False}, {'start_line': 537, 'end_line': 538, 'comment': '# 8. GET /va.1/images with no Accept: header # Verify version choices returned', 'include_SATD': False}, {'start_line': 545, 'end_line': 546, 'comment': '# 9. GET /versions with no Accept: header # Verify version choices returned', 'include_SATD': False}, {'start_line': 553, 'end_line': 554, 'comment': '# 10. GET /versions with a Accept: application/vnd.openstack.images-v1 # header. Verify version choices returned.', 'include_SATD': False}, {'start_line': 562, 'end_line': 563, 'comment': '# 11. GET /v1/versions with no Accept: header # Verify 404 returned', 'include_SATD': False}, {'start_line': 569, 'end_line': 570, 'comment': '# 12. GET /v2/versions with no Accept: header # Verify version choices returned', 'include_SATD': False}, {'start_line': 577, 'end_line': 579, 'comment': '# 13. GET /images with a Accept: application/vnd.openstack.compute-v2 # header. Verify version choices returned. Verify message in API log # about unknown version in accept header.', 'include_SATD': False}, {'start_line': 589, 'end_line': 590, 'comment': '# 14. GET /v1.2/images with no Accept: header # Verify version choices returned', 'include_SATD': False}, {'start_line': 613, 'end_line': 617, 'comment': '# 1. POST /images with public image named Image1 # attribute and a size of 5G. Use the HTTP engine with an # X-Image-Meta-Location attribute to make Glance forego # ""adding"" the image data. # Verify a 201 OK is returned', 'include_SATD': False}, {'start_line': 628, 'end_line': 629, 'comment': '# 2. HEAD /images # Verify image size is what was passed in, and not truncated', 'include_SATD': False}, {'start_line': 652, 'end_line': 654, 'comment': '# POST /images with binary data, but not setting # Content-Type to application/octet-stream, verify a # 400 returned and that the error is readable.', 'include_SATD': False}, {'start_line': 677, 'end_line': 678, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 685, 'end_line': 686, 'comment': '# 1. POST /images with three public images, and one private image # with various attributes', 'include_SATD': False}, {'start_line': 749, 'end_line': 750, 'comment': '# 2. GET /images # Verify three public images', 'include_SATD': False}, {'start_line': 757, 'end_line': 758, 'comment': '# 3. GET /images with name filter # Verify correct images returned with name', 'include_SATD': False}, {'start_line': 769, 'end_line': 770, 'comment': '# 4. GET /images with status filter # Verify correct images returned with status', 'include_SATD': False}, {'start_line': 789, 'end_line': 790, 'comment': '# 5. GET /images with container_format filter # Verify correct images returned with container_format', 'include_SATD': False}, {'start_line': 801, 'end_line': 802, 'comment': '# 6. GET /images with disk_format filter # Verify correct images returned with disk_format', 'include_SATD': False}, {'start_line': 813, 'end_line': 814, 'comment': '# 7. GET /images with size_max filter # Verify correct images returned with size <= expected', 'include_SATD': False}, {'start_line': 825, 'end_line': 826, 'comment': '# 8. GET /images with size_min filter # Verify correct images returned with size >= expected', 'include_SATD': False}, {'start_line': 837, 'end_line': 839, 'comment': '# 9. Get /images with is_public=None filter # Verify correct images returned with property # Bug lp:803656  Support is_public in filtering', 'include_SATD': False}, {'start_line': 848, 'end_line': 850, 'comment': '# 10. Get /images with is_public=False filter # Verify correct images returned with property # Bug lp:803656  Support is_public in filtering', 'include_SATD': False}, {'start_line': 861, 'end_line': 863, 'comment': '# 11. Get /images with is_public=True filter # Verify correct images returned with property # Bug lp:803656  Support is_public in filtering', 'include_SATD': False}, {'start_line': 874, 'end_line': 875, 'comment': '# 12. GET /images with property filter # Verify correct images returned with property', 'include_SATD': False}, {'start_line': 886, 'end_line': 888, 'comment': '# 13. GET /images with property filter and name filter # Verify correct images returned with property and name # Make sure you quote the url when using more than one param!', 'include_SATD': False}, {'start_line': 900, 'end_line': 900, 'comment': '# 14. GET /images with past changes-since filter', 'include_SATD': False}, {'start_line': 911, 'end_line': 911, 'comment': '# 15. GET /images with future changes-since filter', 'include_SATD': False}, {'start_line': 932, 'end_line': 933, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 940, 'end_line': 940, 'comment': '# 1. POST /images with three public images with various attributes', 'include_SATD': False}, {'start_line': 965, 'end_line': 966, 'comment': '# 2. GET /images with limit of 2 # Verify only two images were returned', 'include_SATD': False}, {'start_line': 977, 'end_line': 978, 'comment': '# 3. GET /images with marker # Verify only two images were returned', 'include_SATD': False}, {'start_line': 989, 'end_line': 990, 'comment': '# 4. GET /images with marker and limit # Verify only one image was returned with the correct id', 'include_SATD': False}, {'start_line': 1000, 'end_line': 1001, 'comment': '# 5. GET /images/detail with marker and limit # Verify only one image was returned with the correct id', 'include_SATD': False}, {'start_line': 1021, 'end_line': 1022, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 1029, 'end_line': 1029, 'comment': '# 1. POST /images with three public images with various attributes', 'include_SATD': False}, {'start_line': 1066, 'end_line': 1067, 'comment': '# 2. GET /images with no query params # Verify three public images sorted by created_at desc', 'include_SATD': False}, {'start_line': 1078, 'end_line': 1078, 'comment': '# 3. GET /images sorted by name asc', 'include_SATD': False}, {'start_line': 1091, 'end_line': 1091, 'comment': '# 4. GET /images sorted by size desc', 'include_SATD': False}, {'start_line': 1104, 'end_line': 1104, 'comment': '# 5. GET /images sorted by size desc with a marker', 'include_SATD': False}, {'start_line': 1116, 'end_line': 1116, 'comment': '# 6. GET /images sorted by name asc with a marker', 'include_SATD': False}, {'start_line': 1136, 'end_line': 1137, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 1144, 'end_line': 1144, 'comment': '# 1. POST /images with public image named Image1', 'include_SATD': False}, {'start_line': 1157, 'end_line': 1157, 'comment': '# 2. POST /images with public image named Image1, and ID: 1', 'include_SATD': False}, {'start_line': 1192, 'end_line': 1193, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 1200, 'end_line': 1201, 'comment': '# 1. DELETE /images/1 # Verify 404 returned', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_ssl.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_clients.py'}]}]",11,37,19,MERGED,True,https://review.opendev.org/#/c/190,Adds SSL configuration params to the client,True,"{'# doc_root can be a nullstring, which is valid, and why we # cannot simply do doc_root or self.DEFAULT_DOC_ROOT below.': 5, '# 0. GET / with no Accept: header # Verify version choices returned. # Bug lp:803260  no Accept header causes a 500 in glance-api': 8, ""# TODO(jaypipes): eventlet's greened socket module does not actually # support IPv6 in getaddrinfo(). We need to get around this in the # future or monitor upstream for a fix"": 10}",True,{},False,{}
37,346,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 135, 'end_line': 136, 'comment': '# For large images, we need to supply the size of the # image file. See LP Bug #827660.', 'include_SATD': False}, {'start_line': 146, 'end_line': 149, 'comment': '# Illegal seek. This means the user is trying # to pipe image data to the client, e.g. # echo testdata | bin/glance add blah..., or # that stdin is empty', 'include_SATD': False}], 'filename': 'glance/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/filesystem.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/s3.py'}, {'a_comments': [{'start_line': 312, 'end_line': 314, 'comment': '# We do a HEAD on the newly-added image to determine the size # of the image. A bit slow, but better than taking the word # of the user adding the image with size attribute in the metadata', 'include_SATD': True}, {'start_line': 317, 'end_line': 317, 'comment': '# header keys are lowercased by Swift', 'include_SATD': False}], 'b_comments': [{'start_line': 40, 'end_line': 41, 'comment': '# 5GB # 200M', 'include_SATD': False}, {'start_line': 201, 'end_line': 201, 'comment': '# Size specified in MB in conf files', 'include_SATD': False}, {'start_line': 208, 'end_line': 208, 'comment': '# Size specified in MB in conf files', 'include_SATD': False}, {'start_line': 334, 'end_line': 338, 'comment': ""# image_size == 0 is when we don't know the size # of the image. This can occur with older clients # that don't inspect the payload size, and we simply # try to put the object into Swift and hope for the # best..."", 'include_SATD': False}, {'start_line': 342, 'end_line': 345, 'comment': '# Write the image into Swift in chunks. We cannot # stream chunks of the webob.Request.body_file, unfortunately, # so we must write chunks of the body_file into a temporary # disk buffer, and then pass this disk buffer to Swift.', 'include_SATD': False}, {'start_line': 380, 'end_line': 381, 'comment': ""# Now we write the object manifest and return the # manifest's etag..."", 'include_SATD': False}, {'start_line': 386, 'end_line': 390, 'comment': '# The ETag returned for the manifest is actually the # MD5 hash of the concatenated checksums of the strings # of each chunk...so we ignore this result in favour of # the MD5 of the entire image file contents, so that # users can verify the image file contents accordingly', 'include_SATD': False}], 'filename': 'glance/store/swift.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 164, 'end_line': 165, 'comment': '# In MB # In MB', 'include_SATD': False}, {'start_line': 171, 'end_line': 172, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 179, 'end_line': 180, 'comment': '# 1. POST /images with public image named Image1 # attribute and no custom properties. Verify a 200 OK is returned', 'include_SATD': False}, {'start_line': 197, 'end_line': 198, 'comment': '# 4. HEAD /images/1 # Verify image found now', 'include_SATD': False}, {'start_line': 205, 'end_line': 206, 'comment': '# 5. GET /images/1 # Verify all information on image we just added is correct', 'include_SATD': False}, {'start_line': 253, 'end_line': 254, 'comment': '# In MB # In MB', 'include_SATD': False}, {'start_line': 260, 'end_line': 261, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 268, 'end_line': 269, 'comment': '# 1. POST /images with public image named Image1 # attribute and no custom properties. Verify a 200 OK is returned', 'include_SATD': False}, {'start_line': 286, 'end_line': 287, 'comment': '# 4. HEAD /images/1 # Verify image found now', 'include_SATD': False}, {'start_line': 294, 'end_line': 295, 'comment': '# 5. GET /images/1 # Verify all information on image we just added is correct', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_swift.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_filesystem_store.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_s3_store.py'}, {'a_comments': [], 'b_comments': [{'start_line': 67, 'end_line': 67, 'comment': '# Large object manifest...', 'include_SATD': False}, {'start_line': 109, 'end_line': 110, 'comment': '# Large object manifest... we return a file containing # all objects with prefix of this fixture key', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_swift_store.py'}]}]",1,1,0,MERGED,True,https://review.opendev.org/#/c/346,Fixes LP Bug #827660 - Swift driver fail 5G upload,True,{},False,"{'# We do a HEAD on the newly-added image to determine the size # of the image. A bit slow, but better than taking the word # of the user adding the image with size attribute in the metadata': 1}",True,{}
38,379,"[{'revision': 1, 'changed_files': []}]",1,1,0,MERGED,True,https://review.opendev.org/#/c/379,Add rfc.sh to help with gerrit workflow.,False,{},False,{},False,{}
39,311,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 135, 'end_line': 136, 'comment': '# For large images, we need to supply the size of the # image file. See LP Bug #827660.', 'include_SATD': False}, {'start_line': 146, 'end_line': 149, 'comment': '# Illegal seek. This means the user is trying # to pipe image data to the client, e.g. # echo testdata | bin/glance add blah..., or # that stdin is empty', 'include_SATD': False}], 'filename': 'glance/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/filesystem.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/s3.py'}, {'a_comments': [{'start_line': 309, 'end_line': 311, 'comment': '# We do a HEAD on the newly-added image to determine the size # of the image. A bit slow, but better than taking the word # of the user adding the image with size attribute in the metadata', 'include_SATD': True}, {'start_line': 314, 'end_line': 314, 'comment': '# header keys are lowercased by Swift', 'include_SATD': False}], 'b_comments': [{'start_line': 39, 'end_line': 40, 'comment': '# 5GB # 200M', 'include_SATD': False}, {'start_line': 199, 'end_line': 199, 'comment': '# Size specified in MB in conf files', 'include_SATD': False}, {'start_line': 206, 'end_line': 206, 'comment': '# Size specified in MB in conf files', 'include_SATD': False}, {'start_line': 330, 'end_line': 334, 'comment': ""# image_size == 0 is when we don't know the size # of the image. This can occur with older clients # that don't inspect the payload size, and we simply # try to put the object into Swift and hope for the # best..."", 'include_SATD': False}, {'start_line': 338, 'end_line': 341, 'comment': '# Write the image into Swift in 200M chunks. We cannot # stream chunks of the webob.Request.body_file, unfortunately, # so we must write chunks of the body_file into a temporary # disk buffer, and then pass this disk buffer to Swift.', 'include_SATD': False}, {'start_line': 370, 'end_line': 371, 'comment': ""# Now we write the object manifest and return the # manifest's etag..."", 'include_SATD': False}], 'filename': 'glance/store/swift.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 164, 'end_line': 165, 'comment': '# 1MB # 1MB', 'include_SATD': False}, {'start_line': 171, 'end_line': 172, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 179, 'end_line': 180, 'comment': '# 1. POST /images with public image named Image1 # attribute and no custom properties. Verify a 200 OK is returned', 'include_SATD': False}, {'start_line': 197, 'end_line': 198, 'comment': '# 4. HEAD /images/1 # Verify image found now', 'include_SATD': False}, {'start_line': 205, 'end_line': 206, 'comment': '# 5. GET /images/1 # Verify all information on image we just added is correct', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_swift.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_filesystem_store.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_s3_store.py'}, {'a_comments': [], 'b_comments': [{'start_line': 67, 'end_line': 67, 'comment': '# Large object manifest...', 'include_SATD': False}, {'start_line': 109, 'end_line': 110, 'comment': '# Large object manifest... we return a file containing # all objects with prefix of this fixture key', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_swift_store.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 135, 'end_line': 136, 'comment': '# For large images, we need to supply the size of the # image file. See LP Bug #827660.', 'include_SATD': False}, {'start_line': 146, 'end_line': 149, 'comment': '# Illegal seek. This means the user is trying # to pipe image data to the client, e.g. # echo testdata | bin/glance add blah..., or # that stdin is empty', 'include_SATD': False}], 'filename': 'glance/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/filesystem.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/s3.py'}, {'a_comments': [{'start_line': 312, 'end_line': 314, 'comment': '# We do a HEAD on the newly-added image to determine the size # of the image. A bit slow, but better than taking the word # of the user adding the image with size attribute in the metadata', 'include_SATD': True}, {'start_line': 317, 'end_line': 317, 'comment': '# header keys are lowercased by Swift', 'include_SATD': False}], 'b_comments': [{'start_line': 39, 'end_line': 40, 'comment': '# 5GB # 200M', 'include_SATD': False}, {'start_line': 200, 'end_line': 200, 'comment': '# Size specified in MB in conf files', 'include_SATD': False}, {'start_line': 207, 'end_line': 207, 'comment': '# Size specified in MB in conf files', 'include_SATD': False}, {'start_line': 333, 'end_line': 337, 'comment': ""# image_size == 0 is when we don't know the size # of the image. This can occur with older clients # that don't inspect the payload size, and we simply # try to put the object into Swift and hope for the # best..."", 'include_SATD': False}, {'start_line': 341, 'end_line': 344, 'comment': '# Write the image into Swift in 200M chunks. We cannot # stream chunks of the webob.Request.body_file, unfortunately, # so we must write chunks of the body_file into a temporary # disk buffer, and then pass this disk buffer to Swift.', 'include_SATD': False}, {'start_line': 373, 'end_line': 374, 'comment': ""# Now we write the object manifest and return the # manifest's etag..."", 'include_SATD': False}], 'filename': 'glance/store/swift.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 164, 'end_line': 165, 'comment': '# 1MB # 1MB', 'include_SATD': False}, {'start_line': 171, 'end_line': 172, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 179, 'end_line': 180, 'comment': '# 1. POST /images with public image named Image1 # attribute and no custom properties. Verify a 200 OK is returned', 'include_SATD': False}, {'start_line': 197, 'end_line': 198, 'comment': '# 4. HEAD /images/1 # Verify image found now', 'include_SATD': False}, {'start_line': 205, 'end_line': 206, 'comment': '# 5. GET /images/1 # Verify all information on image we just added is correct', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_swift.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_filesystem_store.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_s3_store.py'}, {'a_comments': [], 'b_comments': [{'start_line': 67, 'end_line': 67, 'comment': '# Large object manifest...', 'include_SATD': False}, {'start_line': 109, 'end_line': 110, 'comment': '# Large object manifest... we return a file containing # all objects with prefix of this fixture key', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_swift_store.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 135, 'end_line': 136, 'comment': '# For large images, we need to supply the size of the # image file. See LP Bug #827660.', 'include_SATD': False}, {'start_line': 146, 'end_line': 149, 'comment': '# Illegal seek. This means the user is trying # to pipe image data to the client, e.g. # echo testdata | bin/glance add blah..., or # that stdin is empty', 'include_SATD': False}], 'filename': 'glance/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/filesystem.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/s3.py'}, {'a_comments': [{'start_line': 312, 'end_line': 314, 'comment': '# We do a HEAD on the newly-added image to determine the size # of the image. A bit slow, but better than taking the word # of the user adding the image with size attribute in the metadata', 'include_SATD': True}, {'start_line': 317, 'end_line': 317, 'comment': '# header keys are lowercased by Swift', 'include_SATD': False}], 'b_comments': [{'start_line': 39, 'end_line': 40, 'comment': '# 5GB # 200M', 'include_SATD': False}, {'start_line': 200, 'end_line': 200, 'comment': '# Size specified in MB in conf files', 'include_SATD': False}, {'start_line': 207, 'end_line': 207, 'comment': '# Size specified in MB in conf files', 'include_SATD': False}, {'start_line': 333, 'end_line': 337, 'comment': ""# image_size == 0 is when we don't know the size # of the image. This can occur with older clients # that don't inspect the payload size, and we simply # try to put the object into Swift and hope for the # best..."", 'include_SATD': False}, {'start_line': 341, 'end_line': 344, 'comment': '# Write the image into Swift in chunks. We cannot # stream chunks of the webob.Request.body_file, unfortunately, # so we must write chunks of the body_file into a temporary # disk buffer, and then pass this disk buffer to Swift.', 'include_SATD': False}, {'start_line': 373, 'end_line': 374, 'comment': ""# Now we write the object manifest and return the # manifest's etag..."", 'include_SATD': False}], 'filename': 'glance/store/swift.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 164, 'end_line': 165, 'comment': '# In MB # In MB', 'include_SATD': False}, {'start_line': 171, 'end_line': 172, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 179, 'end_line': 180, 'comment': '# 1. POST /images with public image named Image1 # attribute and no custom properties. Verify a 200 OK is returned', 'include_SATD': False}, {'start_line': 197, 'end_line': 198, 'comment': '# 4. HEAD /images/1 # Verify image found now', 'include_SATD': False}, {'start_line': 205, 'end_line': 206, 'comment': '# 5. GET /images/1 # Verify all information on image we just added is correct', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_swift.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_filesystem_store.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_s3_store.py'}, {'a_comments': [], 'b_comments': [{'start_line': 67, 'end_line': 67, 'comment': '# Large object manifest...', 'include_SATD': False}, {'start_line': 109, 'end_line': 110, 'comment': '# Large object manifest... we return a file containing # all objects with prefix of this fixture key', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_swift_store.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 135, 'end_line': 136, 'comment': '# For large images, we need to supply the size of the # image file. See LP Bug #827660.', 'include_SATD': False}, {'start_line': 146, 'end_line': 149, 'comment': '# Illegal seek. This means the user is trying # to pipe image data to the client, e.g. # echo testdata | bin/glance add blah..., or # that stdin is empty', 'include_SATD': False}], 'filename': 'glance/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/filesystem.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/s3.py'}, {'a_comments': [{'start_line': 312, 'end_line': 314, 'comment': '# We do a HEAD on the newly-added image to determine the size # of the image. A bit slow, but better than taking the word # of the user adding the image with size attribute in the metadata', 'include_SATD': True}, {'start_line': 317, 'end_line': 317, 'comment': '# header keys are lowercased by Swift', 'include_SATD': False}], 'b_comments': [{'start_line': 40, 'end_line': 41, 'comment': '# 5GB # 200M', 'include_SATD': False}, {'start_line': 201, 'end_line': 201, 'comment': '# Size specified in MB in conf files', 'include_SATD': False}, {'start_line': 208, 'end_line': 208, 'comment': '# Size specified in MB in conf files', 'include_SATD': False}, {'start_line': 334, 'end_line': 338, 'comment': ""# image_size == 0 is when we don't know the size # of the image. This can occur with older clients # that don't inspect the payload size, and we simply # try to put the object into Swift and hope for the # best..."", 'include_SATD': False}, {'start_line': 342, 'end_line': 345, 'comment': '# Write the image into Swift in chunks. We cannot # stream chunks of the webob.Request.body_file, unfortunately, # so we must write chunks of the body_file into a temporary # disk buffer, and then pass this disk buffer to Swift.', 'include_SATD': False}, {'start_line': 375, 'end_line': 376, 'comment': ""# Now we write the object manifest and return the # manifest's etag..."", 'include_SATD': False}, {'start_line': 381, 'end_line': 385, 'comment': '# The ETag returned for the manifest is actually the # MD5 hash of the concatenated checksums of the strings # of each chunk...so we ignore this result in favour of # the MD5 of the entire image file contents, so that # users can verify the image file contents accordingly', 'include_SATD': False}], 'filename': 'glance/store/swift.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 164, 'end_line': 165, 'comment': '# In MB # In MB', 'include_SATD': False}, {'start_line': 171, 'end_line': 172, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 179, 'end_line': 180, 'comment': '# 1. POST /images with public image named Image1 # attribute and no custom properties. Verify a 200 OK is returned', 'include_SATD': False}, {'start_line': 197, 'end_line': 198, 'comment': '# 4. HEAD /images/1 # Verify image found now', 'include_SATD': False}, {'start_line': 205, 'end_line': 206, 'comment': '# 5. GET /images/1 # Verify all information on image we just added is correct', 'include_SATD': False}, {'start_line': 253, 'end_line': 254, 'comment': '# In MB # In MB', 'include_SATD': False}, {'start_line': 260, 'end_line': 261, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 268, 'end_line': 269, 'comment': '# 1. POST /images with public image named Image1 # attribute and no custom properties. Verify a 200 OK is returned', 'include_SATD': False}, {'start_line': 286, 'end_line': 287, 'comment': '# 4. HEAD /images/1 # Verify image found now', 'include_SATD': False}, {'start_line': 294, 'end_line': 295, 'comment': '# 5. GET /images/1 # Verify all information on image we just added is correct', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_swift.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_filesystem_store.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_s3_store.py'}, {'a_comments': [], 'b_comments': [{'start_line': 67, 'end_line': 67, 'comment': '# Large object manifest...', 'include_SATD': False}, {'start_line': 109, 'end_line': 110, 'comment': '# Large object manifest... we return a file containing # all objects with prefix of this fixture key', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_swift_store.py'}]}, {'revision': 5, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 135, 'end_line': 136, 'comment': '# For large images, we need to supply the size of the # image file. See LP Bug #827660.', 'include_SATD': False}, {'start_line': 146, 'end_line': 149, 'comment': '# Illegal seek. This means the user is trying # to pipe image data to the client, e.g. # echo testdata | bin/glance add blah..., or # that stdin is empty', 'include_SATD': False}], 'filename': 'glance/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/filesystem.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/s3.py'}, {'a_comments': [{'start_line': 312, 'end_line': 314, 'comment': '# We do a HEAD on the newly-added image to determine the size # of the image. A bit slow, but better than taking the word # of the user adding the image with size attribute in the metadata', 'include_SATD': True}, {'start_line': 317, 'end_line': 317, 'comment': '# header keys are lowercased by Swift', 'include_SATD': False}], 'b_comments': [{'start_line': 40, 'end_line': 41, 'comment': '# 5GB # 200M', 'include_SATD': False}, {'start_line': 201, 'end_line': 201, 'comment': '# Size specified in MB in conf files', 'include_SATD': False}, {'start_line': 208, 'end_line': 208, 'comment': '# Size specified in MB in conf files', 'include_SATD': False}, {'start_line': 334, 'end_line': 338, 'comment': ""# image_size == 0 is when we don't know the size # of the image. This can occur with older clients # that don't inspect the payload size, and we simply # try to put the object into Swift and hope for the # best..."", 'include_SATD': False}, {'start_line': 342, 'end_line': 345, 'comment': '# Write the image into Swift in chunks. We cannot # stream chunks of the webob.Request.body_file, unfortunately, # so we must write chunks of the body_file into a temporary # disk buffer, and then pass this disk buffer to Swift.', 'include_SATD': False}, {'start_line': 380, 'end_line': 381, 'comment': ""# Now we write the object manifest and return the # manifest's etag..."", 'include_SATD': False}, {'start_line': 386, 'end_line': 390, 'comment': '# The ETag returned for the manifest is actually the # MD5 hash of the concatenated checksums of the strings # of each chunk...so we ignore this result in favour of # the MD5 of the entire image file contents, so that # users can verify the image file contents accordingly', 'include_SATD': False}], 'filename': 'glance/store/swift.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 164, 'end_line': 165, 'comment': '# In MB # In MB', 'include_SATD': False}, {'start_line': 171, 'end_line': 172, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 179, 'end_line': 180, 'comment': '# 1. POST /images with public image named Image1 # attribute and no custom properties. Verify a 200 OK is returned', 'include_SATD': False}, {'start_line': 197, 'end_line': 198, 'comment': '# 4. HEAD /images/1 # Verify image found now', 'include_SATD': False}, {'start_line': 205, 'end_line': 206, 'comment': '# 5. GET /images/1 # Verify all information on image we just added is correct', 'include_SATD': False}, {'start_line': 253, 'end_line': 254, 'comment': '# In MB # In MB', 'include_SATD': False}, {'start_line': 260, 'end_line': 261, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 268, 'end_line': 269, 'comment': '# 1. POST /images with public image named Image1 # attribute and no custom properties. Verify a 200 OK is returned', 'include_SATD': False}, {'start_line': 286, 'end_line': 287, 'comment': '# 4. HEAD /images/1 # Verify image found now', 'include_SATD': False}, {'start_line': 294, 'end_line': 295, 'comment': '# 5. GET /images/1 # Verify all information on image we just added is correct', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_swift.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_filesystem_store.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_s3_store.py'}, {'a_comments': [], 'b_comments': [{'start_line': 67, 'end_line': 67, 'comment': '# Large object manifest...', 'include_SATD': False}, {'start_line': 109, 'end_line': 110, 'comment': '# Large object manifest... we return a file containing # all objects with prefix of this fixture key', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_swift_store.py'}]}, {'revision': 6, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 135, 'end_line': 136, 'comment': '# For large images, we need to supply the size of the # image file. See LP Bug #827660.', 'include_SATD': False}, {'start_line': 146, 'end_line': 149, 'comment': '# Illegal seek. This means the user is trying # to pipe image data to the client, e.g. # echo testdata | bin/glance add blah..., or # that stdin is empty', 'include_SATD': False}], 'filename': 'glance/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/filesystem.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/s3.py'}, {'a_comments': [{'start_line': 312, 'end_line': 314, 'comment': '# We do a HEAD on the newly-added image to determine the size # of the image. A bit slow, but better than taking the word # of the user adding the image with size attribute in the metadata', 'include_SATD': True}, {'start_line': 317, 'end_line': 317, 'comment': '# header keys are lowercased by Swift', 'include_SATD': False}], 'b_comments': [{'start_line': 40, 'end_line': 41, 'comment': '# 5GB # 200M', 'include_SATD': False}, {'start_line': 201, 'end_line': 201, 'comment': '# Size specified in MB in conf files', 'include_SATD': False}, {'start_line': 208, 'end_line': 208, 'comment': '# Size specified in MB in conf files', 'include_SATD': False}, {'start_line': 334, 'end_line': 338, 'comment': ""# image_size == 0 is when we don't know the size # of the image. This can occur with older clients # that don't inspect the payload size, and we simply # try to put the object into Swift and hope for the # best..."", 'include_SATD': False}, {'start_line': 342, 'end_line': 345, 'comment': '# Write the image into Swift in chunks. We cannot # stream chunks of the webob.Request.body_file, unfortunately, # so we must write chunks of the body_file into a temporary # disk buffer, and then pass this disk buffer to Swift.', 'include_SATD': False}, {'start_line': 380, 'end_line': 381, 'comment': ""# Now we write the object manifest and return the # manifest's etag..."", 'include_SATD': False}, {'start_line': 386, 'end_line': 390, 'comment': '# The ETag returned for the manifest is actually the # MD5 hash of the concatenated checksums of the strings # of each chunk...so we ignore this result in favour of # the MD5 of the entire image file contents, so that # users can verify the image file contents accordingly', 'include_SATD': False}], 'filename': 'glance/store/swift.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 164, 'end_line': 165, 'comment': '# In MB # In MB', 'include_SATD': False}, {'start_line': 171, 'end_line': 172, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 179, 'end_line': 180, 'comment': '# 1. POST /images with public image named Image1 # attribute and no custom properties. Verify a 200 OK is returned', 'include_SATD': False}, {'start_line': 197, 'end_line': 198, 'comment': '# 4. HEAD /images/1 # Verify image found now', 'include_SATD': False}, {'start_line': 205, 'end_line': 206, 'comment': '# 5. GET /images/1 # Verify all information on image we just added is correct', 'include_SATD': False}, {'start_line': 253, 'end_line': 254, 'comment': '# In MB # In MB', 'include_SATD': False}, {'start_line': 260, 'end_line': 261, 'comment': '# 0. GET /images # Verify no public images', 'include_SATD': False}, {'start_line': 268, 'end_line': 269, 'comment': '# 1. POST /images with public image named Image1 # attribute and no custom properties. Verify a 200 OK is returned', 'include_SATD': False}, {'start_line': 286, 'end_line': 287, 'comment': '# 4. HEAD /images/1 # Verify image found now', 'include_SATD': False}, {'start_line': 294, 'end_line': 295, 'comment': '# 5. GET /images/1 # Verify all information on image we just added is correct', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_swift.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_filesystem_store.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_s3_store.py'}, {'a_comments': [], 'b_comments': [{'start_line': 67, 'end_line': 67, 'comment': '# Large object manifest...', 'include_SATD': False}, {'start_line': 109, 'end_line': 110, 'comment': '# Large object manifest... we return a file containing # all objects with prefix of this fixture key', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_swift_store.py'}]}]",6,24,28,MERGED,True,https://review.opendev.org/#/c/311,Fixes LP Bug #827660 - Swift driver fail 5G upload,True,{},False,"{'# We do a HEAD on the newly-added image to determine the size # of the image. A bit slow, but better than taking the word # of the user adding the image with size attribute in the metadata': 1}",True,{}
40,361,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 123, 'end_line': 123, 'comment': '#825024 -- glance client currently', 'include_SATD': False}, {'start_line': 130, 'end_line': 131, 'comment': '# 1. POST /images with public image named Image1 # attribute and no custom properties. Verify a 200 OK is returned', 'include_SATD': False}, {'start_line': 145, 'end_line': 145, 'comment': '# 2. Verify image added as public image', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_misc.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 123, 'end_line': 123, 'comment': '#825024 -- glance client currently', 'include_SATD': False}, {'start_line': 130, 'end_line': 131, 'comment': '# 1. POST /images with public image named Image1 # attribute and no custom properties. Verify a 200 OK is returned', 'include_SATD': False}, {'start_line': 145, 'end_line': 145, 'comment': '# 2. Verify image added as public image', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_misc.py'}]}]",2,5,0,MERGED,True,https://review.opendev.org/#/c/361,Fixes Bug: lp825024,True,{},False,{},False,{}
41,391,"[{'revision': 1, 'changed_files': []}]",1,1,0,MERGED,True,https://review.opendev.org/#/c/391,Updating changelog for 1.4.3,False,{},False,{},False,{}
42,392,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'swift/__init__.py'}]}]",1,1,0,MERGED,True,https://review.opendev.org/#/c/392,bumped version to 1.4.4,True,{},False,{},False,{}
43,397,"[{'revision': 1, 'changed_files': []}, {'revision': 2, 'changed_files': []}]",2,7,7,ABANDONED,False,https://review.opendev.org/#/c/397,"    the ""glance index"" provides a more style of listing images.     1. the number of image indexes is ""adapted"" to the size of the console,        while users still can customize the number of output per page through        the parameter --limit     2. us",False,{},False,{},False,{}
44,407,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/version.py'}]}]",1,1,0,MERGED,True,https://review.opendev.org/#/c/407,Open Essex,True,{},False,{},False,{}
45,350,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 51, 'end_line': 53, 'comment': ""# TODO(sirp): For now we're just dealing with one endpoint, eventually # this should expose the entire service catalog so that the client can # choose which service/region/(public/private net) combo they want."", 'include_SATD': True}, {'start_line': 94, 'end_line': 94, 'comment': '# 1. Check Keystone version', 'include_SATD': False}, {'start_line': 111, 'end_line': 111, 'comment': '# 2. Keystone may redirect us', 'include_SATD': False}, {'start_line': 114, 'end_line': 116, 'comment': '# 3. In some configurations nova makes redirection to # v2.0 keystone endpoint. Also, new location does not # contain real endpoint, only hostname and port.', 'include_SATD': False}, {'start_line': 121, 'end_line': 122, 'comment': ""# If we sucessfully auth'd, then memorize the correct auth_url # for future use."", 'include_SATD': False}, {'start_line': 126, 'end_line': 126, 'comment': '# Guard against a redirection loop', 'include_SATD': False}, {'start_line': 173, 'end_line': 174, 'comment': '# FIXME(sirp): for now just using the first endpoint we get back # from the service catalog for glance, and using the public url.', 'include_SATD': True}], 'filename': 'auth/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 88, 'end_line': 89, 'comment': ""# NOTE(sirp): if a port wasn't passed in the URL, just default to 80 # since we won't know whether we are the"", 'include_SATD': False}], 'filename': 'glance/common/client.py'}, {'a_comments': [{'start_line': 73, 'end_line': 74, 'comment': '# Use the default empty context, with admin turned on for # backwards compatibility', 'include_SATD': False}], 'b_comments': [{'start_line': 80, 'end_line': 80, 'comment': '# TODO(jk0): Does this need to be lowercase?', 'include_SATD': True}], 'filename': 'glance/common/context.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/client.py'}, {'a_comments': [{'start_line': 800, 'end_line': 800, 'comment': '# 9. Get /images with is_public=None filter', 'include_SATD': False}], 'b_comments': [{'start_line': 800, 'end_line': 810, 'comment': '# 9.a Get /images with is_public=None filter # NOTE(jk0): This request does not occur under the admin context, so # we will only see the 3 public images.', 'include_SATD': False}, {'start_line': 813, 'end_line': 814, 'comment': '# 9.b Get /images with is_public=None filter # Verify correct images returned with property under the admin context', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 33, 'end_line': 36, 'comment': ""# NOTE(sirp): This is needed in case we are running the tests under an # environment in which NOVA_AUTH_STRATEGY=keystone. The test server we # spin up won't have keystone support, so we need to switch to the # NoAuth strategy."", 'include_SATD': False}], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_clients.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 51, 'end_line': 53, 'comment': ""# TODO(sirp): For now we're just dealing with one endpoint, eventually # this should expose the entire service catalog so that the client can # choose which service/region/(public/private net) combo they want."", 'include_SATD': True}, {'start_line': 94, 'end_line': 94, 'comment': '# 1. Check Keystone version', 'include_SATD': False}, {'start_line': 111, 'end_line': 111, 'comment': '# 2. Keystone may redirect us', 'include_SATD': False}, {'start_line': 114, 'end_line': 116, 'comment': '# 3. In some configurations nova makes redirection to # v2.0 keystone endpoint. Also, new location does not # contain real endpoint, only hostname and port.', 'include_SATD': False}, {'start_line': 121, 'end_line': 122, 'comment': ""# If we sucessfully auth'd, then memorize the correct auth_url # for future use."", 'include_SATD': False}, {'start_line': 126, 'end_line': 126, 'comment': '# Guard against a redirection loop', 'include_SATD': False}, {'start_line': 173, 'end_line': 174, 'comment': '# FIXME(sirp): for now just using the first endpoint we get back # from the service catalog for glance, and using the public url.', 'include_SATD': True}], 'filename': 'auth/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/client.py'}, {'a_comments': [{'start_line': 73, 'end_line': 74, 'comment': '# Use the default empty context, with admin turned on for # backwards compatibility', 'include_SATD': False}], 'b_comments': [{'start_line': 80, 'end_line': 80, 'comment': '# TODO(jk0): Does this need to be lowercase?', 'include_SATD': True}], 'filename': 'glance/common/context.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/client.py'}, {'a_comments': [{'start_line': 800, 'end_line': 800, 'comment': '# 9. Get /images with is_public=None filter', 'include_SATD': False}], 'b_comments': [{'start_line': 800, 'end_line': 810, 'comment': '# 9.a Get /images with is_public=None filter # NOTE(jk0): This request does not occur under the admin context, so # we will only see the 3 public images.', 'include_SATD': False}, {'start_line': 813, 'end_line': 814, 'comment': '# 9.b Get /images with is_public=None filter # Verify correct images returned with property under the admin context', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 33, 'end_line': 36, 'comment': ""# NOTE(sirp): This is needed in case we are running the tests under an # environment in which NOVA_AUTH_STRATEGY=keystone. The test server we # spin up won't have keystone support, so we need to switch to the # NoAuth strategy."", 'include_SATD': False}], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_clients.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 59, 'end_line': 61, 'comment': ""# TODO(sirp): For now we're just dealing with one endpoint, eventually # this should expose the entire service catalog so that the client can # choose which service/region/(public/private net) combo they want."", 'include_SATD': True}, {'start_line': 102, 'end_line': 102, 'comment': '# 1. Check Keystone version', 'include_SATD': False}, {'start_line': 119, 'end_line': 119, 'comment': '# 2. Keystone may redirect us', 'include_SATD': False}, {'start_line': 122, 'end_line': 124, 'comment': '# 3. In some configurations nova makes redirection to # v2.0 keystone endpoint. Also, new location does not # contain real endpoint, only hostname and port.', 'include_SATD': False}, {'start_line': 129, 'end_line': 130, 'comment': ""# If we sucessfully auth'd, then memorize the correct auth_url # for future use."", 'include_SATD': False}, {'start_line': 134, 'end_line': 134, 'comment': '# Guard against a redirection loop', 'include_SATD': False}, {'start_line': 183, 'end_line': 184, 'comment': '# FIXME(sirp): for now just using the first endpoint we get back # from the service catalog for glance, and using the public url.', 'include_SATD': True}], 'filename': 'glance/common/auth/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/client.py'}, {'a_comments': [{'start_line': 73, 'end_line': 74, 'comment': '# Use the default empty context, with admin turned on for # backwards compatibility', 'include_SATD': False}], 'b_comments': [{'start_line': 86, 'end_line': 88, 'comment': '# TODO(sirp): should we be using the glance_tokeauth shim from # Keystone here? If we do, we need to make sure it handles the NoAuth # case', 'include_SATD': True}, {'start_line': 93, 'end_line': 93, 'comment': '# 1. Auth-token is passed, check other headers', 'include_SATD': False}, {'start_line': 99, 'end_line': 101, 'comment': '# 2. Indentity-Status not confirmed # FIXME(sirp): not sure what the correct behavior in this case is; # just raising NotAuthorized for now', 'include_SATD': True}, {'start_line': 104, 'end_line': 104, 'comment': '# 3. Auth-token is ommited, assume NoAuth', 'include_SATD': False}], 'filename': 'glance/common/context.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/client.py'}, {'a_comments': [{'start_line': 800, 'end_line': 800, 'comment': '# 9. Get /images with is_public=None filter', 'include_SATD': False}], 'b_comments': [{'start_line': 800, 'end_line': 812, 'comment': '# 9.a Get /images with is_public=None filter # 9.b Get /images with is_public=None filter # Verify correct images returned with property under the admin context', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 33, 'end_line': 36, 'comment': ""# NOTE(sirp): This is needed in case we are running the tests under an # environment in which OS_AUTH_STRATEGY=keystone. The test server we # spin up won't have keystone support, so we need to switch to the # NoAuth strategy."", 'include_SATD': False}], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_clients.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 44, 'end_line': 46, 'comment': ""# TODO(sirp): For now we're just dealing with one endpoint, eventually # this should expose the entire service catalog so that the client can # choose which service/region/(public/private net) combo they want."", 'include_SATD': True}, {'start_line': 87, 'end_line': 87, 'comment': '# 1. Check Keystone version', 'include_SATD': False}, {'start_line': 104, 'end_line': 104, 'comment': '# 2. Keystone may redirect us', 'include_SATD': False}, {'start_line': 107, 'end_line': 109, 'comment': '# 3. In some configurations nova makes redirection to # v2.0 keystone endpoint. Also, new location does not # contain real endpoint, only hostname and port.', 'include_SATD': False}, {'start_line': 114, 'end_line': 115, 'comment': ""# If we sucessfully auth'd, then memorize the correct auth_url # for future use."", 'include_SATD': False}, {'start_line': 119, 'end_line': 119, 'comment': '# Guard against a redirection loop', 'include_SATD': False}, {'start_line': 168, 'end_line': 169, 'comment': '# FIXME(sirp): for now just using the first endpoint we get back # from the service catalog for glance, and using the public url.', 'include_SATD': True}], 'filename': 'glance/common/auth/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/client.py'}, {'a_comments': [{'start_line': 73, 'end_line': 74, 'comment': '# Use the default empty context, with admin turned on for # backwards compatibility', 'include_SATD': False}], 'b_comments': [{'start_line': 86, 'end_line': 88, 'comment': '# TODO(sirp): should we be using the glance_tokeauth shim from # Keystone here? If we do, we need to make sure it handles the NoAuth # case', 'include_SATD': True}, {'start_line': 93, 'end_line': 93, 'comment': '# 1. Auth-token is passed, check other headers', 'include_SATD': False}, {'start_line': 99, 'end_line': 101, 'comment': '# 2. Indentity-Status not confirmed # FIXME(sirp): not sure what the correct behavior in this case is; # just raising NotAuthorized for now', 'include_SATD': True}, {'start_line': 104, 'end_line': 104, 'comment': '# 3. Auth-token is ommited, assume NoAuth', 'include_SATD': False}], 'filename': 'glance/common/context.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 33, 'end_line': 36, 'comment': ""# NOTE(sirp): This is needed in case we are running the tests under an # environment in which OS_AUTH_STRATEGY=keystone. The test server we # spin up won't have keystone support, so we need to switch to the # NoAuth strategy."", 'include_SATD': False}], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_clients.py'}]}, {'revision': 5, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 44, 'end_line': 46, 'comment': ""# TODO(sirp): For now we're just dealing with one endpoint, eventually # this should expose the entire service catalog so that the client can # choose which service/region/(public/private net) combo they want."", 'include_SATD': True}, {'start_line': 87, 'end_line': 87, 'comment': '# 1. Check Keystone version', 'include_SATD': False}, {'start_line': 104, 'end_line': 104, 'comment': '# 2. Keystone may redirect us', 'include_SATD': False}, {'start_line': 107, 'end_line': 109, 'comment': '# 3. In some configurations nova makes redirection to # v2.0 keystone endpoint. Also, new location does not # contain real endpoint, only hostname and port.', 'include_SATD': False}, {'start_line': 114, 'end_line': 115, 'comment': ""# If we sucessfully auth'd, then memorize the correct auth_url # for future use."", 'include_SATD': False}, {'start_line': 119, 'end_line': 119, 'comment': '# Guard against a redirection loop', 'include_SATD': False}, {'start_line': 168, 'end_line': 169, 'comment': '# FIXME(sirp): for now just using the first endpoint we get back # from the service catalog for glance, and using the public url.', 'include_SATD': True}], 'filename': 'glance/common/auth/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/client.py'}, {'a_comments': [{'start_line': 73, 'end_line': 74, 'comment': '# Use the default empty context, with admin turned on for # backwards compatibility', 'include_SATD': False}], 'b_comments': [{'start_line': 86, 'end_line': 88, 'comment': '# TODO(sirp): should we be using the glance_tokeauth shim from # Keystone here? If we do, we need to make sure it handles the NoAuth # case', 'include_SATD': True}, {'start_line': 93, 'end_line': 93, 'comment': '# 1. Auth-token is passed, check other headers', 'include_SATD': False}, {'start_line': 99, 'end_line': 101, 'comment': '# 2. Indentity-Status not confirmed # FIXME(sirp): not sure what the correct behavior in this case is; # just raising NotAuthorized for now', 'include_SATD': True}, {'start_line': 104, 'end_line': 104, 'comment': '# 3. Auth-token is ommited, assume NoAuth', 'include_SATD': False}], 'filename': 'glance/common/context.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 33, 'end_line': 36, 'comment': ""# NOTE(sirp): This is needed in case we are running the tests under an # environment in which OS_AUTH_STRATEGY=keystone. The test server we # spin up won't have keystone support, so we need to switch to the # NoAuth strategy."", 'include_SATD': False}], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_clients.py'}]}, {'revision': 6, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 44, 'end_line': 46, 'comment': ""# TODO(sirp): For now we're just dealing with one endpoint, eventually # this should expose the entire service catalog so that the client can # choose which service/region/(public/private net) combo they want."", 'include_SATD': True}, {'start_line': 87, 'end_line': 87, 'comment': '# 1. Check Keystone version', 'include_SATD': False}, {'start_line': 104, 'end_line': 104, 'comment': '# 2. Keystone may redirect us', 'include_SATD': False}, {'start_line': 107, 'end_line': 109, 'comment': '# 3. In some configurations nova makes redirection to # v2.0 keystone endpoint. Also, new location does not # contain real endpoint, only hostname and port.', 'include_SATD': False}, {'start_line': 114, 'end_line': 115, 'comment': ""# If we sucessfully auth'd, then memorize the correct auth_url # for future use."", 'include_SATD': False}, {'start_line': 119, 'end_line': 119, 'comment': '# Guard against a redirection loop', 'include_SATD': False}, {'start_line': 168, 'end_line': 169, 'comment': '# FIXME(sirp): for now just using the first endpoint we get back # from the service catalog for glance, and using the public url.', 'include_SATD': True}], 'filename': 'glance/common/auth.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/client.py'}, {'a_comments': [{'start_line': 73, 'end_line': 74, 'comment': '# Use the default empty context, with admin turned on for # backwards compatibility', 'include_SATD': False}], 'b_comments': [{'start_line': 86, 'end_line': 88, 'comment': '# TODO(sirp): should we be using the glance_tokeauth shim from # Keystone here? If we do, we need to make sure it handles the NoAuth # case', 'include_SATD': True}, {'start_line': 93, 'end_line': 93, 'comment': '# 1. Auth-token is passed, check other headers', 'include_SATD': False}, {'start_line': 99, 'end_line': 101, 'comment': '# 2. Indentity-Status not confirmed # FIXME(sirp): not sure what the correct behavior in this case is; # just raising NotAuthorized for now', 'include_SATD': True}, {'start_line': 104, 'end_line': 104, 'comment': '# 3. Auth-token is ommited, assume NoAuth', 'include_SATD': False}], 'filename': 'glance/common/context.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 33, 'end_line': 36, 'comment': ""# NOTE(sirp): This is needed in case we are running the tests under an # environment in which OS_AUTH_STRATEGY=keystone. The test server we # spin up won't have keystone support, so we need to switch to the # NoAuth strategy."", 'include_SATD': False}], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_clients.py'}]}, {'revision': 7, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 44, 'end_line': 46, 'comment': ""# TODO(sirp): For now we're just dealing with one endpoint, eventually # this should expose the entire service catalog so that the client can # choose which service/region/(public/private net) combo they want."", 'include_SATD': True}, {'start_line': 87, 'end_line': 87, 'comment': '# 1. Check Keystone version', 'include_SATD': False}, {'start_line': 104, 'end_line': 104, 'comment': '# 2. Keystone may redirect us', 'include_SATD': False}, {'start_line': 107, 'end_line': 109, 'comment': '# 3. In some configurations nova makes redirection to # v2.0 keystone endpoint. Also, new location does not # contain real endpoint, only hostname and port.', 'include_SATD': False}, {'start_line': 113, 'end_line': 114, 'comment': ""# If we sucessfully auth'd, then memorize the correct auth_url # for future use."", 'include_SATD': False}, {'start_line': 118, 'end_line': 118, 'comment': '# Guard against a redirection loop', 'include_SATD': False}, {'start_line': 167, 'end_line': 168, 'comment': '# FIXME(sirp): for now just using the first endpoint we get back # from the service catalog for glance, and using the public url.', 'include_SATD': True}], 'filename': 'glance/common/auth.py'}, {'a_comments': [], 'b_comments': [{'start_line': 78, 'end_line': 86, 'comment': ""# FIXME(sirp): Nova image/glance.py currently calls this. Since this # method isn't really doing anything useful[1], we should go ahead and # rip it out, first in Nova, then here. Steps: # #       1. Change auth_tok in Glance to auth_token #       2. Change image/glance.py in Nova to use client.auth_token #       3. Remove this method # # [1] httpmail.python.org/pipermail/tutor/2003-October/025932.html"", 'include_SATD': True}], 'filename': 'glance/common/client.py'}, {'a_comments': [{'start_line': 73, 'end_line': 74, 'comment': '# Use the default empty context, with admin turned on for # backwards compatibility', 'include_SATD': False}], 'b_comments': [{'start_line': 86, 'end_line': 88, 'comment': '# TODO(sirp): should we be using the glance_tokeauth shim from # Keystone here? If we do, we need to make sure it handles the NoAuth # case', 'include_SATD': True}, {'start_line': 93, 'end_line': 93, 'comment': '# 1. Auth-token is passed, check other headers', 'include_SATD': False}, {'start_line': 100, 'end_line': 102, 'comment': '# 2. Indentity-Status not confirmed # FIXME(sirp): not sure what the correct behavior in this case # is; just raising NotAuthorized for now', 'include_SATD': True}, {'start_line': 105, 'end_line': 105, 'comment': '# 3. Auth-token is ommited, assume NoAuth', 'include_SATD': False}], 'filename': 'glance/common/context.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 33, 'end_line': 36, 'comment': ""# NOTE(sirp): This is needed in case we are running the tests under an # environment in which OS_AUTH_STRATEGY=keystone. The test server we # spin up won't have keystone support, so we need to switch to the # NoAuth strategy."", 'include_SATD': False}], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_clients.py'}]}]",7,24,46,MERGED,True,https://review.opendev.org/#/c/350,Adding Keystone support for Glance client.,True,"{""# TODO(sirp): For now we're just dealing with one endpoint, eventually # this should expose the entire service catalog so that the client can # choose which service/region/(public/private net) combo they want."": 1, '# FIXME(sirp): for now just using the first endpoint we get back # from the service catalog for glance, and using the public url.': 1, '# TODO(jk0): Does this need to be lowercase?': 1, '# TODO(sirp): should we be using the glance_tokeauth shim from # Keystone here? If we do, we need to make sure it handles the NoAuth # case': 3, '# 2. Indentity-Status not confirmed # FIXME(sirp): not sure what the correct behavior in this case is; # just raising NotAuthorized for now': 3, ""# FIXME(sirp): Nova image/glance.py currently calls this. Since this # method isn't really doing anything useful[1], we should go ahead and # rip it out, first in Nova, then here. Steps: # #       1. Change auth_tok in Glance to auth_token #       2. Change image/glance.py in Nova to use client.auth_token #       3. Remove this method # # [1] httpmail.python.org/pipermail/tutor/2003-October/025932.html"": 7, '# 2. Indentity-Status not confirmed # FIXME(sirp): not sure what the correct behavior in this case # is; just raising NotAuthorized for now': 7}",True,{},False,{}
46,411,"[{'revision': 1, 'changed_files': []}]",1,2,0,ABANDONED,False,https://review.opendev.org/#/c/411,add myself to the Authors file,False,{},False,{},False,{}
47,387,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 865, 'end_line': 865, 'comment': '# 14. GET /images with past changes-since filter', 'include_SATD': False}, {'start_line': 875, 'end_line': 875, 'comment': '# 15. GET /images with future changes-since filter', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_api.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/387,Param is now functional,True,{},False,{},False,{}
48,388,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [], 'b_comments': [{'start_line': 392, 'end_line': 392, 'comment': '# 9. Check past changes-since', 'include_SATD': False}, {'start_line': 405, 'end_line': 405, 'comment': '# 10. Check future changes-since', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_bin_glance.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/388,Adding default updated_at value,True,{},False,{},False,{}
49,418,"[{'revision': 1, 'changed_files': []}, {'revision': 2, 'changed_files': []}, {'revision': 3, 'changed_files': []}, {'revision': 4, 'changed_files': []}, {'revision': 5, 'changed_files': []}]",5,10,1,MERGED,True,https://review.opendev.org/#/c/418,Updating image status docs,False,{},False,{},False,{}
50,389,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 241, 'end_line': 241, 'comment': '# filter by deleted if no filter provided', 'include_SATD': False}], 'b_comments': [{'start_line': 152, 'end_line': 152, 'comment': '# filter out deleted images if context disallows it', 'include_SATD': False}, {'start_line': 246, 'end_line': 246, 'comment': '# necessary for markers to work', 'include_SATD': False}, {'start_line': 249, 'end_line': 249, 'comment': '# filter out deleted images if context disallows it', 'include_SATD': False}], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/009_default_updated_at.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/server.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/389,More functional changes,True,{},False,{},False,{}
51,421,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'swift/__init__.py'}]}]",1,1,0,MERGED,True,https://review.opendev.org/#/c/421,Final versioning for Swift 1.4.3,True,{},False,{},False,{}
52,433,"[{'revision': 1, 'changed_files': []}, {'revision': 2, 'changed_files': []}, {'revision': 3, 'changed_files': []}, {'revision': 4, 'changed_files': []}]",4,12,13,ABANDONED,False,https://review.opendev.org/#/c/433,adaptive pagination,False,{},False,{},False,{}
53,201,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 687, 'end_line': 687, 'comment': '# Figure out can_share', 'include_SATD': False}], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 320, 'end_line': 320, 'comment': '# Understand the associations', 'include_SATD': False}, {'start_line': 344, 'end_line': 344, 'comment': '# Generate the body if appropriate', 'include_SATD': False}], 'filename': 'glance/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 52, 'end_line': 52, 'comment': '# Perform tests based on whether we have an owner', 'include_SATD': False}, {'start_line': 57, 'end_line': 57, 'comment': '# Figure out if this image is shared with that tenant', 'include_SATD': False}, {'start_line': 59, 'end_line': 60, 'comment': '# This means the is_image_visible() method may not be # called from anything except the registry...', 'include_SATD': False}, {'start_line': 71, 'end_line': 71, 'comment': '# Only allow sharing if we have an owner', 'include_SATD': False}, {'start_line': 75, 'end_line': 75, 'comment': '# Is admin == image sharable', 'include_SATD': False}, {'start_line': 79, 'end_line': 79, 'comment': '# If we own the image, we can share it', 'include_SATD': False}, {'start_line': 83, 'end_line': 83, 'comment': ""# Let's get the membership association"", 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': '# Not shared with us anyway', 'include_SATD': False}, {'start_line': 91, 'end_line': 92, 'comment': '# This means the is_image_sharable() method may not be # called from anything except the registry...', 'include_SATD': False}, {'start_line': 96, 'end_line': 96, 'comment': '# Not shared with us anyway', 'include_SATD': False}, {'start_line': 99, 'end_line': 99, 'comment': ""# It's the can_share attribute we're now interested in"", 'include_SATD': False}], 'filename': 'glance/common/context.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 158, 'end_line': 158, 'comment': '# Build up a body if can_share is specified', 'include_SATD': False}], 'filename': 'glance/registry/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 454, 'end_line': 454, 'comment': '# Make sure they can look at it', 'include_SATD': False}, {'start_line': 465, 'end_line': 466, 'comment': '# Note lack of permissions check; this function is called from # RequestContext.is_image_visible(), so avoid recursive calls', 'include_SATD': False}, {'start_line': 507, 'end_line': 508, 'comment': '# memberships returned should be created before the membership # defined by marker', 'include_SATD': False}], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/008_add_image_members_table.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [], 'b_comments': [{'start_line': 370, 'end_line': 371, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 412, 'end_line': 412, 'comment': '# Make sure the image exists', 'include_SATD': False}, {'start_line': 418, 'end_line': 419, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 424, 'end_line': 424, 'comment': '# Can they manipulate the membership?', 'include_SATD': False}, {'start_line': 428, 'end_line': 428, 'comment': '# Get the membership list', 'include_SATD': False}, {'start_line': 432, 'end_line': 432, 'comment': '# Malformed entity...', 'include_SATD': False}, {'start_line': 438, 'end_line': 438, 'comment': '# Walk through the incoming memberships', 'include_SATD': False}, {'start_line': 445, 'end_line': 445, 'comment': '# Malformed entity...', 'include_SATD': False}, {'start_line': 449, 'end_line': 449, 'comment': '# Figure out what can_share should be', 'include_SATD': False}, {'start_line': 453, 'end_line': 453, 'comment': '# Try to find the corresponding membership', 'include_SATD': False}, {'start_line': 459, 'end_line': 459, 'comment': '# Are we overriding can_share?', 'include_SATD': False}, {'start_line': 468, 'end_line': 468, 'comment': '# Default can_share', 'include_SATD': False}, {'start_line': 472, 'end_line': 474, 'comment': ""# We now have a filtered list of memberships to add and # memberships to modify.  Let's start by walking through all # the existing image memberships..."", 'include_SATD': False}, {'start_line': 477, 'end_line': 477, 'comment': '# Just update the membership in place', 'include_SATD': False}, {'start_line': 481, 'end_line': 481, 'comment': '# Outdated one; needs to be deleted', 'include_SATD': False}, {'start_line': 484, 'end_line': 484, 'comment': '# Now add the non-existant ones', 'include_SATD': False}, {'start_line': 488, 'end_line': 488, 'comment': '# Make an appropriate result', 'include_SATD': False}, {'start_line': 509, 'end_line': 509, 'comment': '# Make sure the image exists', 'include_SATD': False}, {'start_line': 515, 'end_line': 516, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 521, 'end_line': 521, 'comment': '# Can they manipulate the membership?', 'include_SATD': False}, {'start_line': 525, 'end_line': 525, 'comment': '# Determine the applicable can_share value', 'include_SATD': False}, {'start_line': 531, 'end_line': 531, 'comment': '# Malformed entity...', 'include_SATD': False}, {'start_line': 535, 'end_line': 535, 'comment': '# Look up an existing membership...', 'include_SATD': False}, {'start_line': 546, 'end_line': 546, 'comment': '# Make an appropriate result', 'include_SATD': False}, {'start_line': 558, 'end_line': 558, 'comment': '# Make sure the image exists', 'include_SATD': False}, {'start_line': 564, 'end_line': 565, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 570, 'end_line': 570, 'comment': '# Can they manipulate the membership?', 'include_SATD': False}, {'start_line': 574, 'end_line': 574, 'comment': '# Look up an existing membership', 'include_SATD': False}, {'start_line': 581, 'end_line': 581, 'comment': '# Make an appropriate result', 'include_SATD': False}, {'start_line': 650, 'end_line': 650, 'comment': '# Return the list of members with the given attribute mapping', 'include_SATD': False}], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [{'start_line': 210, 'end_line': 210, 'comment': ""#1',"", 'include_SATD': False}, {'start_line': 227, 'end_line': 227, 'comment': ""#2',"", 'include_SATD': False}, {'start_line': 364, 'end_line': 364, 'comment': '# sorted func expects func that compares in descending order', 'include_SATD': False}, {'start_line': 401, 'end_line': 401, 'comment': '# Trap door for unit.test_context.TestContext', 'include_SATD': False}], 'filename': 'glance/tests/stubs.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_clients.py'}, {'a_comments': [], 'b_comments': [{'start_line': 216, 'end_line': 218, 'comment': ""# The 'trap_door' tenant is a special tenant that causes # stubs.stub_out_registry_db_image_api.image_member_find() to # not throw a NotFound exception, for just this test."", 'include_SATD': False}], 'filename': 'glance/tests/unit/test_context.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 692, 'end_line': 692, 'comment': '# Figure out can_share', 'include_SATD': False}], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 320, 'end_line': 320, 'comment': '# Understand the associations', 'include_SATD': False}, {'start_line': 344, 'end_line': 344, 'comment': '# Generate the body if appropriate', 'include_SATD': False}], 'filename': 'glance/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 52, 'end_line': 52, 'comment': '# Perform tests based on whether we have an owner', 'include_SATD': False}, {'start_line': 57, 'end_line': 57, 'comment': '# Figure out if this image is shared with that tenant', 'include_SATD': False}, {'start_line': 59, 'end_line': 60, 'comment': '# This means the is_image_visible() method may not be # called from anything except the registry...', 'include_SATD': False}, {'start_line': 71, 'end_line': 71, 'comment': '# Only allow sharing if we have an owner', 'include_SATD': False}, {'start_line': 75, 'end_line': 75, 'comment': '# Is admin == image sharable', 'include_SATD': False}, {'start_line': 79, 'end_line': 79, 'comment': '# If we own the image, we can share it', 'include_SATD': False}, {'start_line': 83, 'end_line': 83, 'comment': ""# Let's get the membership association"", 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': '# Not shared with us anyway', 'include_SATD': False}, {'start_line': 91, 'end_line': 92, 'comment': '# This means the is_image_sharable() method may not be # called from anything except the registry...', 'include_SATD': False}, {'start_line': 96, 'end_line': 96, 'comment': '# Not shared with us anyway', 'include_SATD': False}, {'start_line': 99, 'end_line': 99, 'comment': ""# It's the can_share attribute we're now interested in"", 'include_SATD': False}], 'filename': 'glance/common/context.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 158, 'end_line': 158, 'comment': '# Build up a body if can_share is specified', 'include_SATD': False}], 'filename': 'glance/registry/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 454, 'end_line': 454, 'comment': '# Make sure they can look at it', 'include_SATD': False}, {'start_line': 465, 'end_line': 466, 'comment': '# Note lack of permissions check; this function is called from # RequestContext.is_image_visible(), so avoid recursive calls', 'include_SATD': False}, {'start_line': 507, 'end_line': 508, 'comment': '# memberships returned should be created before the membership # defined by marker', 'include_SATD': False}], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/008_add_image_members_table.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [], 'b_comments': [{'start_line': 370, 'end_line': 371, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 412, 'end_line': 412, 'comment': '# Make sure the image exists', 'include_SATD': False}, {'start_line': 418, 'end_line': 419, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 424, 'end_line': 424, 'comment': '# Can they manipulate the membership?', 'include_SATD': False}, {'start_line': 428, 'end_line': 428, 'comment': '# Get the membership list', 'include_SATD': False}, {'start_line': 432, 'end_line': 432, 'comment': '# Malformed entity...', 'include_SATD': False}, {'start_line': 438, 'end_line': 438, 'comment': '# Walk through the incoming memberships', 'include_SATD': False}, {'start_line': 445, 'end_line': 445, 'comment': '# Malformed entity...', 'include_SATD': False}, {'start_line': 449, 'end_line': 449, 'comment': '# Figure out what can_share should be', 'include_SATD': False}, {'start_line': 453, 'end_line': 453, 'comment': '# Try to find the corresponding membership', 'include_SATD': False}, {'start_line': 459, 'end_line': 459, 'comment': '# Are we overriding can_share?', 'include_SATD': False}, {'start_line': 468, 'end_line': 468, 'comment': '# Default can_share', 'include_SATD': False}, {'start_line': 472, 'end_line': 474, 'comment': ""# We now have a filtered list of memberships to add and # memberships to modify.  Let's start by walking through all # the existing image memberships..."", 'include_SATD': False}, {'start_line': 477, 'end_line': 477, 'comment': '# Just update the membership in place', 'include_SATD': False}, {'start_line': 481, 'end_line': 481, 'comment': '# Outdated one; needs to be deleted', 'include_SATD': False}, {'start_line': 484, 'end_line': 484, 'comment': '# Now add the non-existant ones', 'include_SATD': False}, {'start_line': 488, 'end_line': 488, 'comment': '# Make an appropriate result', 'include_SATD': False}, {'start_line': 509, 'end_line': 509, 'comment': '# Make sure the image exists', 'include_SATD': False}, {'start_line': 515, 'end_line': 516, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 521, 'end_line': 521, 'comment': '# Can they manipulate the membership?', 'include_SATD': False}, {'start_line': 525, 'end_line': 525, 'comment': '# Determine the applicable can_share value', 'include_SATD': False}, {'start_line': 531, 'end_line': 531, 'comment': '# Malformed entity...', 'include_SATD': False}, {'start_line': 535, 'end_line': 535, 'comment': '# Look up an existing membership...', 'include_SATD': False}, {'start_line': 546, 'end_line': 546, 'comment': '# Make an appropriate result', 'include_SATD': False}, {'start_line': 558, 'end_line': 558, 'comment': '# Make sure the image exists', 'include_SATD': False}, {'start_line': 564, 'end_line': 565, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 570, 'end_line': 570, 'comment': '# Can they manipulate the membership?', 'include_SATD': False}, {'start_line': 574, 'end_line': 574, 'comment': '# Look up an existing membership', 'include_SATD': False}, {'start_line': 581, 'end_line': 581, 'comment': '# Make an appropriate result', 'include_SATD': False}, {'start_line': 650, 'end_line': 650, 'comment': '# Return the list of members with the given attribute mapping', 'include_SATD': False}], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [{'start_line': 210, 'end_line': 210, 'comment': ""#1',"", 'include_SATD': False}, {'start_line': 227, 'end_line': 227, 'comment': ""#2',"", 'include_SATD': False}, {'start_line': 364, 'end_line': 364, 'comment': '# sorted func expects func that compares in descending order', 'include_SATD': False}, {'start_line': 401, 'end_line': 401, 'comment': '# Trap door for unit.test_context.TestContext', 'include_SATD': False}], 'filename': 'glance/tests/stubs.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_clients.py'}, {'a_comments': [], 'b_comments': [{'start_line': 216, 'end_line': 218, 'comment': ""# The 'trap_door' tenant is a special tenant that causes # stubs.stub_out_registry_db_image_api.image_member_find() to # not throw a NotFound exception, for just this test."", 'include_SATD': False}], 'filename': 'glance/tests/unit/test_context.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 694, 'end_line': 694, 'comment': '# Figure out can_share', 'include_SATD': False}], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/api/versions.py'}, {'a_comments': [], 'b_comments': [{'start_line': 320, 'end_line': 320, 'comment': '# Understand the associations', 'include_SATD': False}, {'start_line': 344, 'end_line': 344, 'comment': '# Generate the body if appropriate', 'include_SATD': False}], 'filename': 'glance/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/client.py'}, {'a_comments': [{'start_line': 38, 'end_line': 38, 'comment': '# Is admin == image visible', 'include_SATD': False}, {'start_line': 42, 'end_line': 42, 'comment': '# No owner == image visible', 'include_SATD': False}, {'start_line': 46, 'end_line': 46, 'comment': '# Image is_public == image visible', 'include_SATD': False}, {'start_line': 50, 'end_line': 50, 'comment': '# Private image', 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/common/context.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 158, 'end_line': 158, 'comment': '# Build up a body if can_share is specified', 'include_SATD': False}], 'filename': 'glance/registry/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 31, 'end_line': 31, 'comment': '# Is admin == image visible', 'include_SATD': False}, {'start_line': 35, 'end_line': 35, 'comment': '# No owner == image visible', 'include_SATD': False}, {'start_line': 39, 'end_line': 39, 'comment': '# Image is_public == image visible', 'include_SATD': False}, {'start_line': 43, 'end_line': 43, 'comment': '# Perform tests based on whether we have an owner', 'include_SATD': False}, {'start_line': 48, 'end_line': 48, 'comment': '# Figure out if this image is shared with that tenant', 'include_SATD': False}, {'start_line': 50, 'end_line': 51, 'comment': '# This means the is_image_visible() method may not be # called from anything except the registry...', 'include_SATD': False}, {'start_line': 57, 'end_line': 57, 'comment': '# Private image', 'include_SATD': False}, {'start_line': 62, 'end_line': 62, 'comment': '# Only allow sharing if we have an owner', 'include_SATD': False}, {'start_line': 66, 'end_line': 66, 'comment': '# Is admin == image sharable', 'include_SATD': False}, {'start_line': 70, 'end_line': 70, 'comment': '# If we own the image, we can share it', 'include_SATD': False}, {'start_line': 74, 'end_line': 74, 'comment': ""# Let's get the membership association"", 'include_SATD': False}, {'start_line': 78, 'end_line': 78, 'comment': '# Not shared with us anyway', 'include_SATD': False}, {'start_line': 82, 'end_line': 83, 'comment': '# This means the is_image_sharable() method may not be # called from anything except the registry...', 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': '# Not shared with us anyway', 'include_SATD': False}, {'start_line': 90, 'end_line': 90, 'comment': ""# It's the can_share attribute we're now interested in"", 'include_SATD': False}], 'filename': 'glance/registry/context.py'}, {'a_comments': [], 'b_comments': [{'start_line': 454, 'end_line': 454, 'comment': '# Make sure they can look at it', 'include_SATD': False}, {'start_line': 465, 'end_line': 466, 'comment': '# Note lack of permissions check; this function is called from # RequestContext.is_image_visible(), so avoid recursive calls', 'include_SATD': False}, {'start_line': 507, 'end_line': 508, 'comment': '# memberships returned should be created before the membership # defined by marker', 'include_SATD': False}], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/008_add_image_members_table.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [], 'b_comments': [{'start_line': 370, 'end_line': 371, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 412, 'end_line': 412, 'comment': '# Make sure the image exists', 'include_SATD': False}, {'start_line': 418, 'end_line': 419, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 424, 'end_line': 424, 'comment': '# Can they manipulate the membership?', 'include_SATD': False}, {'start_line': 428, 'end_line': 428, 'comment': '# Get the membership list', 'include_SATD': False}, {'start_line': 432, 'end_line': 432, 'comment': '# Malformed entity...', 'include_SATD': False}, {'start_line': 438, 'end_line': 438, 'comment': '# Walk through the incoming memberships', 'include_SATD': False}, {'start_line': 445, 'end_line': 445, 'comment': '# Malformed entity...', 'include_SATD': False}, {'start_line': 449, 'end_line': 449, 'comment': '# Figure out what can_share should be', 'include_SATD': False}, {'start_line': 453, 'end_line': 453, 'comment': '# Try to find the corresponding membership', 'include_SATD': False}, {'start_line': 459, 'end_line': 459, 'comment': '# Are we overriding can_share?', 'include_SATD': False}, {'start_line': 468, 'end_line': 468, 'comment': '# Default can_share', 'include_SATD': False}, {'start_line': 472, 'end_line': 474, 'comment': ""# We now have a filtered list of memberships to add and # memberships to modify.  Let's start by walking through all # the existing image memberships..."", 'include_SATD': False}, {'start_line': 477, 'end_line': 477, 'comment': '# Just update the membership in place', 'include_SATD': False}, {'start_line': 481, 'end_line': 481, 'comment': '# Outdated one; needs to be deleted', 'include_SATD': False}, {'start_line': 484, 'end_line': 484, 'comment': '# Now add the non-existant ones', 'include_SATD': False}, {'start_line': 488, 'end_line': 488, 'comment': '# Make an appropriate result', 'include_SATD': False}, {'start_line': 509, 'end_line': 509, 'comment': '# Make sure the image exists', 'include_SATD': False}, {'start_line': 515, 'end_line': 516, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 521, 'end_line': 521, 'comment': '# Can they manipulate the membership?', 'include_SATD': False}, {'start_line': 525, 'end_line': 525, 'comment': '# Determine the applicable can_share value', 'include_SATD': False}, {'start_line': 531, 'end_line': 531, 'comment': '# Malformed entity...', 'include_SATD': False}, {'start_line': 535, 'end_line': 535, 'comment': '# Look up an existing membership...', 'include_SATD': False}, {'start_line': 547, 'end_line': 547, 'comment': '# Make an appropriate result', 'include_SATD': False}, {'start_line': 559, 'end_line': 559, 'comment': '# Make sure the image exists', 'include_SATD': False}, {'start_line': 565, 'end_line': 566, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 571, 'end_line': 571, 'comment': '# Can they manipulate the membership?', 'include_SATD': False}, {'start_line': 575, 'end_line': 575, 'comment': '# Look up an existing membership', 'include_SATD': False}, {'start_line': 583, 'end_line': 583, 'comment': '# Make an appropriate result', 'include_SATD': False}, {'start_line': 652, 'end_line': 652, 'comment': '# Return the list of members with the given attribute mapping', 'include_SATD': False}], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 211, 'end_line': 211, 'comment': ""#1',"", 'include_SATD': False}, {'start_line': 228, 'end_line': 228, 'comment': ""#2',"", 'include_SATD': False}, {'start_line': 365, 'end_line': 365, 'comment': '# sorted func expects func that compares in descending order', 'include_SATD': False}, {'start_line': 402, 'end_line': 402, 'comment': '# Trap door for unit.test_context.TestContext', 'include_SATD': False}], 'filename': 'glance/tests/stubs.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_clients.py'}, {'a_comments': [], 'b_comments': [{'start_line': 216, 'end_line': 218, 'comment': ""# The 'trap_door' tenant is a special tenant that causes # stubs.stub_out_registry_db_image_api.image_member_find() to # not throw a NotFound exception, for just this test."", 'include_SATD': False}], 'filename': 'glance/tests/unit/test_context.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_versions.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 694, 'end_line': 694, 'comment': '# Figure out can_share', 'include_SATD': False}], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/api/versions.py'}, {'a_comments': [], 'b_comments': [{'start_line': 320, 'end_line': 320, 'comment': '# Understand the associations', 'include_SATD': False}, {'start_line': 344, 'end_line': 344, 'comment': '# Generate the body if appropriate', 'include_SATD': False}], 'filename': 'glance/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/config.py'}, {'a_comments': [{'start_line': 38, 'end_line': 38, 'comment': '# Is admin == image visible', 'include_SATD': False}, {'start_line': 42, 'end_line': 42, 'comment': '# No owner == image visible', 'include_SATD': False}, {'start_line': 46, 'end_line': 46, 'comment': '# Image is_public == image visible', 'include_SATD': False}, {'start_line': 50, 'end_line': 50, 'comment': '# Private image', 'include_SATD': False}], 'b_comments': [{'start_line': 60, 'end_line': 60, 'comment': '# Determine whether to use tenant or owner', 'include_SATD': False}], 'filename': 'glance/common/context.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 158, 'end_line': 158, 'comment': '# Build up a body if can_share is specified', 'include_SATD': False}], 'filename': 'glance/registry/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 31, 'end_line': 31, 'comment': '# Is admin == image visible', 'include_SATD': False}, {'start_line': 35, 'end_line': 35, 'comment': '# No owner == image visible', 'include_SATD': False}, {'start_line': 39, 'end_line': 39, 'comment': '# Image is_public == image visible', 'include_SATD': False}, {'start_line': 43, 'end_line': 43, 'comment': '# Perform tests based on whether we have an owner', 'include_SATD': False}, {'start_line': 48, 'end_line': 48, 'comment': '# Figure out if this image is shared with that tenant', 'include_SATD': False}, {'start_line': 50, 'end_line': 51, 'comment': '# This means the is_image_visible() method may not be # called from anything except the registry...', 'include_SATD': False}, {'start_line': 57, 'end_line': 57, 'comment': '# Private image', 'include_SATD': False}, {'start_line': 62, 'end_line': 62, 'comment': '# Only allow sharing if we have an owner', 'include_SATD': False}, {'start_line': 66, 'end_line': 66, 'comment': '# Is admin == image sharable', 'include_SATD': False}, {'start_line': 70, 'end_line': 70, 'comment': '# If we own the image, we can share it', 'include_SATD': False}, {'start_line': 74, 'end_line': 74, 'comment': ""# Let's get the membership association"", 'include_SATD': False}, {'start_line': 78, 'end_line': 78, 'comment': '# Not shared with us anyway', 'include_SATD': False}, {'start_line': 82, 'end_line': 83, 'comment': '# This means the is_image_sharable() method may not be # called from anything except the registry...', 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': '# Not shared with us anyway', 'include_SATD': False}, {'start_line': 90, 'end_line': 90, 'comment': ""# It's the can_share attribute we're now interested in"", 'include_SATD': False}], 'filename': 'glance/registry/context.py'}, {'a_comments': [], 'b_comments': [{'start_line': 454, 'end_line': 454, 'comment': '# Make sure they can look at it', 'include_SATD': False}, {'start_line': 465, 'end_line': 466, 'comment': '# Note lack of permissions check; this function is called from # RequestContext.is_image_visible(), so avoid recursive calls', 'include_SATD': False}, {'start_line': 507, 'end_line': 508, 'comment': '# memberships returned should be created before the membership # defined by marker', 'include_SATD': False}], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/008_add_image_members_table.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [], 'b_comments': [{'start_line': 370, 'end_line': 371, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 412, 'end_line': 412, 'comment': '# Make sure the image exists', 'include_SATD': False}, {'start_line': 418, 'end_line': 419, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 424, 'end_line': 424, 'comment': '# Can they manipulate the membership?', 'include_SATD': False}, {'start_line': 428, 'end_line': 428, 'comment': '# Get the membership list', 'include_SATD': False}, {'start_line': 432, 'end_line': 432, 'comment': '# Malformed entity...', 'include_SATD': False}, {'start_line': 438, 'end_line': 438, 'comment': '# Walk through the incoming memberships', 'include_SATD': False}, {'start_line': 445, 'end_line': 445, 'comment': '# Malformed entity...', 'include_SATD': False}, {'start_line': 449, 'end_line': 449, 'comment': '# Figure out what can_share should be', 'include_SATD': False}, {'start_line': 453, 'end_line': 453, 'comment': '# Try to find the corresponding membership', 'include_SATD': False}, {'start_line': 459, 'end_line': 459, 'comment': '# Are we overriding can_share?', 'include_SATD': False}, {'start_line': 468, 'end_line': 468, 'comment': '# Default can_share', 'include_SATD': False}, {'start_line': 472, 'end_line': 474, 'comment': ""# We now have a filtered list of memberships to add and # memberships to modify.  Let's start by walking through all # the existing image memberships..."", 'include_SATD': False}, {'start_line': 477, 'end_line': 477, 'comment': '# Just update the membership in place', 'include_SATD': False}, {'start_line': 481, 'end_line': 481, 'comment': '# Outdated one; needs to be deleted', 'include_SATD': False}, {'start_line': 484, 'end_line': 484, 'comment': '# Now add the non-existant ones', 'include_SATD': False}, {'start_line': 488, 'end_line': 488, 'comment': '# Make an appropriate result', 'include_SATD': False}, {'start_line': 509, 'end_line': 509, 'comment': '# Make sure the image exists', 'include_SATD': False}, {'start_line': 515, 'end_line': 516, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 521, 'end_line': 521, 'comment': '# Can they manipulate the membership?', 'include_SATD': False}, {'start_line': 525, 'end_line': 525, 'comment': '# Determine the applicable can_share value', 'include_SATD': False}, {'start_line': 531, 'end_line': 531, 'comment': '# Malformed entity...', 'include_SATD': False}, {'start_line': 535, 'end_line': 535, 'comment': '# Look up an existing membership...', 'include_SATD': False}, {'start_line': 547, 'end_line': 547, 'comment': '# Make an appropriate result', 'include_SATD': False}, {'start_line': 559, 'end_line': 559, 'comment': '# Make sure the image exists', 'include_SATD': False}, {'start_line': 565, 'end_line': 566, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 571, 'end_line': 571, 'comment': '# Can they manipulate the membership?', 'include_SATD': False}, {'start_line': 575, 'end_line': 575, 'comment': '# Look up an existing membership', 'include_SATD': False}, {'start_line': 583, 'end_line': 583, 'comment': '# Make an appropriate result', 'include_SATD': False}, {'start_line': 652, 'end_line': 652, 'comment': '# Return the list of members with the given attribute mapping', 'include_SATD': False}], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/stubs.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_clients.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_context.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_versions.py'}]}, {'revision': 5, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 694, 'end_line': 694, 'comment': '# Figure out can_share', 'include_SATD': False}], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/api/versions.py'}, {'a_comments': [], 'b_comments': [{'start_line': 320, 'end_line': 320, 'comment': '# Understand the associations', 'include_SATD': False}, {'start_line': 344, 'end_line': 344, 'comment': '# Generate the body if appropriate', 'include_SATD': False}], 'filename': 'glance/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/client.py'}, {'a_comments': [{'start_line': 38, 'end_line': 38, 'comment': '# Is admin == image visible', 'include_SATD': False}, {'start_line': 42, 'end_line': 42, 'comment': '# No owner == image visible', 'include_SATD': False}, {'start_line': 46, 'end_line': 46, 'comment': '# Image is_public == image visible', 'include_SATD': False}, {'start_line': 50, 'end_line': 50, 'comment': '# Private image', 'include_SATD': False}], 'b_comments': [{'start_line': 61, 'end_line': 61, 'comment': '# Determine whether to use tenant or owner', 'include_SATD': False}], 'filename': 'glance/common/context.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 158, 'end_line': 158, 'comment': '# Build up a body if can_share is specified', 'include_SATD': False}], 'filename': 'glance/registry/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 31, 'end_line': 31, 'comment': '# Is admin == image visible', 'include_SATD': False}, {'start_line': 35, 'end_line': 35, 'comment': '# No owner == image visible', 'include_SATD': False}, {'start_line': 39, 'end_line': 39, 'comment': '# Image is_public == image visible', 'include_SATD': False}, {'start_line': 43, 'end_line': 43, 'comment': '# Perform tests based on whether we have an owner', 'include_SATD': False}, {'start_line': 48, 'end_line': 48, 'comment': '# Figure out if this image is shared with that tenant', 'include_SATD': False}, {'start_line': 55, 'end_line': 55, 'comment': '# Private image', 'include_SATD': False}, {'start_line': 60, 'end_line': 60, 'comment': '# Only allow sharing if we have an owner', 'include_SATD': False}, {'start_line': 64, 'end_line': 64, 'comment': '# Is admin == image sharable', 'include_SATD': False}, {'start_line': 68, 'end_line': 68, 'comment': '# If we own the image, we can share it', 'include_SATD': False}, {'start_line': 72, 'end_line': 72, 'comment': ""# Let's get the membership association"", 'include_SATD': False}, {'start_line': 76, 'end_line': 76, 'comment': '# Not shared with us anyway', 'include_SATD': False}, {'start_line': 83, 'end_line': 83, 'comment': '# Not shared with us anyway', 'include_SATD': False}, {'start_line': 86, 'end_line': 86, 'comment': ""# It's the can_share attribute we're now interested in"", 'include_SATD': False}], 'filename': 'glance/registry/context.py'}, {'a_comments': [], 'b_comments': [{'start_line': 454, 'end_line': 454, 'comment': '# Make sure they can look at it', 'include_SATD': False}, {'start_line': 465, 'end_line': 466, 'comment': '# Note lack of permissions check; this function is called from # RequestContext.is_image_visible(), so avoid recursive calls', 'include_SATD': False}, {'start_line': 507, 'end_line': 508, 'comment': '# memberships returned should be created before the membership # defined by marker', 'include_SATD': False}], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/008_add_image_members_table.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [], 'b_comments': [{'start_line': 370, 'end_line': 371, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 412, 'end_line': 412, 'comment': '# Make sure the image exists', 'include_SATD': False}, {'start_line': 418, 'end_line': 419, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 424, 'end_line': 424, 'comment': '# Can they manipulate the membership?', 'include_SATD': False}, {'start_line': 428, 'end_line': 428, 'comment': '# Get the membership list', 'include_SATD': False}, {'start_line': 432, 'end_line': 432, 'comment': '# Malformed entity...', 'include_SATD': False}, {'start_line': 438, 'end_line': 438, 'comment': '# Walk through the incoming memberships', 'include_SATD': False}, {'start_line': 445, 'end_line': 445, 'comment': '# Malformed entity...', 'include_SATD': False}, {'start_line': 449, 'end_line': 449, 'comment': '# Figure out what can_share should be', 'include_SATD': False}, {'start_line': 453, 'end_line': 453, 'comment': '# Try to find the corresponding membership', 'include_SATD': False}, {'start_line': 459, 'end_line': 459, 'comment': '# Are we overriding can_share?', 'include_SATD': False}, {'start_line': 468, 'end_line': 468, 'comment': '# Default can_share', 'include_SATD': False}, {'start_line': 472, 'end_line': 474, 'comment': ""# We now have a filtered list of memberships to add and # memberships to modify.  Let's start by walking through all # the existing image memberships..."", 'include_SATD': False}, {'start_line': 477, 'end_line': 477, 'comment': '# Just update the membership in place', 'include_SATD': False}, {'start_line': 481, 'end_line': 481, 'comment': '# Outdated one; needs to be deleted', 'include_SATD': False}, {'start_line': 484, 'end_line': 484, 'comment': '# Now add the non-existant ones', 'include_SATD': False}, {'start_line': 488, 'end_line': 488, 'comment': '# Make an appropriate result', 'include_SATD': False}, {'start_line': 509, 'end_line': 509, 'comment': '# Make sure the image exists', 'include_SATD': False}, {'start_line': 515, 'end_line': 516, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 521, 'end_line': 521, 'comment': '# Can they manipulate the membership?', 'include_SATD': False}, {'start_line': 525, 'end_line': 525, 'comment': '# Determine the applicable can_share value', 'include_SATD': False}, {'start_line': 531, 'end_line': 531, 'comment': '# Malformed entity...', 'include_SATD': False}, {'start_line': 535, 'end_line': 535, 'comment': '# Look up an existing membership...', 'include_SATD': False}, {'start_line': 547, 'end_line': 547, 'comment': '# Make an appropriate result', 'include_SATD': False}, {'start_line': 559, 'end_line': 559, 'comment': '# Make sure the image exists', 'include_SATD': False}, {'start_line': 565, 'end_line': 566, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 571, 'end_line': 571, 'comment': '# Can they manipulate the membership?', 'include_SATD': False}, {'start_line': 575, 'end_line': 575, 'comment': '# Look up an existing membership', 'include_SATD': False}, {'start_line': 583, 'end_line': 583, 'comment': '# Make an appropriate result', 'include_SATD': False}, {'start_line': 652, 'end_line': 652, 'comment': '# Return the list of members with the given attribute mapping', 'include_SATD': False}], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/stubs.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_clients.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_context.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_versions.py'}]}, {'revision': 6, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 694, 'end_line': 694, 'comment': '# Figure out can_share', 'include_SATD': False}], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/api/versions.py'}, {'a_comments': [], 'b_comments': [{'start_line': 320, 'end_line': 320, 'comment': '# Understand the associations', 'include_SATD': False}, {'start_line': 344, 'end_line': 344, 'comment': '# Generate the body if appropriate', 'include_SATD': False}], 'filename': 'glance/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/client.py'}, {'a_comments': [{'start_line': 38, 'end_line': 38, 'comment': '# Is admin == image visible', 'include_SATD': False}, {'start_line': 42, 'end_line': 42, 'comment': '# No owner == image visible', 'include_SATD': False}, {'start_line': 46, 'end_line': 46, 'comment': '# Image is_public == image visible', 'include_SATD': False}, {'start_line': 50, 'end_line': 50, 'comment': '# Private image', 'include_SATD': False}], 'b_comments': [{'start_line': 61, 'end_line': 61, 'comment': '# Determine whether to use tenant or owner', 'include_SATD': False}], 'filename': 'glance/common/context.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 158, 'end_line': 158, 'comment': '# Build up a body if can_share is specified', 'include_SATD': False}], 'filename': 'glance/registry/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 31, 'end_line': 31, 'comment': '# Is admin == image visible', 'include_SATD': False}, {'start_line': 35, 'end_line': 35, 'comment': '# No owner == image visible', 'include_SATD': False}, {'start_line': 39, 'end_line': 39, 'comment': '# Image is_public == image visible', 'include_SATD': False}, {'start_line': 43, 'end_line': 43, 'comment': '# Perform tests based on whether we have an owner', 'include_SATD': False}, {'start_line': 48, 'end_line': 48, 'comment': '# Figure out if this image is shared with that tenant', 'include_SATD': False}, {'start_line': 55, 'end_line': 55, 'comment': '# Private image', 'include_SATD': False}, {'start_line': 60, 'end_line': 60, 'comment': '# Only allow sharing if we have an owner', 'include_SATD': False}, {'start_line': 64, 'end_line': 64, 'comment': '# Is admin == image sharable', 'include_SATD': False}, {'start_line': 68, 'end_line': 68, 'comment': '# If we own the image, we can share it', 'include_SATD': False}, {'start_line': 72, 'end_line': 72, 'comment': ""# Let's get the membership association"", 'include_SATD': False}, {'start_line': 76, 'end_line': 76, 'comment': '# Not shared with us anyway', 'include_SATD': False}, {'start_line': 83, 'end_line': 83, 'comment': '# Not shared with us anyway', 'include_SATD': False}, {'start_line': 86, 'end_line': 86, 'comment': ""# It's the can_share attribute we're now interested in"", 'include_SATD': False}], 'filename': 'glance/registry/context.py'}, {'a_comments': [], 'b_comments': [{'start_line': 454, 'end_line': 454, 'comment': '# Make sure they can look at it', 'include_SATD': False}, {'start_line': 465, 'end_line': 466, 'comment': '# Note lack of permissions check; this function is called from # RequestContext.is_image_visible(), so avoid recursive calls', 'include_SATD': False}, {'start_line': 507, 'end_line': 508, 'comment': '# memberships returned should be created before the membership # defined by marker', 'include_SATD': False}], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/008_add_image_members_table.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [], 'b_comments': [{'start_line': 370, 'end_line': 371, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 412, 'end_line': 412, 'comment': '# Make sure the image exists', 'include_SATD': False}, {'start_line': 418, 'end_line': 419, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 424, 'end_line': 424, 'comment': '# Can they manipulate the membership?', 'include_SATD': False}, {'start_line': 428, 'end_line': 428, 'comment': '# Get the membership list', 'include_SATD': False}, {'start_line': 432, 'end_line': 432, 'comment': '# Malformed entity...', 'include_SATD': False}, {'start_line': 438, 'end_line': 438, 'comment': '# Walk through the incoming memberships', 'include_SATD': False}, {'start_line': 445, 'end_line': 445, 'comment': '# Malformed entity...', 'include_SATD': False}, {'start_line': 449, 'end_line': 449, 'comment': '# Figure out what can_share should be', 'include_SATD': False}, {'start_line': 453, 'end_line': 453, 'comment': '# Try to find the corresponding membership', 'include_SATD': False}, {'start_line': 459, 'end_line': 459, 'comment': '# Are we overriding can_share?', 'include_SATD': False}, {'start_line': 468, 'end_line': 468, 'comment': '# Default can_share', 'include_SATD': False}, {'start_line': 472, 'end_line': 474, 'comment': ""# We now have a filtered list of memberships to add and # memberships to modify.  Let's start by walking through all # the existing image memberships..."", 'include_SATD': False}, {'start_line': 477, 'end_line': 477, 'comment': '# Just update the membership in place', 'include_SATD': False}, {'start_line': 481, 'end_line': 481, 'comment': '# Outdated one; needs to be deleted', 'include_SATD': False}, {'start_line': 484, 'end_line': 484, 'comment': '# Now add the non-existant ones', 'include_SATD': False}, {'start_line': 488, 'end_line': 488, 'comment': '# Make an appropriate result', 'include_SATD': False}, {'start_line': 509, 'end_line': 509, 'comment': '# Make sure the image exists', 'include_SATD': False}, {'start_line': 515, 'end_line': 516, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 521, 'end_line': 521, 'comment': '# Can they manipulate the membership?', 'include_SATD': False}, {'start_line': 525, 'end_line': 525, 'comment': '# Determine the applicable can_share value', 'include_SATD': False}, {'start_line': 531, 'end_line': 531, 'comment': '# Malformed entity...', 'include_SATD': False}, {'start_line': 535, 'end_line': 535, 'comment': '# Look up an existing membership...', 'include_SATD': False}, {'start_line': 547, 'end_line': 547, 'comment': '# Make an appropriate result', 'include_SATD': False}, {'start_line': 559, 'end_line': 559, 'comment': '# Make sure the image exists', 'include_SATD': False}, {'start_line': 565, 'end_line': 566, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 571, 'end_line': 571, 'comment': '# Can they manipulate the membership?', 'include_SATD': False}, {'start_line': 575, 'end_line': 575, 'comment': '# Look up an existing membership', 'include_SATD': False}, {'start_line': 583, 'end_line': 583, 'comment': '# Make an appropriate result', 'include_SATD': False}, {'start_line': 652, 'end_line': 652, 'comment': '# Return the list of members with the given attribute mapping', 'include_SATD': False}], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/stubs.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_clients.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_context.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_versions.py'}]}, {'revision': 7, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 694, 'end_line': 694, 'comment': '# Figure out can_share', 'include_SATD': False}], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/api/versions.py'}, {'a_comments': [], 'b_comments': [{'start_line': 320, 'end_line': 320, 'comment': '# Understand the associations', 'include_SATD': False}, {'start_line': 344, 'end_line': 344, 'comment': '# Generate the body if appropriate', 'include_SATD': False}], 'filename': 'glance/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/client.py'}, {'a_comments': [{'start_line': 38, 'end_line': 38, 'comment': '# Is admin == image visible', 'include_SATD': False}, {'start_line': 42, 'end_line': 42, 'comment': '# No owner == image visible', 'include_SATD': False}, {'start_line': 46, 'end_line': 46, 'comment': '# Image is_public == image visible', 'include_SATD': False}, {'start_line': 50, 'end_line': 50, 'comment': '# Private image', 'include_SATD': False}], 'b_comments': [{'start_line': 61, 'end_line': 61, 'comment': '# Determine whether to use tenant or owner', 'include_SATD': False}], 'filename': 'glance/common/context.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 158, 'end_line': 158, 'comment': '# Build up a body if can_share is specified', 'include_SATD': False}], 'filename': 'glance/registry/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 31, 'end_line': 31, 'comment': '# Is admin == image visible', 'include_SATD': False}, {'start_line': 35, 'end_line': 35, 'comment': '# No owner == image visible', 'include_SATD': False}, {'start_line': 39, 'end_line': 39, 'comment': '# Image is_public == image visible', 'include_SATD': False}, {'start_line': 43, 'end_line': 43, 'comment': '# Perform tests based on whether we have an owner', 'include_SATD': False}, {'start_line': 48, 'end_line': 48, 'comment': '# Figure out if this image is shared with that tenant', 'include_SATD': False}, {'start_line': 55, 'end_line': 55, 'comment': '# Private image', 'include_SATD': False}, {'start_line': 60, 'end_line': 60, 'comment': '# Only allow sharing if we have an owner', 'include_SATD': False}, {'start_line': 64, 'end_line': 64, 'comment': '# Is admin == image sharable', 'include_SATD': False}, {'start_line': 68, 'end_line': 68, 'comment': '# If we own the image, we can share it', 'include_SATD': False}, {'start_line': 72, 'end_line': 72, 'comment': ""# Let's get the membership association"", 'include_SATD': False}, {'start_line': 76, 'end_line': 76, 'comment': '# Not shared with us anyway', 'include_SATD': False}, {'start_line': 83, 'end_line': 83, 'comment': '# Not shared with us anyway', 'include_SATD': False}, {'start_line': 86, 'end_line': 86, 'comment': ""# It's the can_share attribute we're now interested in"", 'include_SATD': False}], 'filename': 'glance/registry/context.py'}, {'a_comments': [], 'b_comments': [{'start_line': 457, 'end_line': 457, 'comment': '# Make sure they can look at it', 'include_SATD': False}, {'start_line': 468, 'end_line': 469, 'comment': '# Note lack of permissions check; this function is called from # RequestContext.is_image_visible(), so avoid recursive calls', 'include_SATD': False}, {'start_line': 510, 'end_line': 511, 'comment': '# memberships returned should be created before the membership # defined by marker', 'include_SATD': False}], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/008_add_image_members_table.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [], 'b_comments': [{'start_line': 370, 'end_line': 371, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 412, 'end_line': 412, 'comment': '# Make sure the image exists', 'include_SATD': False}, {'start_line': 418, 'end_line': 419, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 424, 'end_line': 424, 'comment': '# Can they manipulate the membership?', 'include_SATD': False}, {'start_line': 428, 'end_line': 428, 'comment': '# Get the membership list', 'include_SATD': False}, {'start_line': 432, 'end_line': 432, 'comment': '# Malformed entity...', 'include_SATD': False}, {'start_line': 438, 'end_line': 438, 'comment': '# Walk through the incoming memberships', 'include_SATD': False}, {'start_line': 445, 'end_line': 445, 'comment': '# Malformed entity...', 'include_SATD': False}, {'start_line': 449, 'end_line': 449, 'comment': '# Figure out what can_share should be', 'include_SATD': False}, {'start_line': 453, 'end_line': 453, 'comment': '# Try to find the corresponding membership', 'include_SATD': False}, {'start_line': 459, 'end_line': 459, 'comment': '# Are we overriding can_share?', 'include_SATD': False}, {'start_line': 468, 'end_line': 468, 'comment': '# Default can_share', 'include_SATD': False}, {'start_line': 472, 'end_line': 474, 'comment': ""# We now have a filtered list of memberships to add and # memberships to modify.  Let's start by walking through all # the existing image memberships..."", 'include_SATD': False}, {'start_line': 477, 'end_line': 477, 'comment': '# Just update the membership in place', 'include_SATD': False}, {'start_line': 481, 'end_line': 481, 'comment': '# Outdated one; needs to be deleted', 'include_SATD': False}, {'start_line': 484, 'end_line': 484, 'comment': '# Now add the non-existant ones', 'include_SATD': False}, {'start_line': 488, 'end_line': 488, 'comment': '# Make an appropriate result', 'include_SATD': False}, {'start_line': 509, 'end_line': 509, 'comment': '# Make sure the image exists', 'include_SATD': False}, {'start_line': 515, 'end_line': 516, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 521, 'end_line': 521, 'comment': '# Can they manipulate the membership?', 'include_SATD': False}, {'start_line': 525, 'end_line': 525, 'comment': '# Determine the applicable can_share value', 'include_SATD': False}, {'start_line': 531, 'end_line': 531, 'comment': '# Malformed entity...', 'include_SATD': False}, {'start_line': 535, 'end_line': 535, 'comment': '# Look up an existing membership...', 'include_SATD': False}, {'start_line': 547, 'end_line': 547, 'comment': '# Make an appropriate result', 'include_SATD': False}, {'start_line': 559, 'end_line': 559, 'comment': '# Make sure the image exists', 'include_SATD': False}, {'start_line': 565, 'end_line': 566, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 571, 'end_line': 571, 'comment': '# Can they manipulate the membership?', 'include_SATD': False}, {'start_line': 575, 'end_line': 575, 'comment': '# Look up an existing membership', 'include_SATD': False}, {'start_line': 583, 'end_line': 583, 'comment': '# Make an appropriate result', 'include_SATD': False}, {'start_line': 652, 'end_line': 652, 'comment': '# Return the list of members with the given attribute mapping', 'include_SATD': False}], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/scrubber.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/stubs.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_clients.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_context.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_versions.py'}]}]",7,36,34,MERGED,True,https://review.opendev.org/#/c/201,Add support for shared images,True,{},False,{},False,{}
54,443,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/keystone_utils.py'}]}]",1,3,0,MERGED,True,https://review.opendev.org/#/c/443,Fix keystone paste config for functional tests,True,{},False,{},False,{}
55,412,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 135, 'end_line': 136, 'comment': '# For large images, we need to supply the size of the # image file. See LP Bug #827660.', 'include_SATD': False}, {'start_line': 146, 'end_line': 149, 'comment': '# Illegal seek. This means the user is trying # to pipe image data to the client, e.g. # echo testdata | bin/glance add blah..., or # that stdin is empty', 'include_SATD': False}], 'b_comments': [{'start_line': 126, 'end_line': 127, 'comment': '# For large images, we need to supply the size of the # image file. See LP Bugs #827660 and #845788.', 'include_SATD': False}, {'start_line': 135, 'end_line': 138, 'comment': '# Illegal seek. This means the user is trying # to pipe image data to the client, e.g. # echo testdata | bin/glance add blah..., or # that stdin is empty', 'include_SATD': False}], 'filename': 'glance/client.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [{'start_line': 135, 'end_line': 136, 'comment': '# For large images, we need to supply the size of the # image file. See LP Bug #827660.', 'include_SATD': False}, {'start_line': 146, 'end_line': 149, 'comment': '# Illegal seek. This means the user is trying # to pipe image data to the client, e.g. # echo testdata | bin/glance add blah..., or # that stdin is empty', 'include_SATD': False}], 'b_comments': [{'start_line': 126, 'end_line': 127, 'comment': '# For large images, we need to supply the size of the # image file. See LP Bugs #827660 and #845788.', 'include_SATD': False}, {'start_line': 136, 'end_line': 139, 'comment': '# Illegal seek. This means the user is trying # to pipe image data to the client, e.g. # echo testdata | bin/glance add blah..., or # that stdin is empty', 'include_SATD': False}], 'filename': 'glance/client.py'}]}]",2,7,1,MERGED,True,https://review.opendev.org/#/c/412,Fixes LP Bug#845788,True,{},False,{},False,{}
56,398,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/009_add_protected.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [{'start_line': 574, 'end_line': 574, 'comment': '# 0. Verify no public images', 'include_SATD': False}, {'start_line': 582, 'end_line': 582, 'comment': '# 1. Add public image', 'include_SATD': False}, {'start_line': 591, 'end_line': 591, 'comment': '# 2. Verify image added as public image', 'include_SATD': False}, {'start_line': 610, 'end_line': 610, 'comment': '# 3. Delete the image', 'include_SATD': False}, {'start_line': 618, 'end_line': 618, 'comment': '# 4. Remove image protection', 'include_SATD': False}, {'start_line': 627, 'end_line': 627, 'comment': '# 5. Delete the image', 'include_SATD': False}, {'start_line': 635, 'end_line': 635, 'comment': '# 6. Verify no public images', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1976, 'end_line': 1976, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 1989, 'end_line': 1989, 'comment': '# Now try to delete the image...', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/utils.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/012_add_protected.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [{'start_line': 434, 'end_line': 434, 'comment': '# 10. Check min_ram filter', 'include_SATD': False}, {'start_line': 443, 'end_line': 443, 'comment': '# 11. Check min_disk filter', 'include_SATD': False}], 'b_comments': [{'start_line': 434, 'end_line': 434, 'comment': '# 12. Check min_ram filter', 'include_SATD': False}, {'start_line': 443, 'end_line': 443, 'comment': '# 13. Check min_disk filter', 'include_SATD': False}, {'start_line': 625, 'end_line': 625, 'comment': '# 0. Verify no public images', 'include_SATD': False}, {'start_line': 633, 'end_line': 633, 'comment': '# 1. Add public image', 'include_SATD': False}, {'start_line': 642, 'end_line': 642, 'comment': '# 2. Verify image added as public image', 'include_SATD': False}, {'start_line': 657, 'end_line': 657, 'comment': '# 3. Delete the image', 'include_SATD': False}, {'start_line': 665, 'end_line': 665, 'comment': '# 4. Remove image protection', 'include_SATD': False}, {'start_line': 674, 'end_line': 674, 'comment': '# 5. Delete the image', 'include_SATD': False}, {'start_line': 682, 'end_line': 682, 'comment': '# 6. Verify no public images', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 2332, 'end_line': 2332, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 2345, 'end_line': 2345, 'comment': '# Now try to delete the image...', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/utils.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/012_add_protected.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [{'start_line': 434, 'end_line': 434, 'comment': '# 10. Check min_ram filter', 'include_SATD': False}, {'start_line': 443, 'end_line': 443, 'comment': '# 11. Check min_disk filter', 'include_SATD': False}], 'b_comments': [{'start_line': 434, 'end_line': 434, 'comment': '# 12. Check min_ram filter', 'include_SATD': False}, {'start_line': 443, 'end_line': 443, 'comment': '# 13. Check min_disk filter', 'include_SATD': False}, {'start_line': 625, 'end_line': 625, 'comment': '# 0. Verify no public images', 'include_SATD': False}, {'start_line': 633, 'end_line': 633, 'comment': '# 1. Add public image', 'include_SATD': False}, {'start_line': 642, 'end_line': 642, 'comment': '# 2. Verify image added as public image', 'include_SATD': False}, {'start_line': 657, 'end_line': 657, 'comment': '# 3. Delete the image', 'include_SATD': False}, {'start_line': 665, 'end_line': 665, 'comment': '# 4. Remove image protection', 'include_SATD': False}, {'start_line': 674, 'end_line': 674, 'comment': '# 5. Delete the image', 'include_SATD': False}, {'start_line': 682, 'end_line': 682, 'comment': '# 6. Verify no public images', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 2362, 'end_line': 2362, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 2375, 'end_line': 2375, 'comment': '# Now try to delete the image...', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/utils.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/013_add_protected.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [{'start_line': 853, 'end_line': 889, 'comment': '# 12. GET /images with property filter # 13. GET /images with property filter and name filter # 14. GET /images with past changes-since filter # 15. GET /images with future changes-since filter', 'include_SATD': False}, {'start_line': 899, 'end_line': 899, 'comment': '# DELETE images', 'include_SATD': False}], 'b_comments': [{'start_line': 857, 'end_line': 858, 'comment': '# 12. Get /images with protected=False filter # Verify correct images returned with property', 'include_SATD': False}, {'start_line': 869, 'end_line': 870, 'comment': '# 13. Get /images with protected=True filter # Verify correct images returned with property', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_api.py'}, {'a_comments': [{'start_line': 428, 'end_line': 428, 'comment': '# 10. Check min_ram filter', 'include_SATD': False}, {'start_line': 437, 'end_line': 437, 'comment': '# 11. Check min_disk filter', 'include_SATD': False}], 'b_comments': [{'start_line': 428, 'end_line': 428, 'comment': '# 12. Check min_ram filter', 'include_SATD': False}, {'start_line': 437, 'end_line': 437, 'comment': '# 13. Check min_disk filter', 'include_SATD': False}, {'start_line': 679, 'end_line': 679, 'comment': '# 0. Verify no public images', 'include_SATD': False}, {'start_line': 687, 'end_line': 687, 'comment': '# 1. Add public image', 'include_SATD': False}, {'start_line': 696, 'end_line': 696, 'comment': '# 2. Verify image added as public image', 'include_SATD': False}, {'start_line': 711, 'end_line': 711, 'comment': '# 3. Delete the image', 'include_SATD': False}, {'start_line': 719, 'end_line': 719, 'comment': '# 4. Remove image protection', 'include_SATD': False}, {'start_line': 728, 'end_line': 728, 'comment': '# 5. Delete the image', 'include_SATD': False}, {'start_line': 736, 'end_line': 736, 'comment': '# 6. Verify no public images', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 2590, 'end_line': 2590, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 2603, 'end_line': 2603, 'comment': '# Now try to delete the image...', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_api.py'}]}]",4,32,4,MERGED,True,https://review.opendev.org/#/c/398,Adds support for protecting images from accidental deletion.,True,{},False,{},False,{}
57,449,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_migrations.py'}]}]",1,3,0,MERGED,True,https://review.opendev.org/#/c/449,Fixes bug 851016.,True,{},False,{},False,{}
58,453,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_migrations.py'}]}]",1,1,0,MERGED,True,https://review.opendev.org/#/c/453,Fixes bug 851016.,True,{},False,{},False,{}
59,454,"[{'revision': 1, 'changed_files': []}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/454,Adding test_migrations.conf to tarball for testing,False,{},False,{},False,{}
60,455,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/filesystem.py'}, {'a_comments': [], 'b_comments': [{'start_line': 95, 'end_line': 95, 'comment': '#TODO(bcwaldon): find a better way to close this connection', 'include_SATD': True}], 'filename': 'glance/store/http.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/s3.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/swift.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_filesystem_store.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_http_store.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_s3_store.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_swift_store.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/filesystem.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/http.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/s3.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/swift.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_filesystem_store.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_http_store.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_s3_store.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_swift_store.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/filesystem.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/http.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/s3.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/swift.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_filesystem_store.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_http_store.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_s3_store.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_swift_store.py'}]}]",3,9,1,MERGED,True,https://review.opendev.org/#/c/455,Fixing bug 794582 - Now able to stream http(s) images,True,{'#TODO(bcwaldon): find a better way to close this connection': 1},True,{},False,{}
61,425,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 44, 'end_line': 46, 'comment': ""# TODO(sirp): For now we're just dealing with one endpoint, eventually # this should expose the entire service catalog so that the client can # choose which service/region/(public/private net) combo they want."", 'include_SATD': True}, {'start_line': 87, 'end_line': 87, 'comment': '# 1. Check Keystone version', 'include_SATD': False}, {'start_line': 104, 'end_line': 104, 'comment': '# 2. Keystone may redirect us', 'include_SATD': False}, {'start_line': 107, 'end_line': 109, 'comment': '# 3. In some configurations nova makes redirection to # v2.0 keystone endpoint. Also, new location does not # contain real endpoint, only hostname and port.', 'include_SATD': False}, {'start_line': 113, 'end_line': 114, 'comment': ""# If we sucessfully auth'd, then memorize the correct auth_url # for future use."", 'include_SATD': False}, {'start_line': 118, 'end_line': 118, 'comment': '# Guard against a redirection loop', 'include_SATD': False}, {'start_line': 167, 'end_line': 168, 'comment': '# FIXME(sirp): for now just using the first endpoint we get back # from the service catalog for glance, and using the public url.', 'include_SATD': True}], 'filename': 'glance/common/auth.py'}, {'a_comments': [], 'b_comments': [{'start_line': 78, 'end_line': 86, 'comment': ""# FIXME(sirp): Nova image/glance.py currently calls this. Since this # method isn't really doing anything useful[1], we should go ahead and # rip it out, first in Nova, then here. Steps: # #       1. Change auth_tok in Glance to auth_token #       2. Change image/glance.py in Nova to use client.auth_token #       3. Remove this method # # [1] httpmail.python.org/pipermail/tutor/2003-October/025932.html"", 'include_SATD': True}], 'filename': 'glance/common/client.py'}, {'a_comments': [{'start_line': 73, 'end_line': 74, 'comment': '# Use the default empty context, with admin turned on for # backwards compatibility', 'include_SATD': False}], 'b_comments': [{'start_line': 86, 'end_line': 88, 'comment': '# TODO(sirp): should we be using the glance_tokeauth shim from # Keystone here? If we do, we need to make sure it handles the NoAuth # case', 'include_SATD': True}, {'start_line': 93, 'end_line': 93, 'comment': '# 1. Auth-token is passed, check other headers', 'include_SATD': False}, {'start_line': 100, 'end_line': 102, 'comment': '# 2. Indentity-Status not confirmed # FIXME(sirp): not sure what the correct behavior in this case # is; just raising NotAuthorized for now', 'include_SATD': True}, {'start_line': 105, 'end_line': 105, 'comment': '# 3. Auth-token is ommited, assume NoAuth', 'include_SATD': False}], 'filename': 'glance/common/context.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 33, 'end_line': 36, 'comment': ""# NOTE(sirp): This is needed in case we are running the tests under an # environment in which OS_AUTH_STRATEGY=keystone. The test server we # spin up won't have keystone support, so we need to switch to the # NoAuth strategy."", 'include_SATD': False}], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_clients.py'}]}]",1,1,0,MERGED,True,https://review.opendev.org/#/c/425,Adding Keystone support for Glance client.,True,"{""# TODO(sirp): For now we're just dealing with one endpoint, eventually # this should expose the entire service catalog so that the client can # choose which service/region/(public/private net) combo they want."": 1, '# FIXME(sirp): for now just using the first endpoint we get back # from the service catalog for glance, and using the public url.': 1, ""# FIXME(sirp): Nova image/glance.py currently calls this. Since this # method isn't really doing anything useful[1], we should go ahead and # rip it out, first in Nova, then here. Steps: # #       1. Change auth_tok in Glance to auth_token #       2. Change image/glance.py in Nova to use client.auth_token #       3. Remove this method # # [1] httpmail.python.org/pipermail/tutor/2003-October/025932.html"": 1, '# TODO(sirp): should we be using the glance_tokeauth shim from # Keystone here? If we do, we need to make sure it handles the NoAuth # case': 1, '# 2. Indentity-Status not confirmed # FIXME(sirp): not sure what the correct behavior in this case # is; just raising NotAuthorized for now': 1}",True,{},False,{}
62,429,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/009_add_mindisk_and_minram.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_api.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/009_add_mindisk_and_minram.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [{'start_line': 410, 'end_line': 410, 'comment': '# 10. Check min_ram filter', 'include_SATD': False}, {'start_line': 419, 'end_line': 419, 'comment': '# 11. Check min_disk filter', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 978, 'end_line': 978, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 990, 'end_line': 990, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 1017, 'end_line': 1017, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 1029, 'end_line': 1029, 'comment': ""#4',"", 'include_SATD': False}], 'filename': 'glance/tests/unit/test_api.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/009_add_mindisk_and_minram.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [{'start_line': 410, 'end_line': 410, 'comment': '# 10. Check min_ram filter', 'include_SATD': False}, {'start_line': 419, 'end_line': 419, 'comment': '# 11. Check min_disk filter', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 978, 'end_line': 978, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 990, 'end_line': 990, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 1017, 'end_line': 1017, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 1029, 'end_line': 1029, 'comment': ""#4',"", 'include_SATD': False}], 'filename': 'glance/tests/unit/test_api.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/009_add_mindisk_and_minram.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [{'start_line': 409, 'end_line': 409, 'comment': '# 10. Check min_ram filter', 'include_SATD': False}, {'start_line': 418, 'end_line': 418, 'comment': '# 11. Check min_disk filter', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 978, 'end_line': 978, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 990, 'end_line': 990, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 1017, 'end_line': 1017, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 1029, 'end_line': 1029, 'comment': ""#4',"", 'include_SATD': False}], 'filename': 'glance/tests/unit/test_api.py'}]}]",4,11,3,MERGED,True,https://review.opendev.org/#/c/429,Added min_disk and min_ram properties to images Fixes LP Bug#849368,True,{},False,{},False,{}
63,468,"[{'revision': 1, 'changed_files': []}]",1,3,0,MERGED,True,https://review.opendev.org/#/c/468,Add rfc.sh to help with gerrit workflow.,False,{},False,{},False,{}
64,469,"[{'revision': 1, 'changed_files': []}]",1,1,0,MERGED,True,https://review.opendev.org/#/c/469,Get output from run_tests.,False,{},False,{},False,{}
65,451,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 49, 'end_line': 49, 'comment': '# build list of author emails', 'include_SATD': False}, {'start_line': 53, 'end_line': 53, 'comment': '# Tarmac is a special case', 'include_SATD': False}, {'start_line': 59, 'end_line': 59, 'comment': '# try to parse name as an email address if None', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_misc.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 49, 'end_line': 49, 'comment': '# build list of author emails', 'include_SATD': False}, {'start_line': 53, 'end_line': 53, 'comment': '# Tarmac is a special case', 'include_SATD': False}, {'start_line': 59, 'end_line': 59, 'comment': '# try to parse name as an email address if None', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_misc.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 49, 'end_line': 49, 'comment': '# build list of author emails', 'include_SATD': False}, {'start_line': 53, 'end_line': 53, 'comment': '# Tarmac is a special case', 'include_SATD': False}, {'start_line': 59, 'end_line': 59, 'comment': '# try to parse name as an email address if None', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_misc.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 49, 'end_line': 49, 'comment': '# build list of author emails', 'include_SATD': False}, {'start_line': 53, 'end_line': 53, 'comment': '# Tarmac is a special case', 'include_SATD': False}, {'start_line': 59, 'end_line': 59, 'comment': '# try to parse name as an email address if None', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_misc.py'}]}]",4,20,0,ABANDONED,False,https://review.opendev.org/#/c/451,Adding git-specific Authors file test,True,{},False,{},False,{}
66,452,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/009_add_mindisk_and_minram.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [{'start_line': 410, 'end_line': 410, 'comment': '# 10. Check min_ram filter', 'include_SATD': False}, {'start_line': 419, 'end_line': 419, 'comment': '# 11. Check min_disk filter', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 978, 'end_line': 978, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 990, 'end_line': 990, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 1017, 'end_line': 1017, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 1029, 'end_line': 1029, 'comment': ""#4',"", 'include_SATD': False}], 'filename': 'glance/tests/unit/test_api.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/452,Added min_disk and min_ram properties to images,True,{},False,{},False,{}
67,472,"[{'revision': 1, 'changed_files': []}, {'revision': 2, 'changed_files': []}]",2,3,0,ABANDONED,False,https://review.opendev.org/#/c/472,Update openvswitch plugin README,False,{},False,{},False,{}
68,474,"[{'revision': 1, 'changed_files': []}, {'revision': 2, 'changed_files': []}]",2,6,26,MERGED,True,https://review.opendev.org/#/c/474,Update openvswitch plugin README,False,{},False,{},False,{}
69,475,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/store/http.py'}]}]",1,7,0,MERGED,True,https://review.opendev.org/#/c/475,Fixes LP Bug #804429,True,{},False,{},False,{}
70,476,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/store/http.py'}]}]",1,1,0,MERGED,True,https://review.opendev.org/#/c/476,Fixes LP Bug #804429,True,{},False,{},False,{}
71,457,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 470, 'end_line': 474, 'comment': ""# We do this here because the @runs_sql decorator above # actually resets the registry server's sql_connection # to the original (usually memory-based SQLite connection) # and this block of code is run *before* the finally: # block in that decorator..."", 'include_SATD': False}], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 72, 'end_line': 72, 'comment': '# Fall back on a local SQLite connection', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_migrations.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 470, 'end_line': 474, 'comment': ""# We do this here because the @runs_sql decorator above # actually resets the registry server's sql_connection # to the original (usually memory-based SQLite connection) # and this block of code is run *before* the finally: # block in that decorator..."", 'include_SATD': False}], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_migrations.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 474, 'end_line': 478, 'comment': ""# We do this here because the @runs_sql decorator above # actually resets the registry server's sql_connection # to the original (usually memory-based SQLite connection) # and this block of code is run *before* the finally: # block in that decorator..."", 'include_SATD': False}], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_migrations.py'}]}]",3,8,1,MERGED,True,https://review.opendev.org/#/c/457,Fixes Bug #851216,True,{},False,{},False,{}
72,465,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 426, 'end_line': 429, 'comment': '# We request the manifest for the object. If one exists, # that means the object was uploaded in chunks/segments, # and we need to delete all the chunks as well as the # manifest.', 'include_SATD': False}, {'start_line': 438, 'end_line': 438, 'comment': '# Delete all the chunks before the object manifest itself', 'include_SATD': False}, {'start_line': 442, 'end_line': 445, 'comment': ""# TODO(jaypipes): This would be an easy area to parallelize # since we're simply sending off parallelizable requests # to Swift to delete stuff. It's not like we're going to # be hogging up network or file I/O here..."", 'include_SATD': True}], 'filename': 'glance/store/swift.py'}, {'a_comments': [], 'b_comments': [{'start_line': 41, 'end_line': 41, 'comment': '# Needed to register driver for location', 'include_SATD': False}, {'start_line': 165, 'end_line': 249, 'comment': '# 833285) # GET /images # POST /images with public image named Image1 # HEAD /images/1 # GET /images/1 # We test that the delete of the large object cleans up all the # chunks in Swift, in addition to the manifest file (LP Bug# 833285)', 'include_SATD': False}, {'start_line': 251, 'end_line': 253, 'comment': ""# Grab the actual Swift location and query the object manifest for # the chunks/segments. We will check that the segments don't exist # after we delete the object through Glance..."", 'include_SATD': False}, {'start_line': 267, 'end_line': 267, 'comment': '# Verify the object manifest exists', 'include_SATD': False}, {'start_line': 272, 'end_line': 272, 'comment': '# Grab the segment identifiers', 'include_SATD': False}, {'start_line': 278, 'end_line': 278, 'comment': '# Verify the segments exist', 'include_SATD': False}, {'start_line': 284, 'end_line': 285, 'comment': '# DELETE /images/1 # Verify image and all chunks are gone...', 'include_SATD': False}, {'start_line': 291, 'end_line': 291, 'comment': '# Verify the segments no longer exist', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_swift.py'}]}]",1,3,0,MERGED,True,https://review.opendev.org/#/c/465,Fixes LP Bug #833285,True,"{""# TODO(jaypipes): This would be an easy area to parallelize # since we're simply sending off parallelizable requests # to Swift to delete stuff. It's not like we're going to # be hogging up network or file I/O here..."": 1}",True,{},False,{}
73,458,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 359, 'end_line': 368, 'comment': ""# NOTE(Vek): Properties are passed to image_create() as a dictionary. #            We have to be able to differentiate regular properties #            from protected properties, but they are only identified #            in the configuration, which isn't accessible from #            _set_properties_for_image().  One way to fill the gap is #            to wrap the values of protected properties in a simple #            wrapper class, like ProtectedProperty; unicode() will #            report the string value, and isinstance() can be used to #            determine if the resulting property object should be #            protected or not."", 'include_SATD': False}, {'start_line': 403, 'end_line': 403, 'comment': '# Only allow admins to set protected properties', 'include_SATD': False}], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/009_add_protected.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [], 'b_comments': [{'start_line': 321, 'end_line': 329, 'comment': '# NOTE(Vek): The filter_props() call should only be needed #            here, in image creation; once the properties are #            created, they are marked as protected, and that #            persists.  It should be noted, though, that there #            is no mechanism for new protected properties to #            be added to existing images, nor is there a #            mechanism to revoke the protected status on a #            property. # Take care of protected properties', 'include_SATD': True}, {'start_line': 721, 'end_line': 721, 'comment': '# Look up protected properties', 'include_SATD': False}, {'start_line': 726, 'end_line': 727, 'comment': '# Translate protected property values into ProtectedProperty # instances, so that they can be differentiated', 'include_SATD': False}], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [{'start_line': 131, 'end_line': 131, 'comment': '# Insert the protected property to test on', 'include_SATD': False}], 'filename': 'glance/tests/functional/keystone_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 36, 'end_line': 36, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 74, 'end_line': 74, 'comment': '# First, push an image up as non-admin', 'include_SATD': False}, {'start_line': 81, 'end_line': 81, 'comment': '# Now try to push up a second image with a value', 'include_SATD': False}, {'start_line': 87, 'end_line': 88, 'comment': ""# Verify that protected properties can't be changed by the # user"", 'include_SATD': False}, {'start_line': 111, 'end_line': 111, 'comment': '# First, push an image up as admin', 'include_SATD': False}, {'start_line': 118, 'end_line': 118, 'comment': '# Now try to push up a second image with a value', 'include_SATD': False}, {'start_line': 124, 'end_line': 124, 'comment': '# Verify that protected properties can be changed by the admin', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_protected_properties.py'}]}]",1,10,4,ABANDONED,False,https://review.opendev.org/#/c/458,Add protected properties,True,"{'# NOTE(Vek): The filter_props() call should only be needed #            here, in image creation; once the properties are #            created, they are marked as protected, and that #            persists.  It should be noted, though, that there #            is no mechanism for new protected properties to #            be added to existing images, nor is there a #            mechanism to revoke the protected status on a #            property. # Take care of protected properties': 1}",True,{},False,{}
74,499,"[{'revision': 1, 'changed_files': []}]",1,3,0,MERGED,True,https://review.opendev.org/#/c/499,Changes swift-ring-builder exit codes,False,{},False,{},False,{}
75,500,"[{'revision': 1, 'changed_files': []}]",1,1,0,MERGED,True,https://review.opendev.org/#/c/500,Documenting nova_to_os_env.sh tool,False,{},False,{},False,{}
76,508,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/filesystem.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/http.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/s3.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/swift.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_filesystem_store.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_http_store.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_s3_store.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_swift_store.py'}]}]",1,1,0,MERGED,True,https://review.opendev.org/#/c/508,Fixing bug 794582 - Now able to stream http(s) images,True,{},False,{},False,{}
77,473,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 470, 'end_line': 474, 'comment': ""# We do this here because the @runs_sql decorator above # actually resets the registry server's sql_connection # to the original (usually memory-based SQLite connection) # and this block of code is run *before* the finally: # block in that decorator..."", 'include_SATD': False}], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_migrations.py'}]}]",1,1,0,MERGED,True,https://review.opendev.org/#/c/473,Fixes Bug #851216,True,{},False,{},False,{}
78,386,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 242, 'end_line': 242, 'comment': '# filter by deleted if no filter provided', 'include_SATD': False}], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1148, 'end_line': 1148, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 1160, 'end_line': 1160, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 1168, 'end_line': 1168, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 1178, 'end_line': 1178, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 1186, 'end_line': 1186, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1189, 'end_line': 1189, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 1198, 'end_line': 1198, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}, {'start_line': 1913, 'end_line': 1913, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 1925, 'end_line': 1925, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 1933, 'end_line': 1933, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 1943, 'end_line': 1943, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 1951, 'end_line': 1951, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1954, 'end_line': 1954, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 1963, 'end_line': 1963, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 743, 'end_line': 743, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 755, 'end_line': 755, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 763, 'end_line': 763, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 769, 'end_line': 769, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 774, 'end_line': 774, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 777, 'end_line': 777, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 783, 'end_line': 783, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}, {'start_line': 795, 'end_line': 795, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 1419, 'end_line': 1419, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 1431, 'end_line': 1431, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 1439, 'end_line': 1439, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 1445, 'end_line': 1445, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 1450, 'end_line': 1450, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1453, 'end_line': 1453, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 1459, 'end_line': 1459, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_clients.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 152, 'end_line': 152, 'comment': '# filter out deleted images if context disallows it', 'include_SATD': False}, {'start_line': 246, 'end_line': 246, 'comment': '# necessary for markers to work', 'include_SATD': False}, {'start_line': 249, 'end_line': 249, 'comment': '# filter out deleted images if context disallows it', 'include_SATD': False}], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/009_default_updated_at.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [{'start_line': 865, 'end_line': 865, 'comment': '# 14. GET /images with past changes-since filter', 'include_SATD': False}, {'start_line': 875, 'end_line': 875, 'comment': '# 15. GET /images with future changes-since filter', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 392, 'end_line': 392, 'comment': '# 9. Check past changes-since', 'include_SATD': False}, {'start_line': 405, 'end_line': 405, 'comment': '# 10. Check future changes-since', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1148, 'end_line': 1148, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 1160, 'end_line': 1160, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 1168, 'end_line': 1168, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 1178, 'end_line': 1178, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 1186, 'end_line': 1186, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1189, 'end_line': 1189, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 1198, 'end_line': 1198, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}, {'start_line': 1913, 'end_line': 1913, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 1925, 'end_line': 1925, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 1933, 'end_line': 1933, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 1943, 'end_line': 1943, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 1951, 'end_line': 1951, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1954, 'end_line': 1954, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 1963, 'end_line': 1963, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 743, 'end_line': 743, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 755, 'end_line': 755, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 763, 'end_line': 763, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 769, 'end_line': 769, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 774, 'end_line': 774, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 777, 'end_line': 777, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 783, 'end_line': 783, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}, {'start_line': 795, 'end_line': 795, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 1419, 'end_line': 1419, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 1431, 'end_line': 1431, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 1439, 'end_line': 1439, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 1445, 'end_line': 1445, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 1450, 'end_line': 1450, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1453, 'end_line': 1453, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 1459, 'end_line': 1459, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_clients.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 152, 'end_line': 152, 'comment': '# filter out deleted images if context disallows it', 'include_SATD': False}, {'start_line': 246, 'end_line': 246, 'comment': '# necessary for markers to work', 'include_SATD': False}, {'start_line': 249, 'end_line': 249, 'comment': '# filter out deleted images if context disallows it', 'include_SATD': False}], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 62, 'end_line': 62, 'comment': '# set updated_at to created_at if equal to None', 'include_SATD': False}, {'start_line': 76, 'end_line': 76, 'comment': '# set updated_at to None if equal to created_at', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/009_default_updated_at.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [{'start_line': 865, 'end_line': 865, 'comment': '# 14. GET /images with past changes-since filter', 'include_SATD': False}, {'start_line': 875, 'end_line': 875, 'comment': '# 15. GET /images with future changes-since filter', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 392, 'end_line': 392, 'comment': '# 9. Check past changes-since', 'include_SATD': False}, {'start_line': 405, 'end_line': 405, 'comment': '# 10. Check future changes-since', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1148, 'end_line': 1148, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 1160, 'end_line': 1160, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 1168, 'end_line': 1168, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 1178, 'end_line': 1178, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 1186, 'end_line': 1186, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1189, 'end_line': 1189, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 1198, 'end_line': 1198, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}, {'start_line': 1913, 'end_line': 1913, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 1925, 'end_line': 1925, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 1933, 'end_line': 1933, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 1943, 'end_line': 1943, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 1951, 'end_line': 1951, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1954, 'end_line': 1954, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 1963, 'end_line': 1963, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 743, 'end_line': 743, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 755, 'end_line': 755, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 763, 'end_line': 763, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 769, 'end_line': 769, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 774, 'end_line': 774, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 777, 'end_line': 777, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 783, 'end_line': 783, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}, {'start_line': 795, 'end_line': 795, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 1419, 'end_line': 1419, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 1431, 'end_line': 1431, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 1439, 'end_line': 1439, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 1445, 'end_line': 1445, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 1450, 'end_line': 1450, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1453, 'end_line': 1453, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 1459, 'end_line': 1459, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_clients.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 152, 'end_line': 152, 'comment': '# filter out deleted images if context disallows it', 'include_SATD': False}, {'start_line': 246, 'end_line': 246, 'comment': '# necessary for markers to work', 'include_SATD': False}, {'start_line': 249, 'end_line': 249, 'comment': '# filter out deleted images if context disallows it', 'include_SATD': False}], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 62, 'end_line': 62, 'comment': '# set updated_at to created_at if equal to None', 'include_SATD': False}, {'start_line': 76, 'end_line': 76, 'comment': '# set updated_at to None if equal to created_at', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/009_default_updated_at.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [{'start_line': 865, 'end_line': 865, 'comment': '# 14. GET /images with past changes-since filter', 'include_SATD': False}, {'start_line': 875, 'end_line': 875, 'comment': '# 15. GET /images with future changes-since filter', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 392, 'end_line': 392, 'comment': '# 9. Check past changes-since', 'include_SATD': False}, {'start_line': 405, 'end_line': 405, 'comment': '# 10. Check future changes-since', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1148, 'end_line': 1148, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 1160, 'end_line': 1160, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 1168, 'end_line': 1168, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 1178, 'end_line': 1178, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 1186, 'end_line': 1186, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1189, 'end_line': 1189, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 1198, 'end_line': 1198, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}, {'start_line': 1913, 'end_line': 1913, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 1925, 'end_line': 1925, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 1933, 'end_line': 1933, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 1943, 'end_line': 1943, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 1951, 'end_line': 1951, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1954, 'end_line': 1954, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 1963, 'end_line': 1963, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 743, 'end_line': 743, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 755, 'end_line': 755, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 763, 'end_line': 763, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 769, 'end_line': 769, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 774, 'end_line': 774, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 777, 'end_line': 777, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 783, 'end_line': 783, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}, {'start_line': 795, 'end_line': 795, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 1419, 'end_line': 1419, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 1431, 'end_line': 1431, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 1439, 'end_line': 1439, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 1445, 'end_line': 1445, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 1450, 'end_line': 1450, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1453, 'end_line': 1453, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 1459, 'end_line': 1459, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_clients.py'}]}, {'revision': 5, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 152, 'end_line': 152, 'comment': '# filter out deleted images if context disallows it', 'include_SATD': False}, {'start_line': 230, 'end_line': 230, 'comment': '# necessary for markers to work', 'include_SATD': False}, {'start_line': 233, 'end_line': 233, 'comment': '# filter out deleted images if context disallows it', 'include_SATD': False}], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 62, 'end_line': 62, 'comment': '# set updated_at to created_at if equal to None', 'include_SATD': False}, {'start_line': 76, 'end_line': 76, 'comment': '# set updated_at to None if equal to created_at', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/009_default_updated_at.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [{'start_line': 865, 'end_line': 865, 'comment': '# 14. GET /images with past changes-since filter', 'include_SATD': False}, {'start_line': 875, 'end_line': 875, 'comment': '# 15. GET /images with future changes-since filter', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 400, 'end_line': 400, 'comment': '# 9. Check past changes-since', 'include_SATD': False}, {'start_line': 413, 'end_line': 413, 'comment': '# 10. Check future changes-since', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1148, 'end_line': 1148, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 1160, 'end_line': 1160, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 1168, 'end_line': 1168, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 1178, 'end_line': 1178, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 1186, 'end_line': 1186, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1189, 'end_line': 1189, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 1198, 'end_line': 1198, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}, {'start_line': 1913, 'end_line': 1913, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 1925, 'end_line': 1925, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 1933, 'end_line': 1933, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 1943, 'end_line': 1943, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 1951, 'end_line': 1951, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1954, 'end_line': 1954, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 1963, 'end_line': 1963, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 743, 'end_line': 743, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 755, 'end_line': 755, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 763, 'end_line': 763, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 769, 'end_line': 769, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 774, 'end_line': 774, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 777, 'end_line': 777, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 783, 'end_line': 783, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}, {'start_line': 795, 'end_line': 795, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 1419, 'end_line': 1419, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 1431, 'end_line': 1431, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 1439, 'end_line': 1439, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 1445, 'end_line': 1445, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 1450, 'end_line': 1450, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1453, 'end_line': 1453, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 1459, 'end_line': 1459, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_clients.py'}]}, {'revision': 6, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 152, 'end_line': 152, 'comment': '# filter out deleted images if context disallows it', 'include_SATD': False}, {'start_line': 225, 'end_line': 225, 'comment': '# TODO(bcwaldon): handle this logic in registry server', 'include_SATD': True}], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 62, 'end_line': 62, 'comment': '# set updated_at to created_at if equal to None', 'include_SATD': False}, {'start_line': 76, 'end_line': 76, 'comment': '# set updated_at to None if equal to created_at', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/009_default_updated_at.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [{'start_line': 150, 'end_line': 150, 'comment': '# The same for deleted', 'include_SATD': False}, {'start_line': 154, 'end_line': 156, 'comment': '# NOTE(jkoelker): This is technically unnecessary since the db #                 api will force deleted=False if its not an #                 admin context. But explicit > implicit.', 'include_SATD': False}], 'b_comments': [{'start_line': 164, 'end_line': 164, 'comment': ""# only allow admins to filter on 'deleted'"", 'include_SATD': False}], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [{'start_line': 865, 'end_line': 865, 'comment': '# 14. GET /images with past changes-since filter', 'include_SATD': False}, {'start_line': 875, 'end_line': 875, 'comment': '# 15. GET /images with future changes-since filter', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 400, 'end_line': 400, 'comment': '# 9. Check past changes-since', 'include_SATD': False}, {'start_line': 413, 'end_line': 413, 'comment': '# 10. Check future changes-since', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1148, 'end_line': 1148, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 1160, 'end_line': 1160, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 1168, 'end_line': 1168, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 1178, 'end_line': 1178, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 1186, 'end_line': 1186, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1189, 'end_line': 1189, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 1198, 'end_line': 1198, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}, {'start_line': 1913, 'end_line': 1913, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 1925, 'end_line': 1925, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 1933, 'end_line': 1933, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 1943, 'end_line': 1943, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 1951, 'end_line': 1951, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1954, 'end_line': 1954, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 1963, 'end_line': 1963, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 743, 'end_line': 743, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 755, 'end_line': 755, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 763, 'end_line': 763, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 769, 'end_line': 769, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 774, 'end_line': 774, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 777, 'end_line': 777, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 783, 'end_line': 783, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}, {'start_line': 795, 'end_line': 795, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 1419, 'end_line': 1419, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 1431, 'end_line': 1431, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 1439, 'end_line': 1439, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 1445, 'end_line': 1445, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 1450, 'end_line': 1450, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1453, 'end_line': 1453, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 1459, 'end_line': 1459, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_clients.py'}]}, {'revision': 7, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 152, 'end_line': 152, 'comment': '# filter out deleted images if context disallows it', 'include_SATD': False}, {'start_line': 225, 'end_line': 225, 'comment': '# TODO(bcwaldon): handle this logic in registry server', 'include_SATD': True}], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 62, 'end_line': 62, 'comment': '# set updated_at to created_at if equal to None', 'include_SATD': False}, {'start_line': 76, 'end_line': 76, 'comment': '# set updated_at to None if equal to created_at', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/009_default_updated_at.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [{'start_line': 150, 'end_line': 150, 'comment': '# The same for deleted', 'include_SATD': False}, {'start_line': 154, 'end_line': 156, 'comment': '# NOTE(jkoelker): This is technically unnecessary since the db #                 api will force deleted=False if its not an #                 admin context. But explicit > implicit.', 'include_SATD': False}], 'b_comments': [{'start_line': 167, 'end_line': 167, 'comment': ""# only allow admins to filter on 'deleted'"", 'include_SATD': False}], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [{'start_line': 865, 'end_line': 865, 'comment': '# 14. GET /images with past changes-since filter', 'include_SATD': False}, {'start_line': 875, 'end_line': 875, 'comment': '# 15. GET /images with future changes-since filter', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 400, 'end_line': 400, 'comment': '# 9. Check past changes-since', 'include_SATD': False}, {'start_line': 413, 'end_line': 413, 'comment': '# 10. Check future changes-since', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1148, 'end_line': 1148, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 1160, 'end_line': 1160, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 1168, 'end_line': 1168, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 1178, 'end_line': 1178, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 1186, 'end_line': 1186, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1189, 'end_line': 1189, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 1198, 'end_line': 1198, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}, {'start_line': 1206, 'end_line': 1206, 'comment': '# Bad request (empty changes-since param)', 'include_SATD': False}, {'start_line': 1211, 'end_line': 1211, 'comment': '# Bad request (invalid changes-since param)', 'include_SATD': False}, {'start_line': 1923, 'end_line': 1923, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 1935, 'end_line': 1935, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 1943, 'end_line': 1943, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 1953, 'end_line': 1953, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 1961, 'end_line': 1961, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1964, 'end_line': 1964, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 1973, 'end_line': 1973, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}, {'start_line': 1981, 'end_line': 1981, 'comment': '# Bad request (empty changes-since param)', 'include_SATD': False}, {'start_line': 1986, 'end_line': 1986, 'comment': '# Bad request (invalid changes-since param)', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 743, 'end_line': 743, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 755, 'end_line': 755, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 763, 'end_line': 763, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 769, 'end_line': 769, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 774, 'end_line': 774, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 777, 'end_line': 777, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 783, 'end_line': 783, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}, {'start_line': 795, 'end_line': 795, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 1419, 'end_line': 1419, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 1431, 'end_line': 1431, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 1439, 'end_line': 1439, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 1445, 'end_line': 1445, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 1450, 'end_line': 1450, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1453, 'end_line': 1453, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 1459, 'end_line': 1459, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_clients.py'}]}, {'revision': 8, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 152, 'end_line': 152, 'comment': '# filter out deleted images if context disallows it', 'include_SATD': False}, {'start_line': 225, 'end_line': 225, 'comment': '# TODO(bcwaldon): handle this logic in registry server', 'include_SATD': True}], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 62, 'end_line': 62, 'comment': '# set updated_at to created_at if equal to None', 'include_SATD': False}, {'start_line': 76, 'end_line': 76, 'comment': '# set updated_at to None if equal to created_at', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/009_default_updated_at.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [{'start_line': 150, 'end_line': 150, 'comment': '# The same for deleted', 'include_SATD': False}, {'start_line': 154, 'end_line': 156, 'comment': '# NOTE(jkoelker): This is technically unnecessary since the db #                 api will force deleted=False if its not an #                 admin context. But explicit > implicit.', 'include_SATD': False}], 'b_comments': [{'start_line': 167, 'end_line': 167, 'comment': ""# only allow admins to filter on 'deleted'"", 'include_SATD': False}], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [{'start_line': 865, 'end_line': 865, 'comment': '# 14. GET /images with past changes-since filter', 'include_SATD': False}, {'start_line': 875, 'end_line': 875, 'comment': '# 15. GET /images with future changes-since filter', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 400, 'end_line': 400, 'comment': '# 9. Check past changes-since', 'include_SATD': False}, {'start_line': 413, 'end_line': 413, 'comment': '# 10. Check future changes-since', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1148, 'end_line': 1148, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 1160, 'end_line': 1160, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 1168, 'end_line': 1168, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 1178, 'end_line': 1178, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 1186, 'end_line': 1186, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1189, 'end_line': 1189, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 1198, 'end_line': 1198, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}, {'start_line': 1206, 'end_line': 1206, 'comment': '# Bad request (empty changes-since param)', 'include_SATD': False}, {'start_line': 1211, 'end_line': 1211, 'comment': '# Bad request (invalid changes-since param)', 'include_SATD': False}, {'start_line': 1923, 'end_line': 1923, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 1935, 'end_line': 1935, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 1943, 'end_line': 1943, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 1953, 'end_line': 1953, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 1961, 'end_line': 1961, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1964, 'end_line': 1964, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 1973, 'end_line': 1973, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}, {'start_line': 1981, 'end_line': 1981, 'comment': '# Bad request (empty changes-since param)', 'include_SATD': False}, {'start_line': 1986, 'end_line': 1986, 'comment': '# Bad request (invalid changes-since param)', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 743, 'end_line': 743, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 755, 'end_line': 755, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 763, 'end_line': 763, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 769, 'end_line': 769, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 774, 'end_line': 774, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 777, 'end_line': 777, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 783, 'end_line': 783, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}, {'start_line': 795, 'end_line': 795, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 1419, 'end_line': 1419, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 1431, 'end_line': 1431, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 1439, 'end_line': 1439, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 1445, 'end_line': 1445, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 1450, 'end_line': 1450, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1453, 'end_line': 1453, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 1459, 'end_line': 1459, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_clients.py'}]}, {'revision': 9, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 152, 'end_line': 152, 'comment': '# filter out deleted images if context disallows it', 'include_SATD': False}, {'start_line': 225, 'end_line': 225, 'comment': '# TODO(bcwaldon): handle this logic in registry server', 'include_SATD': True}], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 62, 'end_line': 62, 'comment': '# set updated_at to created_at if equal to None', 'include_SATD': False}, {'start_line': 76, 'end_line': 76, 'comment': '# set updated_at to None if equal to created_at', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/009_default_updated_at.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [{'start_line': 150, 'end_line': 150, 'comment': '# The same for deleted', 'include_SATD': False}, {'start_line': 154, 'end_line': 156, 'comment': '# NOTE(jkoelker): This is technically unnecessary since the db #                 api will force deleted=False if its not an #                 admin context. But explicit > implicit.', 'include_SATD': False}], 'b_comments': [{'start_line': 168, 'end_line': 168, 'comment': ""# only allow admins to filter on 'deleted'"", 'include_SATD': False}], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [{'start_line': 857, 'end_line': 857, 'comment': '# 14. GET /images with past changes-since filter', 'include_SATD': False}, {'start_line': 867, 'end_line': 867, 'comment': '# 15. GET /images with future changes-since filter', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 400, 'end_line': 400, 'comment': '# 9. Check past changes-since', 'include_SATD': False}, {'start_line': 413, 'end_line': 413, 'comment': '# 10. Check future changes-since', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1234, 'end_line': 1234, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 1246, 'end_line': 1246, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 1254, 'end_line': 1254, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 1264, 'end_line': 1264, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 1272, 'end_line': 1272, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1275, 'end_line': 1275, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 1284, 'end_line': 1284, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}, {'start_line': 1292, 'end_line': 1292, 'comment': '# Bad request (empty changes-since param)', 'include_SATD': False}, {'start_line': 1297, 'end_line': 1297, 'comment': '# Bad request (invalid changes-since param)', 'include_SATD': False}, {'start_line': 2097, 'end_line': 2097, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 2109, 'end_line': 2109, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 2117, 'end_line': 2117, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 2127, 'end_line': 2127, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 2135, 'end_line': 2135, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 2138, 'end_line': 2138, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 2147, 'end_line': 2147, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}, {'start_line': 2155, 'end_line': 2155, 'comment': '# Bad request (empty changes-since param)', 'include_SATD': False}, {'start_line': 2160, 'end_line': 2160, 'comment': '# Bad request (invalid changes-since param)', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 743, 'end_line': 743, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 755, 'end_line': 755, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 763, 'end_line': 763, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 769, 'end_line': 769, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 774, 'end_line': 774, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 777, 'end_line': 777, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 783, 'end_line': 783, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}, {'start_line': 795, 'end_line': 795, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 1407, 'end_line': 1407, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 1419, 'end_line': 1419, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 1427, 'end_line': 1427, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 1433, 'end_line': 1433, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 1438, 'end_line': 1438, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1441, 'end_line': 1441, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 1447, 'end_line': 1447, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_clients.py'}]}, {'revision': 10, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 152, 'end_line': 152, 'comment': '# filter out deleted images if context disallows it', 'include_SATD': False}, {'start_line': 225, 'end_line': 225, 'comment': '# TODO(bcwaldon): handle this logic in registry server', 'include_SATD': True}], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 62, 'end_line': 62, 'comment': '# set updated_at to created_at if equal to None', 'include_SATD': False}, {'start_line': 76, 'end_line': 76, 'comment': '# set updated_at to None if equal to created_at', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/010_default_update_at.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [{'start_line': 150, 'end_line': 150, 'comment': '# The same for deleted', 'include_SATD': False}, {'start_line': 154, 'end_line': 156, 'comment': '# NOTE(jkoelker): This is technically unnecessary since the db #                 api will force deleted=False if its not an #                 admin context. But explicit > implicit.', 'include_SATD': False}], 'b_comments': [{'start_line': 168, 'end_line': 168, 'comment': ""# only allow admins to filter on 'deleted'"", 'include_SATD': False}], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [{'start_line': 857, 'end_line': 857, 'comment': '# 14. GET /images with past changes-since filter', 'include_SATD': False}, {'start_line': 867, 'end_line': 867, 'comment': '# 15. GET /images with future changes-since filter', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 400, 'end_line': 400, 'comment': '# 9. Check past changes-since', 'include_SATD': False}, {'start_line': 413, 'end_line': 413, 'comment': '# 10. Check future changes-since', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1234, 'end_line': 1234, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 1246, 'end_line': 1246, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 1254, 'end_line': 1254, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 1264, 'end_line': 1264, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 1272, 'end_line': 1272, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1275, 'end_line': 1275, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 1284, 'end_line': 1284, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}, {'start_line': 1292, 'end_line': 1292, 'comment': '# Bad request (empty changes-since param)', 'include_SATD': False}, {'start_line': 1297, 'end_line': 1297, 'comment': '# Bad request (invalid changes-since param)', 'include_SATD': False}, {'start_line': 2097, 'end_line': 2097, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 2109, 'end_line': 2109, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 2117, 'end_line': 2117, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 2127, 'end_line': 2127, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 2135, 'end_line': 2135, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 2138, 'end_line': 2138, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 2147, 'end_line': 2147, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}, {'start_line': 2155, 'end_line': 2155, 'comment': '# Bad request (empty changes-since param)', 'include_SATD': False}, {'start_line': 2160, 'end_line': 2160, 'comment': '# Bad request (invalid changes-since param)', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 743, 'end_line': 743, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 755, 'end_line': 755, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 763, 'end_line': 763, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 769, 'end_line': 769, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 774, 'end_line': 774, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 777, 'end_line': 777, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 783, 'end_line': 783, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}, {'start_line': 795, 'end_line': 795, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 1407, 'end_line': 1407, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 1419, 'end_line': 1419, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 1427, 'end_line': 1427, 'comment': '# Check a standard list, 4 images in db (2 deleted)', 'include_SATD': False}, {'start_line': 1433, 'end_line': 1433, 'comment': '# Expect 3 images (1 deleted)', 'include_SATD': False}, {'start_line': 1438, 'end_line': 1438, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1441, 'end_line': 1441, 'comment': '# Expect 1 images (0 deleted)', 'include_SATD': False}, {'start_line': 1447, 'end_line': 1447, 'comment': '# Expect 0 images (0 deleted)', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_clients.py'}]}]",10,29,7,MERGED,True,https://review.opendev.org/#/c/386,Implementing changes-since param in api & registry,True,{'# TODO(bcwaldon): handle this logic in registry server': 6},True,{},False,{}
79,510,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/version.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/510,Final versioning for Diablo.,True,{},False,{},False,{}
80,512,"[{'revision': 1, 'changed_files': []}]",1,1,0,MERGED,True,https://review.opendev.org/#/c/512,Documenting nova_to_os_env.sh tool,False,{},False,{},False,{}
81,511,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/version.py'}]}]",1,1,0,MERGED,True,https://review.opendev.org/#/c/511,Final versioning for Diablo.,True,{},False,{},False,{}
82,515,"[{'revision': 1, 'changed_files': []}]",1,1,0,MERGED,True,https://review.opendev.org/#/c/515,Update openvswitch plugin README,False,{},False,{},False,{}
83,482,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 144, 'end_line': 148, 'comment': '# Strip out the Location attribute. Temporary fix for # LP Bug #755916. This information is still coming back # from the registry, since the API server still needs access # to it, however we do not return this potential security # information to the API end user...', 'include_SATD': True}], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [{'start_line': 1236, 'end_line': 1236, 'comment': ""#2',"", 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/tests/unit/test_clients.py'}]}]",1,3,0,MERGED,True,https://review.opendev.org/#/c/482,Fixes LP Bug#755916 - Location field shows creds,True,"{'# Strip out the Location attribute. Temporary fix for # LP Bug #755916. This information is still coming back # from the registry, since the API server still needs access # to it, however we do not return this potential security # information to the API end user...': 1}",True,{},False,{}
84,477,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 426, 'end_line': 429, 'comment': '# We request the manifest for the object. If one exists, # that means the object was uploaded in chunks/segments, # and we need to delete all the chunks as well as the # manifest.', 'include_SATD': False}, {'start_line': 438, 'end_line': 438, 'comment': '# Delete all the chunks before the object manifest itself', 'include_SATD': False}, {'start_line': 442, 'end_line': 445, 'comment': ""# TODO(jaypipes): This would be an easy area to parallelize # since we're simply sending off parallelizable requests # to Swift to delete stuff. It's not like we're going to # be hogging up network or file I/O here..."", 'include_SATD': True}], 'filename': 'glance/store/swift.py'}, {'a_comments': [], 'b_comments': [{'start_line': 41, 'end_line': 41, 'comment': '# Needed to register driver for location', 'include_SATD': False}, {'start_line': 165, 'end_line': 249, 'comment': '# 833285) # GET /images # POST /images with public image named Image1 # HEAD /images/1 # GET /images/1 # We test that the delete of the large object cleans up all the # chunks in Swift, in addition to the manifest file (LP Bug# 833285)', 'include_SATD': False}, {'start_line': 251, 'end_line': 253, 'comment': ""# Grab the actual Swift location and query the object manifest for # the chunks/segments. We will check that the segments don't exist # after we delete the object through Glance..."", 'include_SATD': False}, {'start_line': 267, 'end_line': 267, 'comment': '# Verify the object manifest exists', 'include_SATD': False}, {'start_line': 272, 'end_line': 272, 'comment': '# Grab the segment identifiers', 'include_SATD': False}, {'start_line': 278, 'end_line': 278, 'comment': '# Verify the segments exist', 'include_SATD': False}, {'start_line': 284, 'end_line': 285, 'comment': '# DELETE /images/1 # Verify image and all chunks are gone...', 'include_SATD': False}, {'start_line': 291, 'end_line': 291, 'comment': '# Verify the segments no longer exist', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_swift.py'}]}]",1,1,0,MERGED,True,https://review.opendev.org/#/c/477,Fixes LP Bug #833285,True,"{""# TODO(jaypipes): This would be an easy area to parallelize # since we're simply sending off parallelizable requests # to Swift to delete stuff. It's not like we're going to # be hogging up network or file I/O here..."": 1}",True,{},False,{}
85,483,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 144, 'end_line': 148, 'comment': '# Strip out the Location attribute. Temporary fix for # LP Bug #755916. This information is still coming back # from the registry, since the API server still needs access # to it, however we do not return this potential security # information to the API end user...', 'include_SATD': True}], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [{'start_line': 1236, 'end_line': 1236, 'comment': ""#2',"", 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/tests/unit/test_clients.py'}]}]",1,1,0,MERGED,True,https://review.opendev.org/#/c/483,Fixes LP Bug#755916 - Location field shows creds,True,"{'# Strip out the Location attribute. Temporary fix for # LP Bug #755916. This information is still coming back # from the registry, since the API server still needs access # to it, however we do not return this potential security # information to the API end user...': 1}",True,{},False,{}
86,540,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'swift/common/exceptions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'swift/common/ring/builder.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'test/unit/common/ring/test_builder.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'swift/common/exceptions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'swift/common/ring/builder.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'test/unit/common/ring/test_builder.py'}]}]",2,6,0,MERGED,True,https://review.opendev.org/#/c/540,Add more specific error messages to swift-ring-builder,True,{},False,{},False,{}
87,542,"[{'revision': 1, 'changed_files': []}, {'revision': 2, 'changed_files': []}, {'revision': 3, 'changed_files': []}]",3,8,0,MERGED,True,https://review.opendev.org/#/c/542,Add rfc.sh to help with gerrit workflow.,False,{},False,{},False,{}
88,543,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'extensions/qos.py'}]}]",1,4,0,ABANDONED,False,https://review.opendev.org/#/c/543,fix bug856564,True,{},False,{},False,{}
89,545,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/xenapi/stubs.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/xenapi/stubs.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/xenapi/stubs.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/xenapi/stubs.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}]}, {'revision': 5, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/xenapi/stubs.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}]}]",5,6,0,MERGED,True,https://review.opendev.org/#/c/545,bug lp845714,True,{},False,{},False,{}
90,548,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/_id_translator.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/_id_translator.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/_id_translator.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/_id_translator.py'}]}, {'revision': 5, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/_id_translator.py'}]}, {'revision': 6, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/_id_translator.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/ips.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/001_austin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/002_bexar.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/003_add_label_to_networks.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/004_add_zone_tables.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/005_add_instance_metadata.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/008_add_instance_types.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/009_add_instance_migrations.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/010_add_os_type_to_instances.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/011_live_migration.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/012_add_ipv6_flatmanager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/014_add_instance_type_id_to_instances.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/019_add_volume_snapshot_support.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/024_add_block_device_mapping.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/026_add_agent_table.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/027_add_provider_firewall_rules.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/029_add_zone_weight_offsets.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/030_multi_nic.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/042_add_volume_types_and_extradata.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/048_add_zone_name.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/fake_network.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_scheduler.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_libvirt.py'}]}]",6,13,0,MERGED,True,https://review.opendev.org/#/c/548,Fix outstanding pep8 errors for a clean trunk.,True,{},False,{},False,{}
91,550,"[{'revision': 1, 'changed_files': []}]",1,9,0,ABANDONED,False,https://review.opendev.org/#/c/550,contrib/nova.sh: Updated to latest 'upstream' commit:6a8433a resolves bug 857209,False,{},False,{},False,{}
92,509,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/009_add_mindisk_and_minram.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [{'start_line': 409, 'end_line': 409, 'comment': '# 10. Check min_ram filter', 'include_SATD': False}, {'start_line': 418, 'end_line': 418, 'comment': '# 11. Check min_disk filter', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 978, 'end_line': 978, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 990, 'end_line': 990, 'comment': ""#4',"", 'include_SATD': False}, {'start_line': 1017, 'end_line': 1017, 'comment': ""#3',"", 'include_SATD': False}, {'start_line': 1029, 'end_line': 1029, 'comment': ""#4',"", 'include_SATD': False}], 'filename': 'glance/tests/unit/test_api.py'}]}]",1,1,0,MERGED,True,https://review.opendev.org/#/c/509,Added min_disk and min_ram properties to images Fixes LP Bug#849368,True,{},False,{},False,{}
93,553,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/driver.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/driver.py'}]}]",2,8,0,ABANDONED,False,https://review.opendev.org/#/c/553,Allow the user to choose either ietadm or tgtadm (lp:819997),True,{},False,{},False,{}
94,554,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/driver.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/driver.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/driver.py'}]}]",3,6,0,MERGED,True,https://review.opendev.org/#/c/554,Remove VolumeDriver.sync_exec method (lp:819997),True,{},False,{},False,{}
95,556,"[{'revision': 1, 'changed_files': []}]",1,3,0,MERGED,True,https://review.opendev.org/#/c/556,Fix rfc.sh's check for the project,False,{},False,{},False,{}
96,557,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/network/linux_net.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/network/linux_net.py'}]}]",2,6,0,ABANDONED,False,https://review.opendev.org/#/c/557,Add INPUT chain rule for EC2 metadata requests (lp:856385),True,{},False,{},False,{}
97,522,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'swift/common/ring/builder.py'}, {'a_comments': [], 'b_comments': [{'start_line': 198, 'end_line': 198, 'comment': '# min_part of 0 to allow for repaid rebalancing', 'include_SATD': False}], 'filename': 'test/unit/common/ring/test_builder.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'swift/common/ring/builder.py'}, {'a_comments': [], 'b_comments': [{'start_line': 198, 'end_line': 198, 'comment': '# min_part of 0 to allow for rapid rebalancing', 'include_SATD': False}], 'filename': 'test/unit/common/ring/test_builder.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'swift/common/ring/builder.py'}, {'a_comments': [], 'b_comments': [{'start_line': 198, 'end_line': 198, 'comment': '# min_part of 0 to allow for rapid rebalancing', 'include_SATD': False}], 'filename': 'test/unit/common/ring/test_builder.py'}]}]",3,7,1,MERGED,True,https://review.opendev.org/#/c/522,Fix for bug 845952,True,{},False,{},False,{}
98,561,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_misc.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_misc.py'}]}]",2,7,0,MERGED,True,https://review.opendev.org/#/c/561,Don't use GitPython for authors check,True,{},False,{},False,{}
99,563,"[{'revision': 1, 'changed_files': []}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/563,Adding myself to the authors.,False,{},False,{},False,{}
100,564,"[{'revision': 1, 'changed_files': []}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/564,removed extraneous line from docs,False,{},False,{},False,{}
101,555,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright 2011 Red Hat, Inc. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/tests/test_iscsi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/driver.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 16, 'comment': '# Copyright 2010 United States Government as represented by the # Administrator of the National Aeronautics and Space Administration. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 103, 'end_line': 103, 'comment': '# lun0 is reserved', 'include_SATD': False}], 'filename': 'nova/volume/iscsi.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright 2011 Red Hat, Inc. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/tests/test_iscsi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/driver.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 16, 'comment': '# Copyright 2010 United States Government as represented by the # Administrator of the National Aeronautics and Space Administration. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 103, 'end_line': 103, 'comment': '# lun0 is reserved', 'include_SATD': False}], 'filename': 'nova/volume/iscsi.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright 2011 Red Hat, Inc. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/tests/test_iscsi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/driver.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 16, 'comment': '# Copyright 2010 United States Government as represented by the # Administrator of the National Aeronautics and Space Administration. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 103, 'end_line': 103, 'comment': '# lun0 is reserved', 'include_SATD': False}], 'filename': 'nova/volume/iscsi.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright 2011 Red Hat, Inc. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/tests/test_iscsi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/driver.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 16, 'comment': '# Copyright 2010 United States Government as represented by the # Administrator of the National Aeronautics and Space Administration. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 103, 'end_line': 103, 'comment': '# lun0 is reserved', 'include_SATD': False}], 'filename': 'nova/volume/iscsi.py'}]}]",4,9,1,MERGED,True,https://review.opendev.org/#/c/555,Allow the user to choose either ietadm or tgtadm (lp:819997),True,{},False,{},False,{}
102,558,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 16, 'comment': '# Copyright 2010 United States Government as represented by the # Administrator of the National Aeronautics and Space Administration. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/api/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/linux_net.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/service.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 16, 'comment': '# Copyright 2010 United States Government as represented by the # Administrator of the National Aeronautics and Space Administration. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/api/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/linux_net.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/service.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 16, 'comment': '# Copyright 2010 United States Government as represented by the # Administrator of the National Aeronautics and Space Administration. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/api/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/linux_net.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/service.py'}]}]",3,8,1,MERGED,True,https://review.opendev.org/#/c/558,Add INPUT chain rule for EC2 metadata requests (lp:856385),True,{},False,{},False,{}
103,559,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/create_instance_helper.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/image/glance.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/image/test_glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1424, 'end_line': 1424, 'comment': '# Now increase the inst_type memory and make sure all is fine.', 'include_SATD': False}, {'start_line': 1446, 'end_line': 1446, 'comment': '# Now increase the inst_type disk space and make sure all is fine.', 'include_SATD': False}], 'filename': 'nova/tests/test_compute.py'}]}]",1,3,0,MERGED,True,https://review.opendev.org/#/c/559,Add minDisk and minRam to OSAPI image details,True,{},False,{},False,{}
104,566,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/fake_flags.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/manager.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/566,Killed 'num_shelves' flag; No use for it now that AOE is removed.,True,{},False,{},False,{}
105,560,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 16, 'end_line': 16, 'comment': '# Forward (strategy format -> RS format) and reverse translation keys', 'include_SATD': False}, {'start_line': 23, 'end_line': 23, 'comment': '# we have a mapping from opaque to RS for this strategy', 'include_SATD': False}, {'start_line': 26, 'end_line': 26, 'comment': '# Store the mapping.', 'include_SATD': False}, {'start_line': 29, 'end_line': 30, 'comment': ""# If someone else didn't beat us to it, store the reverse # mapping as well."", 'include_SATD': False}, {'start_line': 34, 'end_line': 36, 'comment': ""# Someone beat us to it; use their number instead, and # discard nextid (which is OK -- we don't require that # every int id be used.)"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/api/openstack/_id_translator.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/rackspace/controllers/__init__.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [{'start_line': 17, 'end_line': 17, 'comment': '# Forward (strategy format -> RS format) and reverse translation keys', 'include_SATD': False}, {'start_line': 24, 'end_line': 24, 'comment': '# we have a mapping from opaque to RS for this strategy', 'include_SATD': False}, {'start_line': 27, 'end_line': 27, 'comment': '# Store the mapping.', 'include_SATD': False}, {'start_line': 30, 'end_line': 31, 'comment': ""# If someone else didn't beat us to it, store the reverse # mapping as well."", 'include_SATD': False}, {'start_line': 35, 'end_line': 37, 'comment': ""# Someone beat us to it; use their number instead, and # discard nextid (which is OK -- we don't require that # every int id be used.)"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/api/openstack/_id_translator.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/rackspace/controllers/__init__.py'}]}]",2,5,0,MERGED,True,https://review.opendev.org/#/c/560,Removing old code that snuck back in,True,{},False,{},False,{}
106,562,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 318, 'end_line': 318, 'comment': '# each volume has a different mountpoint', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': ""# the first vblade process isn't running"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/test_volume.py'}, {'a_comments': [{'start_line': 233, 'end_line': 233, 'comment': '# NOTE(vish): we depend on vblade-persist for recreating exports', 'include_SATD': False}, {'start_line': 261, 'end_line': 267, 'comment': '# NOTE(vish): The standard _try_execute does not work here #             because these methods throw errors if other #             volumes on this host are in the process of #             being created.  The good news is the command #             still works for the other volumes, so we #             just wait a bit for the current volume to #             be ready and ignore any errors.', 'include_SATD': False}, {'start_line': 317, 'end_line': 317, 'comment': '# Instance will be terminated in this case.', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/volume/driver.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/562,Killed AOEVolumeDriver.,True,{},False,{},False,{}
107,567,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/fake_flags.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/driver.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/567,killed blades_per_shelf flag; no longer needed since AOE has been removed.,True,{},False,{},False,{}
108,569,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 803, 'end_line': 803, 'comment': '###################', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/db/api.py'}, {'a_comments': [{'start_line': 1975, 'end_line': 1975, 'comment': '###################', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/manager.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/569,more removal of aoe stuff,True,{},False,{},False,{}
109,570,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/570,rip out more aoe,True,{},False,{},False,{}
110,333,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 60, 'end_line': 60, 'comment': '# Is admin == image mutable', 'include_SATD': False}, {'start_line': 64, 'end_line': 64, 'comment': '# No owner == image not mutable', 'include_SATD': False}, {'start_line': 68, 'end_line': 68, 'comment': '# Image only mutable by its owner', 'include_SATD': False}], 'filename': 'glance/registry/context.py'}, {'a_comments': [], 'b_comments': [{'start_line': 115, 'end_line': 115, 'comment': '# Perform authorization check', 'include_SATD': False}, {'start_line': 329, 'end_line': 329, 'comment': '# Perform authorization check', 'include_SATD': False}, {'start_line': 339, 'end_line': 339, 'comment': '# Need to canonicalize ownership', 'include_SATD': False}], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [{'start_line': 120, 'end_line': 120, 'comment': '# Ensure the configuration file is written', 'include_SATD': False}], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 20, 'end_line': 20, 'comment': '# Tenants', 'include_SATD': False}, {'start_line': 26, 'end_line': 26, 'comment': '# Users', 'include_SATD': False}, {'start_line': 32, 'end_line': 32, 'comment': '# Roles', 'include_SATD': False}, {'start_line': 37, 'end_line': 37, 'comment': '# Tokens', 'include_SATD': False}, {'start_line': 48, 'end_line': 48, 'comment': '# Keeping for compatibility for a while till dashboard catches up', 'include_SATD': False}, {'start_line': 67, 'end_line': 67, 'comment': '# endpointTemplates', 'include_SATD': False}, {'start_line': 86, 'end_line': 86, 'comment': '# Tenant endpointsGlobal endpoint not added', 'include_SATD': False}], 'filename': 'glance/tests/functional/data/keystone_data.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 127, 'end_line': 127, 'comment': '# First, pull the configuration file', 'include_SATD': False}, {'start_line': 130, 'end_line': 130, 'comment': '# Need to find the pipeline', 'include_SATD': False}, {'start_line': 133, 'end_line': 133, 'comment': '# OK, the line to modify is the next one...', 'include_SATD': False}, {'start_line': 137, 'end_line': 137, 'comment': '# Now we need to replace the default context field...', 'include_SATD': False}, {'start_line': 141, 'end_line': 141, 'comment': '# Put the conf back together and append the keystone pieces', 'include_SATD': False}, {'start_line': 174, 'end_line': 174, 'comment': '# Try looking up the keystone executable', 'include_SATD': False}, {'start_line': 183, 'end_line': 183, 'comment': ""# We're now initialized"", 'include_SATD': False}, {'start_line': 186, 'end_line': 186, 'comment': ""# If we don't have keystone-control, disable ourself"", 'include_SATD': False}, {'start_line': 190, 'end_line': 190, 'comment': '# Make sure to call superclass', 'include_SATD': False}, {'start_line': 193, 'end_line': 193, 'comment': '# Also need keystone auth and admin ports...', 'include_SATD': False}, {'start_line': 197, 'end_line': 197, 'comment': '# Set up the servers', 'include_SATD': False}, {'start_line': 203, 'end_line': 203, 'comment': '# Include their pid files, too', 'include_SATD': False}, {'start_line': 207, 'end_line': 208, 'comment': '# Have to patch the api and registry config files for keystone # integration', 'include_SATD': False}, {'start_line': 216, 'end_line': 217, 'comment': '# Need to add keystone python path to the environment for # glance', 'include_SATD': False}, {'start_line': 228, 'end_line': 228, 'comment': '# Keystone can take care of itself on this score', 'include_SATD': True}, {'start_line': 245, 'end_line': 245, 'comment': '# Start with the Glance servers', 'include_SATD': False}, {'start_line': 248, 'end_line': 248, 'comment': '# Set up the data store', 'include_SATD': False}, {'start_line': 257, 'end_line': 257, 'comment': '# Start keystone-auth', 'include_SATD': False}, {'start_line': 265, 'end_line': 265, 'comment': '# Now keystone-admin', 'include_SATD': False}, {'start_line': 304, 'end_line': 304, 'comment': '# Spin down the auth server...', 'include_SATD': False}, {'start_line': 310, 'end_line': 310, 'comment': '# ...and the admin server...', 'include_SATD': False}, {'start_line': 316, 'end_line': 316, 'comment': '# Now on to everything else...', 'include_SATD': False}], 'filename': 'glance/tests/functional/keystone_utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 45, 'end_line': 45, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 62, 'end_line': 62, 'comment': ""# Next, make sure froggy can't list the image"", 'include_SATD': False}, {'start_line': 70, 'end_line': 70, 'comment': ""# Shouldn't show up in the detail list, either"", 'include_SATD': False}, {'start_line': 78, 'end_line': 78, 'comment': ""# Also check that froggy can't get the image metadata"", 'include_SATD': False}, {'start_line': 85, 'end_line': 85, 'comment': ""# Froggy shouldn't be able to get the image, either."", 'include_SATD': False}, {'start_line': 92, 'end_line': 93, 'comment': ""# Froggy shouldn't be able to give themselves permission too # easily..."", 'include_SATD': True}, {'start_line': 101, 'end_line': 102, 'comment': ""# Froggy shouldn't be able to give themselves ownership, # either"", 'include_SATD': True}, {'start_line': 110, 'end_line': 110, 'comment': ""# Froggy can't delete it, either"", 'include_SATD': False}, {'start_line': 117, 'end_line': 117, 'comment': '# Pattieblack should be able to see the image in lists', 'include_SATD': False}, {'start_line': 129, 'end_line': 129, 'comment': '# And in the detail list', 'include_SATD': False}, {'start_line': 143, 'end_line': 143, 'comment': '# Pattieblack should be able to get the image metadata', 'include_SATD': False}, {'start_line': 153, 'end_line': 153, 'comment': '# And of course the image itself', 'include_SATD': False}, {'start_line': 164, 'end_line': 164, 'comment': '# Pattieblack should be able to manipulate is_public', 'include_SATD': False}, {'start_line': 176, 'end_line': 176, 'comment': ""# Pattieblack can't give the image away, however"", 'include_SATD': False}, {'start_line': 188, 'end_line': 188, 'comment': '# Now that the image is public, froggy can see it', 'include_SATD': False}, {'start_line': 200, 'end_line': 200, 'comment': '# Should also be in details', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# Froggy can get the image metadata now...', 'include_SATD': False}, {'start_line': 224, 'end_line': 224, 'comment': '# And of course the image itself', 'include_SATD': False}, {'start_line': 235, 'end_line': 235, 'comment': ""# Froggy still can't change is-public"", 'include_SATD': False}, {'start_line': 243, 'end_line': 243, 'comment': '# Or give themselves ownership', 'include_SATD': False}, {'start_line': 251, 'end_line': 251, 'comment': ""# Froggy can't delete it, either"", 'include_SATD': False}, {'start_line': 258, 'end_line': 258, 'comment': '# But pattieblack can', 'include_SATD': False}, {'start_line': 276, 'end_line': 276, 'comment': '# Need to push an image up', 'include_SATD': False}, {'start_line': 293, 'end_line': 293, 'comment': '# Make sure admin does not see image by default', 'include_SATD': False}, {'start_line': 301, 'end_line': 301, 'comment': ""# Shouldn't show up in the detail list, either"", 'include_SATD': False}, {'start_line': 309, 'end_line': 310, 'comment': ""# Admin should see the image if we're looking for private # images specifically"", 'include_SATD': False}, {'start_line': 323, 'end_line': 323, 'comment': '# Also in the detail list...', 'include_SATD': False}, {'start_line': 338, 'end_line': 338, 'comment': '# Admin should be able to get the image metadata', 'include_SATD': False}, {'start_line': 348, 'end_line': 348, 'comment': '# And of course the image itself', 'include_SATD': False}, {'start_line': 359, 'end_line': 359, 'comment': '# Admin should be able to manipulate is_public', 'include_SATD': False}, {'start_line': 371, 'end_line': 372, 'comment': '# Admin should also be able to change the ownership of the # image', 'include_SATD': False}, {'start_line': 384, 'end_line': 384, 'comment': '# Even setting it to no owner', 'include_SATD': False}, {'start_line': 396, 'end_line': 397, 'comment': ""# Make sure pattieblack can see it, since it's unowned but # public"", 'include_SATD': False}, {'start_line': 409, 'end_line': 409, 'comment': '# But if we change it back to private...', 'include_SATD': False}, {'start_line': 421, 'end_line': 421, 'comment': ""# Now pattieblack can't see it in the list..."", 'include_SATD': False}, {'start_line': 429, 'end_line': 429, 'comment': '# Or in the details list...', 'include_SATD': False}, {'start_line': 437, 'end_line': 437, 'comment': '# But pattieblack should be able to access the image metadata', 'include_SATD': False}, {'start_line': 447, 'end_line': 447, 'comment': '# And of course the image itself', 'include_SATD': False}, {'start_line': 458, 'end_line': 458, 'comment': ""# Pattieblack can't change is-public, though"", 'include_SATD': False}, {'start_line': 466, 'end_line': 466, 'comment': '# Or give themselves ownership', 'include_SATD': False}, {'start_line': 474, 'end_line': 474, 'comment': ""# They can't delete it, either"", 'include_SATD': False}, {'start_line': 492, 'end_line': 492, 'comment': ""# Make sure anonymous user can't push up an image"", 'include_SATD': False}, {'start_line': 502, 'end_line': 502, 'comment': '# Now push up an image for anonymous user to try to access', 'include_SATD': False}, {'start_line': 519, 'end_line': 519, 'comment': ""# Make sure anonymous user can't list the image"", 'include_SATD': False}, {'start_line': 526, 'end_line': 526, 'comment': ""# Shouldn't show up in the detail list, either"", 'include_SATD': False}, {'start_line': 533, 'end_line': 533, 'comment': ""# Also check that anonymous can't get the image metadata"", 'include_SATD': False}, {'start_line': 539, 'end_line': 539, 'comment': '# Nor the image, either.', 'include_SATD': False}, {'start_line': 545, 'end_line': 545, 'comment': ""# Anonymous shouldn't be able to make the image public..."", 'include_SATD': False}, {'start_line': 552, 'end_line': 552, 'comment': '# Nor change ownership...', 'include_SATD': False}, {'start_line': 559, 'end_line': 559, 'comment': '# Nor even delete it...', 'include_SATD': False}, {'start_line': 565, 'end_line': 566, 'comment': ""# Now, let's use our admin credentials and change the # ownership to None..."", 'include_SATD': False}, {'start_line': 578, 'end_line': 578, 'comment': ""# Anonymous user still can't list image..."", 'include_SATD': False}, {'start_line': 585, 'end_line': 585, 'comment': '# Nor see it in details...', 'include_SATD': False}, {'start_line': 592, 'end_line': 592, 'comment': '# But they should be able to access the metadata...', 'include_SATD': False}, {'start_line': 601, 'end_line': 601, 'comment': '# And even the image itself...', 'include_SATD': False}, {'start_line': 611, 'end_line': 612, 'comment': ""# Anonymous still shouldn't be able to make the image # public..."", 'include_SATD': False}, {'start_line': 619, 'end_line': 619, 'comment': '# Nor change ownership...', 'include_SATD': False}, {'start_line': 626, 'end_line': 626, 'comment': '# Nor even delete it...', 'include_SATD': False}, {'start_line': 632, 'end_line': 632, 'comment': '# Now make the image public...', 'include_SATD': False}, {'start_line': 644, 'end_line': 644, 'comment': '# Now the user should see it in the list...', 'include_SATD': False}, {'start_line': 655, 'end_line': 655, 'comment': '# Especially in the details...', 'include_SATD': False}, {'start_line': 668, 'end_line': 668, 'comment': ""# But still can't change ownership..."", 'include_SATD': False}, {'start_line': 675, 'end_line': 675, 'comment': '# Or delete it...', 'include_SATD': False}, {'start_line': 700, 'end_line': 700, 'comment': '# Add a non-public image', 'include_SATD': False}, {'start_line': 709, 'end_line': 709, 'comment': '# Verify the attributes of the image', 'include_SATD': False}, {'start_line': 719, 'end_line': 719, 'comment': '# Test that we can update is_public through the CLI', 'include_SATD': False}, {'start_line': 727, 'end_line': 727, 'comment': '# Verify the appropriate change was made', 'include_SATD': False}, {'start_line': 737, 'end_line': 737, 'comment': '# Test that admin can change the owner', 'include_SATD': False}, {'start_line': 745, 'end_line': 745, 'comment': '# Verify the appropriate change was made', 'include_SATD': False}, {'start_line': 755, 'end_line': 755, 'comment': '# Test that admin can remove the owner', 'include_SATD': False}, {'start_line': 763, 'end_line': 763, 'comment': '# Verify the appropriate change was made', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_private_images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 32, 'end_line': 32, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 63, 'end_line': 63, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 66, 'end_line': 66, 'comment': '# Now add froggy as a shared image member', 'include_SATD': False}, {'start_line': 74, 'end_line': 74, 'comment': '# Ensure pattieblack can still see the image', 'include_SATD': False}, {'start_line': 85, 'end_line': 85, 'comment': '# Ensure froggy can see the image now', 'include_SATD': False}, {'start_line': 95, 'end_line': 95, 'comment': '# ensure that no one else can see the image', 'include_SATD': False}, {'start_line': 105, 'end_line': 105, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 109, 'end_line': 109, 'comment': '# Now add froggy as a shared image member', 'include_SATD': False}, {'start_line': 117, 'end_line': 117, 'comment': '# Ensure pattieblack can still see the image', 'include_SATD': False}, {'start_line': 128, 'end_line': 128, 'comment': '# Ensure froggy can see the image now', 'include_SATD': False}, {'start_line': 138, 'end_line': 138, 'comment': '# ensure that no one else can see the image', 'include_SATD': False}, {'start_line': 145, 'end_line': 145, 'comment': '# Replace froggy with bacon', 'include_SATD': False}, {'start_line': 156, 'end_line': 156, 'comment': '# Ensure bacon can see the image', 'include_SATD': False}, {'start_line': 167, 'end_line': 167, 'comment': '# ensure that no one else can see the image', 'include_SATD': False}, {'start_line': 177, 'end_line': 177, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 180, 'end_line': 180, 'comment': '# Now add froggy as a shared image member', 'include_SATD': False}, {'start_line': 189, 'end_line': 189, 'comment': '# Ensure pattieblack can still see the image', 'include_SATD': False}, {'start_line': 200, 'end_line': 200, 'comment': '# Ensure froggy can see the image now', 'include_SATD': False}, {'start_line': 210, 'end_line': 210, 'comment': '# ensure that no one else can see the image', 'include_SATD': False}, {'start_line': 217, 'end_line': 217, 'comment': '# Now remove froggy as a shared image member', 'include_SATD': False}, {'start_line': 225, 'end_line': 225, 'comment': '# ensure that no one else can see the image', 'include_SATD': False}, {'start_line': 232, 'end_line': 232, 'comment': '# Ensure pattieblack can still see the image', 'include_SATD': False}, {'start_line': 246, 'end_line': 246, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 249, 'end_line': 249, 'comment': '# Now add froggy as a shared image member', 'include_SATD': False}, {'start_line': 261, 'end_line': 261, 'comment': '# Ensure froggy can see the image now', 'include_SATD': False}, {'start_line': 272, 'end_line': 272, 'comment': '# Froggy is going to share with bacon', 'include_SATD': False}, {'start_line': 280, 'end_line': 280, 'comment': '# Ensure bacon can see the image now', 'include_SATD': False}, {'start_line': 291, 'end_line': 291, 'comment': '# Ensure prosciutto cannot see the image', 'include_SATD': False}, {'start_line': 297, 'end_line': 297, 'comment': '# Redundant, but prove prosciutto cannot share it', 'include_SATD': False}, {'start_line': 307, 'end_line': 307, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 310, 'end_line': 310, 'comment': '# Now add froggy as a shared image member', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_shared_images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 114, 'end_line': 115, 'comment': ""# If we're asked to omit the virtualenv, and if one is set up, # restore the various environment variables"", 'include_SATD': False}, {'start_line': 117, 'end_line': 117, 'comment': '# Clip off the first element of PATH', 'include_SATD': False}, {'start_line': 125, 'end_line': 125, 'comment': ""# Also jack in the path cmd comes from, if it's absolute"", 'include_SATD': False}, {'start_line': 158, 'end_line': 158, 'comment': '# Keep an eye out for the possibility of an absolute pathname', 'include_SATD': False}, {'start_line': 162, 'end_line': 162, 'comment': '# Get a list of the directories to search', 'include_SATD': False}, {'start_line': 166, 'end_line': 166, 'comment': '# Search through each in turn', 'include_SATD': False}, {'start_line': 172, 'end_line': 172, 'comment': '# No dice...', 'include_SATD': False}], 'filename': 'glance/tests/utils.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 60, 'end_line': 60, 'comment': '# Is admin == image mutable', 'include_SATD': False}, {'start_line': 64, 'end_line': 64, 'comment': '# No owner == image not mutable', 'include_SATD': False}, {'start_line': 68, 'end_line': 68, 'comment': '# Image only mutable by its owner', 'include_SATD': False}], 'filename': 'glance/registry/context.py'}, {'a_comments': [], 'b_comments': [{'start_line': 122, 'end_line': 122, 'comment': '# Perform authorization check', 'include_SATD': False}, {'start_line': 335, 'end_line': 335, 'comment': '# Perform authorization check', 'include_SATD': False}, {'start_line': 344, 'end_line': 344, 'comment': '# Need to canonicalize ownership', 'include_SATD': False}], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [{'start_line': 120, 'end_line': 120, 'comment': '# Ensure the configuration file is written', 'include_SATD': False}], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 20, 'end_line': 20, 'comment': '# Tenants', 'include_SATD': False}, {'start_line': 26, 'end_line': 26, 'comment': '# Users', 'include_SATD': False}, {'start_line': 32, 'end_line': 32, 'comment': '# Roles', 'include_SATD': False}, {'start_line': 37, 'end_line': 37, 'comment': '# Tokens', 'include_SATD': False}, {'start_line': 48, 'end_line': 48, 'comment': '# Keeping for compatibility for a while till dashboard catches up', 'include_SATD': False}, {'start_line': 67, 'end_line': 67, 'comment': '# endpointTemplates', 'include_SATD': False}, {'start_line': 86, 'end_line': 86, 'comment': '# Tenant endpointsGlobal endpoint not added', 'include_SATD': False}], 'filename': 'glance/tests/functional/data/keystone_data.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 127, 'end_line': 127, 'comment': '# First, pull the configuration file', 'include_SATD': False}, {'start_line': 130, 'end_line': 130, 'comment': '# Need to find the pipeline', 'include_SATD': False}, {'start_line': 133, 'end_line': 133, 'comment': '# OK, the line to modify is the next one...', 'include_SATD': False}, {'start_line': 137, 'end_line': 137, 'comment': '# Now we need to replace the default context field...', 'include_SATD': False}, {'start_line': 141, 'end_line': 141, 'comment': '# Put the conf back together and append the keystone pieces', 'include_SATD': False}, {'start_line': 174, 'end_line': 174, 'comment': '# Try looking up the keystone executable', 'include_SATD': False}, {'start_line': 183, 'end_line': 183, 'comment': ""# We're now initialized"", 'include_SATD': False}, {'start_line': 186, 'end_line': 186, 'comment': ""# If we don't have keystone-control, disable ourself"", 'include_SATD': False}, {'start_line': 190, 'end_line': 190, 'comment': '# Make sure to call superclass', 'include_SATD': False}, {'start_line': 193, 'end_line': 193, 'comment': '# Also need keystone auth and admin ports...', 'include_SATD': False}, {'start_line': 197, 'end_line': 197, 'comment': '# Set up the servers', 'include_SATD': False}, {'start_line': 203, 'end_line': 203, 'comment': '# Include their pid files, too', 'include_SATD': False}, {'start_line': 207, 'end_line': 208, 'comment': '# Have to patch the api and registry config files for keystone # integration', 'include_SATD': False}, {'start_line': 216, 'end_line': 217, 'comment': '# Need to add keystone python path to the environment for # glance', 'include_SATD': False}, {'start_line': 228, 'end_line': 228, 'comment': '# Keystone can take care of itself on this score', 'include_SATD': True}, {'start_line': 245, 'end_line': 245, 'comment': '# Start with the Glance servers', 'include_SATD': False}, {'start_line': 248, 'end_line': 248, 'comment': '# Set up the data store', 'include_SATD': False}, {'start_line': 257, 'end_line': 257, 'comment': '# Start keystone-auth', 'include_SATD': False}, {'start_line': 265, 'end_line': 265, 'comment': '# Now keystone-admin', 'include_SATD': False}, {'start_line': 304, 'end_line': 304, 'comment': '# Spin down the auth server...', 'include_SATD': False}, {'start_line': 310, 'end_line': 310, 'comment': '# ...and the admin server...', 'include_SATD': False}, {'start_line': 316, 'end_line': 316, 'comment': '# Now on to everything else...', 'include_SATD': False}], 'filename': 'glance/tests/functional/keystone_utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 45, 'end_line': 45, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 62, 'end_line': 62, 'comment': ""# Next, make sure froggy can't list the image"", 'include_SATD': False}, {'start_line': 70, 'end_line': 70, 'comment': ""# Shouldn't show up in the detail list, either"", 'include_SATD': False}, {'start_line': 78, 'end_line': 78, 'comment': ""# Also check that froggy can't get the image metadata"", 'include_SATD': False}, {'start_line': 85, 'end_line': 85, 'comment': ""# Froggy shouldn't be able to get the image, either."", 'include_SATD': False}, {'start_line': 92, 'end_line': 93, 'comment': ""# Froggy shouldn't be able to give themselves permission too # easily..."", 'include_SATD': True}, {'start_line': 101, 'end_line': 102, 'comment': ""# Froggy shouldn't be able to give themselves ownership, # either"", 'include_SATD': True}, {'start_line': 110, 'end_line': 110, 'comment': ""# Froggy can't delete it, either"", 'include_SATD': False}, {'start_line': 117, 'end_line': 117, 'comment': '# Pattieblack should be able to see the image in lists', 'include_SATD': False}, {'start_line': 129, 'end_line': 129, 'comment': '# And in the detail list', 'include_SATD': False}, {'start_line': 143, 'end_line': 143, 'comment': '# Pattieblack should be able to get the image metadata', 'include_SATD': False}, {'start_line': 153, 'end_line': 153, 'comment': '# And of course the image itself', 'include_SATD': False}, {'start_line': 164, 'end_line': 164, 'comment': '# Pattieblack should be able to manipulate is_public', 'include_SATD': False}, {'start_line': 176, 'end_line': 176, 'comment': ""# Pattieblack can't give the image away, however"", 'include_SATD': False}, {'start_line': 188, 'end_line': 188, 'comment': '# Now that the image is public, froggy can see it', 'include_SATD': False}, {'start_line': 200, 'end_line': 200, 'comment': '# Should also be in details', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# Froggy can get the image metadata now...', 'include_SATD': False}, {'start_line': 224, 'end_line': 224, 'comment': '# And of course the image itself', 'include_SATD': False}, {'start_line': 235, 'end_line': 235, 'comment': ""# Froggy still can't change is-public"", 'include_SATD': False}, {'start_line': 243, 'end_line': 243, 'comment': '# Or give themselves ownership', 'include_SATD': False}, {'start_line': 251, 'end_line': 251, 'comment': ""# Froggy can't delete it, either"", 'include_SATD': False}, {'start_line': 258, 'end_line': 258, 'comment': '# But pattieblack can', 'include_SATD': False}, {'start_line': 276, 'end_line': 276, 'comment': '# Need to push an image up', 'include_SATD': False}, {'start_line': 293, 'end_line': 293, 'comment': '# Make sure admin does not see image by default', 'include_SATD': False}, {'start_line': 301, 'end_line': 301, 'comment': ""# Shouldn't show up in the detail list, either"", 'include_SATD': False}, {'start_line': 309, 'end_line': 310, 'comment': ""# Admin should see the image if we're looking for private # images specifically"", 'include_SATD': False}, {'start_line': 323, 'end_line': 323, 'comment': '# Also in the detail list...', 'include_SATD': False}, {'start_line': 338, 'end_line': 338, 'comment': '# Admin should be able to get the image metadata', 'include_SATD': False}, {'start_line': 348, 'end_line': 348, 'comment': '# And of course the image itself', 'include_SATD': False}, {'start_line': 359, 'end_line': 359, 'comment': '# Admin should be able to manipulate is_public', 'include_SATD': False}, {'start_line': 371, 'end_line': 372, 'comment': '# Admin should also be able to change the ownership of the # image', 'include_SATD': False}, {'start_line': 384, 'end_line': 384, 'comment': '# Even setting it to no owner', 'include_SATD': False}, {'start_line': 396, 'end_line': 397, 'comment': ""# Make sure pattieblack can see it, since it's unowned but # public"", 'include_SATD': False}, {'start_line': 409, 'end_line': 409, 'comment': '# But if we change it back to private...', 'include_SATD': False}, {'start_line': 421, 'end_line': 421, 'comment': ""# Now pattieblack can't see it in the list..."", 'include_SATD': False}, {'start_line': 429, 'end_line': 429, 'comment': '# Or in the details list...', 'include_SATD': False}, {'start_line': 437, 'end_line': 437, 'comment': '# But pattieblack should be able to access the image metadata', 'include_SATD': False}, {'start_line': 447, 'end_line': 447, 'comment': '# And of course the image itself', 'include_SATD': False}, {'start_line': 458, 'end_line': 458, 'comment': ""# Pattieblack can't change is-public, though"", 'include_SATD': False}, {'start_line': 466, 'end_line': 466, 'comment': '# Or give themselves ownership', 'include_SATD': False}, {'start_line': 474, 'end_line': 474, 'comment': ""# They can't delete it, either"", 'include_SATD': False}, {'start_line': 492, 'end_line': 492, 'comment': ""# Make sure anonymous user can't push up an image"", 'include_SATD': False}, {'start_line': 502, 'end_line': 502, 'comment': '# Now push up an image for anonymous user to try to access', 'include_SATD': False}, {'start_line': 519, 'end_line': 519, 'comment': ""# Make sure anonymous user can't list the image"", 'include_SATD': False}, {'start_line': 526, 'end_line': 526, 'comment': ""# Shouldn't show up in the detail list, either"", 'include_SATD': False}, {'start_line': 533, 'end_line': 533, 'comment': ""# Also check that anonymous can't get the image metadata"", 'include_SATD': False}, {'start_line': 539, 'end_line': 539, 'comment': '# Nor the image, either.', 'include_SATD': False}, {'start_line': 545, 'end_line': 545, 'comment': ""# Anonymous shouldn't be able to make the image public..."", 'include_SATD': False}, {'start_line': 552, 'end_line': 552, 'comment': '# Nor change ownership...', 'include_SATD': False}, {'start_line': 559, 'end_line': 559, 'comment': '# Nor even delete it...', 'include_SATD': False}, {'start_line': 565, 'end_line': 566, 'comment': ""# Now, let's use our admin credentials and change the # ownership to None..."", 'include_SATD': False}, {'start_line': 578, 'end_line': 578, 'comment': ""# Anonymous user still can't list image..."", 'include_SATD': False}, {'start_line': 585, 'end_line': 585, 'comment': '# Nor see it in details...', 'include_SATD': False}, {'start_line': 592, 'end_line': 592, 'comment': '# But they should be able to access the metadata...', 'include_SATD': False}, {'start_line': 601, 'end_line': 601, 'comment': '# And even the image itself...', 'include_SATD': False}, {'start_line': 611, 'end_line': 612, 'comment': ""# Anonymous still shouldn't be able to make the image # public..."", 'include_SATD': False}, {'start_line': 619, 'end_line': 619, 'comment': '# Nor change ownership...', 'include_SATD': False}, {'start_line': 626, 'end_line': 626, 'comment': '# Nor even delete it...', 'include_SATD': False}, {'start_line': 632, 'end_line': 632, 'comment': '# Now make the image public...', 'include_SATD': False}, {'start_line': 644, 'end_line': 644, 'comment': '# Now the user should see it in the list...', 'include_SATD': False}, {'start_line': 655, 'end_line': 655, 'comment': '# Especially in the details...', 'include_SATD': False}, {'start_line': 668, 'end_line': 668, 'comment': ""# But still can't change ownership..."", 'include_SATD': False}, {'start_line': 675, 'end_line': 675, 'comment': '# Or delete it...', 'include_SATD': False}, {'start_line': 700, 'end_line': 700, 'comment': '# Add a non-public image', 'include_SATD': False}, {'start_line': 709, 'end_line': 709, 'comment': '# Verify the attributes of the image', 'include_SATD': False}, {'start_line': 719, 'end_line': 719, 'comment': '# Test that we can update is_public through the CLI', 'include_SATD': False}, {'start_line': 727, 'end_line': 727, 'comment': '# Verify the appropriate change was made', 'include_SATD': False}, {'start_line': 737, 'end_line': 737, 'comment': '# Test that admin can change the owner', 'include_SATD': False}, {'start_line': 745, 'end_line': 745, 'comment': '# Verify the appropriate change was made', 'include_SATD': False}, {'start_line': 755, 'end_line': 755, 'comment': '# Test that admin can remove the owner', 'include_SATD': False}, {'start_line': 763, 'end_line': 763, 'comment': '# Verify the appropriate change was made', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_private_images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 32, 'end_line': 32, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 63, 'end_line': 63, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 66, 'end_line': 66, 'comment': '# Now add froggy as a shared image member', 'include_SATD': False}, {'start_line': 74, 'end_line': 74, 'comment': '# Ensure pattieblack can still see the image', 'include_SATD': False}, {'start_line': 85, 'end_line': 85, 'comment': '# Ensure froggy can see the image now', 'include_SATD': False}, {'start_line': 95, 'end_line': 95, 'comment': '# ensure that no one else can see the image', 'include_SATD': False}, {'start_line': 105, 'end_line': 105, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 109, 'end_line': 109, 'comment': '# Now add froggy as a shared image member', 'include_SATD': False}, {'start_line': 117, 'end_line': 117, 'comment': '# Ensure pattieblack can still see the image', 'include_SATD': False}, {'start_line': 128, 'end_line': 128, 'comment': '# Ensure froggy can see the image now', 'include_SATD': False}, {'start_line': 138, 'end_line': 138, 'comment': '# ensure that no one else can see the image', 'include_SATD': False}, {'start_line': 145, 'end_line': 145, 'comment': '# Replace froggy with bacon', 'include_SATD': False}, {'start_line': 156, 'end_line': 156, 'comment': '# Ensure bacon can see the image', 'include_SATD': False}, {'start_line': 167, 'end_line': 167, 'comment': '# ensure that no one else can see the image', 'include_SATD': False}, {'start_line': 177, 'end_line': 177, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 180, 'end_line': 180, 'comment': '# Now add froggy as a shared image member', 'include_SATD': False}, {'start_line': 189, 'end_line': 189, 'comment': '# Ensure pattieblack can still see the image', 'include_SATD': False}, {'start_line': 200, 'end_line': 200, 'comment': '# Ensure froggy can see the image now', 'include_SATD': False}, {'start_line': 210, 'end_line': 210, 'comment': '# ensure that no one else can see the image', 'include_SATD': False}, {'start_line': 217, 'end_line': 217, 'comment': '# Now remove froggy as a shared image member', 'include_SATD': False}, {'start_line': 225, 'end_line': 225, 'comment': '# ensure that no one else can see the image', 'include_SATD': False}, {'start_line': 232, 'end_line': 232, 'comment': '# Ensure pattieblack can still see the image', 'include_SATD': False}, {'start_line': 246, 'end_line': 246, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 249, 'end_line': 249, 'comment': '# Now add froggy as a shared image member', 'include_SATD': False}, {'start_line': 261, 'end_line': 261, 'comment': '# Ensure froggy can see the image now', 'include_SATD': False}, {'start_line': 272, 'end_line': 272, 'comment': '# Froggy is going to share with bacon', 'include_SATD': False}, {'start_line': 280, 'end_line': 280, 'comment': '# Ensure bacon can see the image now', 'include_SATD': False}, {'start_line': 291, 'end_line': 291, 'comment': '# Ensure prosciutto cannot see the image', 'include_SATD': False}, {'start_line': 297, 'end_line': 297, 'comment': '# Redundant, but prove prosciutto cannot share it', 'include_SATD': False}, {'start_line': 307, 'end_line': 307, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 310, 'end_line': 310, 'comment': '# Now add froggy as a shared image member', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_shared_images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 114, 'end_line': 115, 'comment': ""# If we're asked to omit the virtualenv, and if one is set up, # restore the various environment variables"", 'include_SATD': False}, {'start_line': 117, 'end_line': 117, 'comment': '# Clip off the first element of PATH', 'include_SATD': False}, {'start_line': 125, 'end_line': 125, 'comment': ""# Also jack in the path cmd comes from, if it's absolute"", 'include_SATD': False}, {'start_line': 158, 'end_line': 158, 'comment': '# Keep an eye out for the possibility of an absolute pathname', 'include_SATD': False}, {'start_line': 162, 'end_line': 162, 'comment': '# Get a list of the directories to search', 'include_SATD': False}, {'start_line': 166, 'end_line': 166, 'comment': '# Search through each in turn', 'include_SATD': False}, {'start_line': 172, 'end_line': 172, 'comment': '# No dice...', 'include_SATD': False}], 'filename': 'glance/tests/utils.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 60, 'end_line': 60, 'comment': '# Is admin == image mutable', 'include_SATD': False}, {'start_line': 64, 'end_line': 64, 'comment': '# No owner == image not mutable', 'include_SATD': False}, {'start_line': 68, 'end_line': 68, 'comment': '# Image only mutable by its owner', 'include_SATD': False}], 'filename': 'glance/registry/context.py'}, {'a_comments': [], 'b_comments': [{'start_line': 124, 'end_line': 124, 'comment': '# Perform authorization check', 'include_SATD': False}, {'start_line': 337, 'end_line': 337, 'comment': '# Perform authorization check', 'include_SATD': False}, {'start_line': 346, 'end_line': 346, 'comment': '# Need to canonicalize ownership', 'include_SATD': False}], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [{'start_line': 120, 'end_line': 120, 'comment': '# Ensure the configuration file is written', 'include_SATD': False}], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 20, 'end_line': 20, 'comment': '# Tenants', 'include_SATD': False}, {'start_line': 26, 'end_line': 26, 'comment': '# Users', 'include_SATD': False}, {'start_line': 32, 'end_line': 32, 'comment': '# Roles', 'include_SATD': False}, {'start_line': 37, 'end_line': 37, 'comment': '# Tokens', 'include_SATD': False}, {'start_line': 48, 'end_line': 48, 'comment': '# Keeping for compatibility for a while till dashboard catches up', 'include_SATD': False}, {'start_line': 67, 'end_line': 67, 'comment': '# endpointTemplates', 'include_SATD': False}, {'start_line': 86, 'end_line': 86, 'comment': '# Tenant endpointsGlobal endpoint not added', 'include_SATD': False}], 'filename': 'glance/tests/functional/data/keystone_data.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 128, 'end_line': 128, 'comment': '# First, pull the configuration file', 'include_SATD': False}, {'start_line': 131, 'end_line': 131, 'comment': '# Need to find the pipeline', 'include_SATD': False}, {'start_line': 134, 'end_line': 134, 'comment': '# OK, the line to modify is the next one...', 'include_SATD': False}, {'start_line': 138, 'end_line': 138, 'comment': '# Now we need to replace the default context field...', 'include_SATD': False}, {'start_line': 142, 'end_line': 142, 'comment': '# Put the conf back together and append the keystone pieces', 'include_SATD': False}, {'start_line': 177, 'end_line': 177, 'comment': '# Make sure we can import keystone', 'include_SATD': False}, {'start_line': 184, 'end_line': 184, 'comment': ""# Can't import keystone"", 'include_SATD': False}, {'start_line': 194, 'end_line': 194, 'comment': '# Try looking up the keystone executable', 'include_SATD': False}, {'start_line': 203, 'end_line': 203, 'comment': ""# If we don't have keystone-control, disable ourself"", 'include_SATD': False}, {'start_line': 211, 'end_line': 211, 'comment': '# Make sure to call superclass', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# Also need keystone auth and admin ports...', 'include_SATD': False}, {'start_line': 218, 'end_line': 218, 'comment': '# Set up the servers', 'include_SATD': False}, {'start_line': 224, 'end_line': 224, 'comment': '# Include their pid files, too', 'include_SATD': False}, {'start_line': 228, 'end_line': 229, 'comment': '# Have to patch the api and registry config files for keystone # integration', 'include_SATD': False}, {'start_line': 237, 'end_line': 238, 'comment': '# Need to add keystone python path to the environment for # glance', 'include_SATD': False}, {'start_line': 249, 'end_line': 249, 'comment': '# Keystone can take care of itself on this score', 'include_SATD': True}, {'start_line': 266, 'end_line': 266, 'comment': '# Start with the Glance servers', 'include_SATD': False}, {'start_line': 269, 'end_line': 269, 'comment': '# Set up the data store', 'include_SATD': False}, {'start_line': 278, 'end_line': 278, 'comment': '# Start keystone-auth', 'include_SATD': False}, {'start_line': 286, 'end_line': 286, 'comment': '# Now keystone-admin', 'include_SATD': False}, {'start_line': 325, 'end_line': 325, 'comment': '# Spin down the auth server...', 'include_SATD': False}, {'start_line': 331, 'end_line': 331, 'comment': '# ...and the admin server...', 'include_SATD': False}, {'start_line': 337, 'end_line': 337, 'comment': '# Now on to everything else...', 'include_SATD': False}], 'filename': 'glance/tests/functional/keystone_utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 45, 'end_line': 45, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 62, 'end_line': 62, 'comment': ""# Next, make sure froggy can't list the image"", 'include_SATD': False}, {'start_line': 70, 'end_line': 70, 'comment': ""# Shouldn't show up in the detail list, either"", 'include_SATD': False}, {'start_line': 78, 'end_line': 78, 'comment': ""# Also check that froggy can't get the image metadata"", 'include_SATD': False}, {'start_line': 85, 'end_line': 85, 'comment': ""# Froggy shouldn't be able to get the image, either."", 'include_SATD': False}, {'start_line': 92, 'end_line': 93, 'comment': ""# Froggy shouldn't be able to give themselves permission too # easily..."", 'include_SATD': True}, {'start_line': 101, 'end_line': 102, 'comment': ""# Froggy shouldn't be able to give themselves ownership, # either"", 'include_SATD': True}, {'start_line': 110, 'end_line': 110, 'comment': ""# Froggy can't delete it, either"", 'include_SATD': False}, {'start_line': 117, 'end_line': 117, 'comment': '# Pattieblack should be able to see the image in lists', 'include_SATD': False}, {'start_line': 129, 'end_line': 129, 'comment': '# And in the detail list', 'include_SATD': False}, {'start_line': 143, 'end_line': 143, 'comment': '# Pattieblack should be able to get the image metadata', 'include_SATD': False}, {'start_line': 153, 'end_line': 153, 'comment': '# And of course the image itself', 'include_SATD': False}, {'start_line': 164, 'end_line': 164, 'comment': '# Pattieblack should be able to manipulate is_public', 'include_SATD': False}, {'start_line': 176, 'end_line': 176, 'comment': ""# Pattieblack can't give the image away, however"", 'include_SATD': False}, {'start_line': 188, 'end_line': 188, 'comment': '# Now that the image is public, froggy can see it', 'include_SATD': False}, {'start_line': 200, 'end_line': 200, 'comment': '# Should also be in details', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# Froggy can get the image metadata now...', 'include_SATD': False}, {'start_line': 224, 'end_line': 224, 'comment': '# And of course the image itself', 'include_SATD': False}, {'start_line': 235, 'end_line': 235, 'comment': ""# Froggy still can't change is-public"", 'include_SATD': False}, {'start_line': 243, 'end_line': 243, 'comment': '# Or give themselves ownership', 'include_SATD': False}, {'start_line': 251, 'end_line': 251, 'comment': ""# Froggy can't delete it, either"", 'include_SATD': False}, {'start_line': 258, 'end_line': 258, 'comment': '# But pattieblack can', 'include_SATD': False}, {'start_line': 276, 'end_line': 276, 'comment': '# Need to push an image up', 'include_SATD': False}, {'start_line': 293, 'end_line': 293, 'comment': '# Make sure admin does not see image by default', 'include_SATD': False}, {'start_line': 301, 'end_line': 301, 'comment': ""# Shouldn't show up in the detail list, either"", 'include_SATD': False}, {'start_line': 309, 'end_line': 310, 'comment': ""# Admin should see the image if we're looking for private # images specifically"", 'include_SATD': False}, {'start_line': 323, 'end_line': 323, 'comment': '# Also in the detail list...', 'include_SATD': False}, {'start_line': 338, 'end_line': 338, 'comment': '# Admin should be able to get the image metadata', 'include_SATD': False}, {'start_line': 348, 'end_line': 348, 'comment': '# And of course the image itself', 'include_SATD': False}, {'start_line': 359, 'end_line': 359, 'comment': '# Admin should be able to manipulate is_public', 'include_SATD': False}, {'start_line': 371, 'end_line': 372, 'comment': '# Admin should also be able to change the ownership of the # image', 'include_SATD': False}, {'start_line': 384, 'end_line': 384, 'comment': '# Even setting it to no owner', 'include_SATD': False}, {'start_line': 396, 'end_line': 397, 'comment': ""# Make sure pattieblack can see it, since it's unowned but # public"", 'include_SATD': False}, {'start_line': 409, 'end_line': 409, 'comment': '# But if we change it back to private...', 'include_SATD': False}, {'start_line': 421, 'end_line': 421, 'comment': ""# Now pattieblack can't see it in the list..."", 'include_SATD': False}, {'start_line': 429, 'end_line': 429, 'comment': '# Or in the details list...', 'include_SATD': False}, {'start_line': 437, 'end_line': 437, 'comment': '# But pattieblack should be able to access the image metadata', 'include_SATD': False}, {'start_line': 447, 'end_line': 447, 'comment': '# And of course the image itself', 'include_SATD': False}, {'start_line': 458, 'end_line': 458, 'comment': ""# Pattieblack can't change is-public, though"", 'include_SATD': False}, {'start_line': 466, 'end_line': 466, 'comment': '# Or give themselves ownership', 'include_SATD': False}, {'start_line': 474, 'end_line': 474, 'comment': ""# They can't delete it, either"", 'include_SATD': False}, {'start_line': 492, 'end_line': 492, 'comment': ""# Make sure anonymous user can't push up an image"", 'include_SATD': False}, {'start_line': 502, 'end_line': 502, 'comment': '# Now push up an image for anonymous user to try to access', 'include_SATD': False}, {'start_line': 519, 'end_line': 519, 'comment': ""# Make sure anonymous user can't list the image"", 'include_SATD': False}, {'start_line': 526, 'end_line': 526, 'comment': ""# Shouldn't show up in the detail list, either"", 'include_SATD': False}, {'start_line': 533, 'end_line': 533, 'comment': ""# Also check that anonymous can't get the image metadata"", 'include_SATD': False}, {'start_line': 539, 'end_line': 539, 'comment': '# Nor the image, either.', 'include_SATD': False}, {'start_line': 545, 'end_line': 545, 'comment': ""# Anonymous shouldn't be able to make the image public..."", 'include_SATD': False}, {'start_line': 552, 'end_line': 552, 'comment': '# Nor change ownership...', 'include_SATD': False}, {'start_line': 559, 'end_line': 559, 'comment': '# Nor even delete it...', 'include_SATD': False}, {'start_line': 565, 'end_line': 566, 'comment': ""# Now, let's use our admin credentials and change the # ownership to None..."", 'include_SATD': False}, {'start_line': 578, 'end_line': 578, 'comment': ""# Anonymous user still can't list image..."", 'include_SATD': False}, {'start_line': 585, 'end_line': 585, 'comment': '# Nor see it in details...', 'include_SATD': False}, {'start_line': 592, 'end_line': 592, 'comment': '# But they should be able to access the metadata...', 'include_SATD': False}, {'start_line': 601, 'end_line': 601, 'comment': '# And even the image itself...', 'include_SATD': False}, {'start_line': 611, 'end_line': 612, 'comment': ""# Anonymous still shouldn't be able to make the image # public..."", 'include_SATD': False}, {'start_line': 619, 'end_line': 619, 'comment': '# Nor change ownership...', 'include_SATD': False}, {'start_line': 626, 'end_line': 626, 'comment': '# Nor even delete it...', 'include_SATD': False}, {'start_line': 632, 'end_line': 632, 'comment': '# Now make the image public...', 'include_SATD': False}, {'start_line': 644, 'end_line': 644, 'comment': '# Now the user should see it in the list...', 'include_SATD': False}, {'start_line': 655, 'end_line': 655, 'comment': '# Especially in the details...', 'include_SATD': False}, {'start_line': 668, 'end_line': 668, 'comment': ""# But still can't change ownership..."", 'include_SATD': False}, {'start_line': 675, 'end_line': 675, 'comment': '# Or delete it...', 'include_SATD': False}, {'start_line': 700, 'end_line': 700, 'comment': '# Add a non-public image', 'include_SATD': False}, {'start_line': 709, 'end_line': 709, 'comment': '# Verify the attributes of the image', 'include_SATD': False}, {'start_line': 719, 'end_line': 719, 'comment': '# Test that we can update is_public through the CLI', 'include_SATD': False}, {'start_line': 727, 'end_line': 727, 'comment': '# Verify the appropriate change was made', 'include_SATD': False}, {'start_line': 737, 'end_line': 737, 'comment': '# Test that admin can change the owner', 'include_SATD': False}, {'start_line': 745, 'end_line': 745, 'comment': '# Verify the appropriate change was made', 'include_SATD': False}, {'start_line': 755, 'end_line': 755, 'comment': '# Test that admin can remove the owner', 'include_SATD': False}, {'start_line': 763, 'end_line': 763, 'comment': '# Verify the appropriate change was made', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_private_images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 32, 'end_line': 32, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 64, 'end_line': 64, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 67, 'end_line': 67, 'comment': '# Now add froggy as a shared image member', 'include_SATD': False}, {'start_line': 75, 'end_line': 75, 'comment': '# Ensure pattieblack can still see the image', 'include_SATD': False}, {'start_line': 86, 'end_line': 86, 'comment': '# Ensure froggy can see the image now', 'include_SATD': False}, {'start_line': 96, 'end_line': 96, 'comment': '# ensure that no one else can see the image', 'include_SATD': False}, {'start_line': 107, 'end_line': 107, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 111, 'end_line': 111, 'comment': '# Now add froggy as a shared image member', 'include_SATD': False}, {'start_line': 119, 'end_line': 119, 'comment': '# Ensure pattieblack can still see the image', 'include_SATD': False}, {'start_line': 130, 'end_line': 130, 'comment': '# Ensure froggy can see the image now', 'include_SATD': False}, {'start_line': 140, 'end_line': 140, 'comment': '# ensure that no one else can see the image', 'include_SATD': False}, {'start_line': 147, 'end_line': 147, 'comment': '# Replace froggy with bacon', 'include_SATD': False}, {'start_line': 158, 'end_line': 158, 'comment': '# Ensure bacon can see the image', 'include_SATD': False}, {'start_line': 169, 'end_line': 169, 'comment': '# ensure that no one else can see the image', 'include_SATD': False}, {'start_line': 180, 'end_line': 180, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 183, 'end_line': 183, 'comment': '# Now add froggy as a shared image member', 'include_SATD': False}, {'start_line': 192, 'end_line': 192, 'comment': '# Ensure pattieblack can still see the image', 'include_SATD': False}, {'start_line': 203, 'end_line': 203, 'comment': '# Ensure froggy can see the image now', 'include_SATD': False}, {'start_line': 213, 'end_line': 213, 'comment': '# ensure that no one else can see the image', 'include_SATD': False}, {'start_line': 220, 'end_line': 220, 'comment': '# Now remove froggy as a shared image member', 'include_SATD': False}, {'start_line': 228, 'end_line': 228, 'comment': '# ensure that no one else can see the image', 'include_SATD': False}, {'start_line': 235, 'end_line': 235, 'comment': '# Ensure pattieblack can still see the image', 'include_SATD': False}, {'start_line': 250, 'end_line': 250, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 253, 'end_line': 253, 'comment': '# Now add froggy as a shared image member', 'include_SATD': False}, {'start_line': 265, 'end_line': 265, 'comment': '# Ensure froggy can see the image now', 'include_SATD': False}, {'start_line': 276, 'end_line': 276, 'comment': '# Froggy is going to share with bacon', 'include_SATD': False}, {'start_line': 284, 'end_line': 284, 'comment': '# Ensure bacon can see the image now', 'include_SATD': False}, {'start_line': 295, 'end_line': 295, 'comment': '# Ensure prosciutto cannot see the image', 'include_SATD': False}, {'start_line': 301, 'end_line': 301, 'comment': '# Redundant, but prove prosciutto cannot share it', 'include_SATD': False}, {'start_line': 312, 'end_line': 312, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 315, 'end_line': 315, 'comment': '# Now add froggy as a shared image member', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_shared_images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 114, 'end_line': 115, 'comment': ""# If we're asked to omit the virtualenv, and if one is set up, # restore the various environment variables"", 'include_SATD': False}, {'start_line': 117, 'end_line': 117, 'comment': '# Clip off the first element of PATH', 'include_SATD': False}, {'start_line': 125, 'end_line': 125, 'comment': ""# Also jack in the path cmd comes from, if it's absolute"", 'include_SATD': False}, {'start_line': 158, 'end_line': 158, 'comment': '# Keep an eye out for the possibility of an absolute pathname', 'include_SATD': False}, {'start_line': 162, 'end_line': 162, 'comment': '# Get a list of the directories to search', 'include_SATD': False}, {'start_line': 166, 'end_line': 166, 'comment': '# Search through each in turn', 'include_SATD': False}, {'start_line': 172, 'end_line': 172, 'comment': '# No dice...', 'include_SATD': False}], 'filename': 'glance/tests/utils.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 60, 'end_line': 60, 'comment': '# Is admin == image mutable', 'include_SATD': False}, {'start_line': 64, 'end_line': 64, 'comment': '# No owner == image not mutable', 'include_SATD': False}, {'start_line': 68, 'end_line': 68, 'comment': '# Image only mutable by its owner', 'include_SATD': False}], 'filename': 'glance/registry/context.py'}, {'a_comments': [], 'b_comments': [{'start_line': 124, 'end_line': 124, 'comment': '# Perform authorization check', 'include_SATD': False}, {'start_line': 337, 'end_line': 337, 'comment': '# Perform authorization check', 'include_SATD': False}, {'start_line': 346, 'end_line': 346, 'comment': '# Need to canonicalize ownership', 'include_SATD': False}], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [{'start_line': 120, 'end_line': 120, 'comment': '# Ensure the configuration file is written', 'include_SATD': False}], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 20, 'end_line': 20, 'comment': '# Tenants', 'include_SATD': False}, {'start_line': 26, 'end_line': 26, 'comment': '# Users', 'include_SATD': False}, {'start_line': 32, 'end_line': 32, 'comment': '# Roles', 'include_SATD': False}, {'start_line': 37, 'end_line': 37, 'comment': '# Tokens', 'include_SATD': False}, {'start_line': 48, 'end_line': 48, 'comment': '# Keeping for compatibility for a while till dashboard catches up', 'include_SATD': False}, {'start_line': 67, 'end_line': 67, 'comment': '# endpointTemplates', 'include_SATD': False}, {'start_line': 86, 'end_line': 86, 'comment': '# Tenant endpointsGlobal endpoint not added', 'include_SATD': False}], 'filename': 'glance/tests/functional/data/keystone_data.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 128, 'end_line': 128, 'comment': '# First, pull the configuration file', 'include_SATD': False}, {'start_line': 131, 'end_line': 131, 'comment': '# Need to find the pipeline', 'include_SATD': False}, {'start_line': 134, 'end_line': 134, 'comment': '# OK, the line to modify is the next one...', 'include_SATD': False}, {'start_line': 138, 'end_line': 138, 'comment': '# Now we need to replace the default context field...', 'include_SATD': False}, {'start_line': 142, 'end_line': 142, 'comment': '# Put the conf back together and append the keystone pieces', 'include_SATD': False}, {'start_line': 177, 'end_line': 177, 'comment': '# Make sure we can import keystone', 'include_SATD': False}, {'start_line': 184, 'end_line': 184, 'comment': ""# Can't import keystone"", 'include_SATD': False}, {'start_line': 194, 'end_line': 194, 'comment': '# Try looking up the keystone executable', 'include_SATD': False}, {'start_line': 203, 'end_line': 203, 'comment': ""# If we don't have keystone-control, disable ourself"", 'include_SATD': False}, {'start_line': 211, 'end_line': 211, 'comment': '# Make sure to call superclass', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# Also need keystone auth and admin ports...', 'include_SATD': False}, {'start_line': 218, 'end_line': 218, 'comment': '# Set up the servers', 'include_SATD': False}, {'start_line': 224, 'end_line': 224, 'comment': '# Include their pid files, too', 'include_SATD': False}, {'start_line': 228, 'end_line': 229, 'comment': '# Have to patch the api and registry config files for keystone # integration', 'include_SATD': False}, {'start_line': 237, 'end_line': 238, 'comment': '# Need to add keystone python path to the environment for # glance', 'include_SATD': False}, {'start_line': 249, 'end_line': 249, 'comment': '# Keystone can take care of itself on this score', 'include_SATD': True}, {'start_line': 266, 'end_line': 266, 'comment': '# Start with the Glance servers', 'include_SATD': False}, {'start_line': 269, 'end_line': 269, 'comment': '# Set up the data store', 'include_SATD': False}, {'start_line': 278, 'end_line': 278, 'comment': '# Start keystone-auth', 'include_SATD': False}, {'start_line': 286, 'end_line': 286, 'comment': '# Now keystone-admin', 'include_SATD': False}, {'start_line': 325, 'end_line': 325, 'comment': '# Spin down the auth server...', 'include_SATD': False}, {'start_line': 331, 'end_line': 331, 'comment': '# ...and the admin server...', 'include_SATD': False}, {'start_line': 337, 'end_line': 337, 'comment': '# Now on to everything else...', 'include_SATD': False}], 'filename': 'glance/tests/functional/keystone_utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 45, 'end_line': 45, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 62, 'end_line': 62, 'comment': ""# Next, make sure froggy can't list the image"", 'include_SATD': False}, {'start_line': 70, 'end_line': 70, 'comment': ""# Shouldn't show up in the detail list, either"", 'include_SATD': False}, {'start_line': 78, 'end_line': 78, 'comment': ""# Also check that froggy can't get the image metadata"", 'include_SATD': False}, {'start_line': 85, 'end_line': 85, 'comment': ""# Froggy shouldn't be able to get the image, either."", 'include_SATD': False}, {'start_line': 92, 'end_line': 93, 'comment': ""# Froggy shouldn't be able to give themselves permission too # easily..."", 'include_SATD': True}, {'start_line': 101, 'end_line': 102, 'comment': ""# Froggy shouldn't be able to give themselves ownership, # either"", 'include_SATD': True}, {'start_line': 110, 'end_line': 110, 'comment': ""# Froggy can't delete it, either"", 'include_SATD': False}, {'start_line': 117, 'end_line': 117, 'comment': '# Pattieblack should be able to see the image in lists', 'include_SATD': False}, {'start_line': 129, 'end_line': 129, 'comment': '# And in the detail list', 'include_SATD': False}, {'start_line': 143, 'end_line': 143, 'comment': '# Pattieblack should be able to get the image metadata', 'include_SATD': False}, {'start_line': 153, 'end_line': 153, 'comment': '# And of course the image itself', 'include_SATD': False}, {'start_line': 164, 'end_line': 164, 'comment': '# Pattieblack should be able to manipulate is_public', 'include_SATD': False}, {'start_line': 176, 'end_line': 176, 'comment': ""# Pattieblack can't give the image away, however"", 'include_SATD': False}, {'start_line': 188, 'end_line': 188, 'comment': '# Now that the image is public, froggy can see it', 'include_SATD': False}, {'start_line': 200, 'end_line': 200, 'comment': '# Should also be in details', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# Froggy can get the image metadata now...', 'include_SATD': False}, {'start_line': 224, 'end_line': 224, 'comment': '# And of course the image itself', 'include_SATD': False}, {'start_line': 235, 'end_line': 235, 'comment': ""# Froggy still can't change is-public"", 'include_SATD': False}, {'start_line': 243, 'end_line': 243, 'comment': '# Or give themselves ownership', 'include_SATD': False}, {'start_line': 251, 'end_line': 251, 'comment': ""# Froggy can't delete it, either"", 'include_SATD': False}, {'start_line': 258, 'end_line': 258, 'comment': '# But pattieblack can', 'include_SATD': False}, {'start_line': 276, 'end_line': 276, 'comment': '# Need to push an image up', 'include_SATD': False}, {'start_line': 293, 'end_line': 293, 'comment': '# Make sure admin does not see image by default', 'include_SATD': False}, {'start_line': 301, 'end_line': 301, 'comment': ""# Shouldn't show up in the detail list, either"", 'include_SATD': False}, {'start_line': 309, 'end_line': 310, 'comment': ""# Admin should see the image if we're looking for private # images specifically"", 'include_SATD': False}, {'start_line': 323, 'end_line': 323, 'comment': '# Also in the detail list...', 'include_SATD': False}, {'start_line': 338, 'end_line': 338, 'comment': '# Admin should be able to get the image metadata', 'include_SATD': False}, {'start_line': 348, 'end_line': 348, 'comment': '# And of course the image itself', 'include_SATD': False}, {'start_line': 359, 'end_line': 359, 'comment': '# Admin should be able to manipulate is_public', 'include_SATD': False}, {'start_line': 371, 'end_line': 372, 'comment': '# Admin should also be able to change the ownership of the # image', 'include_SATD': False}, {'start_line': 384, 'end_line': 384, 'comment': '# Even setting it to no owner', 'include_SATD': False}, {'start_line': 396, 'end_line': 397, 'comment': ""# Make sure pattieblack can see it, since it's unowned but # public"", 'include_SATD': False}, {'start_line': 409, 'end_line': 409, 'comment': '# But if we change it back to private...', 'include_SATD': False}, {'start_line': 421, 'end_line': 421, 'comment': ""# Now pattieblack can't see it in the list..."", 'include_SATD': False}, {'start_line': 429, 'end_line': 429, 'comment': '# Or in the details list...', 'include_SATD': False}, {'start_line': 437, 'end_line': 437, 'comment': '# But pattieblack should be able to access the image metadata', 'include_SATD': False}, {'start_line': 447, 'end_line': 447, 'comment': '# And of course the image itself', 'include_SATD': False}, {'start_line': 458, 'end_line': 458, 'comment': ""# Pattieblack can't change is-public, though"", 'include_SATD': False}, {'start_line': 466, 'end_line': 466, 'comment': '# Or give themselves ownership', 'include_SATD': False}, {'start_line': 474, 'end_line': 474, 'comment': ""# They can't delete it, either"", 'include_SATD': False}, {'start_line': 492, 'end_line': 492, 'comment': ""# Make sure anonymous user can't push up an image"", 'include_SATD': False}, {'start_line': 502, 'end_line': 502, 'comment': '# Now push up an image for anonymous user to try to access', 'include_SATD': False}, {'start_line': 519, 'end_line': 519, 'comment': ""# Make sure anonymous user can't list the image"", 'include_SATD': False}, {'start_line': 526, 'end_line': 526, 'comment': ""# Shouldn't show up in the detail list, either"", 'include_SATD': False}, {'start_line': 533, 'end_line': 533, 'comment': ""# Also check that anonymous can't get the image metadata"", 'include_SATD': False}, {'start_line': 539, 'end_line': 539, 'comment': '# Nor the image, either.', 'include_SATD': False}, {'start_line': 545, 'end_line': 545, 'comment': ""# Anonymous shouldn't be able to make the image public..."", 'include_SATD': False}, {'start_line': 552, 'end_line': 552, 'comment': '# Nor change ownership...', 'include_SATD': False}, {'start_line': 559, 'end_line': 559, 'comment': '# Nor even delete it...', 'include_SATD': False}, {'start_line': 565, 'end_line': 566, 'comment': ""# Now, let's use our admin credentials and change the # ownership to None..."", 'include_SATD': False}, {'start_line': 578, 'end_line': 578, 'comment': ""# Anonymous user still can't list image..."", 'include_SATD': False}, {'start_line': 585, 'end_line': 585, 'comment': '# Nor see it in details...', 'include_SATD': False}, {'start_line': 592, 'end_line': 592, 'comment': '# But they should be able to access the metadata...', 'include_SATD': False}, {'start_line': 601, 'end_line': 601, 'comment': '# And even the image itself...', 'include_SATD': False}, {'start_line': 611, 'end_line': 612, 'comment': ""# Anonymous still shouldn't be able to make the image # public..."", 'include_SATD': False}, {'start_line': 619, 'end_line': 619, 'comment': '# Nor change ownership...', 'include_SATD': False}, {'start_line': 626, 'end_line': 626, 'comment': '# Nor even delete it...', 'include_SATD': False}, {'start_line': 632, 'end_line': 632, 'comment': '# Now make the image public...', 'include_SATD': False}, {'start_line': 644, 'end_line': 644, 'comment': '# Now the user should see it in the list...', 'include_SATD': False}, {'start_line': 655, 'end_line': 655, 'comment': '# Especially in the details...', 'include_SATD': False}, {'start_line': 668, 'end_line': 668, 'comment': ""# But still can't change ownership..."", 'include_SATD': False}, {'start_line': 675, 'end_line': 675, 'comment': '# Or delete it...', 'include_SATD': False}, {'start_line': 700, 'end_line': 700, 'comment': '# Add a non-public image', 'include_SATD': False}, {'start_line': 709, 'end_line': 709, 'comment': '# Verify the attributes of the image', 'include_SATD': False}, {'start_line': 719, 'end_line': 719, 'comment': '# Test that we can update is_public through the CLI', 'include_SATD': False}, {'start_line': 727, 'end_line': 727, 'comment': '# Verify the appropriate change was made', 'include_SATD': False}, {'start_line': 737, 'end_line': 737, 'comment': '# Test that admin can change the owner', 'include_SATD': False}, {'start_line': 745, 'end_line': 745, 'comment': '# Verify the appropriate change was made', 'include_SATD': False}, {'start_line': 755, 'end_line': 755, 'comment': '# Test that admin can remove the owner', 'include_SATD': False}, {'start_line': 763, 'end_line': 763, 'comment': '# Verify the appropriate change was made', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_private_images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 32, 'end_line': 32, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 64, 'end_line': 64, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 67, 'end_line': 67, 'comment': '# Now add froggy as a shared image member', 'include_SATD': False}, {'start_line': 75, 'end_line': 75, 'comment': '# Ensure pattieblack can still see the image', 'include_SATD': False}, {'start_line': 86, 'end_line': 86, 'comment': '# Ensure froggy can see the image now', 'include_SATD': False}, {'start_line': 96, 'end_line': 96, 'comment': '# ensure that no one else can see the image', 'include_SATD': False}, {'start_line': 109, 'end_line': 109, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 113, 'end_line': 113, 'comment': '# Now add froggy as a shared image member', 'include_SATD': False}, {'start_line': 121, 'end_line': 121, 'comment': '# Ensure pattieblack can still see the image', 'include_SATD': False}, {'start_line': 132, 'end_line': 132, 'comment': '# Ensure froggy can see the image now', 'include_SATD': False}, {'start_line': 142, 'end_line': 142, 'comment': '# ensure that no one else can see the image', 'include_SATD': False}, {'start_line': 149, 'end_line': 149, 'comment': '# Replace froggy with bacon', 'include_SATD': False}, {'start_line': 160, 'end_line': 160, 'comment': '# Ensure bacon can see the image', 'include_SATD': False}, {'start_line': 171, 'end_line': 171, 'comment': '# ensure that no one else can see the image', 'include_SATD': False}, {'start_line': 184, 'end_line': 184, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 187, 'end_line': 187, 'comment': '# Now add froggy as a shared image member', 'include_SATD': False}, {'start_line': 196, 'end_line': 196, 'comment': '# Ensure pattieblack can still see the image', 'include_SATD': False}, {'start_line': 207, 'end_line': 207, 'comment': '# Ensure froggy can see the image now', 'include_SATD': False}, {'start_line': 217, 'end_line': 217, 'comment': '# ensure that no one else can see the image', 'include_SATD': False}, {'start_line': 224, 'end_line': 224, 'comment': '# Now remove froggy as a shared image member', 'include_SATD': False}, {'start_line': 232, 'end_line': 232, 'comment': '# ensure that no one else can see the image', 'include_SATD': False}, {'start_line': 239, 'end_line': 239, 'comment': '# Ensure pattieblack can still see the image', 'include_SATD': False}, {'start_line': 256, 'end_line': 256, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 259, 'end_line': 259, 'comment': '# Now add froggy as a shared image member', 'include_SATD': False}, {'start_line': 271, 'end_line': 271, 'comment': '# Ensure froggy can see the image now', 'include_SATD': False}, {'start_line': 282, 'end_line': 282, 'comment': '# Froggy is going to share with bacon', 'include_SATD': False}, {'start_line': 290, 'end_line': 290, 'comment': '# Ensure bacon can see the image now', 'include_SATD': False}, {'start_line': 301, 'end_line': 301, 'comment': '# Ensure prosciutto cannot see the image', 'include_SATD': False}, {'start_line': 307, 'end_line': 307, 'comment': '# Redundant, but prove prosciutto cannot share it', 'include_SATD': False}, {'start_line': 320, 'end_line': 320, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 323, 'end_line': 323, 'comment': '# Now add froggy as a shared image member', 'include_SATD': False}, {'start_line': 346, 'end_line': 346, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 381, 'end_line': 381, 'comment': '# Push an image up', 'include_SATD': False}, {'start_line': 386, 'end_line': 386, 'comment': '# Test that we can add froggy as a shared image member', 'include_SATD': False}, {'start_line': 394, 'end_line': 394, 'comment': '# Verify the membership of the image', 'include_SATD': False}, {'start_line': 405, 'end_line': 405, 'comment': '# Test that we can replace a shared image membership list', 'include_SATD': False}, {'start_line': 414, 'end_line': 414, 'comment': '# Verify the membership of the image', 'include_SATD': False}, {'start_line': 425, 'end_line': 425, 'comment': '# Test that we can delete an image membership', 'include_SATD': False}, {'start_line': 433, 'end_line': 433, 'comment': '# Verify the membership of the image', 'include_SATD': False}, {'start_line': 449, 'end_line': 449, 'comment': '# Push an image up', 'include_SATD': False}, {'start_line': 454, 'end_line': 454, 'comment': '# Push a second image up', 'include_SATD': False}, {'start_line': 459, 'end_line': 459, 'comment': '# Share images with froggy and bacon', 'include_SATD': False}, {'start_line': 483, 'end_line': 483, 'comment': '# Get the list of image members', 'include_SATD': False}, {'start_line': 493, 'end_line': 493, 'comment': '# Try again for can_share', 'include_SATD': False}, {'start_line': 504, 'end_line': 504, 'comment': '# Get the list of member images', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_shared_images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 114, 'end_line': 115, 'comment': ""# If we're asked to omit the virtualenv, and if one is set up, # restore the various environment variables"", 'include_SATD': False}, {'start_line': 117, 'end_line': 117, 'comment': '# Clip off the first element of PATH', 'include_SATD': False}, {'start_line': 125, 'end_line': 125, 'comment': ""# Also jack in the path cmd comes from, if it's absolute"", 'include_SATD': False}, {'start_line': 158, 'end_line': 158, 'comment': '# Keep an eye out for the possibility of an absolute pathname', 'include_SATD': False}, {'start_line': 162, 'end_line': 162, 'comment': '# Get a list of the directories to search', 'include_SATD': False}, {'start_line': 166, 'end_line': 166, 'comment': '# Search through each in turn', 'include_SATD': False}, {'start_line': 172, 'end_line': 172, 'comment': '# No dice...', 'include_SATD': False}], 'filename': 'glance/tests/utils.py'}]}, {'revision': 5, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 60, 'end_line': 60, 'comment': '# Is admin == image mutable', 'include_SATD': False}, {'start_line': 64, 'end_line': 64, 'comment': '# No owner == image not mutable', 'include_SATD': False}, {'start_line': 68, 'end_line': 68, 'comment': '# Image only mutable by its owner', 'include_SATD': False}], 'filename': 'glance/registry/context.py'}, {'a_comments': [], 'b_comments': [{'start_line': 124, 'end_line': 124, 'comment': '# Perform authorization check', 'include_SATD': False}, {'start_line': 337, 'end_line': 337, 'comment': '# Perform authorization check', 'include_SATD': False}, {'start_line': 346, 'end_line': 346, 'comment': '# Need to canonicalize ownership', 'include_SATD': False}], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [{'start_line': 120, 'end_line': 120, 'comment': '# Ensure the configuration file is written', 'include_SATD': False}], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 20, 'end_line': 20, 'comment': '# Tenants', 'include_SATD': False}, {'start_line': 26, 'end_line': 26, 'comment': '# Users', 'include_SATD': False}, {'start_line': 32, 'end_line': 32, 'comment': '# Roles', 'include_SATD': False}, {'start_line': 37, 'end_line': 37, 'comment': '# Tokens', 'include_SATD': False}, {'start_line': 48, 'end_line': 48, 'comment': '# Keeping for compatibility for a while till dashboard catches up', 'include_SATD': False}, {'start_line': 67, 'end_line': 67, 'comment': '# endpointTemplates', 'include_SATD': False}, {'start_line': 86, 'end_line': 86, 'comment': '# Tenant endpointsGlobal endpoint not added', 'include_SATD': False}], 'filename': 'glance/tests/functional/data/keystone_data.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 128, 'end_line': 128, 'comment': '# First, pull the configuration file', 'include_SATD': False}, {'start_line': 131, 'end_line': 131, 'comment': '# Need to find the pipeline', 'include_SATD': False}, {'start_line': 134, 'end_line': 134, 'comment': '# OK, the line to modify is the next one...', 'include_SATD': False}, {'start_line': 138, 'end_line': 138, 'comment': '# Now we need to replace the default context field...', 'include_SATD': False}, {'start_line': 142, 'end_line': 142, 'comment': '# Put the conf back together and append the keystone pieces', 'include_SATD': False}, {'start_line': 177, 'end_line': 177, 'comment': '# Make sure we can import keystone', 'include_SATD': False}, {'start_line': 184, 'end_line': 184, 'comment': ""# Can't import keystone"", 'include_SATD': False}, {'start_line': 194, 'end_line': 194, 'comment': '# Try looking up the keystone executable', 'include_SATD': False}, {'start_line': 203, 'end_line': 203, 'comment': ""# If we don't have keystone-control, disable ourself"", 'include_SATD': False}, {'start_line': 211, 'end_line': 211, 'comment': '# Make sure to call superclass', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# Also need keystone auth and admin ports...', 'include_SATD': False}, {'start_line': 218, 'end_line': 218, 'comment': '# Set up the servers', 'include_SATD': False}, {'start_line': 224, 'end_line': 224, 'comment': '# Include their pid files, too', 'include_SATD': False}, {'start_line': 228, 'end_line': 229, 'comment': '# Have to patch the api and registry config files for keystone # integration', 'include_SATD': False}, {'start_line': 237, 'end_line': 238, 'comment': '# Need to add keystone python path to the environment for # glance', 'include_SATD': False}, {'start_line': 249, 'end_line': 249, 'comment': '# Keystone can take care of itself on this score', 'include_SATD': True}, {'start_line': 266, 'end_line': 266, 'comment': '# Start with the Glance servers', 'include_SATD': False}, {'start_line': 269, 'end_line': 269, 'comment': '# Set up the data store', 'include_SATD': False}, {'start_line': 278, 'end_line': 278, 'comment': '# Start keystone-auth', 'include_SATD': False}, {'start_line': 286, 'end_line': 286, 'comment': '# Now keystone-admin', 'include_SATD': False}, {'start_line': 325, 'end_line': 325, 'comment': '# Spin down the auth server...', 'include_SATD': False}, {'start_line': 331, 'end_line': 331, 'comment': '# ...and the admin server...', 'include_SATD': False}, {'start_line': 337, 'end_line': 337, 'comment': '# Now on to everything else...', 'include_SATD': False}], 'filename': 'glance/tests/functional/keystone_utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 45, 'end_line': 45, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 62, 'end_line': 62, 'comment': ""# Next, make sure froggy can't list the image"", 'include_SATD': False}, {'start_line': 70, 'end_line': 70, 'comment': ""# Shouldn't show up in the detail list, either"", 'include_SATD': False}, {'start_line': 78, 'end_line': 78, 'comment': ""# Also check that froggy can't get the image metadata"", 'include_SATD': False}, {'start_line': 85, 'end_line': 85, 'comment': ""# Froggy shouldn't be able to get the image, either."", 'include_SATD': False}, {'start_line': 92, 'end_line': 93, 'comment': ""# Froggy shouldn't be able to give themselves permission too # easily..."", 'include_SATD': True}, {'start_line': 101, 'end_line': 102, 'comment': ""# Froggy shouldn't be able to give themselves ownership, # either"", 'include_SATD': True}, {'start_line': 110, 'end_line': 110, 'comment': ""# Froggy can't delete it, either"", 'include_SATD': False}, {'start_line': 117, 'end_line': 117, 'comment': '# Pattieblack should be able to see the image in lists', 'include_SATD': False}, {'start_line': 129, 'end_line': 129, 'comment': '# And in the detail list', 'include_SATD': False}, {'start_line': 143, 'end_line': 143, 'comment': '# Pattieblack should be able to get the image metadata', 'include_SATD': False}, {'start_line': 153, 'end_line': 153, 'comment': '# And of course the image itself', 'include_SATD': False}, {'start_line': 164, 'end_line': 164, 'comment': '# Pattieblack should be able to manipulate is_public', 'include_SATD': False}, {'start_line': 176, 'end_line': 176, 'comment': ""# Pattieblack can't give the image away, however"", 'include_SATD': False}, {'start_line': 188, 'end_line': 188, 'comment': '# Now that the image is public, froggy can see it', 'include_SATD': False}, {'start_line': 200, 'end_line': 200, 'comment': '# Should also be in details', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# Froggy can get the image metadata now...', 'include_SATD': False}, {'start_line': 224, 'end_line': 224, 'comment': '# And of course the image itself', 'include_SATD': False}, {'start_line': 235, 'end_line': 235, 'comment': ""# Froggy still can't change is-public"", 'include_SATD': False}, {'start_line': 243, 'end_line': 243, 'comment': '# Or give themselves ownership', 'include_SATD': False}, {'start_line': 251, 'end_line': 251, 'comment': ""# Froggy can't delete it, either"", 'include_SATD': False}, {'start_line': 258, 'end_line': 258, 'comment': '# But pattieblack can', 'include_SATD': False}, {'start_line': 276, 'end_line': 276, 'comment': '# Need to push an image up', 'include_SATD': False}, {'start_line': 293, 'end_line': 293, 'comment': '# Make sure admin does not see image by default', 'include_SATD': False}, {'start_line': 301, 'end_line': 301, 'comment': ""# Shouldn't show up in the detail list, either"", 'include_SATD': False}, {'start_line': 309, 'end_line': 310, 'comment': ""# Admin should see the image if we're looking for private # images specifically"", 'include_SATD': False}, {'start_line': 323, 'end_line': 323, 'comment': '# Also in the detail list...', 'include_SATD': False}, {'start_line': 338, 'end_line': 338, 'comment': '# Admin should be able to get the image metadata', 'include_SATD': False}, {'start_line': 348, 'end_line': 348, 'comment': '# And of course the image itself', 'include_SATD': False}, {'start_line': 359, 'end_line': 359, 'comment': '# Admin should be able to manipulate is_public', 'include_SATD': False}, {'start_line': 371, 'end_line': 372, 'comment': '# Admin should also be able to change the ownership of the # image', 'include_SATD': False}, {'start_line': 384, 'end_line': 384, 'comment': '# Even setting it to no owner', 'include_SATD': False}, {'start_line': 396, 'end_line': 397, 'comment': ""# Make sure pattieblack can see it, since it's unowned but # public"", 'include_SATD': False}, {'start_line': 409, 'end_line': 409, 'comment': '# But if we change it back to private...', 'include_SATD': False}, {'start_line': 421, 'end_line': 421, 'comment': ""# Now pattieblack can't see it in the list..."", 'include_SATD': False}, {'start_line': 429, 'end_line': 429, 'comment': '# Or in the details list...', 'include_SATD': False}, {'start_line': 437, 'end_line': 437, 'comment': '# But pattieblack should be able to access the image metadata', 'include_SATD': False}, {'start_line': 447, 'end_line': 447, 'comment': '# And of course the image itself', 'include_SATD': False}, {'start_line': 458, 'end_line': 458, 'comment': ""# Pattieblack can't change is-public, though"", 'include_SATD': False}, {'start_line': 466, 'end_line': 466, 'comment': '# Or give themselves ownership', 'include_SATD': False}, {'start_line': 474, 'end_line': 474, 'comment': ""# They can't delete it, either"", 'include_SATD': False}, {'start_line': 492, 'end_line': 492, 'comment': ""# Make sure anonymous user can't push up an image"", 'include_SATD': False}, {'start_line': 502, 'end_line': 502, 'comment': '# Now push up an image for anonymous user to try to access', 'include_SATD': False}, {'start_line': 519, 'end_line': 519, 'comment': ""# Make sure anonymous user can't list the image"", 'include_SATD': False}, {'start_line': 526, 'end_line': 526, 'comment': ""# Shouldn't show up in the detail list, either"", 'include_SATD': False}, {'start_line': 533, 'end_line': 533, 'comment': ""# Also check that anonymous can't get the image metadata"", 'include_SATD': False}, {'start_line': 539, 'end_line': 539, 'comment': '# Nor the image, either.', 'include_SATD': False}, {'start_line': 545, 'end_line': 545, 'comment': ""# Anonymous shouldn't be able to make the image public..."", 'include_SATD': False}, {'start_line': 552, 'end_line': 552, 'comment': '# Nor change ownership...', 'include_SATD': False}, {'start_line': 559, 'end_line': 559, 'comment': '# Nor even delete it...', 'include_SATD': False}, {'start_line': 565, 'end_line': 566, 'comment': ""# Now, let's use our admin credentials and change the # ownership to None..."", 'include_SATD': False}, {'start_line': 578, 'end_line': 578, 'comment': ""# Anonymous user still can't list image..."", 'include_SATD': False}, {'start_line': 585, 'end_line': 585, 'comment': '# Nor see it in details...', 'include_SATD': False}, {'start_line': 592, 'end_line': 592, 'comment': '# But they should be able to access the metadata...', 'include_SATD': False}, {'start_line': 601, 'end_line': 601, 'comment': '# And even the image itself...', 'include_SATD': False}, {'start_line': 611, 'end_line': 612, 'comment': ""# Anonymous still shouldn't be able to make the image # public..."", 'include_SATD': False}, {'start_line': 619, 'end_line': 619, 'comment': '# Nor change ownership...', 'include_SATD': False}, {'start_line': 626, 'end_line': 626, 'comment': '# Nor even delete it...', 'include_SATD': False}, {'start_line': 632, 'end_line': 632, 'comment': '# Now make the image public...', 'include_SATD': False}, {'start_line': 644, 'end_line': 644, 'comment': '# Now the user should see it in the list...', 'include_SATD': False}, {'start_line': 655, 'end_line': 655, 'comment': '# Especially in the details...', 'include_SATD': False}, {'start_line': 668, 'end_line': 668, 'comment': ""# But still can't change ownership..."", 'include_SATD': False}, {'start_line': 675, 'end_line': 675, 'comment': '# Or delete it...', 'include_SATD': False}, {'start_line': 700, 'end_line': 700, 'comment': '# Add a non-public image', 'include_SATD': False}, {'start_line': 709, 'end_line': 709, 'comment': '# Verify the attributes of the image', 'include_SATD': False}, {'start_line': 719, 'end_line': 719, 'comment': '# Test that we can update is_public through the CLI', 'include_SATD': False}, {'start_line': 727, 'end_line': 727, 'comment': '# Verify the appropriate change was made', 'include_SATD': False}, {'start_line': 737, 'end_line': 737, 'comment': '# Test that admin can change the owner', 'include_SATD': False}, {'start_line': 745, 'end_line': 745, 'comment': '# Verify the appropriate change was made', 'include_SATD': False}, {'start_line': 755, 'end_line': 755, 'comment': '# Test that admin can remove the owner', 'include_SATD': False}, {'start_line': 763, 'end_line': 763, 'comment': '# Verify the appropriate change was made', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_private_images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 32, 'end_line': 32, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 64, 'end_line': 64, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 67, 'end_line': 67, 'comment': '# Now add froggy as a shared image member', 'include_SATD': False}, {'start_line': 75, 'end_line': 75, 'comment': '# Ensure pattieblack can still see the image', 'include_SATD': False}, {'start_line': 86, 'end_line': 86, 'comment': '# Ensure froggy can see the image now', 'include_SATD': False}, {'start_line': 96, 'end_line': 96, 'comment': '# ensure that no one else can see the image', 'include_SATD': False}, {'start_line': 109, 'end_line': 109, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 113, 'end_line': 113, 'comment': '# Now add froggy as a shared image member', 'include_SATD': False}, {'start_line': 121, 'end_line': 121, 'comment': '# Ensure pattieblack can still see the image', 'include_SATD': False}, {'start_line': 132, 'end_line': 132, 'comment': '# Ensure froggy can see the image now', 'include_SATD': False}, {'start_line': 142, 'end_line': 142, 'comment': '# ensure that no one else can see the image', 'include_SATD': False}, {'start_line': 149, 'end_line': 149, 'comment': '# Replace froggy with bacon', 'include_SATD': False}, {'start_line': 160, 'end_line': 160, 'comment': '# Ensure bacon can see the image', 'include_SATD': False}, {'start_line': 171, 'end_line': 171, 'comment': '# ensure that no one else can see the image', 'include_SATD': False}, {'start_line': 184, 'end_line': 184, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 187, 'end_line': 187, 'comment': '# Now add froggy as a shared image member', 'include_SATD': False}, {'start_line': 196, 'end_line': 196, 'comment': '# Ensure pattieblack can still see the image', 'include_SATD': False}, {'start_line': 207, 'end_line': 207, 'comment': '# Ensure froggy can see the image now', 'include_SATD': False}, {'start_line': 217, 'end_line': 217, 'comment': '# ensure that no one else can see the image', 'include_SATD': False}, {'start_line': 224, 'end_line': 224, 'comment': '# Now remove froggy as a shared image member', 'include_SATD': False}, {'start_line': 232, 'end_line': 232, 'comment': '# ensure that no one else can see the image', 'include_SATD': False}, {'start_line': 239, 'end_line': 239, 'comment': '# Ensure pattieblack can still see the image', 'include_SATD': False}, {'start_line': 256, 'end_line': 256, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 259, 'end_line': 259, 'comment': '# Now add froggy as a shared image member', 'include_SATD': False}, {'start_line': 271, 'end_line': 271, 'comment': '# Ensure froggy can see the image now', 'include_SATD': False}, {'start_line': 282, 'end_line': 282, 'comment': '# Froggy is going to share with bacon', 'include_SATD': False}, {'start_line': 290, 'end_line': 290, 'comment': '# Ensure bacon can see the image now', 'include_SATD': False}, {'start_line': 301, 'end_line': 301, 'comment': '# Ensure prosciutto cannot see the image', 'include_SATD': False}, {'start_line': 307, 'end_line': 307, 'comment': '# Redundant, but prove prosciutto cannot share it', 'include_SATD': False}, {'start_line': 320, 'end_line': 320, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 323, 'end_line': 323, 'comment': '# Now add froggy as a shared image member', 'include_SATD': False}, {'start_line': 346, 'end_line': 346, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 381, 'end_line': 381, 'comment': '# Push an image up', 'include_SATD': False}, {'start_line': 386, 'end_line': 386, 'comment': '# Test that we can add froggy as a shared image member', 'include_SATD': False}, {'start_line': 394, 'end_line': 394, 'comment': '# Verify the membership of the image', 'include_SATD': False}, {'start_line': 405, 'end_line': 405, 'comment': '# Test that we can replace a shared image membership list', 'include_SATD': False}, {'start_line': 414, 'end_line': 414, 'comment': '# Verify the membership of the image', 'include_SATD': False}, {'start_line': 425, 'end_line': 425, 'comment': '# Test that we can delete an image membership', 'include_SATD': False}, {'start_line': 433, 'end_line': 433, 'comment': '# Verify the membership of the image', 'include_SATD': False}, {'start_line': 449, 'end_line': 449, 'comment': '# Push an image up', 'include_SATD': False}, {'start_line': 454, 'end_line': 454, 'comment': '# Push a second image up', 'include_SATD': False}, {'start_line': 459, 'end_line': 459, 'comment': '# Share images with froggy and bacon', 'include_SATD': False}, {'start_line': 483, 'end_line': 483, 'comment': '# Get the list of image members', 'include_SATD': False}, {'start_line': 493, 'end_line': 493, 'comment': '# Try again for can_share', 'include_SATD': False}, {'start_line': 504, 'end_line': 504, 'comment': '# Get the list of member images', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_shared_images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 114, 'end_line': 115, 'comment': ""# If we're asked to omit the virtualenv, and if one is set up, # restore the various environment variables"", 'include_SATD': False}, {'start_line': 117, 'end_line': 117, 'comment': '# Clip off the first element of PATH', 'include_SATD': False}, {'start_line': 125, 'end_line': 125, 'comment': ""# Also jack in the path cmd comes from, if it's absolute"", 'include_SATD': False}, {'start_line': 158, 'end_line': 158, 'comment': '# Keep an eye out for the possibility of an absolute pathname', 'include_SATD': False}, {'start_line': 162, 'end_line': 162, 'comment': '# Get a list of the directories to search', 'include_SATD': False}, {'start_line': 166, 'end_line': 166, 'comment': '# Search through each in turn', 'include_SATD': False}, {'start_line': 172, 'end_line': 172, 'comment': '# No dice...', 'include_SATD': False}], 'filename': 'glance/tests/utils.py'}]}, {'revision': 6, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 60, 'end_line': 60, 'comment': '# Is admin == image mutable', 'include_SATD': False}, {'start_line': 64, 'end_line': 64, 'comment': '# No owner == image not mutable', 'include_SATD': False}, {'start_line': 68, 'end_line': 68, 'comment': '# Image only mutable by its owner', 'include_SATD': False}], 'filename': 'glance/registry/context.py'}, {'a_comments': [], 'b_comments': [{'start_line': 124, 'end_line': 124, 'comment': '# Perform authorization check', 'include_SATD': False}, {'start_line': 337, 'end_line': 337, 'comment': '# Perform authorization check', 'include_SATD': False}, {'start_line': 346, 'end_line': 346, 'comment': '# Need to canonicalize ownership', 'include_SATD': False}], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [{'start_line': 120, 'end_line': 120, 'comment': '# Ensure the configuration file is written', 'include_SATD': False}], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 20, 'end_line': 20, 'comment': '# Tenants', 'include_SATD': False}, {'start_line': 26, 'end_line': 26, 'comment': '# Users', 'include_SATD': False}, {'start_line': 32, 'end_line': 32, 'comment': '# Roles', 'include_SATD': False}, {'start_line': 37, 'end_line': 37, 'comment': '# Tokens', 'include_SATD': False}, {'start_line': 48, 'end_line': 48, 'comment': '# Keeping for compatibility for a while till dashboard catches up', 'include_SATD': False}, {'start_line': 67, 'end_line': 67, 'comment': '# endpointTemplates', 'include_SATD': False}, {'start_line': 86, 'end_line': 86, 'comment': '# Tenant endpointsGlobal endpoint not added', 'include_SATD': False}], 'filename': 'glance/tests/functional/data/keystone_data.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 128, 'end_line': 128, 'comment': '# First, pull the configuration file', 'include_SATD': False}, {'start_line': 131, 'end_line': 131, 'comment': '# Need to find the pipeline', 'include_SATD': False}, {'start_line': 134, 'end_line': 134, 'comment': '# OK, the line to modify is the next one...', 'include_SATD': False}, {'start_line': 138, 'end_line': 138, 'comment': '# Now we need to replace the default context field...', 'include_SATD': False}, {'start_line': 142, 'end_line': 142, 'comment': '# Put the conf back together and append the keystone pieces', 'include_SATD': False}, {'start_line': 177, 'end_line': 177, 'comment': '# Make sure we can import keystone', 'include_SATD': False}, {'start_line': 184, 'end_line': 184, 'comment': ""# Can't import keystone"", 'include_SATD': False}, {'start_line': 194, 'end_line': 194, 'comment': '# Try looking up the keystone executable', 'include_SATD': False}, {'start_line': 203, 'end_line': 203, 'comment': ""# If we don't have keystone-control, disable ourself"", 'include_SATD': False}, {'start_line': 211, 'end_line': 211, 'comment': '# Make sure to call superclass', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# Also need keystone auth and admin ports...', 'include_SATD': False}, {'start_line': 218, 'end_line': 218, 'comment': '# Set up the servers', 'include_SATD': False}, {'start_line': 224, 'end_line': 224, 'comment': '# Include their pid files, too', 'include_SATD': False}, {'start_line': 228, 'end_line': 229, 'comment': '# Have to patch the api and registry config files for keystone # integration', 'include_SATD': False}, {'start_line': 237, 'end_line': 238, 'comment': '# Need to add keystone python path to the environment for # glance', 'include_SATD': False}, {'start_line': 249, 'end_line': 249, 'comment': '# Keystone can take care of itself on this score', 'include_SATD': True}, {'start_line': 266, 'end_line': 266, 'comment': '# Start with the Glance servers', 'include_SATD': False}, {'start_line': 269, 'end_line': 269, 'comment': '# Set up the data store', 'include_SATD': False}, {'start_line': 278, 'end_line': 278, 'comment': '# Start keystone-auth', 'include_SATD': False}, {'start_line': 286, 'end_line': 286, 'comment': '# Now keystone-admin', 'include_SATD': False}, {'start_line': 325, 'end_line': 325, 'comment': '# Spin down the auth server...', 'include_SATD': False}, {'start_line': 331, 'end_line': 331, 'comment': '# ...and the admin server...', 'include_SATD': False}, {'start_line': 337, 'end_line': 337, 'comment': '# Now on to everything else...', 'include_SATD': False}], 'filename': 'glance/tests/functional/keystone_utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 45, 'end_line': 45, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 62, 'end_line': 62, 'comment': ""# Next, make sure froggy can't list the image"", 'include_SATD': False}, {'start_line': 70, 'end_line': 70, 'comment': ""# Shouldn't show up in the detail list, either"", 'include_SATD': False}, {'start_line': 78, 'end_line': 78, 'comment': ""# Also check that froggy can't get the image metadata"", 'include_SATD': False}, {'start_line': 85, 'end_line': 85, 'comment': ""# Froggy shouldn't be able to get the image, either."", 'include_SATD': False}, {'start_line': 92, 'end_line': 93, 'comment': ""# Froggy shouldn't be able to give themselves permission too # easily..."", 'include_SATD': True}, {'start_line': 101, 'end_line': 102, 'comment': ""# Froggy shouldn't be able to give themselves ownership, # either"", 'include_SATD': True}, {'start_line': 110, 'end_line': 110, 'comment': ""# Froggy can't delete it, either"", 'include_SATD': False}, {'start_line': 117, 'end_line': 117, 'comment': '# Pattieblack should be able to see the image in lists', 'include_SATD': False}, {'start_line': 129, 'end_line': 129, 'comment': '# And in the detail list', 'include_SATD': False}, {'start_line': 143, 'end_line': 143, 'comment': '# Pattieblack should be able to get the image metadata', 'include_SATD': False}, {'start_line': 153, 'end_line': 153, 'comment': '# And of course the image itself', 'include_SATD': False}, {'start_line': 164, 'end_line': 164, 'comment': '# Pattieblack should be able to manipulate is_public', 'include_SATD': False}, {'start_line': 176, 'end_line': 176, 'comment': ""# Pattieblack can't give the image away, however"", 'include_SATD': False}, {'start_line': 188, 'end_line': 188, 'comment': '# Now that the image is public, froggy can see it', 'include_SATD': False}, {'start_line': 200, 'end_line': 200, 'comment': '# Should also be in details', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# Froggy can get the image metadata now...', 'include_SATD': False}, {'start_line': 224, 'end_line': 224, 'comment': '# And of course the image itself', 'include_SATD': False}, {'start_line': 235, 'end_line': 235, 'comment': ""# Froggy still can't change is-public"", 'include_SATD': False}, {'start_line': 243, 'end_line': 243, 'comment': '# Or give themselves ownership', 'include_SATD': False}, {'start_line': 251, 'end_line': 251, 'comment': ""# Froggy can't delete it, either"", 'include_SATD': False}, {'start_line': 258, 'end_line': 258, 'comment': '# But pattieblack can', 'include_SATD': False}, {'start_line': 276, 'end_line': 276, 'comment': '# Need to push an image up', 'include_SATD': False}, {'start_line': 293, 'end_line': 293, 'comment': '# Make sure admin does not see image by default', 'include_SATD': False}, {'start_line': 301, 'end_line': 301, 'comment': ""# Shouldn't show up in the detail list, either"", 'include_SATD': False}, {'start_line': 309, 'end_line': 310, 'comment': ""# Admin should see the image if we're looking for private # images specifically"", 'include_SATD': False}, {'start_line': 323, 'end_line': 323, 'comment': '# Also in the detail list...', 'include_SATD': False}, {'start_line': 338, 'end_line': 338, 'comment': '# Admin should be able to get the image metadata', 'include_SATD': False}, {'start_line': 348, 'end_line': 348, 'comment': '# And of course the image itself', 'include_SATD': False}, {'start_line': 359, 'end_line': 359, 'comment': '# Admin should be able to manipulate is_public', 'include_SATD': False}, {'start_line': 371, 'end_line': 372, 'comment': '# Admin should also be able to change the ownership of the # image', 'include_SATD': False}, {'start_line': 384, 'end_line': 384, 'comment': '# Even setting it to no owner', 'include_SATD': False}, {'start_line': 396, 'end_line': 397, 'comment': ""# Make sure pattieblack can see it, since it's unowned but # public"", 'include_SATD': False}, {'start_line': 409, 'end_line': 409, 'comment': '# But if we change it back to private...', 'include_SATD': False}, {'start_line': 421, 'end_line': 421, 'comment': ""# Now pattieblack can't see it in the list..."", 'include_SATD': False}, {'start_line': 429, 'end_line': 429, 'comment': '# Or in the details list...', 'include_SATD': False}, {'start_line': 437, 'end_line': 437, 'comment': '# But pattieblack should be able to access the image metadata', 'include_SATD': False}, {'start_line': 447, 'end_line': 447, 'comment': '# And of course the image itself', 'include_SATD': False}, {'start_line': 458, 'end_line': 458, 'comment': ""# Pattieblack can't change is-public, though"", 'include_SATD': False}, {'start_line': 466, 'end_line': 466, 'comment': '# Or give themselves ownership', 'include_SATD': False}, {'start_line': 474, 'end_line': 474, 'comment': ""# They can't delete it, either"", 'include_SATD': False}, {'start_line': 492, 'end_line': 492, 'comment': ""# Make sure anonymous user can't push up an image"", 'include_SATD': False}, {'start_line': 502, 'end_line': 502, 'comment': '# Now push up an image for anonymous user to try to access', 'include_SATD': False}, {'start_line': 519, 'end_line': 519, 'comment': ""# Make sure anonymous user can't list the image"", 'include_SATD': False}, {'start_line': 526, 'end_line': 526, 'comment': ""# Shouldn't show up in the detail list, either"", 'include_SATD': False}, {'start_line': 533, 'end_line': 533, 'comment': ""# Also check that anonymous can't get the image metadata"", 'include_SATD': False}, {'start_line': 539, 'end_line': 539, 'comment': '# Nor the image, either.', 'include_SATD': False}, {'start_line': 545, 'end_line': 545, 'comment': ""# Anonymous shouldn't be able to make the image public..."", 'include_SATD': False}, {'start_line': 552, 'end_line': 552, 'comment': '# Nor change ownership...', 'include_SATD': False}, {'start_line': 559, 'end_line': 559, 'comment': '# Nor even delete it...', 'include_SATD': False}, {'start_line': 565, 'end_line': 566, 'comment': ""# Now, let's use our admin credentials and change the # ownership to None..."", 'include_SATD': False}, {'start_line': 578, 'end_line': 578, 'comment': ""# Anonymous user still can't list image..."", 'include_SATD': False}, {'start_line': 585, 'end_line': 585, 'comment': '# Nor see it in details...', 'include_SATD': False}, {'start_line': 592, 'end_line': 592, 'comment': '# But they should be able to access the metadata...', 'include_SATD': False}, {'start_line': 601, 'end_line': 601, 'comment': '# And even the image itself...', 'include_SATD': False}, {'start_line': 611, 'end_line': 612, 'comment': ""# Anonymous still shouldn't be able to make the image # public..."", 'include_SATD': False}, {'start_line': 619, 'end_line': 619, 'comment': '# Nor change ownership...', 'include_SATD': False}, {'start_line': 626, 'end_line': 626, 'comment': '# Nor even delete it...', 'include_SATD': False}, {'start_line': 632, 'end_line': 632, 'comment': '# Now make the image public...', 'include_SATD': False}, {'start_line': 644, 'end_line': 644, 'comment': '# Now the user should see it in the list...', 'include_SATD': False}, {'start_line': 655, 'end_line': 655, 'comment': '# Especially in the details...', 'include_SATD': False}, {'start_line': 668, 'end_line': 668, 'comment': ""# But still can't change ownership..."", 'include_SATD': False}, {'start_line': 675, 'end_line': 675, 'comment': '# Or delete it...', 'include_SATD': False}, {'start_line': 700, 'end_line': 700, 'comment': '# Add a non-public image', 'include_SATD': False}, {'start_line': 709, 'end_line': 709, 'comment': '# Verify the attributes of the image', 'include_SATD': False}, {'start_line': 719, 'end_line': 719, 'comment': '# Test that we can update is_public through the CLI', 'include_SATD': False}, {'start_line': 727, 'end_line': 727, 'comment': '# Verify the appropriate change was made', 'include_SATD': False}, {'start_line': 737, 'end_line': 737, 'comment': '# Test that admin can change the owner', 'include_SATD': False}, {'start_line': 745, 'end_line': 745, 'comment': '# Verify the appropriate change was made', 'include_SATD': False}, {'start_line': 755, 'end_line': 755, 'comment': '# Test that admin can remove the owner', 'include_SATD': False}, {'start_line': 763, 'end_line': 763, 'comment': '# Verify the appropriate change was made', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_private_images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 32, 'end_line': 32, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 64, 'end_line': 64, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 67, 'end_line': 67, 'comment': '# Now add froggy as a shared image member', 'include_SATD': False}, {'start_line': 75, 'end_line': 75, 'comment': '# Ensure pattieblack can still see the image', 'include_SATD': False}, {'start_line': 86, 'end_line': 86, 'comment': '# Ensure froggy can see the image now', 'include_SATD': False}, {'start_line': 96, 'end_line': 96, 'comment': '# ensure that no one else can see the image', 'include_SATD': False}, {'start_line': 109, 'end_line': 109, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 113, 'end_line': 113, 'comment': '# Now add froggy as a shared image member', 'include_SATD': False}, {'start_line': 121, 'end_line': 121, 'comment': '# Ensure pattieblack can still see the image', 'include_SATD': False}, {'start_line': 132, 'end_line': 132, 'comment': '# Ensure froggy can see the image now', 'include_SATD': False}, {'start_line': 142, 'end_line': 142, 'comment': '# ensure that no one else can see the image', 'include_SATD': False}, {'start_line': 149, 'end_line': 149, 'comment': '# Replace froggy with bacon', 'include_SATD': False}, {'start_line': 160, 'end_line': 160, 'comment': '# Ensure bacon can see the image', 'include_SATD': False}, {'start_line': 171, 'end_line': 171, 'comment': '# ensure that no one else can see the image', 'include_SATD': False}, {'start_line': 184, 'end_line': 184, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 187, 'end_line': 187, 'comment': '# Now add froggy as a shared image member', 'include_SATD': False}, {'start_line': 196, 'end_line': 196, 'comment': '# Ensure pattieblack can still see the image', 'include_SATD': False}, {'start_line': 207, 'end_line': 207, 'comment': '# Ensure froggy can see the image now', 'include_SATD': False}, {'start_line': 217, 'end_line': 217, 'comment': '# ensure that no one else can see the image', 'include_SATD': False}, {'start_line': 224, 'end_line': 224, 'comment': '# Now remove froggy as a shared image member', 'include_SATD': False}, {'start_line': 232, 'end_line': 232, 'comment': '# ensure that no one else can see the image', 'include_SATD': False}, {'start_line': 239, 'end_line': 239, 'comment': '# ensure that no one else can access the image', 'include_SATD': False}, {'start_line': 246, 'end_line': 246, 'comment': '# Ensure pattieblack can still see the image', 'include_SATD': False}, {'start_line': 263, 'end_line': 263, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 266, 'end_line': 266, 'comment': '# Now add froggy as a shared image member', 'include_SATD': False}, {'start_line': 278, 'end_line': 278, 'comment': '# Ensure froggy can see the image now', 'include_SATD': False}, {'start_line': 289, 'end_line': 289, 'comment': '# Froggy is going to share with bacon', 'include_SATD': False}, {'start_line': 297, 'end_line': 297, 'comment': '# Ensure bacon can see the image now', 'include_SATD': False}, {'start_line': 308, 'end_line': 308, 'comment': '# Ensure prosciutto cannot see the image', 'include_SATD': False}, {'start_line': 314, 'end_line': 314, 'comment': '# Redundant, but prove prosciutto cannot share it', 'include_SATD': False}, {'start_line': 327, 'end_line': 327, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 330, 'end_line': 330, 'comment': '# Now add froggy as a shared image member', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': '# First, we need to push an image up', 'include_SATD': False}, {'start_line': 388, 'end_line': 388, 'comment': '# Push an image up', 'include_SATD': False}, {'start_line': 393, 'end_line': 393, 'comment': '# Test that we can add froggy as a shared image member', 'include_SATD': False}, {'start_line': 401, 'end_line': 401, 'comment': '# Verify the membership of the image', 'include_SATD': False}, {'start_line': 412, 'end_line': 412, 'comment': '# Test that we can replace a shared image membership list', 'include_SATD': False}, {'start_line': 421, 'end_line': 421, 'comment': '# Verify the membership of the image', 'include_SATD': False}, {'start_line': 432, 'end_line': 432, 'comment': '# Test that we can delete an image membership', 'include_SATD': False}, {'start_line': 440, 'end_line': 440, 'comment': '# Verify the membership of the image', 'include_SATD': False}, {'start_line': 456, 'end_line': 456, 'comment': '# Push an image up', 'include_SATD': False}, {'start_line': 461, 'end_line': 461, 'comment': '# Push a second image up', 'include_SATD': False}, {'start_line': 466, 'end_line': 466, 'comment': '# Share images with froggy and bacon', 'include_SATD': False}, {'start_line': 490, 'end_line': 490, 'comment': '# Get the list of image members', 'include_SATD': False}, {'start_line': 500, 'end_line': 500, 'comment': '# Try again for can_share', 'include_SATD': False}, {'start_line': 511, 'end_line': 511, 'comment': '# Get the list of member images', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_shared_images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 114, 'end_line': 115, 'comment': ""# If we're asked to omit the virtualenv, and if one is set up, # restore the various environment variables"", 'include_SATD': False}, {'start_line': 117, 'end_line': 117, 'comment': '# Clip off the first element of PATH', 'include_SATD': False}, {'start_line': 125, 'end_line': 125, 'comment': ""# Also jack in the path cmd comes from, if it's absolute"", 'include_SATD': False}, {'start_line': 158, 'end_line': 158, 'comment': '# Keep an eye out for the possibility of an absolute pathname', 'include_SATD': False}, {'start_line': 162, 'end_line': 162, 'comment': '# Get a list of the directories to search', 'include_SATD': False}, {'start_line': 166, 'end_line': 166, 'comment': '# Search through each in turn', 'include_SATD': False}, {'start_line': 172, 'end_line': 172, 'comment': '# No dice...', 'include_SATD': False}], 'filename': 'glance/tests/utils.py'}]}]",6,21,15,MERGED,True,https://review.opendev.org/#/c/333,Add functional tests,True,"{'# Keystone can take care of itself on this score': 1, ""# Froggy shouldn't be able to give themselves permission too # easily..."": 1, ""# Froggy shouldn't be able to give themselves ownership, # either"": 1}",True,{},False,{}
111,565,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 264, 'end_line': 264, 'comment': '# Discover_volume and undiscover_volume are called from compute', 'include_SATD': False}], 'b_comments': [{'start_line': 264, 'end_line': 264, 'comment': '# prepare_attach and prepare_detach are called from compute', 'include_SATD': False}], 'filename': 'nova/tests/integrated/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/manager.py'}, {'a_comments': [{'start_line': 63, 'end_line': 64, 'comment': '# discover_volume is still OK # undiscover_volume is still OK', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/volume/san.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/565,"Renamed discover_volume to prepare_attach, undiscover_volume to prepare_detach.",True,{},False,{},False,{}
112,574,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/037_kill_export_devices.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/574,fixing some pep8 errors.,True,{},False,{},False,{}
113,575,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 233, 'end_line': 233, 'comment': '# TODO(vish): refactor this into a more general ""reserve""', 'include_SATD': True}], 'filename': 'nova/volume/manager.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/575,fix log string and detach_volume,True,"{'# TODO(vish): refactor this into a more general ""reserve""': 1}",True,{},False,{}
114,427,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'swift/proxy/controllers/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 13, 'comment': '# Copyright (c) 2010-2011 OpenStack, LLC. # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # #    httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or # implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}], 'filename': 'swift/proxy/controllers/account.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 13, 'comment': '# Copyright (c) 2010-2011 OpenStack, LLC. # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # #    httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or # implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 168, 'end_line': 168, 'comment': '# 0 = no responses, 200 = found, 404 = not found, -1 = mixed responses', 'include_SATD': False}, {'start_line': 454, 'end_line': 454, 'comment': ""# 404 if we know we don't have a synced copy"", 'include_SATD': False}, {'start_line': 510, 'end_line': 510, 'comment': '# Used by container sync feature', 'include_SATD': False}, {'start_line': 523, 'end_line': 523, 'comment': '# Used by container sync feature', 'include_SATD': False}], 'filename': 'swift/proxy/controllers/base.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 13, 'comment': '# Copyright (c) 2010-2011 OpenStack, LLC. # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # #    httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or # implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 32, 'end_line': 32, 'comment': '# Ensure these are all lowercase', 'include_SATD': False}, {'start_line': 64, 'end_line': 64, 'comment': '# set the memcache container size for ratelimiting', 'include_SATD': False}, {'start_line': 182, 'end_line': 182, 'comment': '# Indicates no server had the container', 'include_SATD': False}], 'filename': 'swift/proxy/controllers/container.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 13, 'comment': '# Copyright (c) 2010-2011 OpenStack, LLC. # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # #    httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or # implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 182, 'end_line': 182, 'comment': '# Chop off the extra:', 'include_SATD': False}, {'start_line': 227, 'end_line': 229, 'comment': '# If we get a 416 Requested Range Not Satisfiable we have to check if # we were actually requesting a manifest object and then redo the range # request on the whole object.', 'include_SATD': False}, {'start_line': 275, 'end_line': 276, 'comment': '# We will serve large objects with a ton of segments with # chunked transfer encoding.', 'include_SATD': False}, {'start_line': 309, 'end_line': 314, 'comment': '# These shenanigans are because webob translates the HEAD # request into a webob EmptyResponse for the body, which # has a len, which eventlet translates as needing a # content-length header added. So we call the original # webob resp for the headers but return an empty iterator # for the body.', 'include_SATD': False}, {'start_line': 327, 'end_line': 328, 'comment': ""# For objects with a reasonable number of segments, we'll serve # them with a set content-length and computed etag."", 'include_SATD': False}, {'start_line': 376, 'end_line': 378, 'comment': ""# Older editions returned 202 Accepted on object POSTs, so we'll # convert any 201 Created responses to that for compatibility with # picky clients."", 'include_SATD': False}, {'start_line': 456, 'end_line': 456, 'comment': '# Used by container sync feature', 'include_SATD': False}, {'start_line': 461, 'end_line': 462, 'comment': '# For container sync PUTs, do a HEAD to see if we can # shortcircuit', 'include_SATD': False}, {'start_line': 477, 'end_line': 477, 'comment': ""# Sometimes the 'content-type' header exists, but is set to None."", 'include_SATD': False}, {'start_line': 521, 'end_line': 524, 'comment': ""# This indicates a transfer-encoding: chunked source object, # which currently only happens because there are more than # CONTAINER_LISTING_LIMIT segments in a segmented object. In # this case, we're going to refuse to do the server-side copy."", 'include_SATD': False}, {'start_line': 527, 'end_line': 527, 'comment': '# we no longer need the X-Copy-From header', 'include_SATD': False}, {'start_line': 647, 'end_line': 647, 'comment': ""# reset the bytes, since the user didn't actually send anything"", 'include_SATD': False}, {'start_line': 667, 'end_line': 667, 'comment': '# Used by container sync feature', 'include_SATD': False}, {'start_line': 708, 'end_line': 709, 'comment': '# re-write the existing request as a PUT instead of creating a new one # since this one is already attached to the posthooklogger', 'include_SATD': False}], 'filename': 'swift/proxy/controllers/obj.py'}, {'a_comments': [{'start_line': 246, 'end_line': 246, 'comment': '# Chop off the extra:', 'include_SATD': False}, {'start_line': 350, 'end_line': 350, 'comment': '# 0 = no responses, 200 = found, 404 = not found, -1 = mixed responses', 'include_SATD': False}, {'start_line': 636, 'end_line': 636, 'comment': ""# 404 if we know we don't have a synced copy"", 'include_SATD': False}, {'start_line': 692, 'end_line': 692, 'comment': '# Used by container sync feature', 'include_SATD': False}, {'start_line': 705, 'end_line': 705, 'comment': '# Used by container sync feature', 'include_SATD': False}, {'start_line': 744, 'end_line': 746, 'comment': '# If we get a 416 Requested Range Not Satisfiable we have to check if # we were actually requesting a manifest object and then redo the range # request on the whole object.', 'include_SATD': False}, {'start_line': 792, 'end_line': 793, 'comment': '# We will serve large objects with a ton of segments with # chunked transfer encoding.', 'include_SATD': False}, {'start_line': 826, 'end_line': 831, 'comment': '# These shenanigans are because webob translates the HEAD # request into a webob EmptyResponse for the body, which # has a len, which eventlet translates as needing a # content-length header added. So we call the original # webob resp for the headers but return an empty iterator # for the body.', 'include_SATD': False}, {'start_line': 844, 'end_line': 845, 'comment': ""# For objects with a reasonable number of segments, we'll serve # them with a set content-length and computed etag."", 'include_SATD': False}, {'start_line': 893, 'end_line': 895, 'comment': ""# Older editions returned 202 Accepted on object POSTs, so we'll # convert any 201 Created responses to that for compatibility with # picky clients."", 'include_SATD': False}, {'start_line': 973, 'end_line': 973, 'comment': '# Used by container sync feature', 'include_SATD': False}, {'start_line': 978, 'end_line': 979, 'comment': '# For container sync PUTs, do a HEAD to see if we can # shortcircuit', 'include_SATD': False}, {'start_line': 994, 'end_line': 994, 'comment': ""# Sometimes the 'content-type' header exists, but is set to None."", 'include_SATD': False}, {'start_line': 1038, 'end_line': 1041, 'comment': ""# This indicates a transfer-encoding: chunked source object, # which currently only happens because there are more than # CONTAINER_LISTING_LIMIT segments in a segmented object. In # this case, we're going to refuse to do the server-side copy."", 'include_SATD': False}, {'start_line': 1044, 'end_line': 1044, 'comment': '# we no longer need the X-Copy-From header', 'include_SATD': False}, {'start_line': 1164, 'end_line': 1164, 'comment': ""# reset the bytes, since the user didn't actually send anything"", 'include_SATD': False}, {'start_line': 1184, 'end_line': 1184, 'comment': '# Used by container sync feature', 'include_SATD': False}, {'start_line': 1225, 'end_line': 1226, 'comment': '# re-write the existing request as a PUT instead of creating a new one # since this one is already attached to the posthooklogger', 'include_SATD': False}, {'start_line': 1239, 'end_line': 1239, 'comment': '# Ensure these are all lowercase', 'include_SATD': False}, {'start_line': 1271, 'end_line': 1271, 'comment': '# set the memcache container size for ratelimiting', 'include_SATD': False}, {'start_line': 1389, 'end_line': 1389, 'comment': '# Indicates no server had the container', 'include_SATD': False}], 'b_comments': [], 'filename': 'swift/proxy/server.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 13, 'comment': '# Copyright (c) 2010-2011 OpenStack, LLC. # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # #    httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or # implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 55, 'end_line': 55, 'comment': '# mocks', 'include_SATD': False}, {'start_line': 63, 'end_line': 65, 'comment': ""# Since we're starting up a lot here, we're going to test more than # just chunked puts; we're also going to test parts of # proxy_server.Application we couldn't get to easily otherwise."", 'include_SATD': False}, {'start_line': 123, 'end_line': 123, 'comment': '# Create account', 'include_SATD': False}, {'start_line': 132, 'end_line': 132, 'comment': '# Create container', 'include_SATD': False}, {'start_line': 250, 'end_line': 251, 'comment': '# 9 total nodes (6 more past the initial 3) is the cap, no matter if # this is set higher.', 'include_SATD': False}, {'start_line': 269, 'end_line': 269, 'comment': '# 9 is the true cap', 'include_SATD': False}, {'start_line': 308, 'end_line': 309, 'comment': ""# Returns None as the timestamp of the container; assumes we're only # using the FakeMemcache for container existence checks."", 'include_SATD': False}, {'start_line': 334, 'end_line': 334, 'comment': '# tests', 'include_SATD': False}, {'start_line': 428, 'end_line': 428, 'comment': ""# can't connect on this port"", 'include_SATD': False}, {'start_line': 439, 'end_line': 439, 'comment': '# invalid port number', 'include_SATD': False}], 'filename': 'test/unit/proxy/test_account.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 13, 'comment': '# Copyright (c) 2010-2011 OpenStack, LLC. # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # #    httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or # implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 54, 'end_line': 54, 'comment': '# mocks', 'include_SATD': False}, {'start_line': 61, 'end_line': 63, 'comment': ""# Since we're starting up a lot here, we're going to test more than # just chunked puts; we're also going to test parts of # proxy_server.Application we couldn't get to easily otherwise."", 'include_SATD': False}, {'start_line': 121, 'end_line': 121, 'comment': '# Create account', 'include_SATD': False}, {'start_line': 130, 'end_line': 130, 'comment': '# Create container', 'include_SATD': False}, {'start_line': 248, 'end_line': 249, 'comment': '# 9 total nodes (6 more past the initial 3) is the cap, no matter if # this is set higher.', 'include_SATD': False}, {'start_line': 267, 'end_line': 267, 'comment': '# 9 is the true cap', 'include_SATD': False}, {'start_line': 306, 'end_line': 307, 'comment': ""# Returns None as the timestamp of the container; assumes we're only # using the FakeMemcache for container existence checks."", 'include_SATD': False}, {'start_line': 332, 'end_line': 332, 'comment': '# tests', 'include_SATD': False}, {'start_line': 367, 'end_line': 367, 'comment': '# tests if 200 is cached and used', 'include_SATD': False}, {'start_line': 381, 'end_line': 381, 'comment': '# tests if 404 is cached and used', 'include_SATD': False}, {'start_line': 395, 'end_line': 395, 'comment': '# tests if some http status codes are not cached', 'include_SATD': False}, {'start_line': 468, 'end_line': 468, 'comment': '# tests if 200 is cached and used', 'include_SATD': False}, {'start_line': 493, 'end_line': 493, 'comment': '# tests if 404 is cached and used', 'include_SATD': False}, {'start_line': 516, 'end_line': 516, 'comment': '# tests if some http status codes are not cached', 'include_SATD': False}], 'filename': 'test/unit/proxy/test_base.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 13, 'comment': '# Copyright (c) 2010-2011 OpenStack, LLC. # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # #    httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or # implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 55, 'end_line': 55, 'comment': '# mocks', 'include_SATD': False}, {'start_line': 62, 'end_line': 64, 'comment': ""# Since we're starting up a lot here, we're going to test more than # just chunked puts; we're also going to test parts of # proxy_server.Application we couldn't get to easily otherwise."", 'include_SATD': False}, {'start_line': 122, 'end_line': 122, 'comment': '# Create account', 'include_SATD': False}, {'start_line': 131, 'end_line': 131, 'comment': '# Create container', 'include_SATD': False}, {'start_line': 249, 'end_line': 250, 'comment': '# 9 total nodes (6 more past the initial 3) is the cap, no matter if # this is set higher.', 'include_SATD': False}, {'start_line': 268, 'end_line': 268, 'comment': '# 9 is the true cap', 'include_SATD': False}, {'start_line': 307, 'end_line': 308, 'comment': ""# Returns None as the timestamp of the container; assumes we're only # using the FakeMemcache for container existence checks."", 'include_SATD': False}, {'start_line': 333, 'end_line': 333, 'comment': '# tests', 'include_SATD': False}, {'start_line': 540, 'end_line': 540, 'comment': '# 200: Account check, 404x3: Container check', 'include_SATD': False}], 'filename': 'test/unit/proxy/test_container.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 13, 'comment': '# Copyright (c) 2010-2011 OpenStack, LLC. # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # #    httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or # implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 54, 'end_line': 54, 'comment': '# mocks', 'include_SATD': False}, {'start_line': 62, 'end_line': 64, 'comment': ""# Since we're starting up a lot here, we're going to test more than # just chunked puts; we're also going to test parts of # proxy_server.Application we couldn't get to easily otherwise."", 'include_SATD': False}, {'start_line': 123, 'end_line': 123, 'comment': '# Create account', 'include_SATD': False}, {'start_line': 132, 'end_line': 132, 'comment': '# Create container', 'include_SATD': False}, {'start_line': 253, 'end_line': 254, 'comment': '# 9 total nodes (6 more past the initial 3) is the cap, no matter if # this is set higher.', 'include_SATD': False}, {'start_line': 272, 'end_line': 272, 'comment': '# 9 is the true cap', 'include_SATD': False}, {'start_line': 311, 'end_line': 312, 'comment': ""# Returns None as the timestamp of the container; assumes we're only # using the FakeMemcache for container existence checks."", 'include_SATD': False}, {'start_line': 362, 'end_line': 362, 'comment': '# repeat test', 'include_SATD': False}, {'start_line': 475, 'end_line': 476, 'comment': '# expect timeout # error limited', 'include_SATD': False}, {'start_line': 768, 'end_line': 768, 'comment': '#                 acct cont obj  obj  obj', 'include_SATD': False}, {'start_line': 788, 'end_line': 788, 'comment': '#                 acct cont objc objc objc obj  obj  obj', 'include_SATD': False}, {'start_line': 809, 'end_line': 809, 'comment': '#                 acct cont obj  obj  obj', 'include_SATD': False}, {'start_line': 829, 'end_line': 829, 'comment': '#                 acct cont objc objc objc obj  obj  obj', 'include_SATD': False}, {'start_line': 904, 'end_line': 904, 'comment': '#                 acct cont obj  obj  obj', 'include_SATD': False}, {'start_line': 913, 'end_line': 913, 'comment': '#                 obj  obj  obj', 'include_SATD': False}, {'start_line': 947, 'end_line': 947, 'comment': '#                 acct cont obj  obj  obj', 'include_SATD': False}, {'start_line': 1138, 'end_line': 1138, 'comment': '#                 acct acct acct', 'include_SATD': False}, {'start_line': 1143, 'end_line': 1143, 'comment': '#                 acct acct acct', 'include_SATD': False}, {'start_line': 1148, 'end_line': 1148, 'comment': '#                 acct acct acct', 'include_SATD': False}, {'start_line': 1153, 'end_line': 1153, 'comment': '#                 acct acct acct', 'include_SATD': False}, {'start_line': 1158, 'end_line': 1158, 'comment': '#                 acct cont obj  obj  obj', 'include_SATD': False}, {'start_line': 1163, 'end_line': 1163, 'comment': '#                 acct cont cont cont', 'include_SATD': False}, {'start_line': 1168, 'end_line': 1168, 'comment': '#                 acct cont cont cont', 'include_SATD': False}, {'start_line': 1176, 'end_line': 1177, 'comment': ""#                 acct [isn't actually called since everything #                       is error limited]"", 'include_SATD': False}, {'start_line': 1187, 'end_line': 1188, 'comment': ""#                 acct cont [isn't actually called since #                            everything is error limited]"", 'include_SATD': False}, {'start_line': 1236, 'end_line': 1236, 'comment': '#                 acct cont obj  obj  obj', 'include_SATD': False}, {'start_line': 1327, 'end_line': 1327, 'comment': '# initial source object PUT', 'include_SATD': False}, {'start_line': 1332, 'end_line': 1332, 'comment': '#                 acct cont obj  obj  obj', 'include_SATD': False}, {'start_line': 1336, 'end_line': 1336, 'comment': '# basic copy', 'include_SATD': False}, {'start_line': 1343, 'end_line': 1344, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1350, 'end_line': 1350, 'comment': '# non-zero content length', 'include_SATD': False}, {'start_line': 1356, 'end_line': 1356, 'comment': '#                 acct cont acct cont objc objc objc', 'include_SATD': False}, {'start_line': 1361, 'end_line': 1361, 'comment': '# extra source path parsing', 'include_SATD': False}, {'start_line': 1368, 'end_line': 1369, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1375, 'end_line': 1375, 'comment': '# space in soure path', 'include_SATD': False}, {'start_line': 1382, 'end_line': 1383, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1389, 'end_line': 1389, 'comment': '# repeat tests with leading /', 'include_SATD': False}, {'start_line': 1396, 'end_line': 1397, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1409, 'end_line': 1410, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1416, 'end_line': 1416, 'comment': '# negative tests', 'include_SATD': False}, {'start_line': 1418, 'end_line': 1418, 'comment': '# invalid x-copy-from path', 'include_SATD': False}, {'start_line': 1425, 'end_line': 1425, 'comment': '# client error', 'include_SATD': False}, {'start_line': 1427, 'end_line': 1427, 'comment': '# server error', 'include_SATD': False}, {'start_line': 1433, 'end_line': 1433, 'comment': '#                 acct cont objc objc objc', 'include_SATD': False}, {'start_line': 1438, 'end_line': 1438, 'comment': '# not found', 'include_SATD': False}, {'start_line': 1444, 'end_line': 1444, 'comment': '#                 acct cont objc objc objc', 'include_SATD': False}, {'start_line': 1449, 'end_line': 1449, 'comment': '# some missing containers', 'include_SATD': False}, {'start_line': 1455, 'end_line': 1455, 'comment': '#                 acct cont objc objc objc obj  obj  obj', 'include_SATD': False}, {'start_line': 1460, 'end_line': 1460, 'comment': '# test object meta data', 'include_SATD': False}, {'start_line': 1467, 'end_line': 1467, 'comment': '#                 acct cont objc objc objc obj  obj  obj', 'include_SATD': False}, {'start_line': 1482, 'end_line': 1482, 'comment': '#                 acct cont obj  obj  obj', 'include_SATD': False}, {'start_line': 1491, 'end_line': 1492, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1505, 'end_line': 1506, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1518, 'end_line': 1519, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1532, 'end_line': 1533, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1544, 'end_line': 1544, 'comment': '#                 acct cont', 'include_SATD': False}, {'start_line': 1554, 'end_line': 1554, 'comment': '#                 acct cont objc objc objc', 'include_SATD': False}, {'start_line': 1564, 'end_line': 1564, 'comment': '#                 acct cont objc objc objc', 'include_SATD': False}, {'start_line': 1574, 'end_line': 1574, 'comment': '#                 acct cont objc objc objc obj  obj  obj', 'include_SATD': False}, {'start_line': 1585, 'end_line': 1585, 'comment': '#                 acct cont objc objc objc obj  obj  obj', 'include_SATD': False}, {'start_line': 1602, 'end_line': 1602, 'comment': '#                 acct cont objc objc objc obj  obj  obj', 'include_SATD': False}, {'start_line': 1642, 'end_line': 1642, 'comment': '# success', 'include_SATD': False}, {'start_line': 1644, 'end_line': 1644, 'comment': '# test 413 entity to large', 'include_SATD': False}, {'start_line': 1660, 'end_line': 1660, 'comment': '# Check bad version', 'include_SATD': False}, {'start_line': 1673, 'end_line': 1673, 'comment': '# Check bad path', 'include_SATD': False}, {'start_line': 1686, 'end_line': 1686, 'comment': '# Check invalid utf-8', 'include_SATD': False}, {'start_line': 1700, 'end_line': 1700, 'comment': '# Check bad path, no controller', 'include_SATD': False}, {'start_line': 1714, 'end_line': 1714, 'comment': '# Check bad method', 'include_SATD': False}, {'start_line': 1728, 'end_line': 1728, 'comment': '# Check unhandled exception', 'include_SATD': False}, {'start_line': 1751, 'end_line': 1753, 'comment': ""# Head account, just a double check and really is here to test # the part Application.log_request that 'enforces' a # content_length on the response."", 'include_SATD': False}, {'start_line': 1768, 'end_line': 1769, 'comment': '# test that the client ip field in the log gets populated with the # ip instead of being blank', 'include_SATD': False}, {'start_line': 1797, 'end_line': 1799, 'comment': '# GET account with a query string to test that # Application.log_request logs the query string. Also, throws # in a test for logging x-forwarded-for (first entry only).', 'include_SATD': False}, {'start_line': 1827, 'end_line': 1827, 'comment': '# Turn on header logging.', 'include_SATD': False}, {'start_line': 1846, 'end_line': 1846, 'comment': '# Test UTF-8 Unicode all the way through the system', 'include_SATD': False}, {'start_line': 1856, 'end_line': 1856, 'comment': '# Create ustr container', 'include_SATD': False}, {'start_line': 1868, 'end_line': 1868, 'comment': '# List account with ustr container (test plain)', 'include_SATD': False}, {'start_line': 1880, 'end_line': 1880, 'comment': '# List account with ustr container (test json)', 'include_SATD': False}, {'start_line': 1892, 'end_line': 1892, 'comment': '# List account with ustr container (test xml)', 'include_SATD': False}, {'start_line': 1903, 'end_line': 1903, 'comment': '# Create ustr object with ustr metadata in ustr container', 'include_SATD': False}, {'start_line': 1915, 'end_line': 1915, 'comment': '# List ustr container with ustr object (test plain)', 'include_SATD': False}, {'start_line': 1927, 'end_line': 1927, 'comment': '# List ustr container with ustr object (test json)', 'include_SATD': False}, {'start_line': 1940, 'end_line': 1940, 'comment': '# List ustr container with ustr object (test xml)', 'include_SATD': False}, {'start_line': 1952, 'end_line': 1952, 'comment': '# Retrieve ustr object with ustr metadata', 'include_SATD': False}, {'start_line': 1967, 'end_line': 1967, 'comment': '# Do chunked object put', 'include_SATD': False}, {'start_line': 1972, 'end_line': 1973, 'comment': '# Also happens to assert that x-storage-token is taken as a # replacement for x-auth-token.', 'include_SATD': False}, {'start_line': 1983, 'end_line': 1983, 'comment': '# Ensure we get what we put', 'include_SATD': False}, {'start_line': 1996, 'end_line': 1996, 'comment': '# Create a container for our segmented/manifest object testing', 'include_SATD': False}, {'start_line': 2008, 'end_line': 2008, 'comment': '# Create the object segments', 'include_SATD': False}, {'start_line': 2019, 'end_line': 2019, 'comment': '# Create the object manifest file', 'include_SATD': False}, {'start_line': 2031, 'end_line': 2031, 'comment': '# Ensure retrieving the manifest file gets the whole object', 'include_SATD': False}, {'start_line': 2046, 'end_line': 2046, 'comment': '# Do it again but exceeding the container listing limit', 'include_SATD': False}, {'start_line': 2060, 'end_line': 2061, 'comment': '# A bit fragile of a test; as it makes the assumption that all # will be sent in a single chunk.', 'include_SATD': False}, {'start_line': 2064, 'end_line': 2066, 'comment': '# Make a copy of the manifested object, which should # error since the number of segments exceeds # CONTAINER_LISTING_LIMIT.', 'include_SATD': False}, {'start_line': 2078, 'end_line': 2079, 'comment': '# After adjusting the CONTAINER_LISTING_LIMIT, make a copy of # the manifested object which should consolidate the segments.', 'include_SATD': False}, {'start_line': 2092, 'end_line': 2092, 'comment': '# Retrieve and validate the copy.', 'include_SATD': False}, {'start_line': 2106, 'end_line': 2106, 'comment': '# Create an object manifest file pointing to nothing', 'include_SATD': False}, {'start_line': 2117, 'end_line': 2117, 'comment': '# Ensure retrieving the manifest file gives a zero-byte file', 'include_SATD': False}, {'start_line': 2131, 'end_line': 2131, 'comment': '# Check copy content type', 'include_SATD': False}, {'start_line': 2151, 'end_line': 2151, 'comment': '# Ensure getting the copied file gets original content-type', 'include_SATD': False}, {'start_line': 2163, 'end_line': 2163, 'comment': '# Check set content type', 'include_SATD': False}, {'start_line': 2174, 'end_line': 2174, 'comment': '# Ensure getting the copied file gets original content-type', 'include_SATD': False}, {'start_line': 2186, 'end_line': 2186, 'comment': '# Check set content type with charset', 'include_SATD': False}, {'start_line': 2197, 'end_line': 2197, 'comment': '# Ensure getting the copied file gets original content-type', 'include_SATD': False}, {'start_line': 2212, 'end_line': 2212, 'comment': '# no etag supplied, object servers return success w/ diff values', 'include_SATD': False}, {'start_line': 2224, 'end_line': 2224, 'comment': '# server error', 'include_SATD': False}, {'start_line': 2226, 'end_line': 2226, 'comment': '# req supplies etag, object servers return 422 - mismatch', 'include_SATD': False}, {'start_line': 2239, 'end_line': 2239, 'comment': '# client error', 'include_SATD': False}, {'start_line': 2486, 'end_line': 2486, 'comment': ""# Iterator value isn't a dict"", 'include_SATD': False}, {'start_line': 2556, 'end_line': 2556, 'comment': ""# Iterator value isn't a dict"", 'include_SATD': False}, {'start_line': 2595, 'end_line': 2595, 'comment': ""# Iterator value isn't a dict"", 'include_SATD': False}], 'filename': 'test/unit/proxy/test_obj.py'}, {'a_comments': [{'start_line': 362, 'end_line': 362, 'comment': '# tests if 200 is cached and used', 'include_SATD': False}, {'start_line': 376, 'end_line': 376, 'comment': '# tests if 404 is cached and used', 'include_SATD': False}, {'start_line': 390, 'end_line': 390, 'comment': '# tests if some http status codes are not cached', 'include_SATD': False}, {'start_line': 468, 'end_line': 468, 'comment': '# tests if 200 is cached and used', 'include_SATD': False}, {'start_line': 494, 'end_line': 494, 'comment': '# tests if 404 is cached and used', 'include_SATD': False}, {'start_line': 517, 'end_line': 517, 'comment': '# tests if some http status codes are not cached', 'include_SATD': False}, {'start_line': 735, 'end_line': 735, 'comment': '# repeat test', 'include_SATD': False}, {'start_line': 847, 'end_line': 848, 'comment': '# expect timeout # error limited', 'include_SATD': False}, {'start_line': 1142, 'end_line': 1142, 'comment': '#                 acct cont obj  obj  obj', 'include_SATD': False}, {'start_line': 1163, 'end_line': 1163, 'comment': '#                 acct cont objc objc objc obj  obj  obj', 'include_SATD': False}, {'start_line': 1185, 'end_line': 1185, 'comment': '#                 acct cont obj  obj  obj', 'include_SATD': False}, {'start_line': 1206, 'end_line': 1206, 'comment': '#                 acct cont objc objc objc obj  obj  obj', 'include_SATD': False}, {'start_line': 1282, 'end_line': 1282, 'comment': '#                 acct cont obj  obj  obj', 'include_SATD': False}, {'start_line': 1292, 'end_line': 1292, 'comment': '#                 obj  obj  obj', 'include_SATD': False}, {'start_line': 1327, 'end_line': 1327, 'comment': '#                 acct cont obj  obj  obj', 'include_SATD': False}, {'start_line': 1525, 'end_line': 1525, 'comment': '#                 acct acct acct', 'include_SATD': False}, {'start_line': 1531, 'end_line': 1531, 'comment': '#                 acct acct acct', 'include_SATD': False}, {'start_line': 1537, 'end_line': 1537, 'comment': '#                 acct acct acct', 'include_SATD': False}, {'start_line': 1543, 'end_line': 1543, 'comment': '#                 acct acct acct', 'include_SATD': False}, {'start_line': 1549, 'end_line': 1549, 'comment': '#                 acct cont obj  obj  obj', 'include_SATD': False}, {'start_line': 1555, 'end_line': 1555, 'comment': '#                 acct cont cont cont', 'include_SATD': False}, {'start_line': 1561, 'end_line': 1561, 'comment': '#                 acct cont cont cont', 'include_SATD': False}, {'start_line': 1570, 'end_line': 1571, 'comment': ""#                 acct [isn't actually called since everything #                       is error limited]"", 'include_SATD': False}, {'start_line': 1582, 'end_line': 1583, 'comment': ""#                 acct cont [isn't actually called since #                            everything is error limited]"", 'include_SATD': False}, {'start_line': 1636, 'end_line': 1636, 'comment': '#                 acct cont obj  obj  obj', 'include_SATD': False}, {'start_line': 1727, 'end_line': 1727, 'comment': '# initial source object PUT', 'include_SATD': False}, {'start_line': 1733, 'end_line': 1733, 'comment': '#                 acct cont obj  obj  obj', 'include_SATD': False}, {'start_line': 1737, 'end_line': 1737, 'comment': '# basic copy', 'include_SATD': False}, {'start_line': 1745, 'end_line': 1746, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1752, 'end_line': 1752, 'comment': '# non-zero content length', 'include_SATD': False}, {'start_line': 1759, 'end_line': 1759, 'comment': '#                 acct cont acct cont objc objc objc', 'include_SATD': False}, {'start_line': 1764, 'end_line': 1764, 'comment': '# extra source path parsing', 'include_SATD': False}, {'start_line': 1772, 'end_line': 1773, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1779, 'end_line': 1779, 'comment': '# space in soure path', 'include_SATD': False}, {'start_line': 1787, 'end_line': 1788, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1794, 'end_line': 1794, 'comment': '# repeat tests with leading /', 'include_SATD': False}, {'start_line': 1802, 'end_line': 1803, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1816, 'end_line': 1817, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1823, 'end_line': 1823, 'comment': '# negative tests', 'include_SATD': False}, {'start_line': 1825, 'end_line': 1825, 'comment': '# invalid x-copy-from path', 'include_SATD': False}, {'start_line': 1832, 'end_line': 1832, 'comment': '# client error', 'include_SATD': False}, {'start_line': 1834, 'end_line': 1834, 'comment': '# server error', 'include_SATD': False}, {'start_line': 1841, 'end_line': 1841, 'comment': '#                 acct cont objc objc objc', 'include_SATD': False}, {'start_line': 1846, 'end_line': 1846, 'comment': '# not found', 'include_SATD': False}, {'start_line': 1853, 'end_line': 1853, 'comment': '#                 acct cont objc objc objc', 'include_SATD': False}, {'start_line': 1858, 'end_line': 1858, 'comment': '# some missing containers', 'include_SATD': False}, {'start_line': 1865, 'end_line': 1865, 'comment': '#                 acct cont objc objc objc obj  obj  obj', 'include_SATD': False}, {'start_line': 1870, 'end_line': 1870, 'comment': '# test object meta data', 'include_SATD': False}, {'start_line': 1878, 'end_line': 1878, 'comment': '#                 acct cont objc objc objc obj  obj  obj', 'include_SATD': False}, {'start_line': 1894, 'end_line': 1894, 'comment': '#                 acct cont obj  obj  obj', 'include_SATD': False}, {'start_line': 1904, 'end_line': 1905, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1919, 'end_line': 1920, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1933, 'end_line': 1934, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1948, 'end_line': 1949, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1961, 'end_line': 1961, 'comment': '#                 acct cont', 'include_SATD': False}, {'start_line': 1972, 'end_line': 1972, 'comment': '#                 acct cont objc objc objc', 'include_SATD': False}, {'start_line': 1983, 'end_line': 1983, 'comment': '#                 acct cont objc objc objc', 'include_SATD': False}, {'start_line': 1994, 'end_line': 1994, 'comment': '#                 acct cont objc objc objc obj  obj  obj', 'include_SATD': False}, {'start_line': 2006, 'end_line': 2006, 'comment': '#                 acct cont objc objc objc obj  obj  obj', 'include_SATD': False}, {'start_line': 2024, 'end_line': 2024, 'comment': '#                 acct cont objc objc objc obj  obj  obj', 'include_SATD': False}, {'start_line': 2064, 'end_line': 2064, 'comment': '# success', 'include_SATD': False}, {'start_line': 2066, 'end_line': 2066, 'comment': '# test 413 entity to large', 'include_SATD': False}, {'start_line': 2083, 'end_line': 2083, 'comment': '# Check bad version', 'include_SATD': False}, {'start_line': 2096, 'end_line': 2096, 'comment': '# Check bad path', 'include_SATD': False}, {'start_line': 2109, 'end_line': 2109, 'comment': '# Check invalid utf-8', 'include_SATD': False}, {'start_line': 2123, 'end_line': 2123, 'comment': '# Check bad path, no controller', 'include_SATD': False}, {'start_line': 2137, 'end_line': 2137, 'comment': '# Check bad method', 'include_SATD': False}, {'start_line': 2151, 'end_line': 2151, 'comment': '# Check unhandled exception', 'include_SATD': False}, {'start_line': 2174, 'end_line': 2176, 'comment': ""# Head account, just a double check and really is here to test # the part Application.log_request that 'enforces' a # content_length on the response."", 'include_SATD': False}, {'start_line': 2191, 'end_line': 2192, 'comment': '# test that the client ip field in the log gets populated with the # ip instead of being blank', 'include_SATD': False}, {'start_line': 2220, 'end_line': 2222, 'comment': '# GET account with a query string to test that # Application.log_request logs the query string. Also, throws # in a test for logging x-forwarded-for (first entry only).', 'include_SATD': False}, {'start_line': 2250, 'end_line': 2250, 'comment': '# Turn on header logging.', 'include_SATD': False}, {'start_line': 2269, 'end_line': 2269, 'comment': '# Test UTF-8 Unicode all the way through the system', 'include_SATD': False}, {'start_line': 2279, 'end_line': 2279, 'comment': '# Create ustr container', 'include_SATD': False}, {'start_line': 2291, 'end_line': 2291, 'comment': '# List account with ustr container (test plain)', 'include_SATD': False}, {'start_line': 2303, 'end_line': 2303, 'comment': '# List account with ustr container (test json)', 'include_SATD': False}, {'start_line': 2315, 'end_line': 2315, 'comment': '# List account with ustr container (test xml)', 'include_SATD': False}, {'start_line': 2326, 'end_line': 2326, 'comment': '# Create ustr object with ustr metadata in ustr container', 'include_SATD': False}, {'start_line': 2338, 'end_line': 2338, 'comment': '# List ustr container with ustr object (test plain)', 'include_SATD': False}, {'start_line': 2350, 'end_line': 2350, 'comment': '# List ustr container with ustr object (test json)', 'include_SATD': False}, {'start_line': 2363, 'end_line': 2363, 'comment': '# List ustr container with ustr object (test xml)', 'include_SATD': False}, {'start_line': 2375, 'end_line': 2375, 'comment': '# Retrieve ustr object with ustr metadata', 'include_SATD': False}, {'start_line': 2390, 'end_line': 2390, 'comment': '# Do chunked object put', 'include_SATD': False}, {'start_line': 2395, 'end_line': 2396, 'comment': '# Also happens to assert that x-storage-token is taken as a # replacement for x-auth-token.', 'include_SATD': False}, {'start_line': 2406, 'end_line': 2406, 'comment': '# Ensure we get what we put', 'include_SATD': False}, {'start_line': 2419, 'end_line': 2419, 'comment': '# Create a container for our segmented/manifest object testing', 'include_SATD': False}, {'start_line': 2431, 'end_line': 2431, 'comment': '# Create the object segments', 'include_SATD': False}, {'start_line': 2442, 'end_line': 2442, 'comment': '# Create the object manifest file', 'include_SATD': False}, {'start_line': 2454, 'end_line': 2454, 'comment': '# Ensure retrieving the manifest file gets the whole object', 'include_SATD': False}, {'start_line': 2469, 'end_line': 2469, 'comment': '# Do it again but exceeding the container listing limit', 'include_SATD': False}, {'start_line': 2483, 'end_line': 2484, 'comment': '# A bit fragile of a test; as it makes the assumption that all # will be sent in a single chunk.', 'include_SATD': False}, {'start_line': 2487, 'end_line': 2489, 'comment': '# Make a copy of the manifested object, which should # error since the number of segments exceeds # CONTAINER_LISTING_LIMIT.', 'include_SATD': False}, {'start_line': 2501, 'end_line': 2502, 'comment': '# After adjusting the CONTAINER_LISTING_LIMIT, make a copy of # the manifested object which should consolidate the segments.', 'include_SATD': False}, {'start_line': 2515, 'end_line': 2515, 'comment': '# Retrieve and validate the copy.', 'include_SATD': False}, {'start_line': 2529, 'end_line': 2529, 'comment': '# Create an object manifest file pointing to nothing', 'include_SATD': False}, {'start_line': 2540, 'end_line': 2540, 'comment': '# Ensure retrieving the manifest file gives a zero-byte file', 'include_SATD': False}, {'start_line': 2554, 'end_line': 2554, 'comment': '# Check copy content type', 'include_SATD': False}, {'start_line': 2574, 'end_line': 2574, 'comment': '# Ensure getting the copied file gets original content-type', 'include_SATD': False}, {'start_line': 2586, 'end_line': 2586, 'comment': '# Check set content type', 'include_SATD': False}, {'start_line': 2597, 'end_line': 2597, 'comment': '# Ensure getting the copied file gets original content-type', 'include_SATD': False}, {'start_line': 2609, 'end_line': 2609, 'comment': '# Check set content type with charset', 'include_SATD': False}, {'start_line': 2620, 'end_line': 2620, 'comment': '# Ensure getting the copied file gets original content-type', 'include_SATD': False}, {'start_line': 2635, 'end_line': 2635, 'comment': '# no etag supplied, object servers return success w/ diff values', 'include_SATD': False}, {'start_line': 2647, 'end_line': 2647, 'comment': '# server error', 'include_SATD': False}, {'start_line': 2649, 'end_line': 2649, 'comment': '# req supplies etag, object servers return 422 - mismatch', 'include_SATD': False}, {'start_line': 2662, 'end_line': 2662, 'comment': '# client error', 'include_SATD': False}, {'start_line': 3087, 'end_line': 3087, 'comment': '# 200: Account check, 404x3: Container check', 'include_SATD': False}, {'start_line': 3455, 'end_line': 3455, 'comment': ""# can't connect on this port"", 'include_SATD': False}, {'start_line': 3466, 'end_line': 3466, 'comment': '# invalid port number', 'include_SATD': False}, {'start_line': 3756, 'end_line': 3756, 'comment': ""# Iterator value isn't a dict"", 'include_SATD': False}, {'start_line': 3826, 'end_line': 3826, 'comment': ""# Iterator value isn't a dict"", 'include_SATD': False}, {'start_line': 3865, 'end_line': 3865, 'comment': ""# Iterator value isn't a dict"", 'include_SATD': False}], 'b_comments': [], 'filename': 'test/unit/proxy/test_server.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'swift/common/middleware/ratelimit.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'swift/proxy/controllers/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 13, 'comment': '# Copyright (c) 2010-2011 OpenStack, LLC. # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # #    httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or # implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}], 'filename': 'swift/proxy/controllers/account.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 13, 'comment': '# Copyright (c) 2010-2011 OpenStack, LLC. # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # #    httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or # implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 168, 'end_line': 168, 'comment': '# 0 = no responses, 200 = found, 404 = not found, -1 = mixed responses', 'include_SATD': False}, {'start_line': 454, 'end_line': 454, 'comment': ""# 404 if we know we don't have a synced copy"", 'include_SATD': False}, {'start_line': 510, 'end_line': 510, 'comment': '# Used by container sync feature', 'include_SATD': False}, {'start_line': 523, 'end_line': 523, 'comment': '# Used by container sync feature', 'include_SATD': False}], 'filename': 'swift/proxy/controllers/base.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 13, 'comment': '# Copyright (c) 2010-2011 OpenStack, LLC. # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # #    httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or # implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 32, 'end_line': 32, 'comment': '# Ensure these are all lowercase', 'include_SATD': False}, {'start_line': 64, 'end_line': 64, 'comment': '# set the memcache container size for ratelimiting', 'include_SATD': False}, {'start_line': 182, 'end_line': 182, 'comment': '# Indicates no server had the container', 'include_SATD': False}], 'filename': 'swift/proxy/controllers/container.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 13, 'comment': '# Copyright (c) 2010-2011 OpenStack, LLC. # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # #    httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or # implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 182, 'end_line': 182, 'comment': '# Chop off the extra:', 'include_SATD': False}, {'start_line': 227, 'end_line': 229, 'comment': '# If we get a 416 Requested Range Not Satisfiable we have to check if # we were actually requesting a manifest object and then redo the range # request on the whole object.', 'include_SATD': False}, {'start_line': 275, 'end_line': 276, 'comment': '# We will serve large objects with a ton of segments with # chunked transfer encoding.', 'include_SATD': False}, {'start_line': 309, 'end_line': 314, 'comment': '# These shenanigans are because webob translates the HEAD # request into a webob EmptyResponse for the body, which # has a len, which eventlet translates as needing a # content-length header added. So we call the original # webob resp for the headers but return an empty iterator # for the body.', 'include_SATD': False}, {'start_line': 327, 'end_line': 328, 'comment': ""# For objects with a reasonable number of segments, we'll serve # them with a set content-length and computed etag."", 'include_SATD': False}, {'start_line': 376, 'end_line': 378, 'comment': ""# Older editions returned 202 Accepted on object POSTs, so we'll # convert any 201 Created responses to that for compatibility with # picky clients."", 'include_SATD': False}, {'start_line': 456, 'end_line': 456, 'comment': '# Used by container sync feature', 'include_SATD': False}, {'start_line': 461, 'end_line': 462, 'comment': '# For container sync PUTs, do a HEAD to see if we can # shortcircuit', 'include_SATD': False}, {'start_line': 477, 'end_line': 477, 'comment': ""# Sometimes the 'content-type' header exists, but is set to None."", 'include_SATD': False}, {'start_line': 521, 'end_line': 524, 'comment': ""# This indicates a transfer-encoding: chunked source object, # which currently only happens because there are more than # CONTAINER_LISTING_LIMIT segments in a segmented object. In # this case, we're going to refuse to do the server-side copy."", 'include_SATD': False}, {'start_line': 527, 'end_line': 527, 'comment': '# we no longer need the X-Copy-From header', 'include_SATD': False}, {'start_line': 647, 'end_line': 647, 'comment': ""# reset the bytes, since the user didn't actually send anything"", 'include_SATD': False}, {'start_line': 667, 'end_line': 667, 'comment': '# Used by container sync feature', 'include_SATD': False}, {'start_line': 708, 'end_line': 709, 'comment': '# re-write the existing request as a PUT instead of creating a new one # since this one is already attached to the posthooklogger', 'include_SATD': False}], 'filename': 'swift/proxy/controllers/obj.py'}, {'a_comments': [{'start_line': 246, 'end_line': 246, 'comment': '# Chop off the extra:', 'include_SATD': False}, {'start_line': 350, 'end_line': 350, 'comment': '# 0 = no responses, 200 = found, 404 = not found, -1 = mixed responses', 'include_SATD': False}, {'start_line': 636, 'end_line': 636, 'comment': ""# 404 if we know we don't have a synced copy"", 'include_SATD': False}, {'start_line': 692, 'end_line': 692, 'comment': '# Used by container sync feature', 'include_SATD': False}, {'start_line': 705, 'end_line': 705, 'comment': '# Used by container sync feature', 'include_SATD': False}, {'start_line': 744, 'end_line': 746, 'comment': '# If we get a 416 Requested Range Not Satisfiable we have to check if # we were actually requesting a manifest object and then redo the range # request on the whole object.', 'include_SATD': False}, {'start_line': 792, 'end_line': 793, 'comment': '# We will serve large objects with a ton of segments with # chunked transfer encoding.', 'include_SATD': False}, {'start_line': 826, 'end_line': 831, 'comment': '# These shenanigans are because webob translates the HEAD # request into a webob EmptyResponse for the body, which # has a len, which eventlet translates as needing a # content-length header added. So we call the original # webob resp for the headers but return an empty iterator # for the body.', 'include_SATD': False}, {'start_line': 844, 'end_line': 845, 'comment': ""# For objects with a reasonable number of segments, we'll serve # them with a set content-length and computed etag."", 'include_SATD': False}, {'start_line': 893, 'end_line': 895, 'comment': ""# Older editions returned 202 Accepted on object POSTs, so we'll # convert any 201 Created responses to that for compatibility with # picky clients."", 'include_SATD': False}, {'start_line': 973, 'end_line': 973, 'comment': '# Used by container sync feature', 'include_SATD': False}, {'start_line': 978, 'end_line': 979, 'comment': '# For container sync PUTs, do a HEAD to see if we can # shortcircuit', 'include_SATD': False}, {'start_line': 994, 'end_line': 994, 'comment': ""# Sometimes the 'content-type' header exists, but is set to None."", 'include_SATD': False}, {'start_line': 1038, 'end_line': 1041, 'comment': ""# This indicates a transfer-encoding: chunked source object, # which currently only happens because there are more than # CONTAINER_LISTING_LIMIT segments in a segmented object. In # this case, we're going to refuse to do the server-side copy."", 'include_SATD': False}, {'start_line': 1044, 'end_line': 1044, 'comment': '# we no longer need the X-Copy-From header', 'include_SATD': False}, {'start_line': 1164, 'end_line': 1164, 'comment': ""# reset the bytes, since the user didn't actually send anything"", 'include_SATD': False}, {'start_line': 1184, 'end_line': 1184, 'comment': '# Used by container sync feature', 'include_SATD': False}, {'start_line': 1225, 'end_line': 1226, 'comment': '# re-write the existing request as a PUT instead of creating a new one # since this one is already attached to the posthooklogger', 'include_SATD': False}, {'start_line': 1239, 'end_line': 1239, 'comment': '# Ensure these are all lowercase', 'include_SATD': False}, {'start_line': 1271, 'end_line': 1271, 'comment': '# set the memcache container size for ratelimiting', 'include_SATD': False}, {'start_line': 1389, 'end_line': 1389, 'comment': '# Indicates no server had the container', 'include_SATD': False}], 'b_comments': [], 'filename': 'swift/proxy/server.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'test/unit/common/middleware/test_ratelimit.py'}, {'a_comments': [{'start_line': 21, 'end_line': 21, 'comment': '# TODO: mock http connection class with more control over headers', 'include_SATD': True}], 'b_comments': [{'start_line': 25, 'end_line': 25, 'comment': '# TODO: mock http connection class with more control over headers', 'include_SATD': True}], 'filename': 'test/unit/common/test_client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 13, 'comment': '# Copyright (c) 2010-2011 OpenStack, LLC. # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # #    httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or # implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 55, 'end_line': 55, 'comment': '# mocks', 'include_SATD': False}, {'start_line': 63, 'end_line': 65, 'comment': ""# Since we're starting up a lot here, we're going to test more than # just chunked puts; we're also going to test parts of # proxy_server.Application we couldn't get to easily otherwise."", 'include_SATD': False}, {'start_line': 123, 'end_line': 123, 'comment': '# Create account', 'include_SATD': False}, {'start_line': 132, 'end_line': 132, 'comment': '# Create container', 'include_SATD': False}, {'start_line': 250, 'end_line': 251, 'comment': '# 9 total nodes (6 more past the initial 3) is the cap, no matter if # this is set higher.', 'include_SATD': False}, {'start_line': 269, 'end_line': 269, 'comment': '# 9 is the true cap', 'include_SATD': False}, {'start_line': 308, 'end_line': 309, 'comment': ""# Returns None as the timestamp of the container; assumes we're only # using the FakeMemcache for container existence checks."", 'include_SATD': False}, {'start_line': 334, 'end_line': 334, 'comment': '# tests', 'include_SATD': False}, {'start_line': 428, 'end_line': 428, 'comment': ""# can't connect on this port"", 'include_SATD': False}, {'start_line': 439, 'end_line': 439, 'comment': '# invalid port number', 'include_SATD': False}], 'filename': 'test/unit/proxy/test_account.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 13, 'comment': '# Copyright (c) 2010-2011 OpenStack, LLC. # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # #    httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or # implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 54, 'end_line': 54, 'comment': '# mocks', 'include_SATD': False}, {'start_line': 61, 'end_line': 63, 'comment': ""# Since we're starting up a lot here, we're going to test more than # just chunked puts; we're also going to test parts of # proxy_server.Application we couldn't get to easily otherwise."", 'include_SATD': False}, {'start_line': 121, 'end_line': 121, 'comment': '# Create account', 'include_SATD': False}, {'start_line': 130, 'end_line': 130, 'comment': '# Create container', 'include_SATD': False}, {'start_line': 248, 'end_line': 249, 'comment': '# 9 total nodes (6 more past the initial 3) is the cap, no matter if # this is set higher.', 'include_SATD': False}, {'start_line': 267, 'end_line': 267, 'comment': '# 9 is the true cap', 'include_SATD': False}, {'start_line': 306, 'end_line': 307, 'comment': ""# Returns None as the timestamp of the container; assumes we're only # using the FakeMemcache for container existence checks."", 'include_SATD': False}, {'start_line': 332, 'end_line': 332, 'comment': '# tests', 'include_SATD': False}, {'start_line': 367, 'end_line': 367, 'comment': '# tests if 200 is cached and used', 'include_SATD': False}, {'start_line': 381, 'end_line': 381, 'comment': '# tests if 404 is cached and used', 'include_SATD': False}, {'start_line': 395, 'end_line': 395, 'comment': '# tests if some http status codes are not cached', 'include_SATD': False}, {'start_line': 468, 'end_line': 468, 'comment': '# tests if 200 is cached and used', 'include_SATD': False}, {'start_line': 493, 'end_line': 493, 'comment': '# tests if 404 is cached and used', 'include_SATD': False}, {'start_line': 516, 'end_line': 516, 'comment': '# tests if some http status codes are not cached', 'include_SATD': False}], 'filename': 'test/unit/proxy/test_base.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 13, 'comment': '# Copyright (c) 2010-2011 OpenStack, LLC. # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # #    httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or # implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 55, 'end_line': 55, 'comment': '# mocks', 'include_SATD': False}, {'start_line': 62, 'end_line': 64, 'comment': ""# Since we're starting up a lot here, we're going to test more than # just chunked puts; we're also going to test parts of # proxy_server.Application we couldn't get to easily otherwise."", 'include_SATD': False}, {'start_line': 122, 'end_line': 122, 'comment': '# Create account', 'include_SATD': False}, {'start_line': 131, 'end_line': 131, 'comment': '# Create container', 'include_SATD': False}, {'start_line': 249, 'end_line': 250, 'comment': '# 9 total nodes (6 more past the initial 3) is the cap, no matter if # this is set higher.', 'include_SATD': False}, {'start_line': 268, 'end_line': 268, 'comment': '# 9 is the true cap', 'include_SATD': False}, {'start_line': 307, 'end_line': 308, 'comment': ""# Returns None as the timestamp of the container; assumes we're only # using the FakeMemcache for container existence checks."", 'include_SATD': False}, {'start_line': 333, 'end_line': 333, 'comment': '# tests', 'include_SATD': False}, {'start_line': 540, 'end_line': 540, 'comment': '# 200: Account check, 404x3: Container check', 'include_SATD': False}], 'filename': 'test/unit/proxy/test_container.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 13, 'comment': '# Copyright (c) 2010-2011 OpenStack, LLC. # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # #    httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or # implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 54, 'end_line': 54, 'comment': '# mocks', 'include_SATD': False}, {'start_line': 62, 'end_line': 64, 'comment': ""# Since we're starting up a lot here, we're going to test more than # just chunked puts; we're also going to test parts of # proxy_server.Application we couldn't get to easily otherwise."", 'include_SATD': False}, {'start_line': 123, 'end_line': 123, 'comment': '# Create account', 'include_SATD': False}, {'start_line': 132, 'end_line': 132, 'comment': '# Create container', 'include_SATD': False}, {'start_line': 253, 'end_line': 254, 'comment': '# 9 total nodes (6 more past the initial 3) is the cap, no matter if # this is set higher.', 'include_SATD': False}, {'start_line': 272, 'end_line': 272, 'comment': '# 9 is the true cap', 'include_SATD': False}, {'start_line': 311, 'end_line': 312, 'comment': ""# Returns None as the timestamp of the container; assumes we're only # using the FakeMemcache for container existence checks."", 'include_SATD': False}, {'start_line': 362, 'end_line': 362, 'comment': '# repeat test', 'include_SATD': False}, {'start_line': 475, 'end_line': 476, 'comment': '# expect timeout # error limited', 'include_SATD': False}, {'start_line': 768, 'end_line': 768, 'comment': '#                 acct cont obj  obj  obj', 'include_SATD': False}, {'start_line': 788, 'end_line': 788, 'comment': '#                 acct cont objc objc objc obj  obj  obj', 'include_SATD': False}, {'start_line': 809, 'end_line': 809, 'comment': '#                 acct cont obj  obj  obj', 'include_SATD': False}, {'start_line': 829, 'end_line': 829, 'comment': '#                 acct cont objc objc objc obj  obj  obj', 'include_SATD': False}, {'start_line': 904, 'end_line': 904, 'comment': '#                 acct cont obj  obj  obj', 'include_SATD': False}, {'start_line': 913, 'end_line': 913, 'comment': '#                 obj  obj  obj', 'include_SATD': False}, {'start_line': 947, 'end_line': 947, 'comment': '#                 acct cont obj  obj  obj', 'include_SATD': False}, {'start_line': 1138, 'end_line': 1138, 'comment': '#                 acct acct acct', 'include_SATD': False}, {'start_line': 1143, 'end_line': 1143, 'comment': '#                 acct acct acct', 'include_SATD': False}, {'start_line': 1148, 'end_line': 1148, 'comment': '#                 acct acct acct', 'include_SATD': False}, {'start_line': 1153, 'end_line': 1153, 'comment': '#                 acct acct acct', 'include_SATD': False}, {'start_line': 1158, 'end_line': 1158, 'comment': '#                 acct cont obj  obj  obj', 'include_SATD': False}, {'start_line': 1163, 'end_line': 1163, 'comment': '#                 acct cont cont cont', 'include_SATD': False}, {'start_line': 1168, 'end_line': 1168, 'comment': '#                 acct cont cont cont', 'include_SATD': False}, {'start_line': 1176, 'end_line': 1177, 'comment': ""#                 acct [isn't actually called since everything #                       is error limited]"", 'include_SATD': False}, {'start_line': 1187, 'end_line': 1188, 'comment': ""#                 acct cont [isn't actually called since #                            everything is error limited]"", 'include_SATD': False}, {'start_line': 1236, 'end_line': 1236, 'comment': '#                 acct cont obj  obj  obj', 'include_SATD': False}, {'start_line': 1327, 'end_line': 1327, 'comment': '# initial source object PUT', 'include_SATD': False}, {'start_line': 1332, 'end_line': 1332, 'comment': '#                 acct cont obj  obj  obj', 'include_SATD': False}, {'start_line': 1336, 'end_line': 1336, 'comment': '# basic copy', 'include_SATD': False}, {'start_line': 1343, 'end_line': 1344, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1350, 'end_line': 1350, 'comment': '# non-zero content length', 'include_SATD': False}, {'start_line': 1356, 'end_line': 1356, 'comment': '#                 acct cont acct cont objc objc objc', 'include_SATD': False}, {'start_line': 1361, 'end_line': 1361, 'comment': '# extra source path parsing', 'include_SATD': False}, {'start_line': 1368, 'end_line': 1369, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1375, 'end_line': 1375, 'comment': '# space in soure path', 'include_SATD': False}, {'start_line': 1382, 'end_line': 1383, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1389, 'end_line': 1389, 'comment': '# repeat tests with leading /', 'include_SATD': False}, {'start_line': 1396, 'end_line': 1397, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1409, 'end_line': 1410, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1416, 'end_line': 1416, 'comment': '# negative tests', 'include_SATD': False}, {'start_line': 1418, 'end_line': 1418, 'comment': '# invalid x-copy-from path', 'include_SATD': False}, {'start_line': 1425, 'end_line': 1425, 'comment': '# client error', 'include_SATD': False}, {'start_line': 1427, 'end_line': 1427, 'comment': '# server error', 'include_SATD': False}, {'start_line': 1433, 'end_line': 1433, 'comment': '#                 acct cont objc objc objc', 'include_SATD': False}, {'start_line': 1438, 'end_line': 1438, 'comment': '# not found', 'include_SATD': False}, {'start_line': 1444, 'end_line': 1444, 'comment': '#                 acct cont objc objc objc', 'include_SATD': False}, {'start_line': 1449, 'end_line': 1449, 'comment': '# some missing containers', 'include_SATD': False}, {'start_line': 1455, 'end_line': 1455, 'comment': '#                 acct cont objc objc objc obj  obj  obj', 'include_SATD': False}, {'start_line': 1460, 'end_line': 1460, 'comment': '# test object meta data', 'include_SATD': False}, {'start_line': 1467, 'end_line': 1467, 'comment': '#                 acct cont objc objc objc obj  obj  obj', 'include_SATD': False}, {'start_line': 1482, 'end_line': 1482, 'comment': '#                 acct cont obj  obj  obj', 'include_SATD': False}, {'start_line': 1491, 'end_line': 1492, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1505, 'end_line': 1506, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1518, 'end_line': 1519, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1532, 'end_line': 1533, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1544, 'end_line': 1544, 'comment': '#                 acct cont', 'include_SATD': False}, {'start_line': 1554, 'end_line': 1554, 'comment': '#                 acct cont objc objc objc', 'include_SATD': False}, {'start_line': 1564, 'end_line': 1564, 'comment': '#                 acct cont objc objc objc', 'include_SATD': False}, {'start_line': 1574, 'end_line': 1574, 'comment': '#                 acct cont objc objc objc obj  obj  obj', 'include_SATD': False}, {'start_line': 1585, 'end_line': 1585, 'comment': '#                 acct cont objc objc objc obj  obj  obj', 'include_SATD': False}, {'start_line': 1602, 'end_line': 1602, 'comment': '#                 acct cont objc objc objc obj  obj  obj', 'include_SATD': False}, {'start_line': 1642, 'end_line': 1642, 'comment': '# success', 'include_SATD': False}, {'start_line': 1644, 'end_line': 1644, 'comment': '# test 413 entity to large', 'include_SATD': False}, {'start_line': 1660, 'end_line': 1660, 'comment': '# Check bad version', 'include_SATD': False}, {'start_line': 1673, 'end_line': 1673, 'comment': '# Check bad path', 'include_SATD': False}, {'start_line': 1686, 'end_line': 1686, 'comment': '# Check invalid utf-8', 'include_SATD': False}, {'start_line': 1700, 'end_line': 1700, 'comment': '# Check bad path, no controller', 'include_SATD': False}, {'start_line': 1714, 'end_line': 1714, 'comment': '# Check bad method', 'include_SATD': False}, {'start_line': 1728, 'end_line': 1728, 'comment': '# Check unhandled exception', 'include_SATD': False}, {'start_line': 1751, 'end_line': 1753, 'comment': ""# Head account, just a double check and really is here to test # the part Application.log_request that 'enforces' a # content_length on the response."", 'include_SATD': False}, {'start_line': 1768, 'end_line': 1769, 'comment': '# test that the client ip field in the log gets populated with the # ip instead of being blank', 'include_SATD': False}, {'start_line': 1797, 'end_line': 1799, 'comment': '# GET account with a query string to test that # Application.log_request logs the query string. Also, throws # in a test for logging x-forwarded-for (first entry only).', 'include_SATD': False}, {'start_line': 1827, 'end_line': 1827, 'comment': '# Turn on header logging.', 'include_SATD': False}, {'start_line': 1846, 'end_line': 1846, 'comment': '# Test UTF-8 Unicode all the way through the system', 'include_SATD': False}, {'start_line': 1856, 'end_line': 1856, 'comment': '# Create ustr container', 'include_SATD': False}, {'start_line': 1868, 'end_line': 1868, 'comment': '# List account with ustr container (test plain)', 'include_SATD': False}, {'start_line': 1880, 'end_line': 1880, 'comment': '# List account with ustr container (test json)', 'include_SATD': False}, {'start_line': 1892, 'end_line': 1892, 'comment': '# List account with ustr container (test xml)', 'include_SATD': False}, {'start_line': 1903, 'end_line': 1903, 'comment': '# Create ustr object with ustr metadata in ustr container', 'include_SATD': False}, {'start_line': 1915, 'end_line': 1915, 'comment': '# List ustr container with ustr object (test plain)', 'include_SATD': False}, {'start_line': 1927, 'end_line': 1927, 'comment': '# List ustr container with ustr object (test json)', 'include_SATD': False}, {'start_line': 1940, 'end_line': 1940, 'comment': '# List ustr container with ustr object (test xml)', 'include_SATD': False}, {'start_line': 1952, 'end_line': 1952, 'comment': '# Retrieve ustr object with ustr metadata', 'include_SATD': False}, {'start_line': 1967, 'end_line': 1967, 'comment': '# Do chunked object put', 'include_SATD': False}, {'start_line': 1972, 'end_line': 1973, 'comment': '# Also happens to assert that x-storage-token is taken as a # replacement for x-auth-token.', 'include_SATD': False}, {'start_line': 1983, 'end_line': 1983, 'comment': '# Ensure we get what we put', 'include_SATD': False}, {'start_line': 1996, 'end_line': 1996, 'comment': '# Create a container for our segmented/manifest object testing', 'include_SATD': False}, {'start_line': 2008, 'end_line': 2008, 'comment': '# Create the object segments', 'include_SATD': False}, {'start_line': 2019, 'end_line': 2019, 'comment': '# Create the object manifest file', 'include_SATD': False}, {'start_line': 2031, 'end_line': 2031, 'comment': '# Ensure retrieving the manifest file gets the whole object', 'include_SATD': False}, {'start_line': 2046, 'end_line': 2046, 'comment': '# Do it again but exceeding the container listing limit', 'include_SATD': False}, {'start_line': 2060, 'end_line': 2061, 'comment': '# A bit fragile of a test; as it makes the assumption that all # will be sent in a single chunk.', 'include_SATD': False}, {'start_line': 2064, 'end_line': 2066, 'comment': '# Make a copy of the manifested object, which should # error since the number of segments exceeds # CONTAINER_LISTING_LIMIT.', 'include_SATD': False}, {'start_line': 2078, 'end_line': 2079, 'comment': '# After adjusting the CONTAINER_LISTING_LIMIT, make a copy of # the manifested object which should consolidate the segments.', 'include_SATD': False}, {'start_line': 2092, 'end_line': 2092, 'comment': '# Retrieve and validate the copy.', 'include_SATD': False}, {'start_line': 2106, 'end_line': 2106, 'comment': '# Create an object manifest file pointing to nothing', 'include_SATD': False}, {'start_line': 2117, 'end_line': 2117, 'comment': '# Ensure retrieving the manifest file gives a zero-byte file', 'include_SATD': False}, {'start_line': 2131, 'end_line': 2131, 'comment': '# Check copy content type', 'include_SATD': False}, {'start_line': 2151, 'end_line': 2151, 'comment': '# Ensure getting the copied file gets original content-type', 'include_SATD': False}, {'start_line': 2163, 'end_line': 2163, 'comment': '# Check set content type', 'include_SATD': False}, {'start_line': 2174, 'end_line': 2174, 'comment': '# Ensure getting the copied file gets original content-type', 'include_SATD': False}, {'start_line': 2186, 'end_line': 2186, 'comment': '# Check set content type with charset', 'include_SATD': False}, {'start_line': 2197, 'end_line': 2197, 'comment': '# Ensure getting the copied file gets original content-type', 'include_SATD': False}, {'start_line': 2212, 'end_line': 2212, 'comment': '# no etag supplied, object servers return success w/ diff values', 'include_SATD': False}, {'start_line': 2224, 'end_line': 2224, 'comment': '# server error', 'include_SATD': False}, {'start_line': 2226, 'end_line': 2226, 'comment': '# req supplies etag, object servers return 422 - mismatch', 'include_SATD': False}, {'start_line': 2239, 'end_line': 2239, 'comment': '# client error', 'include_SATD': False}, {'start_line': 2486, 'end_line': 2486, 'comment': ""# Iterator value isn't a dict"", 'include_SATD': False}, {'start_line': 2556, 'end_line': 2556, 'comment': ""# Iterator value isn't a dict"", 'include_SATD': False}, {'start_line': 2595, 'end_line': 2595, 'comment': ""# Iterator value isn't a dict"", 'include_SATD': False}], 'filename': 'test/unit/proxy/test_obj.py'}, {'a_comments': [{'start_line': 362, 'end_line': 362, 'comment': '# tests if 200 is cached and used', 'include_SATD': False}, {'start_line': 376, 'end_line': 376, 'comment': '# tests if 404 is cached and used', 'include_SATD': False}, {'start_line': 390, 'end_line': 390, 'comment': '# tests if some http status codes are not cached', 'include_SATD': False}, {'start_line': 468, 'end_line': 468, 'comment': '# tests if 200 is cached and used', 'include_SATD': False}, {'start_line': 494, 'end_line': 494, 'comment': '# tests if 404 is cached and used', 'include_SATD': False}, {'start_line': 517, 'end_line': 517, 'comment': '# tests if some http status codes are not cached', 'include_SATD': False}, {'start_line': 735, 'end_line': 735, 'comment': '# repeat test', 'include_SATD': False}, {'start_line': 847, 'end_line': 848, 'comment': '# expect timeout # error limited', 'include_SATD': False}, {'start_line': 1142, 'end_line': 1142, 'comment': '#                 acct cont obj  obj  obj', 'include_SATD': False}, {'start_line': 1163, 'end_line': 1163, 'comment': '#                 acct cont objc objc objc obj  obj  obj', 'include_SATD': False}, {'start_line': 1185, 'end_line': 1185, 'comment': '#                 acct cont obj  obj  obj', 'include_SATD': False}, {'start_line': 1206, 'end_line': 1206, 'comment': '#                 acct cont objc objc objc obj  obj  obj', 'include_SATD': False}, {'start_line': 1282, 'end_line': 1282, 'comment': '#                 acct cont obj  obj  obj', 'include_SATD': False}, {'start_line': 1292, 'end_line': 1292, 'comment': '#                 obj  obj  obj', 'include_SATD': False}, {'start_line': 1327, 'end_line': 1327, 'comment': '#                 acct cont obj  obj  obj', 'include_SATD': False}, {'start_line': 1525, 'end_line': 1525, 'comment': '#                 acct acct acct', 'include_SATD': False}, {'start_line': 1531, 'end_line': 1531, 'comment': '#                 acct acct acct', 'include_SATD': False}, {'start_line': 1537, 'end_line': 1537, 'comment': '#                 acct acct acct', 'include_SATD': False}, {'start_line': 1543, 'end_line': 1543, 'comment': '#                 acct acct acct', 'include_SATD': False}, {'start_line': 1549, 'end_line': 1549, 'comment': '#                 acct cont obj  obj  obj', 'include_SATD': False}, {'start_line': 1555, 'end_line': 1555, 'comment': '#                 acct cont cont cont', 'include_SATD': False}, {'start_line': 1561, 'end_line': 1561, 'comment': '#                 acct cont cont cont', 'include_SATD': False}, {'start_line': 1570, 'end_line': 1571, 'comment': ""#                 acct [isn't actually called since everything #                       is error limited]"", 'include_SATD': False}, {'start_line': 1582, 'end_line': 1583, 'comment': ""#                 acct cont [isn't actually called since #                            everything is error limited]"", 'include_SATD': False}, {'start_line': 1636, 'end_line': 1636, 'comment': '#                 acct cont obj  obj  obj', 'include_SATD': False}, {'start_line': 1727, 'end_line': 1727, 'comment': '# initial source object PUT', 'include_SATD': False}, {'start_line': 1733, 'end_line': 1733, 'comment': '#                 acct cont obj  obj  obj', 'include_SATD': False}, {'start_line': 1737, 'end_line': 1737, 'comment': '# basic copy', 'include_SATD': False}, {'start_line': 1745, 'end_line': 1746, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1752, 'end_line': 1752, 'comment': '# non-zero content length', 'include_SATD': False}, {'start_line': 1759, 'end_line': 1759, 'comment': '#                 acct cont acct cont objc objc objc', 'include_SATD': False}, {'start_line': 1764, 'end_line': 1764, 'comment': '# extra source path parsing', 'include_SATD': False}, {'start_line': 1772, 'end_line': 1773, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1779, 'end_line': 1779, 'comment': '# space in soure path', 'include_SATD': False}, {'start_line': 1787, 'end_line': 1788, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1794, 'end_line': 1794, 'comment': '# repeat tests with leading /', 'include_SATD': False}, {'start_line': 1802, 'end_line': 1803, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1816, 'end_line': 1817, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1823, 'end_line': 1823, 'comment': '# negative tests', 'include_SATD': False}, {'start_line': 1825, 'end_line': 1825, 'comment': '# invalid x-copy-from path', 'include_SATD': False}, {'start_line': 1832, 'end_line': 1832, 'comment': '# client error', 'include_SATD': False}, {'start_line': 1834, 'end_line': 1834, 'comment': '# server error', 'include_SATD': False}, {'start_line': 1841, 'end_line': 1841, 'comment': '#                 acct cont objc objc objc', 'include_SATD': False}, {'start_line': 1846, 'end_line': 1846, 'comment': '# not found', 'include_SATD': False}, {'start_line': 1853, 'end_line': 1853, 'comment': '#                 acct cont objc objc objc', 'include_SATD': False}, {'start_line': 1858, 'end_line': 1858, 'comment': '# some missing containers', 'include_SATD': False}, {'start_line': 1865, 'end_line': 1865, 'comment': '#                 acct cont objc objc objc obj  obj  obj', 'include_SATD': False}, {'start_line': 1870, 'end_line': 1870, 'comment': '# test object meta data', 'include_SATD': False}, {'start_line': 1878, 'end_line': 1878, 'comment': '#                 acct cont objc objc objc obj  obj  obj', 'include_SATD': False}, {'start_line': 1894, 'end_line': 1894, 'comment': '#                 acct cont obj  obj  obj', 'include_SATD': False}, {'start_line': 1904, 'end_line': 1905, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1919, 'end_line': 1920, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1933, 'end_line': 1934, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1948, 'end_line': 1949, 'comment': '#                 acct cont acct cont objc objc objc obj  obj #   obj', 'include_SATD': False}, {'start_line': 1961, 'end_line': 1961, 'comment': '#                 acct cont', 'include_SATD': False}, {'start_line': 1972, 'end_line': 1972, 'comment': '#                 acct cont objc objc objc', 'include_SATD': False}, {'start_line': 1983, 'end_line': 1983, 'comment': '#                 acct cont objc objc objc', 'include_SATD': False}, {'start_line': 1994, 'end_line': 1994, 'comment': '#                 acct cont objc objc objc obj  obj  obj', 'include_SATD': False}, {'start_line': 2006, 'end_line': 2006, 'comment': '#                 acct cont objc objc objc obj  obj  obj', 'include_SATD': False}, {'start_line': 2024, 'end_line': 2024, 'comment': '#                 acct cont objc objc objc obj  obj  obj', 'include_SATD': False}, {'start_line': 2064, 'end_line': 2064, 'comment': '# success', 'include_SATD': False}, {'start_line': 2066, 'end_line': 2066, 'comment': '# test 413 entity to large', 'include_SATD': False}, {'start_line': 2083, 'end_line': 2083, 'comment': '# Check bad version', 'include_SATD': False}, {'start_line': 2096, 'end_line': 2096, 'comment': '# Check bad path', 'include_SATD': False}, {'start_line': 2109, 'end_line': 2109, 'comment': '# Check invalid utf-8', 'include_SATD': False}, {'start_line': 2123, 'end_line': 2123, 'comment': '# Check bad path, no controller', 'include_SATD': False}, {'start_line': 2137, 'end_line': 2137, 'comment': '# Check bad method', 'include_SATD': False}, {'start_line': 2151, 'end_line': 2151, 'comment': '# Check unhandled exception', 'include_SATD': False}, {'start_line': 2174, 'end_line': 2176, 'comment': ""# Head account, just a double check and really is here to test # the part Application.log_request that 'enforces' a # content_length on the response."", 'include_SATD': False}, {'start_line': 2191, 'end_line': 2192, 'comment': '# test that the client ip field in the log gets populated with the # ip instead of being blank', 'include_SATD': False}, {'start_line': 2220, 'end_line': 2222, 'comment': '# GET account with a query string to test that # Application.log_request logs the query string. Also, throws # in a test for logging x-forwarded-for (first entry only).', 'include_SATD': False}, {'start_line': 2250, 'end_line': 2250, 'comment': '# Turn on header logging.', 'include_SATD': False}, {'start_line': 2269, 'end_line': 2269, 'comment': '# Test UTF-8 Unicode all the way through the system', 'include_SATD': False}, {'start_line': 2279, 'end_line': 2279, 'comment': '# Create ustr container', 'include_SATD': False}, {'start_line': 2291, 'end_line': 2291, 'comment': '# List account with ustr container (test plain)', 'include_SATD': False}, {'start_line': 2303, 'end_line': 2303, 'comment': '# List account with ustr container (test json)', 'include_SATD': False}, {'start_line': 2315, 'end_line': 2315, 'comment': '# List account with ustr container (test xml)', 'include_SATD': False}, {'start_line': 2326, 'end_line': 2326, 'comment': '# Create ustr object with ustr metadata in ustr container', 'include_SATD': False}, {'start_line': 2338, 'end_line': 2338, 'comment': '# List ustr container with ustr object (test plain)', 'include_SATD': False}, {'start_line': 2350, 'end_line': 2350, 'comment': '# List ustr container with ustr object (test json)', 'include_SATD': False}, {'start_line': 2363, 'end_line': 2363, 'comment': '# List ustr container with ustr object (test xml)', 'include_SATD': False}, {'start_line': 2375, 'end_line': 2375, 'comment': '# Retrieve ustr object with ustr metadata', 'include_SATD': False}, {'start_line': 2390, 'end_line': 2390, 'comment': '# Do chunked object put', 'include_SATD': False}, {'start_line': 2395, 'end_line': 2396, 'comment': '# Also happens to assert that x-storage-token is taken as a # replacement for x-auth-token.', 'include_SATD': False}, {'start_line': 2406, 'end_line': 2406, 'comment': '# Ensure we get what we put', 'include_SATD': False}, {'start_line': 2419, 'end_line': 2419, 'comment': '# Create a container for our segmented/manifest object testing', 'include_SATD': False}, {'start_line': 2431, 'end_line': 2431, 'comment': '# Create the object segments', 'include_SATD': False}, {'start_line': 2442, 'end_line': 2442, 'comment': '# Create the object manifest file', 'include_SATD': False}, {'start_line': 2454, 'end_line': 2454, 'comment': '# Ensure retrieving the manifest file gets the whole object', 'include_SATD': False}, {'start_line': 2469, 'end_line': 2469, 'comment': '# Do it again but exceeding the container listing limit', 'include_SATD': False}, {'start_line': 2483, 'end_line': 2484, 'comment': '# A bit fragile of a test; as it makes the assumption that all # will be sent in a single chunk.', 'include_SATD': False}, {'start_line': 2487, 'end_line': 2489, 'comment': '# Make a copy of the manifested object, which should # error since the number of segments exceeds # CONTAINER_LISTING_LIMIT.', 'include_SATD': False}, {'start_line': 2501, 'end_line': 2502, 'comment': '# After adjusting the CONTAINER_LISTING_LIMIT, make a copy of # the manifested object which should consolidate the segments.', 'include_SATD': False}, {'start_line': 2515, 'end_line': 2515, 'comment': '# Retrieve and validate the copy.', 'include_SATD': False}, {'start_line': 2529, 'end_line': 2529, 'comment': '# Create an object manifest file pointing to nothing', 'include_SATD': False}, {'start_line': 2540, 'end_line': 2540, 'comment': '# Ensure retrieving the manifest file gives a zero-byte file', 'include_SATD': False}, {'start_line': 2554, 'end_line': 2554, 'comment': '# Check copy content type', 'include_SATD': False}, {'start_line': 2574, 'end_line': 2574, 'comment': '# Ensure getting the copied file gets original content-type', 'include_SATD': False}, {'start_line': 2586, 'end_line': 2586, 'comment': '# Check set content type', 'include_SATD': False}, {'start_line': 2597, 'end_line': 2597, 'comment': '# Ensure getting the copied file gets original content-type', 'include_SATD': False}, {'start_line': 2609, 'end_line': 2609, 'comment': '# Check set content type with charset', 'include_SATD': False}, {'start_line': 2620, 'end_line': 2620, 'comment': '# Ensure getting the copied file gets original content-type', 'include_SATD': False}, {'start_line': 2635, 'end_line': 2635, 'comment': '# no etag supplied, object servers return success w/ diff values', 'include_SATD': False}, {'start_line': 2647, 'end_line': 2647, 'comment': '# server error', 'include_SATD': False}, {'start_line': 2649, 'end_line': 2649, 'comment': '# req supplies etag, object servers return 422 - mismatch', 'include_SATD': False}, {'start_line': 2662, 'end_line': 2662, 'comment': '# client error', 'include_SATD': False}, {'start_line': 3087, 'end_line': 3087, 'comment': '# 200: Account check, 404x3: Container check', 'include_SATD': False}, {'start_line': 3455, 'end_line': 3455, 'comment': ""# can't connect on this port"", 'include_SATD': False}, {'start_line': 3466, 'end_line': 3466, 'comment': '# invalid port number', 'include_SATD': False}, {'start_line': 3756, 'end_line': 3756, 'comment': ""# Iterator value isn't a dict"", 'include_SATD': False}, {'start_line': 3826, 'end_line': 3826, 'comment': ""# Iterator value isn't a dict"", 'include_SATD': False}, {'start_line': 3865, 'end_line': 3865, 'comment': ""# Iterator value isn't a dict"", 'include_SATD': False}], 'b_comments': [], 'filename': 'test/unit/proxy/test_server.py'}]}]",2,5,0,ABANDONED,False,https://review.opendev.org/#/c/427,separate proxy controllers from server module,True,{'# TODO: mock http connection class with more control over headers': 2},True,{'# TODO: mock http connection class with more control over headers': 2},True,{}
115,576,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/hyperv.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/connection.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/vmwareapi_conn.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/volumeops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/576,change attach_volume to pass in connection_info,True,{},False,{},False,{}
116,568,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/db/api.py'}, {'a_comments': [{'start_line': 2122, 'end_line': 2123, 'comment': ""# NOTE(vish): if with_lockmode isn't supported, as in sqlite, #             then this has concurrency issues"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/568,Killing more dead code from removing AOE,True,{},False,{},False,{}
117,571,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_volume.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4O', 'include_SATD': False}], 'filename': 'nova/volume/manager.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/571,one more,True,{},False,{},False,{}
118,572,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright 2011 University of Southern California # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 22, 'end_line': 22, 'comment': '# Table definition', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/037_kill_export_devices.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/572,Removing export_devices table.,True,{},False,{},False,{}
119,573,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 1262, 'end_line': 1263, 'comment': '# TODO(yamahata): # should move check_attach to volume manager?', 'include_SATD': True}], 'b_comments': [{'start_line': 1288, 'end_line': 1288, 'comment': '# FIXME(vish): why do we need dev_path?', 'include_SATD': True}, {'start_line': 1350, 'end_line': 1351, 'comment': '# NOTE(vish): we could also store the connection info in the #             bdm table', 'include_SATD': False}], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/driver.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4O', 'include_SATD': False}], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 240, 'end_line': 240, 'comment': '# TODO(vish): refactor this into a more general ""unreserve""', 'include_SATD': True}, {'start_line': 249, 'end_line': 249, 'comment': '# remove iptables rules', 'include_SATD': False}], 'filename': 'nova/volume/manager.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/573,splitting up volume and compute coupling,True,"{'# FIXME(vish): why do we need dev_path?': 1, '# TODO(vish): refactor this into a more general ""unreserve""': 1}",True,{'# TODO(yamahata): # should move check_attach to volume manager?': 1},True,{}
120,552,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [{'start_line': 1262, 'end_line': 1263, 'comment': '# TODO(yamahata): # should move check_attach to volume manager?', 'include_SATD': True}, {'start_line': 1301, 'end_line': 1304, 'comment': '# pylint: disable=W0702 # NOTE(vish): The inline callback eats the exception info so we #             log the traceback here and reraise the same #             ecxception below.', 'include_SATD': False}], 'b_comments': [{'start_line': 467, 'end_line': 468, 'comment': '## NOTE(vish): The mapping is passed in so the driver can disconnect ##             from remote volumes if necessary', 'include_SATD': False}, {'start_line': 481, 'end_line': 482, 'comment': ""# FIXME(vish): I've kept the files during stop instance, but #              I think start will fail due to the files still"", 'include_SATD': True}, {'start_line': 520, 'end_line': 520, 'comment': '# NOTE(vish): bdms will be deleted on instance destroy', 'include_SATD': False}, {'start_line': 552, 'end_line': 555, 'comment': ""# FIXME(vish): I've kept the files during stop instance, but #              I think start will fail due to the files still #              existing.  I don't really know what the purpose of #              stop and start are when compared to pause and unpause"", 'include_SATD': True}, {'start_line': 557, 'end_line': 557, 'comment': '# instance state will be updated to stopped by _poll_instance_states()', 'include_SATD': False}, {'start_line': 1299, 'end_line': 1299, 'comment': '# pylint: disable=W0702', 'include_SATD': False}, {'start_line': 1301, 'end_line': 1303, 'comment': '# NOTE(vish): The inline callback eats the exception info so we #             log the traceback here and reraise the same #             ecxception below.', 'include_SATD': False}, {'start_line': 1334, 'end_line': 1336, 'comment': ""# NOTE(vish): Comparing as strings because the os_api doesn't #             convert to integer and we may wish to support uuids #             in the future."", 'include_SATD': False}, {'start_line': 1369, 'end_line': 1371, 'comment': ""# NOTE(vish): We don't want to actually mark the volume #             detached, or delete the bdm, just remove the #             connection from this host."", 'include_SATD': False}, {'start_line': 1581, 'end_line': 1583, 'comment': ""# NOTE(vish): We don't want to actually mark the volume #             detached, or delete the bdm, just remove the #             connection from this host."", 'include_SATD': False}, {'start_line': 1708, 'end_line': 1709, 'comment': '# NOTE(vish): The mapping is passed in so the driver can disconnect #             from remote volumes if necessary', 'include_SATD': False}], 'filename': 'nova/compute/manager.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright (c) 2011 VA Linux Systems Japan K.K # Copyright (c) 2011 Isaku Yamahata # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 25, 'end_line': 25, 'comment': '#LOG.debug(_(""terminating bdm %s"") % bdm)', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/compute/utils.py'}, {'a_comments': [{'start_line': 822, 'end_line': 822, 'comment': '###################', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/db/api.py'}, {'a_comments': [{'start_line': 1975, 'end_line': 1975, 'comment': '###################', 'include_SATD': False}, {'start_line': 2122, 'end_line': 2123, 'comment': ""# NOTE(vish): if with_lockmode isn't supported, as in sqlite, #             then this has concurrency issues"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright 2011 University of Southern California # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 22, 'end_line': 22, 'comment': '# Table definition', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/048_kill_export_devices.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.from sqlalchemy import *', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/049_add_connection_info_to_block_device_mapping.py'}, {'a_comments': [], 'b_comments': [{'start_line': 471, 'end_line': 471, 'comment': ""# dur, it's information about the connection!"", 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/rpc/common.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1240, 'end_line': 1241, 'comment': '# NOTE(vish): Wait for InstanceNotFound, then verify that #             the instance is actually deleted.', 'include_SATD': False}], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/fake_flags.py'}, {'a_comments': [{'start_line': 264, 'end_line': 264, 'comment': '# Discover_volume and undiscover_volume are called from compute', 'include_SATD': False}], 'b_comments': [{'start_line': 264, 'end_line': 264, 'comment': '# prepare_attach and prepare_detach are called from compute', 'include_SATD': False}], 'filename': 'nova/tests/integrated/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_scheduler.py'}, {'a_comments': [{'start_line': 816, 'end_line': 816, 'comment': '# mock for volume_api.remove_from_compute', 'include_SATD': False}, {'start_line': 885, 'end_line': 885, 'comment': '# Preparing datas', 'include_SATD': False}, {'start_line': 897, 'end_line': 897, 'comment': '# reload is necessary before setting mocks', 'include_SATD': False}, {'start_line': 900, 'end_line': 900, 'comment': '# Preparing mocks', 'include_SATD': False}, {'start_line': 912, 'end_line': 916, 'comment': '# executing # make sure every data is rewritten to dest', 'include_SATD': False}], 'b_comments': [{'start_line': 645, 'end_line': 645, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 651, 'end_line': 651, 'comment': '# start test', 'include_SATD': False}, {'start_line': 655, 'end_line': 655, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 660, 'end_line': 660, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 666, 'end_line': 666, 'comment': '# creating mocks', 'include_SATD': False}, {'start_line': 680, 'end_line': 680, 'comment': '# start test', 'include_SATD': False}, {'start_line': 685, 'end_line': 685, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 690, 'end_line': 690, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 695, 'end_line': 695, 'comment': '# creating volume testdata', 'include_SATD': False}, {'start_line': 702, 'end_line': 702, 'comment': '# creating mocks', 'include_SATD': False}, {'start_line': 711, 'end_line': 711, 'comment': '# mocks for rollback', 'include_SATD': False}, {'start_line': 718, 'end_line': 718, 'comment': '# start test', 'include_SATD': False}, {'start_line': 724, 'end_line': 724, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 732, 'end_line': 732, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 738, 'end_line': 738, 'comment': '# create', 'include_SATD': False}, {'start_line': 745, 'end_line': 745, 'comment': '# start test', 'include_SATD': False}, {'start_line': 750, 'end_line': 750, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 758, 'end_line': 758, 'comment': '# creating testdata', 'include_SATD': False}, {'start_line': 770, 'end_line': 782, 'comment': '# creating mocks # start test # make sure every data is rewritten to destinatioin hostname.', 'include_SATD': False}], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [{'start_line': 686, 'end_line': 689, 'comment': '#        self.mox.StubOutWithMock(self.compute, ""recover_live_migration"") #        self.compute.recover_live_migration(self.context, instance_ref, #                                             dest=\'dest\')', 'include_SATD': False}], 'b_comments': [{'start_line': 103, 'end_line': 103, 'comment': '# NOTE(vish) exists is to make driver assume connecting worked', 'include_SATD': False}, {'start_line': 801, 'end_line': 801, 'comment': '# Creating testdata', 'include_SATD': False}, {'start_line': 807, 'end_line': 807, 'comment': '# Creating mocks', 'include_SATD': False}, {'start_line': 816, 'end_line': 816, 'comment': '# Starting test', 'include_SATD': False}], 'filename': 'nova/tests/test_libvirt.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_virt_drivers.py'}, {'a_comments': [{'start_line': 318, 'end_line': 318, 'comment': '# each volume has a different mountpoint', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': ""# the first vblade process isn't running"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/test_volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/hyperv.py'}, {'a_comments': [{'start_line': 295, 'end_line': 297, 'comment': '# NOTE(justinsb): We remove the domain definition. We probably # would do better to keep it if cleanup=False (e.g. volumes?) # (e.g. #2 - not losing machines on failure)', 'include_SATD': True}], 'b_comments': [{'start_line': 300, 'end_line': 302, 'comment': '# NOTE(justinsb): We remove the domain definition. We probably # would do better to keep it if cleanup=False (e.g. volumes?) # (e.g. #2 - not losing machines on failure)', 'include_SATD': True}, {'start_line': 332, 'end_line': 332, 'comment': '# NOTE(vish): we disconnect from volumes regardless', 'include_SATD': False}, {'start_line': 399, 'end_line': 401, 'comment': ""# NOTE(vish): This is called to cleanup volumes after live migration, #             so we should still logout even if the instance doesn't #             exist here anymore."", 'include_SATD': False}, {'start_line': 1730, 'end_line': 1730, 'comment': '# Establishing connection to volume server.', 'include_SATD': False}], 'filename': 'nova/virt/libvirt/connection.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 87, 'end_line': 89, 'comment': ""# NOTE(vish): if we are on the same host as nova volume, the #             discovery makes the target so we don't need to #             run --op new"", 'include_SATD': False}, {'start_line': 113, 'end_line': 114, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 125, 'end_line': 125, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}], 'filename': 'nova/virt/libvirt/volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/vmwareapi_conn.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/volume_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/volumeops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/api.py'}, {'a_comments': [{'start_line': 233, 'end_line': 233, 'comment': '# NOTE(vish): we depend on vblade-persist for recreating exports', 'include_SATD': False}, {'start_line': 261, 'end_line': 267, 'comment': '# NOTE(vish): The standard _try_execute does not work here #             because these methods throw errors if other #             volumes on this host are in the process of #             being created.  The good news is the command #             still works for the other volumes, so we #             just wait a bit for the current volume to #             be ready and ignore any errors.', 'include_SATD': False}, {'start_line': 317, 'end_line': 317, 'comment': '# Instance will be terminated in this case.', 'include_SATD': False}, {'start_line': 547, 'end_line': 548, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 559, 'end_line': 559, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}], 'b_comments': [{'start_line': 765, 'end_line': 766, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 777, 'end_line': 777, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}, {'start_line': 798, 'end_line': 800, 'comment': '# NOTE(vish): Copied discover from iscsi_driver since it is used #             but this should probably be refactored into a common #             area because it is used in libvirt driver.', 'include_SATD': True}], 'filename': 'nova/volume/driver.py'}, {'a_comments': [], 'b_comments': [{'start_line': 235, 'end_line': 235, 'comment': '# TODO(vish): refactor this into a more general ""reserve""', 'include_SATD': True}, {'start_line': 243, 'end_line': 243, 'comment': '# TODO(vish): refactor this into a more general ""unreserve""', 'include_SATD': True}], 'filename': 'nova/volume/manager.py'}, {'a_comments': [{'start_line': 63, 'end_line': 64, 'comment': '# discover_volume is still OK # undiscover_volume is still OK', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/volume/san.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [{'start_line': 1262, 'end_line': 1263, 'comment': '# TODO(yamahata): # should move check_attach to volume manager?', 'include_SATD': True}, {'start_line': 1301, 'end_line': 1304, 'comment': '# pylint: disable=W0702 # NOTE(vish): The inline callback eats the exception info so we #             log the traceback here and reraise the same #             ecxception below.', 'include_SATD': False}], 'b_comments': [{'start_line': 467, 'end_line': 468, 'comment': '## NOTE(vish): The mapping is passed in so the driver can disconnect ##             from remote volumes if necessary', 'include_SATD': False}, {'start_line': 481, 'end_line': 482, 'comment': ""# FIXME(vish): I've kept the files during stop instance, but #              I think start will fail due to the files still"", 'include_SATD': True}, {'start_line': 520, 'end_line': 520, 'comment': '# NOTE(vish): bdms will be deleted on instance destroy', 'include_SATD': False}, {'start_line': 552, 'end_line': 555, 'comment': ""# FIXME(vish): I've kept the files during stop instance, but #              I think start will fail due to the files still #              existing.  I don't really know what the purpose of #              stop and start are when compared to pause and unpause"", 'include_SATD': True}, {'start_line': 1302, 'end_line': 1302, 'comment': '# pylint: disable=W0702', 'include_SATD': False}, {'start_line': 1304, 'end_line': 1306, 'comment': '# NOTE(vish): The inline callback eats the exception info so we #             log the traceback here and reraise the same #             ecxception below.', 'include_SATD': False}, {'start_line': 1337, 'end_line': 1339, 'comment': ""# NOTE(vish): Comparing as strings because the os_api doesn't #             convert to integer and we may wish to support uuids #             in the future."", 'include_SATD': False}, {'start_line': 1372, 'end_line': 1374, 'comment': ""# NOTE(vish): We don't want to actually mark the volume #             detached, or delete the bdm, just remove the #             connection from this host."", 'include_SATD': False}, {'start_line': 1584, 'end_line': 1586, 'comment': ""# NOTE(vish): We don't want to actually mark the volume #             detached, or delete the bdm, just remove the #             connection from this host."", 'include_SATD': False}, {'start_line': 1711, 'end_line': 1712, 'comment': '# NOTE(vish): The mapping is passed in so the driver can disconnect #             from remote volumes if necessary', 'include_SATD': False}], 'filename': 'nova/compute/manager.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright (c) 2011 VA Linux Systems Japan K.K # Copyright (c) 2011 Isaku Yamahata # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 25, 'end_line': 25, 'comment': '#LOG.debug(_(""terminating bdm %s"") % bdm)', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/compute/utils.py'}, {'a_comments': [{'start_line': 822, 'end_line': 822, 'comment': '###################', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/db/api.py'}, {'a_comments': [{'start_line': 1975, 'end_line': 1975, 'comment': '###################', 'include_SATD': False}, {'start_line': 2122, 'end_line': 2123, 'comment': ""# NOTE(vish): if with_lockmode isn't supported, as in sqlite, #             then this has concurrency issues"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright 2011 University of Southern California # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 22, 'end_line': 22, 'comment': '# Table definition', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/048_kill_export_devices.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.from sqlalchemy import *', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/049_add_connection_info_to_block_device_mapping.py'}, {'a_comments': [], 'b_comments': [{'start_line': 471, 'end_line': 471, 'comment': ""# dur, it's information about the connection!"", 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/rpc/common.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1240, 'end_line': 1241, 'comment': '# NOTE(vish): Wait for InstanceNotFound, then verify that #             the instance is actually deleted.', 'include_SATD': False}], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/fake_flags.py'}, {'a_comments': [{'start_line': 264, 'end_line': 264, 'comment': '# Discover_volume and undiscover_volume are called from compute', 'include_SATD': False}], 'b_comments': [{'start_line': 264, 'end_line': 264, 'comment': '# prepare_attach and prepare_detach are called from compute', 'include_SATD': False}], 'filename': 'nova/tests/integrated/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_scheduler.py'}, {'a_comments': [{'start_line': 816, 'end_line': 816, 'comment': '# mock for volume_api.remove_from_compute', 'include_SATD': False}, {'start_line': 885, 'end_line': 885, 'comment': '# Preparing datas', 'include_SATD': False}, {'start_line': 897, 'end_line': 897, 'comment': '# reload is necessary before setting mocks', 'include_SATD': False}, {'start_line': 900, 'end_line': 900, 'comment': '# Preparing mocks', 'include_SATD': False}, {'start_line': 912, 'end_line': 916, 'comment': '# executing # make sure every data is rewritten to dest', 'include_SATD': False}], 'b_comments': [{'start_line': 645, 'end_line': 645, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 651, 'end_line': 651, 'comment': '# start test', 'include_SATD': False}, {'start_line': 655, 'end_line': 655, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 660, 'end_line': 660, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 666, 'end_line': 666, 'comment': '# creating mocks', 'include_SATD': False}, {'start_line': 680, 'end_line': 680, 'comment': '# start test', 'include_SATD': False}, {'start_line': 685, 'end_line': 685, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 690, 'end_line': 690, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 695, 'end_line': 695, 'comment': '# creating volume testdata', 'include_SATD': False}, {'start_line': 702, 'end_line': 702, 'comment': '# creating mocks', 'include_SATD': False}, {'start_line': 711, 'end_line': 711, 'comment': '# mocks for rollback', 'include_SATD': False}, {'start_line': 718, 'end_line': 718, 'comment': '# start test', 'include_SATD': False}, {'start_line': 724, 'end_line': 724, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 732, 'end_line': 732, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 738, 'end_line': 738, 'comment': '# create', 'include_SATD': False}, {'start_line': 745, 'end_line': 745, 'comment': '# start test', 'include_SATD': False}, {'start_line': 750, 'end_line': 750, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 758, 'end_line': 758, 'comment': '# creating testdata', 'include_SATD': False}, {'start_line': 770, 'end_line': 782, 'comment': '# creating mocks # start test # make sure every data is rewritten to destinatioin hostname.', 'include_SATD': False}], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [{'start_line': 686, 'end_line': 689, 'comment': '#        self.mox.StubOutWithMock(self.compute, ""recover_live_migration"") #        self.compute.recover_live_migration(self.context, instance_ref, #                                             dest=\'dest\')', 'include_SATD': False}], 'b_comments': [{'start_line': 104, 'end_line': 104, 'comment': '# NOTE(vish) exists is to make driver assume connecting worked', 'include_SATD': False}, {'start_line': 800, 'end_line': 800, 'comment': '# Creating testdata', 'include_SATD': False}, {'start_line': 806, 'end_line': 806, 'comment': '# Creating mocks', 'include_SATD': False}, {'start_line': 815, 'end_line': 815, 'comment': '# Starting test', 'include_SATD': False}], 'filename': 'nova/tests/test_libvirt.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_virt_drivers.py'}, {'a_comments': [{'start_line': 318, 'end_line': 318, 'comment': '# each volume has a different mountpoint', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': ""# the first vblade process isn't running"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/test_volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/hyperv.py'}, {'a_comments': [{'start_line': 295, 'end_line': 297, 'comment': '# NOTE(justinsb): We remove the domain definition. We probably # would do better to keep it if cleanup=False (e.g. volumes?) # (e.g. #2 - not losing machines on failure)', 'include_SATD': True}], 'b_comments': [{'start_line': 307, 'end_line': 309, 'comment': '# NOTE(justinsb): We remove the domain definition. We probably # would do better to keep it if cleanup=False (e.g. volumes?) # (e.g. #2 - not losing machines on failure)', 'include_SATD': True}, {'start_line': 339, 'end_line': 339, 'comment': '# NOTE(vish): we disconnect from volumes regardless', 'include_SATD': False}, {'start_line': 406, 'end_line': 408, 'comment': ""# NOTE(vish): This is called to cleanup volumes after live migration, #             so we should still logout even if the instance doesn't #             exist here anymore."", 'include_SATD': False}, {'start_line': 1740, 'end_line': 1740, 'comment': '# Establishing connection to volume server.', 'include_SATD': False}], 'filename': 'nova/virt/libvirt/connection.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 87, 'end_line': 89, 'comment': ""# NOTE(vish): if we are on the same host as nova volume, the #             discovery makes the target so we don't need to #             run --op new"", 'include_SATD': False}, {'start_line': 113, 'end_line': 114, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 125, 'end_line': 125, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}], 'filename': 'nova/virt/libvirt/volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/vmwareapi_conn.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/volume_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/volumeops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/api.py'}, {'a_comments': [{'start_line': 233, 'end_line': 233, 'comment': '# NOTE(vish): we depend on vblade-persist for recreating exports', 'include_SATD': False}, {'start_line': 261, 'end_line': 267, 'comment': '# NOTE(vish): The standard _try_execute does not work here #             because these methods throw errors if other #             volumes on this host are in the process of #             being created.  The good news is the command #             still works for the other volumes, so we #             just wait a bit for the current volume to #             be ready and ignore any errors.', 'include_SATD': False}, {'start_line': 317, 'end_line': 317, 'comment': '# Instance will be terminated in this case.', 'include_SATD': False}, {'start_line': 547, 'end_line': 548, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 559, 'end_line': 559, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}], 'b_comments': [{'start_line': 768, 'end_line': 769, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 780, 'end_line': 780, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}, {'start_line': 801, 'end_line': 803, 'comment': '# NOTE(vish): Copied discover from iscsi_driver since it is used #             but this should probably be refactored into a common #             area because it is used in libvirt driver.', 'include_SATD': True}], 'filename': 'nova/volume/driver.py'}, {'a_comments': [], 'b_comments': [{'start_line': 236, 'end_line': 236, 'comment': '# TODO(vish): refactor this into a more general ""reserve""', 'include_SATD': True}, {'start_line': 244, 'end_line': 244, 'comment': '# TODO(vish): refactor this into a more general ""unreserve""', 'include_SATD': True}], 'filename': 'nova/volume/manager.py'}, {'a_comments': [{'start_line': 63, 'end_line': 64, 'comment': '# discover_volume is still OK # undiscover_volume is still OK', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/volume/san.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [{'start_line': 1262, 'end_line': 1263, 'comment': '# TODO(yamahata): # should move check_attach to volume manager?', 'include_SATD': True}, {'start_line': 1301, 'end_line': 1304, 'comment': '# pylint: disable=W0702 # NOTE(vish): The inline callback eats the exception info so we #             log the traceback here and reraise the same #             ecxception below.', 'include_SATD': False}], 'b_comments': [{'start_line': 467, 'end_line': 468, 'comment': '## NOTE(vish): The mapping is passed in so the driver can disconnect ##             from remote volumes if necessary', 'include_SATD': False}, {'start_line': 481, 'end_line': 482, 'comment': ""# FIXME(vish): I've kept the files during stop instance, but #              I think start will fail due to the files still"", 'include_SATD': True}, {'start_line': 520, 'end_line': 520, 'comment': '# NOTE(vish): bdms will be deleted on instance destroy', 'include_SATD': False}, {'start_line': 552, 'end_line': 555, 'comment': ""# FIXME(vish): I've kept the files during stop instance, but #              I think start will fail due to the files still #              existing.  I don't really know what the purpose of #              stop and start are when compared to pause and unpause"", 'include_SATD': True}, {'start_line': 1302, 'end_line': 1302, 'comment': '# pylint: disable=W0702', 'include_SATD': False}, {'start_line': 1304, 'end_line': 1306, 'comment': '# NOTE(vish): The inline callback eats the exception info so we #             log the traceback here and reraise the same #             ecxception below.', 'include_SATD': False}, {'start_line': 1337, 'end_line': 1339, 'comment': ""# NOTE(vish): Comparing as strings because the os_api doesn't #             convert to integer and we may wish to support uuids #             in the future."", 'include_SATD': False}, {'start_line': 1372, 'end_line': 1374, 'comment': ""# NOTE(vish): We don't want to actually mark the volume #             detached, or delete the bdm, just remove the #             connection from this host."", 'include_SATD': False}, {'start_line': 1584, 'end_line': 1586, 'comment': ""# NOTE(vish): We don't want to actually mark the volume #             detached, or delete the bdm, just remove the #             connection from this host."", 'include_SATD': False}, {'start_line': 1711, 'end_line': 1712, 'comment': '# NOTE(vish): The mapping is passed in so the driver can disconnect #             from remote volumes if necessary', 'include_SATD': False}], 'filename': 'nova/compute/manager.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright (c) 2011 VA Linux Systems Japan K.K # Copyright (c) 2011 Isaku Yamahata # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 25, 'end_line': 25, 'comment': '#LOG.debug(_(""terminating bdm %s"") % bdm)', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/compute/utils.py'}, {'a_comments': [{'start_line': 822, 'end_line': 822, 'comment': '###################', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/db/api.py'}, {'a_comments': [{'start_line': 1975, 'end_line': 1975, 'comment': '###################', 'include_SATD': False}, {'start_line': 2122, 'end_line': 2123, 'comment': ""# NOTE(vish): if with_lockmode isn't supported, as in sqlite, #             then this has concurrency issues"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright 2011 University of Southern California # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 22, 'end_line': 22, 'comment': '# Table definition', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/048_kill_export_devices.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.from sqlalchemy import *', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/049_add_connection_info_to_block_device_mapping.py'}, {'a_comments': [], 'b_comments': [{'start_line': 471, 'end_line': 471, 'comment': ""# dur, it's information about the connection!"", 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/rpc/common.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1240, 'end_line': 1241, 'comment': '# NOTE(vish): Wait for InstanceNotFound, then verify that #             the instance is actually deleted.', 'include_SATD': False}], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/fake_flags.py'}, {'a_comments': [{'start_line': 264, 'end_line': 264, 'comment': '# Discover_volume and undiscover_volume are called from compute', 'include_SATD': False}], 'b_comments': [{'start_line': 264, 'end_line': 264, 'comment': '# prepare_attach and prepare_detach are called from compute', 'include_SATD': False}], 'filename': 'nova/tests/integrated/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_scheduler.py'}, {'a_comments': [{'start_line': 816, 'end_line': 816, 'comment': '# mock for volume_api.remove_from_compute', 'include_SATD': False}, {'start_line': 885, 'end_line': 885, 'comment': '# Preparing datas', 'include_SATD': False}, {'start_line': 897, 'end_line': 897, 'comment': '# reload is necessary before setting mocks', 'include_SATD': False}, {'start_line': 900, 'end_line': 900, 'comment': '# Preparing mocks', 'include_SATD': False}, {'start_line': 912, 'end_line': 916, 'comment': '# executing # make sure every data is rewritten to dest', 'include_SATD': False}], 'b_comments': [{'start_line': 645, 'end_line': 645, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 651, 'end_line': 651, 'comment': '# start test', 'include_SATD': False}, {'start_line': 655, 'end_line': 655, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 660, 'end_line': 660, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 666, 'end_line': 666, 'comment': '# creating mocks', 'include_SATD': False}, {'start_line': 680, 'end_line': 680, 'comment': '# start test', 'include_SATD': False}, {'start_line': 685, 'end_line': 685, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 690, 'end_line': 690, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 695, 'end_line': 695, 'comment': '# creating volume testdata', 'include_SATD': False}, {'start_line': 702, 'end_line': 702, 'comment': '# creating mocks', 'include_SATD': False}, {'start_line': 711, 'end_line': 711, 'comment': '# mocks for rollback', 'include_SATD': False}, {'start_line': 718, 'end_line': 718, 'comment': '# start test', 'include_SATD': False}, {'start_line': 724, 'end_line': 724, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 732, 'end_line': 732, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 738, 'end_line': 738, 'comment': '# create', 'include_SATD': False}, {'start_line': 745, 'end_line': 745, 'comment': '# start test', 'include_SATD': False}, {'start_line': 750, 'end_line': 750, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 758, 'end_line': 758, 'comment': '# creating testdata', 'include_SATD': False}, {'start_line': 770, 'end_line': 782, 'comment': '# creating mocks # start test # make sure every data is rewritten to destinatioin hostname.', 'include_SATD': False}], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [{'start_line': 686, 'end_line': 689, 'comment': '#        self.mox.StubOutWithMock(self.compute, ""recover_live_migration"") #        self.compute.recover_live_migration(self.context, instance_ref, #                                             dest=\'dest\')', 'include_SATD': False}], 'b_comments': [{'start_line': 104, 'end_line': 104, 'comment': '# NOTE(vish) exists is to make driver assume connecting worked', 'include_SATD': False}, {'start_line': 800, 'end_line': 800, 'comment': '# Creating testdata', 'include_SATD': False}, {'start_line': 806, 'end_line': 806, 'comment': '# Creating mocks', 'include_SATD': False}, {'start_line': 815, 'end_line': 815, 'comment': '# Starting test', 'include_SATD': False}], 'filename': 'nova/tests/test_libvirt.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_virt_drivers.py'}, {'a_comments': [{'start_line': 318, 'end_line': 318, 'comment': '# each volume has a different mountpoint', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': ""# the first vblade process isn't running"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/test_volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/hyperv.py'}, {'a_comments': [{'start_line': 295, 'end_line': 297, 'comment': '# NOTE(justinsb): We remove the domain definition. We probably # would do better to keep it if cleanup=False (e.g. volumes?) # (e.g. #2 - not losing machines on failure)', 'include_SATD': True}], 'b_comments': [{'start_line': 307, 'end_line': 309, 'comment': '# NOTE(justinsb): We remove the domain definition. We probably # would do better to keep it if cleanup=False (e.g. volumes?) # (e.g. #2 - not losing machines on failure)', 'include_SATD': True}, {'start_line': 339, 'end_line': 339, 'comment': '# NOTE(vish): we disconnect from volumes regardless', 'include_SATD': False}, {'start_line': 406, 'end_line': 408, 'comment': ""# NOTE(vish): This is called to cleanup volumes after live migration, #             so we should still logout even if the instance doesn't #             exist here anymore."", 'include_SATD': False}, {'start_line': 1740, 'end_line': 1740, 'comment': '# Establishing connection to volume server.', 'include_SATD': False}], 'filename': 'nova/virt/libvirt/connection.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 87, 'end_line': 89, 'comment': ""# NOTE(vish): if we are on the same host as nova volume, the #             discovery makes the target so we don't need to #             run --op new"", 'include_SATD': False}, {'start_line': 113, 'end_line': 114, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 125, 'end_line': 125, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}], 'filename': 'nova/virt/libvirt/volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/vmwareapi_conn.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/volume_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/volumeops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/api.py'}, {'a_comments': [{'start_line': 233, 'end_line': 233, 'comment': '# NOTE(vish): we depend on vblade-persist for recreating exports', 'include_SATD': False}, {'start_line': 261, 'end_line': 267, 'comment': '# NOTE(vish): The standard _try_execute does not work here #             because these methods throw errors if other #             volumes on this host are in the process of #             being created.  The good news is the command #             still works for the other volumes, so we #             just wait a bit for the current volume to #             be ready and ignore any errors.', 'include_SATD': False}, {'start_line': 317, 'end_line': 317, 'comment': '# Instance will be terminated in this case.', 'include_SATD': False}, {'start_line': 547, 'end_line': 548, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 559, 'end_line': 559, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}], 'b_comments': [{'start_line': 768, 'end_line': 769, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 780, 'end_line': 780, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}, {'start_line': 801, 'end_line': 803, 'comment': '# NOTE(vish): Copied discover from iscsi_driver since it is used #             but this should probably be refactored into a common #             area because it is used in libvirt driver.', 'include_SATD': True}], 'filename': 'nova/volume/driver.py'}, {'a_comments': [], 'b_comments': [{'start_line': 236, 'end_line': 236, 'comment': '# TODO(vish): refactor this into a more general ""reserve""', 'include_SATD': True}, {'start_line': 244, 'end_line': 244, 'comment': '# TODO(vish): refactor this into a more general ""unreserve""', 'include_SATD': True}], 'filename': 'nova/volume/manager.py'}, {'a_comments': [{'start_line': 63, 'end_line': 64, 'comment': '# discover_volume is still OK # undiscover_volume is still OK', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/volume/san.py'}]}]",3,3,0,ABANDONED,False,https://review.opendev.org/#/c/552,Pull volume-cleanup-2 from bzr,True,"{""# FIXME(vish): I've kept the files during stop instance, but #              I think start will fail due to the files still"": 1, ""# FIXME(vish): I've kept the files during stop instance, but #              I think start will fail due to the files still #              existing.  I don't really know what the purpose of #              stop and start are when compared to pause and unpause"": 1, '# NOTE(justinsb): We remove the domain definition. We probably # would do better to keep it if cleanup=False (e.g. volumes?) # (e.g. #2 - not losing machines on failure)': 1, '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?': 1, '# NOTE(vish): Copied discover from iscsi_driver since it is used #             but this should probably be refactored into a common #             area because it is used in libvirt driver.': 1, '# TODO(vish): refactor this into a more general ""reserve""': 1, '# TODO(vish): refactor this into a more general ""unreserve""': 1}",True,"{'# TODO(yamahata): # should move check_attach to volume manager?': 1, '# NOTE(justinsb): We remove the domain definition. We probably # would do better to keep it if cleanup=False (e.g. volumes?) # (e.g. #2 - not losing machines on failure)': 1, '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?': 1}",True,{}
121,585,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/585,add an exception for libvirt volume driver,True,{},False,{},False,{}
122,586,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/039_kill_export_devices.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/040_add_connection_info_to_block_device_mapping.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/586,renumber migration scripts,True,{},False,{},False,{}
123,578,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.from sqlalchemy import *', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/038_add_device_path_to_block_device_mapping.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/578,Adding a migration file to add a device_path field to block_device_mapping.,True,{},False,{},False,{}
124,577,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 471, 'end_line': 471, 'comment': ""# dur, it's information about the connection!  "", 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/models.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/577,Adding new field to the block_device_mapping model.,True,{},False,{},False,{}
125,579,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 1288, 'end_line': 1288, 'comment': '# FIXME(vish): why do we need dev_path?', 'include_SATD': True}, {'start_line': 1350, 'end_line': 1351, 'comment': '# NOTE(vish): we could also store the connection info in the #             bdm table', 'include_SATD': False}, {'start_line': 1675, 'end_line': 1677, 'comment': '# Block migration needs empty image at destination host # before migration starts, so if any failure occurs, # any empty images has to be deleted.', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/connection.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/579,more decoupling,True,{},False,{'# FIXME(vish): why do we need dev_path?': 1},True,{}
126,580,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 446, 'end_line': 447, 'comment': '# TODO(GRUE): return the dict of love. # return mount_device', 'include_SATD': True}, {'start_line': 492, 'end_line': 492, 'comment': '#return ""/dev/disk/by-path/volume-id-%d"" % volume[\'id\']', 'include_SATD': False}, {'start_line': 494, 'end_line': 495, 'comment': '# TODO(GRUE): return the dict of love. # return mount_device', 'include_SATD': True}, {'start_line': 572, 'end_line': 572, 'comment': '# return ""rbd:%s/%s"" % (FLAGS.rbd_pool, volume[\'name\'])', 'include_SATD': False}, {'start_line': 574, 'end_line': 575, 'comment': '# TODO(GRUE): return the dict of love. # return mount_device', 'include_SATD': True}, {'start_line': 647, 'end_line': 647, 'comment': '# return ""sheepdog:%s"" % volume[\'name\']', 'include_SATD': False}, {'start_line': 649, 'end_line': 650, 'comment': '# TODO(GRUE): return the dict of love. # return mount_device', 'include_SATD': True}], 'filename': 'nova/volume/driver.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/580,WIP changes being handed off to vish.,True,{'# TODO(GRUE): return the dict of love. # return mount_device': 1},True,{},False,{}
127,581,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 446, 'end_line': 447, 'comment': '# TODO(GRUE): return the dict of love. # return mount_device', 'include_SATD': True}, {'start_line': 492, 'end_line': 492, 'comment': '#return ""/dev/disk/by-path/volume-id-%d"" % volume[\'id\']', 'include_SATD': False}, {'start_line': 494, 'end_line': 495, 'comment': '# TODO(GRUE): return the dict of love. # return mount_device', 'include_SATD': True}, {'start_line': 572, 'end_line': 572, 'comment': '# return ""rbd:%s/%s"" % (FLAGS.rbd_pool, volume[\'name\'])', 'include_SATD': False}, {'start_line': 574, 'end_line': 575, 'comment': '# TODO(GRUE): return the dict of love. # return mount_device', 'include_SATD': True}, {'start_line': 647, 'end_line': 647, 'comment': '# return ""sheepdog:%s"" % volume[\'name\']', 'include_SATD': False}, {'start_line': 649, 'end_line': 650, 'comment': '# TODO(GRUE): return the dict of love. # return mount_device', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/volume/driver.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/581,finish rewriting initialize and terminate,True,{},False,{'# TODO(GRUE): return the dict of love. # return mount_device': 1},True,{}
128,590,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/volume_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/volumeops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/driver.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/590,fix xen tests/code,True,{},False,{},False,{}
129,582,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 384, 'end_line': 386, 'comment': ""# NOTE(vish): This is called to cleanup volumes after live migration, #             so we should still logout even if the instance doesn't #             exist here anymore."", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/virt/libvirt/connection.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/582,split out code into driver classes,True,{},False,{},False,{}
130,583,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 1559, 'end_line': 1561, 'comment': ""# NOTE(vish): We don't want to actually mark the volume #             attached, jus remove the connection from #             this host."", 'include_SATD': False}], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/connection.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/583,continue to cleanup volume attach code,True,{},False,{},False,{}
131,584,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/hyperv.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/vmwareapi_conn.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/volume_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/volumeops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}, {'a_comments': [{'start_line': 424, 'end_line': 425, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 436, 'end_line': 436, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/volume/driver.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/584,move login code to libvirt volume driver,True,{},False,"{'# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?': 1}",True,{}
132,594,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/connection.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/594,fix typo,True,{},False,{},False,{}
133,595,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/595,"no need to terminate volumes from hostless instance.  If it has no host, they never got created",True,{},False,{},False,{}
134,597,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/manager.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/597,keep error traceback. Fixed double use of mount_device,True,{},False,{},False,{}
135,598,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/connection.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/598,missed one reference to connection,True,{},False,{},False,{}
136,587,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 45, 'end_line': 47, 'comment': ""# NOTE(vish): This is called to cleanup volumes after live migration, #             so we should still logout even if the instance doesn't #             exist here anymore."", 'include_SATD': False}, {'start_line': 120, 'end_line': 121, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 132, 'end_line': 132, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}], 'filename': 'nova/virt/libvirt/volume.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/587,add libvirt volume drivers,True,"{'# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?': 1}",True,{},False,{}
137,588,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/connection.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/volumeops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/driver.py'}, {'a_comments': [{'start_line': 251, 'end_line': 251, 'comment': '# remove iptables rules', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/volume/manager.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/588,fix method signature typos,True,{},False,{},False,{}
138,589,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 1311, 'end_line': 1314, 'comment': '# pylint: disable=W0702 # NOTE(vish): The inline callback eats the exception info so we #             log the traceback here and reraise the same #             ecxception below.', 'include_SATD': False}, {'start_line': 1560, 'end_line': 1561, 'comment': '#             attached, jus remove the connection from #             this host.', 'include_SATD': False}], 'b_comments': [{'start_line': 1301, 'end_line': 1304, 'comment': '# pylint: disable=W0702 # NOTE(vish): The inline callback eats the exception info so we #             log the traceback here and reraise the same #             ecxception below.', 'include_SATD': False}, {'start_line': 1573, 'end_line': 1574, 'comment': '#             detached, or delete the bdm, just remove the #             connection from this host.', 'include_SATD': False}], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/hyperv.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/connection.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/vmwareapi_conn.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/volumeops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/api.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/589,happy path finished,True,{},False,{},False,{}
139,591,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 1240, 'end_line': 1241, 'comment': '# NOTE(vish): Wait for InstanceNotFound, then verify that #             the instance is actually deleted.', 'include_SATD': False}], 'filename': 'nova/tests/api/ec2/test_cloud.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/591,fix/speedup cloud test cases,True,{},False,{},False,{}
140,592,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright (c) 2011 VA Linux Systems Japan K.K # Copyright (c) 2011 Isaku Yamahata # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 25, 'end_line': 25, 'comment': '#LOG.debug(_(""terminating bdm %s"") % bdm)', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/compute/utils.py'}, {'a_comments': [{'start_line': 900, 'end_line': 900, 'comment': '# Preparing mocks', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_libvirt.py'}, {'a_comments': [{'start_line': 305, 'end_line': 307, 'comment': '# NOTE(justinsb): We remove the domain definition. We probably # would do better to keep it if cleanup=False (e.g. volumes?) # (e.g. #2 - not losing machines on failure)', 'include_SATD': True}], 'b_comments': [{'start_line': 315, 'end_line': 317, 'comment': '# NOTE(justinsb): We remove the domain definition. We probably # would do better to keep it if cleanup=False (e.g. volumes?) # (e.g. #2 - not losing machines on failure)', 'include_SATD': True}, {'start_line': 405, 'end_line': 407, 'comment': ""# NOTE(vish): This is called to cleanup volumes after live migration, #             so we should still logout even if the instance doesn't #             exist here anymore."", 'include_SATD': False}], 'filename': 'nova/virt/libvirt/connection.py'}, {'a_comments': [{'start_line': 45, 'end_line': 47, 'comment': ""# NOTE(vish): This is called to cleanup volumes after live migration, #             so we should still logout even if the instance doesn't #             exist here anymore."", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/virt/libvirt/volume.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/592,fixing block device info in terminate,True,{'# NOTE(justinsb): We remove the domain definition. We probably # would do better to keep it if cleanup=False (e.g. volumes?) # (e.g. #2 - not losing machines on failure)': 1},True,{'# NOTE(justinsb): We remove the domain definition. We probably # would do better to keep it if cleanup=False (e.g. volumes?) # (e.g. #2 - not losing machines on failure)': 1},True,{}
141,593,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 472, 'end_line': 473, 'comment': ""# FIXME(vish): I've kept the files during stop instance, but #              I think start will fail due to the files still"", 'include_SATD': True}, {'start_line': 506, 'end_line': 506, 'comment': '# NOTE(vish): only the mapping portion of info is used for destroy', 'include_SATD': False}, {'start_line': 548, 'end_line': 551, 'comment': ""# FIXME(vish): I've kept the files during stop instance, but #              I think start will fail due to the files still #              existing.  I don't really know what the purpose of #              stop and start are when compared to pause and unpause"", 'include_SATD': True}, {'start_line': 621, 'end_line': 621, 'comment': '# FIXME(vish): we need a way to find the root device name on rebuild', 'include_SATD': True}], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/hyperv.py'}, {'a_comments': [], 'b_comments': [{'start_line': 339, 'end_line': 339, 'comment': '# NOTE(vish): we disconnect from volumes regardless', 'include_SATD': False}], 'filename': 'nova/virt/libvirt/connection.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/vmwareapi_conn.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/593,disconnect from boot volumes on terminate,True,"{""# FIXME(vish): I've kept the files during stop instance, but #              I think start will fail due to the files still"": 1, ""# FIXME(vish): I've kept the files during stop instance, but #              I think start will fail due to the files still #              existing.  I don't really know what the purpose of #              stop and start are when compared to pause and unpause"": 1, '# FIXME(vish): we need a way to find the root device name on rebuild': 1}",True,{},False,{}
142,603,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_libvirt.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/603,fix the fake volume driver,True,{},False,{},False,{}
143,601,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/047_kill_export_devices.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/048_add_connection_info_to_block_device_mapping.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/601,change migrate numbers,True,{},False,{},False,{}
144,605,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_libvirt.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/605,use stubs instead of setattr,True,{},False,{},False,{}
145,606,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_virt_drivers.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/606,fix virt driver test,True,{},False,{},False,{}
146,596,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [{'start_line': 506, 'end_line': 506, 'comment': '# NOTE(vish): only the mapping portion of info is used for destroy', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/596,cascade deletes for block device mapping instead of iterating through and deleting,True,{},False,{},False,{}
147,609,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_scheduler.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/609,fix scheduler test,True,{},False,{},False,{}
148,608,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/api.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/608,changes from volume api,True,{},False,{},False,{}
149,599,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 105, 'end_line': 105, 'comment': '# NOTE(vish) exists is to make driver assume connecting worked', 'include_SATD': False}], 'filename': 'nova/tests/test_libvirt.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/volume.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/599,write some volume driver tests and fix typos,True,{},False,{},False,{}
150,610,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_compute.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/610,fix integrated attach volume test,True,{},False,{},False,{}
151,612,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/xenserver/networking/etc/xensource/scripts/ovs_configure_base_flows.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/xenserver/networking/etc/xensource/scripts/ovs_configure_vif_flows.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/xenserver/networking/etc/xensource/scripts/vif_rules.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/xenserver/xenapi/etc/xapi.d/plugins/xenstore.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'tools/ajaxterm/ajaxterm.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/612,fix rescan and messed up permissions,True,{},False,{},False,{}
152,613,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/048_kill_export_devices.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/049_add_connection_info_to_block_device_mapping.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/613,renumber migrations,True,{},False,{},False,{}
153,602,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 1344, 'end_line': 1344, 'comment': '# pylint: disable=W0702', 'include_SATD': False}], 'b_comments': [{'start_line': 1344, 'end_line': 1344, 'comment': '# pylint: disable=W0702', 'include_SATD': False}, {'start_line': 1738, 'end_line': 1739, 'comment': '# NOTE(vish): The mapping is passed in so the driver can disconnect #             from remote volumes if necessary', 'include_SATD': False}], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/rpc/common.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/602,fix remote error to come from nova exception and test_compute,True,{},False,{},False,{}
154,614,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/volume.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/614,use tuples for login and logout,True,{},False,{},False,{}
155,600,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 506, 'end_line': 507, 'comment': '# NOTE(vish): The mapping is passed in so the driver can disconnect #             from remote volumes if necessary', 'include_SATD': False}], 'b_comments': [{'start_line': 467, 'end_line': 468, 'comment': '## NOTE(vish): The mapping is passed in so the driver can disconnect ##             from remote volumes if necessary', 'include_SATD': False}, {'start_line': 508, 'end_line': 517, 'comment': ""#bdms = self._get_instance_volume_bdms(context, instance_id) #block_device_mapping = [] #for bdm in bdms: #    cinfo = utils.loads(bdm['connection_info']) #    block_device_mapping.append({'connection_info': cinfo, #                                 'mount_device': #                                 bdm['device_name']}) ## NOTE(vish): The mapping is passed in so the driver can disconnect ##             from remote volumes if necessary #block_device_info = {'block_device_mapping': block_device_mapping}"", 'include_SATD': False}, {'start_line': 1718, 'end_line': 1720, 'comment': '# Block migration needs empty image at destination host # before migration starts, so if any failure occurs, # any empty images has to be deleted.', 'include_SATD': False}, {'start_line': 1736, 'end_line': 1745, 'comment': ""#bdms = self._get_instance_volume_bdms(context, instance_id) #block_device_mapping = [] #for bdm in bdms: #    cinfo = utils.loads(bdm['connection_info']) #    block_device_mapping.append({'connection_info': cinfo, #                                 'mount_device': #                                 bdm['device_name']}) ## NOTE(vish): The mapping is passed in so the driver can disconnect ##             from remote volumes if necessary #block_device_info = {'block_device_mapping': block_device_mapping}"", 'include_SATD': False}], 'filename': 'nova/compute/manager.py'}, {'a_comments': [{'start_line': 817, 'end_line': 817, 'comment': '# mock for volume_api.remove_from_compute', 'include_SATD': False}, {'start_line': 886, 'end_line': 886, 'comment': '# Preparing datas', 'include_SATD': False}, {'start_line': 898, 'end_line': 898, 'comment': '# reload is necessary before setting mocks', 'include_SATD': False}, {'start_line': 908, 'end_line': 912, 'comment': '# executing # make sure every data is rewritten to dest', 'include_SATD': False}], 'b_comments': [{'start_line': 645, 'end_line': 645, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 651, 'end_line': 651, 'comment': '# start test', 'include_SATD': False}, {'start_line': 655, 'end_line': 655, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 660, 'end_line': 660, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 666, 'end_line': 666, 'comment': '# creating mocks', 'include_SATD': False}, {'start_line': 680, 'end_line': 680, 'comment': '# start test', 'include_SATD': False}, {'start_line': 685, 'end_line': 685, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 690, 'end_line': 690, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 695, 'end_line': 695, 'comment': '# creating volume testdata', 'include_SATD': False}, {'start_line': 702, 'end_line': 702, 'comment': '# creating mocks', 'include_SATD': False}, {'start_line': 711, 'end_line': 711, 'comment': '# mocks for rollback', 'include_SATD': False}, {'start_line': 717, 'end_line': 717, 'comment': '# start test', 'include_SATD': False}, {'start_line': 723, 'end_line': 723, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 731, 'end_line': 731, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 737, 'end_line': 737, 'comment': '# create', 'include_SATD': False}, {'start_line': 744, 'end_line': 744, 'comment': '# start test', 'include_SATD': False}, {'start_line': 749, 'end_line': 749, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 757, 'end_line': 757, 'comment': '# creating testdata', 'include_SATD': False}, {'start_line': 771, 'end_line': 783, 'comment': '# creating mocks # start test # make sure every data is rewritten to destinatioin hostname.', 'include_SATD': False}], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [], 'b_comments': [{'start_line': 799, 'end_line': 799, 'comment': '# Creating testdata', 'include_SATD': False}, {'start_line': 805, 'end_line': 805, 'comment': '# Creating mocks', 'include_SATD': False}, {'start_line': 814, 'end_line': 814, 'comment': '# Starting test', 'include_SATD': False}], 'filename': 'nova/tests/test_libvirt.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/fake.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1739, 'end_line': 1739, 'comment': '# Establishing connection to volume server.', 'include_SATD': False}], 'filename': 'nova/virt/libvirt/connection.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/xenserver/networking/etc/xensource/scripts/ovs_configure_base_flows.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/xenserver/networking/etc/xensource/scripts/ovs_configure_vif_flows.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/xenserver/networking/etc/xensource/scripts/vif_rules.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/xenserver/xenapi/etc/xapi.d/plugins/xenstore.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'tools/ajaxterm/ajaxterm.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/600,live migration/boot-from-volume test completed,True,{},False,{},False,{}
156,616,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_libvirt.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/connection.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/driver.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/616,Fix rebasing errors,True,{},False,{},False,{}
157,604,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 771, 'end_line': 772, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 783, 'end_line': 783, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}, {'start_line': 804, 'end_line': 806, 'comment': '# NOTE(vish): Copied discover from iscsi_driver since it is used #             but this should probably be refactored into a common #             area because it is used in libvirt driver.', 'include_SATD': True}], 'filename': 'nova/volume/driver.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/604,fix bdm delete and add back discover,True,"{'# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?': 1, '# NOTE(vish): Copied discover from iscsi_driver since it is used #             but this should probably be refactored into a common #             area because it is used in libvirt driver.': 1}",True,{},False,{}
158,617,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/617,remove non-existing terminate_volumes,True,{},False,{},False,{}
159,619,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/faults.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_limits.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/faults.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_limits.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/faults.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_limits.py'}]}]",3,7,0,MERGED,True,https://review.opendev.org/#/c/619,Fix bug 856664 overLimit errors now return 413,True,{},False,{},False,{}
160,607,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 508, 'end_line': 517, 'comment': ""#bdms = self._get_instance_volume_bdms(context, instance_id) #block_device_mapping = [] #for bdm in bdms: #    cinfo = utils.loads(bdm['connection_info']) #    block_device_mapping.append({'connection_info': cinfo, #                                 'mount_device': #                                 bdm['device_name']}) ## NOTE(vish): The mapping is passed in so the driver can disconnect ##             from remote volumes if necessary #block_device_info = {'block_device_mapping': block_device_mapping}"", 'include_SATD': False}, {'start_line': 633, 'end_line': 633, 'comment': '# FIXME(vish): we need a way to find the root device name on rebuild', 'include_SATD': True}, {'start_line': 1610, 'end_line': 1612, 'comment': ""# NOTE(vish): We don't want to actually mark the volume #             detached, or delete the bdm, just remove the #             connection from this host."", 'include_SATD': False}], 'b_comments': [{'start_line': 1392, 'end_line': 1394, 'comment': ""# NOTE(vish): We don't want to actually mark the volume #             detached, or delete the bdm, just remove the #             connection from this host."", 'include_SATD': False}, {'start_line': 1604, 'end_line': 1606, 'comment': ""# NOTE(vish): We don't want to actually mark the volume #             detached, or delete the bdm, just remove the #             connection from this host."", 'include_SATD': False}], 'filename': 'nova/compute/manager.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/607,pull in changes from manager,True,{},False,{'# FIXME(vish): we need a way to find the root device name on rebuild': 1},True,{}
161,623,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/servers.py'}]}]",1,2,0,ABANDONED,False,https://review.opendev.org/#/c/623,Re-declared the reclaim_instance_interval flag to avoid test failure when not running the entire test suite. Fixed bug 857580.,True,{},False,{},False,{}
162,621,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 12, 'comment': '#   Copyright 2011 Openstack, LLC. # #   Licensed under the Apache License, Version 2.0 (the ""License""); you may #   not use this file except in compliance with the License. You may obtain #   a copy of the License at # #       httpwww.apache.org/licenses/LICENSE-2.0 # #   Unless required by applicable law or agreed to in writing, software #   distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #   WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #   License for the specific language governing permissions and limitations #   under the License.', 'include_SATD': False}], 'filename': 'nova/api/openstack/contrib/admin_actions.py'}, {'a_comments': [{'start_line': 0, 'end_line': 13, 'comment': '# Copyright (c) 2011 Openstack, LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/admin_only.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/hosts.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/rescue.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 12, 'comment': '#   Copyright 2011 OpenStack LLC. # #   Licensed under the Apache License, Version 2.0 (the ""License""); you may #   not use this file except in compliance with the License. You may obtain #   a copy of the License at # #       httpwww.apache.org/licenses/LICENSE-2.0 # #   Unless required by applicable law or agreed to in writing, software #   distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #   WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #   License for the specific language governing permissions and limitations #   under the License.', 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/contrib/test_admin_actions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 12, 'comment': '#   Copyright 2011 Openstack, LLC. # #   Licensed under the Apache License, Version 2.0 (the ""License""); you may #   not use this file except in compliance with the License. You may obtain #   a copy of the License at # #       httpwww.apache.org/licenses/LICENSE-2.0 # #   Unless required by applicable law or agreed to in writing, software #   distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #   WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #   License for the specific language governing permissions and limitations #   under the License.', 'include_SATD': False}], 'filename': 'nova/api/openstack/contrib/admin_actions.py'}, {'a_comments': [{'start_line': 0, 'end_line': 13, 'comment': '# Copyright (c) 2011 Openstack, LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/admin_only.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/hosts.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/rescue.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 12, 'comment': '#   Copyright 2011 OpenStack LLC. # #   Licensed under the Apache License, Version 2.0 (the ""License""); you may #   not use this file except in compliance with the License. You may obtain #   a copy of the License at # #       httpwww.apache.org/licenses/LICENSE-2.0 # #   Unless required by applicable law or agreed to in writing, software #   distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #   WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #   License for the specific language governing permissions and limitations #   under the License.', 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/contrib/test_admin_actions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 12, 'comment': '#   Copyright 2011 Openstack, LLC. # #   Licensed under the Apache License, Version 2.0 (the ""License""); you may #   not use this file except in compliance with the License. You may obtain #   a copy of the License at # #       httpwww.apache.org/licenses/LICENSE-2.0 # #   Unless required by applicable law or agreed to in writing, software #   distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #   WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #   License for the specific language governing permissions and limitations #   under the License.', 'include_SATD': False}], 'filename': 'nova/api/openstack/contrib/admin_actions.py'}, {'a_comments': [{'start_line': 0, 'end_line': 13, 'comment': '# Copyright (c) 2011 Openstack, LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/admin_only.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/hosts.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/rescue.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 12, 'comment': '#   Copyright 2011 OpenStack LLC. # #   Licensed under the Apache License, Version 2.0 (the ""License""); you may #   not use this file except in compliance with the License. You may obtain #   a copy of the License at # #       httpwww.apache.org/licenses/LICENSE-2.0 # #   Unless required by applicable law or agreed to in writing, software #   distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #   WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #   License for the specific language governing permissions and limitations #   under the License.', 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/contrib/test_admin_actions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}]}]",3,7,4,MERGED,True,https://review.opendev.org/#/c/621,Moving admin actions to extension,True,{},False,{},False,{}
163,611,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/volumes.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1360, 'end_line': 1362, 'comment': ""# NOTE(vish): Comparing as strings because the os_api doesn't #             convert to integer and we may wish to support uuids #             in the future."", 'include_SATD': False}], 'filename': 'nova/compute/manager.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/611,compare as string instead of converting to int,True,{},False,{},False,{}
164,624,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/xmlutil.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_versions.py'}]}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/624,Adding xml schema validation for /versions resource.,True,{},False,{},False,{}
165,615,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 87, 'end_line': 89, 'comment': ""# NOTE(vish): if we are on the same host as nova volume, the #             discovery makes the target so we don't need to #             run --op new"", 'include_SATD': False}], 'filename': 'nova/virt/libvirt/volume.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/615,make it work when we are on the same host,True,{},False,{},False,{}
166,630,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_compute.py'}]}]",1,3,0,MERGED,True,https://review.opendev.org/#/c/630,Fixing bug 857712,True,{},False,{},False,{}
167,631,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/linux_net.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/linux_net.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/linux_net.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/linux_net.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_metadata.py'}]}]",4,8,2,MERGED,True,https://review.opendev.org/#/c/631,put fully qualified domain name in local-hostname,True,{},False,{},False,{}
168,622,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1678, 'end_line': 1678, 'comment': '# Check images_links', 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/test_images.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1872, 'end_line': 1872, 'comment': '# Check images_links', 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/test_images.py'}]}]",2,4,0,MERGED,True,https://review.opendev.org/#/c/622,Add next links to images requests,True,{},False,{},False,{}
169,618,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/ips.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/addresses.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 676, 'end_line': 676, 'comment': ""# NOTE(tr3buchet) please don't invent an exception here, empty list is fine"", 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 409, 'end_line': 410, 'comment': '# NOTE(jkoelker) This is just a stub function. Managers supporting #                floating ips MUST override this or use the Mixin', 'include_SATD': False}], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/xenapi/stubs.py'}, {'a_comments': [{'start_line': 1159, 'end_line': 1159, 'comment': '# TODO(sirp): This should eventually be the URI for the Glance image', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 699, 'end_line': 700, 'comment': '# Set name-label so we can find if we need to clean up a failed # migration', 'include_SATD': False}], 'filename': 'nova/virt/xenapi/vmops.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/ips.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/addresses.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 676, 'end_line': 676, 'comment': ""# NOTE(tr3buchet) please don't invent an exception here, empty list is fine"", 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 409, 'end_line': 410, 'comment': '# NOTE(jkoelker) This is just a stub function. Managers supporting #                floating ips MUST override this or use the Mixin', 'include_SATD': False}], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/xenapi/stubs.py'}, {'a_comments': [{'start_line': 1159, 'end_line': 1159, 'comment': '# TODO(sirp): This should eventually be the URI for the Glance image', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 699, 'end_line': 700, 'comment': '# Set name-label so we can find if we need to clean up a failed # migration', 'include_SATD': False}], 'filename': 'nova/virt/xenapi/vmops.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/ips.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/addresses.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 676, 'end_line': 676, 'comment': ""# NOTE(tr3buchet) please don't invent an exception here, empty list is fine"", 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 409, 'end_line': 410, 'comment': '# NOTE(jkoelker) This is just a stub function. Managers supporting #                floating ips MUST override this or use the Mixin', 'include_SATD': False}], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/xenapi/stubs.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/ips.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/addresses.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 676, 'end_line': 676, 'comment': ""# NOTE(tr3buchet) please don't invent an exception here, empty list is fine"", 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 409, 'end_line': 410, 'comment': '# NOTE(jkoelker) This is just a stub function. Managers supporting #                floating ips MUST override this or use the Mixin', 'include_SATD': False}], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_volumes.py'}]}, {'revision': 5, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/ips.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/addresses.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 676, 'end_line': 676, 'comment': ""# NOTE(tr3buchet) please don't invent an exception here, empty list is fine"", 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 409, 'end_line': 410, 'comment': '# NOTE(jkoelker) This is just a stub function. Managers supporting #                floating ips MUST override this or use the Mixin', 'include_SATD': False}], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_volumes.py'}]}, {'revision': 6, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/ips.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/addresses.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 676, 'end_line': 676, 'comment': ""# NOTE(tr3buchet) please don't invent an exception here, empty list is fine"", 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 409, 'end_line': 410, 'comment': '# NOTE(jkoelker) This is just a stub function. Managers supporting #                floating ips MUST override this or use the Mixin', 'include_SATD': False}], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_volumes.py'}]}]",6,20,7,MERGED,True,https://review.opendev.org/#/c/618,* Rework osapi to use network API not FK backref * Fixes lp854585,True,{},False,{'# TODO(sirp): This should eventually be the URI for the Glance image': 1},True,{}
170,634,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/common/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/stubs.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_clients.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_versions.py'}]}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/634,Fixes LP Bug #850685,True,{},False,{},False,{}
171,625,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/objectstore/s3server.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/vnc/auth.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 1, 'comment': '#!/usr/bin/env python # vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 3, 'end_line': 16, 'comment': '# Copyright (c) 2010 Openstack, LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); #    you may not use this file except in compliance with the License. #    You may obtain a copy of the License at # #        httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, #    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. #    See the License for the specific language governing permissions and #    limitations under the License.', 'include_SATD': False}], 'filename': 'nova/vnc/server.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/objectstore/s3server.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/vnc/auth.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 1, 'comment': '#!/usr/bin/env python # vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 3, 'end_line': 16, 'comment': '# Copyright (c) 2010 Openstack, LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); #    you may not use this file except in compliance with the License. #    You may obtain a copy of the License at # #        httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, #    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. #    See the License for the specific language governing permissions and #    limitations under the License.', 'include_SATD': False}], 'filename': 'nova/vnc/server.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/objectstore/s3server.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/vnc/auth.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 1, 'comment': '#!/usr/bin/env python # vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 3, 'end_line': 16, 'comment': '# Copyright (c) 2010 Openstack, LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); #    you may not use this file except in compliance with the License. #    You may obtain a copy of the License at # #        httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, #    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. #    See the License for the specific language governing permissions and #    limitations under the License.', 'include_SATD': False}], 'filename': 'nova/vnc/server.py'}]}]",3,8,0,MERGED,True,https://review.opendev.org/#/c/625,Add nova-all to run all services,True,{},False,{},False,{}
172,635,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_misc.py'}]}]",1,1,0,MERGED,True,https://review.opendev.org/#/c/635,Made jenkins email pruning more resilient.,True,{},False,{},False,{}
173,636,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_misc.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_misc.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_misc.py'}]}]",3,8,0,MERGED,True,https://review.opendev.org/#/c/636,Port Authors test to git.,True,{},False,{},False,{}
174,627,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/011_make_mindisk_and_minram_notnull.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_clients.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/011_make_mindisk_and_minram_notnull.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_clients.py'}]}]",2,4,0,MERGED,True,https://review.opendev.org/#/c/627,"Do not allow min_ram or min_disk properties to be NULL and if they are None, make sure to default to 0. Fixes bug 857711",True,{},False,{},False,{}
175,626,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 129, 'end_line': 133, 'comment': '# We come here if the user (or installer) issues a call to # glance-manage db_sync and the registry database has not # yet been put under version control. In this case, we # need to assume that the registry database has been # auto-created, and thus at the latest version in the migrate repo', 'include_SATD': False}], 'filename': 'glance/registry/db/migration.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 608, 'end_line': 608, 'comment': '#825024 -- glance client currently', 'include_SATD': False}, {'start_line': 615, 'end_line': 616, 'comment': '# 1. POST /images with public image named Image1 # attribute and no custom properties. Verify a 200 OK is returned', 'include_SATD': False}, {'start_line': 630, 'end_line': 630, 'comment': '# 2. Verify image added as public image', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [{'start_line': 123, 'end_line': 123, 'comment': '#825024 -- glance client currently', 'include_SATD': False}, {'start_line': 130, 'end_line': 131, 'comment': '# 1. POST /images with public image named Image1 # attribute and no custom properties. Verify a 200 OK is returned', 'include_SATD': False}, {'start_line': 145, 'end_line': 145, 'comment': '# 2. Verify image added as public image', 'include_SATD': False}], 'b_comments': [{'start_line': 124, 'end_line': 124, 'comment': '#824794 -- Tables are generated outside of migration', 'include_SATD': False}, {'start_line': 143, 'end_line': 143, 'comment': '# Now try downgrading and upgrading...', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_misc.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 129, 'end_line': 133, 'comment': '# We come here if the user (or installer) issues a call to # glance-manage db_sync and the registry database has not # yet been put under version control. In this case, we # need to assume that the registry database has been # auto-created, and thus at the latest version in the migrate repo', 'include_SATD': False}], 'filename': 'glance/registry/db/migration.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 608, 'end_line': 608, 'comment': '#825024 -- glance client currently', 'include_SATD': False}, {'start_line': 615, 'end_line': 616, 'comment': '# 1. POST /images with public image named Image1 # attribute and no custom properties. Verify a 200 OK is returned', 'include_SATD': False}, {'start_line': 630, 'end_line': 630, 'comment': '# 2. Verify image added as public image', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [{'start_line': 123, 'end_line': 123, 'comment': '#825024 -- glance client currently', 'include_SATD': False}, {'start_line': 130, 'end_line': 131, 'comment': '# 1. POST /images with public image named Image1 # attribute and no custom properties. Verify a 200 OK is returned', 'include_SATD': False}, {'start_line': 145, 'end_line': 145, 'comment': '# 2. Verify image added as public image', 'include_SATD': False}], 'b_comments': [{'start_line': 124, 'end_line': 124, 'comment': '#824794 -- Tables are generated outside of migration', 'include_SATD': False}, {'start_line': 143, 'end_line': 143, 'comment': '# Now try downgrading and upgrading...', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_misc.py'}]}]",2,11,0,ABANDONED,False,https://review.opendev.org/#/c/626,Fixes LP Bug #824794,True,{},False,{},False,{}
176,629,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright 2011 OpenStack LLC. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License', 'include_SATD': False}], 'filename': 'nova/api/openstack/contrib/diskconfig.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright (c) 2011 OpenStack LLC. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 20, 'end_line': 20, 'comment': '# temporary table for creating the new columns', 'include_SATD': False}, {'start_line': 25, 'end_line': 25, 'comment': '# The new column', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/050_add_disk_config_to_instances.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 13, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 151, 'end_line': 151, 'comment': '# Public image', 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/contrib/test_diskconfig.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/xenapi/stubs.py'}, {'a_comments': [{'start_line': 1159, 'end_line': 1159, 'comment': '# TODO(sirp): This should eventually be the URI for the Glance image', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 703, 'end_line': 704, 'comment': '# Set name-label so we can find if we need to clean up a failed # migration', 'include_SATD': False}], 'filename': 'nova/virt/xenapi/vmops.py'}]}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/629,Adds disk config,True,{},False,{'# TODO(sirp): This should eventually be the URI for the Glance image': 1},True,{}
177,637,"[{'revision': 1, 'changed_files': []}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/637,contrib/nova.sh: Updated to latest 'upstream' commit:6a8433a resolves bug 857209,False,{},False,{},False,{}
178,642,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'plugins/xenserver/networking/etc/xensource/scripts/ovs_configure_vif_flows.py'}]}]",1,4,0,MERGED,True,https://review.opendev.org/#/c/642,"Use ovs-vsctl iface-to-br to look up the bridge associated with the given VIF. This avoids assuming that vifX.Y is attached to xenbrY, which is untrue in the general case.",True,{},False,{},False,{}
179,633,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/011_make_mindisk_and_minram_notnull.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_clients.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/633,"Do not allow min_ram or min_disk properties to be NULL and if they are None, make sure to default to 0. Fixes bug 857711",True,{},False,{},False,{}
180,647,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/network/linux_net.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_linux_net.py'}]}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/647,Makes sure to recreate gateway for moved ip,True,{},False,{},False,{}
181,648,"[{'revision': 1, 'changed_files': []}]",1,1,0,MERGED,True,https://review.opendev.org/#/c/648,Fix swift-recon,False,{},False,{},False,{}
182,638,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 72, 'end_line': 75, 'comment': ""# preparse flagfiles for --optional_flagfile and pass # as another --flagfile in argv only if it exists. the # original '--optional_flagfile' argument is later ignored # (LP: #839796)"", 'include_SATD': False}], 'filename': 'nova/flags.py'}]}]",1,3,0,ABANDONED,False,https://review.opendev.org/#/c/638,flags.py: Use '--optional_flagfile' to specify a flagfile that may not exist,True,{},False,{},False,{}
183,651,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 2806, 'end_line': 2806, 'comment': '# TODO(vish): Join to group and check for project_id', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}]}]",1,5,3,MERGED,True,https://review.opendev.org/#/c/651,Fix the grantee group loading for source groups,True,{},False,{'# TODO(vish): Join to group and check for project_id': 1},True,{}
184,641,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/virtual_storage_arrays.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/ips.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/addresses.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_floating_ips.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}, {'a_comments': [], 'b_comments': [{'start_line': 225, 'end_line': 225, 'comment': ""# 'virtual_interfaces' will be returned by a network_api stub"", 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1418, 'end_line': 1418, 'comment': '# Preparing datas', 'include_SATD': False}, {'start_line': 1455, 'end_line': 1455, 'comment': '# Preparing datas', 'include_SATD': False}], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_metadata.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 276, 'end_line': 276, 'comment': '# Allows a short circuit if we just need any floater.', 'include_SATD': False}, {'start_line': 1313, 'end_line': 1313, 'comment': '# Now look for a floater.', 'include_SATD': False}, {'start_line': 1316, 'end_line': 1316, 'comment': '# NOTE(comstud): Will it float?', 'include_SATD': False}, {'start_line': 1319, 'end_line': 1319, 'comment': '# Got one, exit out.', 'include_SATD': False}], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [{'start_line': 311, 'end_line': 312, 'comment': '# NOTE(comstud): These exception checks are for lp830817 # (Restoring them after a refactoring removed)', 'include_SATD': False}], 'filename': 'nova/api/openstack/common.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/ips.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/servers.py'}, {'a_comments': [], 'b_comments': [{'start_line': 212, 'end_line': 222, 'comment': ""# FIXME(comstud) rpc calls raise RemoteError if the remote raises # an exception.  In the case here, because of a race condition, # it's possible the remote will raise a InstanceNotFound when # someone deletes the instance while this call is in progress. # # Unfortunately, we don't have access to the original exception # class now.. but we do have the exception class's name.  So, # we're checking it here and raising a new exception. # # Ultimately we need RPC to be able to serialize more things like # classes."", 'include_SATD': True}], 'filename': 'nova/network/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 543, 'end_line': 543, 'comment': '# Now try filtering.', 'include_SATD': False}], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_metadata.py'}]}]",2,11,3,MERGED,True,https://review.opendev.org/#/c/641,Fixes euca-describe-instances failing or not showing IPs,True,"{""# FIXME(comstud) rpc calls raise RemoteError if the remote raises # an exception.  In the case here, because of a race condition, # it's possible the remote will raise a InstanceNotFound when # someone deletes the instance while this call is in progress. # # Unfortunately, we don't have access to the original exception # class now.. but we do have the exception class's name.  So, # we're checking it here and raising a new exception. # # Ultimately we need RPC to be able to serialize more things like # classes."": 2}",True,{},False,{}
185,643,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 3, 'end_line': 3, 'comment': '# Copyright 2011 Citrix Systems, Inc.', 'include_SATD': False}, {'start_line': 50, 'end_line': 51, 'comment': '# Allow traffic from dom0 if there is a management interface # present (its IP address is on the bridge itself)', 'include_SATD': False}], 'filename': 'plugins/xenserver/networking/etc/xensource/scripts/ovs_configure_base_flows.py'}]}]",1,3,1,MERGED,True,https://review.opendev.org/#/c/643,Allow tenant networks to be shared with domain 0.,True,{},False,{},False,{}
186,644,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1280, 'end_line': 1281, 'comment': '# Instances can be soft or hard deleted and the query needs to # include or exclude both', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1280, 'end_line': 1281, 'comment': '# Instances can be soft or hard deleted and the query needs to # include or exclude both', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/ec2/test_cloud.py'}]}]",2,4,0,MERGED,True,https://review.opendev.org/#/c/644,Fix some minor issues due to premature merge of original code.,True,{},False,{},False,{}
187,658,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_images.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_images.py'}]}]",2,6,2,MERGED,True,https://review.opendev.org/#/c/658,Ensure minRam and minDisk are always integers,True,{},False,{},False,{}
188,659,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_images.py'}]}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/659,Catch ImageNotFound on image delete in OSAPI,True,{},False,{},False,{}
189,660,"[{'revision': 1, 'changed_files': []}]",1,3,0,MERGED,True,https://review.opendev.org/#/c/660,Call endheaders when auth_token is None. Fixes bug 856721.,False,{},False,{},False,{}
190,662,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}]}]",2,7,3,MERGED,True,https://review.opendev.org/#/c/662,Explicit errors on confirm/revertResize failures,True,{},False,{},False,{}
191,664,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 132, 'end_line': 134, 'comment': '# this is a hack that should go away once nova properly reports bindings # to quantum.  We have this here for now as it lets us work with # unmodified nova', 'include_SATD': True}], 'b_comments': [], 'filename': 'quantum/plugins/openvswitch/agent/ovs_quantum_agent.py'}]}]",1,1,0,MERGED,True,https://review.opendev.org/#/c/664,Remove hack for figuring out the vif interface identifier (lp859864),True,{},False,{'# this is a hack that should go away once nova properly reports bindings # to quantum.  We have this here for now as it lets us work with # unmodified nova': 1},True,{}
192,649,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/image/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_image.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1484, 'end_line': 1484, 'comment': '# Start test', 'include_SATD': False}, {'start_line': 1494, 'end_line': 1494, 'comment': '# Start test', 'include_SATD': False}, {'start_line': 1502, 'end_line': 1502, 'comment': ""                      '/some/path').AndReturn(('''image: 00000001"", 'include_SATD': False}, {'start_line': 1505, 'end_line': 1505, 'comment': ""disk size: 4.4M''', ''))"", 'include_SATD': False}, {'start_line': 1507, 'end_line': 1507, 'comment': '# Start test', 'include_SATD': False}, {'start_line': 1583, 'end_line': 1583, 'comment': '# Start test', 'include_SATD': False}, {'start_line': 1593, 'end_line': 1593, 'comment': '# We have a test for write_to_file. If that is sound, this suffices', 'include_SATD': False}, {'start_line': 1604, 'end_line': 1604, 'comment': '# We have a test for write_to_file. If that is sound, this suffices', 'include_SATD': False}, {'start_line': 1621, 'end_line': 1621, 'comment': '# Start test', 'include_SATD': False}], 'filename': 'nova/tests/test_libvirt.py'}, {'a_comments': [], 'b_comments': [{'start_line': 496, 'end_line': 496, 'comment': '# Put fakelibvirt in place', 'include_SATD': False}, {'start_line': 514, 'end_line': 514, 'comment': '# Point _VirtDriverTestCase at the right module', 'include_SATD': False}, {'start_line': 524, 'end_line': 524, 'comment': '# Restore libvirt', 'include_SATD': False}], 'filename': 'nova/tests/test_virt_drivers.py'}, {'a_comments': [{'start_line': 681, 'end_line': 681, 'comment': ""# don't loop forever"", 'include_SATD': False}, {'start_line': 683, 'end_line': 684, 'comment': '# netcat will exit with 0 only if the port is in use, # so a nonzero return value implies it is unused', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/virt/libvirt/connection.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/image/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_image.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1492, 'end_line': 1492, 'comment': '# Start test', 'include_SATD': False}, {'start_line': 1502, 'end_line': 1502, 'comment': '# Start test', 'include_SATD': False}, {'start_line': 1510, 'end_line': 1510, 'comment': ""                      '/some/path').AndReturn(('''image: 00000001"", 'include_SATD': False}, {'start_line': 1513, 'end_line': 1513, 'comment': ""disk size: 4.4M''', ''))"", 'include_SATD': False}, {'start_line': 1515, 'end_line': 1515, 'comment': '# Start test', 'include_SATD': False}, {'start_line': 1591, 'end_line': 1591, 'comment': '# Start test', 'include_SATD': False}, {'start_line': 1601, 'end_line': 1601, 'comment': '# We have a test for write_to_file. If that is sound, this suffices', 'include_SATD': False}, {'start_line': 1612, 'end_line': 1612, 'comment': '# We have a test for write_to_file. If that is sound, this suffices', 'include_SATD': False}, {'start_line': 1629, 'end_line': 1629, 'comment': '# Start test', 'include_SATD': False}], 'filename': 'nova/tests/test_libvirt.py'}, {'a_comments': [], 'b_comments': [{'start_line': 496, 'end_line': 496, 'comment': '# Put fakelibvirt in place', 'include_SATD': False}, {'start_line': 514, 'end_line': 514, 'comment': '# Point _VirtDriverTestCase at the right module', 'include_SATD': False}, {'start_line': 524, 'end_line': 524, 'comment': '# Restore libvirt', 'include_SATD': False}], 'filename': 'nova/tests/test_virt_drivers.py'}, {'a_comments': [{'start_line': 683, 'end_line': 683, 'comment': ""# don't loop forever"", 'include_SATD': False}, {'start_line': 685, 'end_line': 686, 'comment': '# netcat will exit with 0 only if the port is in use, # so a nonzero return value implies it is unused', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/virt/libvirt/connection.py'}]}]",2,2,0,ABANDONED,False,https://review.opendev.org/#/c/649,Extend test_virt_driver to also test libvirt driver.,True,{},False,{},False,{}
193,666,"[{'revision': 1, 'changed_files': []}, {'revision': 2, 'changed_files': []}, {'revision': 3, 'changed_files': []}]",3,5,0,MERGED,True,https://review.opendev.org/#/c/666,ovs plugin: Remove reference to set_external_ids.sh,False,{},False,{},False,{}
194,628,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 82, 'end_line': 82, 'comment': '# FIXME(ja) - why does self.network_api.list_floating_ips raise?', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/floating_ips.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 676, 'end_line': 676, 'comment': ""# NOTE(tr3buchet) please don't invent an exception here, empty list is fine"", 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [{'start_line': 72, 'end_line': 75, 'comment': ""# NOTE(vish): We don't know which network host should get the ip #             when we deallocate, so just send it to any one.  This #             will probably need to move into a network supervisor #             at some point."", 'include_SATD': False}, {'start_line': 90, 'end_line': 93, 'comment': '# NOTE(tr3buchet): i don\'t like the ""either or"" argument type # funcationility but i\'ve left it alone for now # TODO(tr3buchet): this function needs to be rewritten to move # the network related db lookups into the network host code', 'include_SATD': True}, {'start_line': 99, 'end_line': 99, 'comment': '# Check if the floating ip address is allocated', 'include_SATD': False}, {'start_line': 103, 'end_line': 103, 'comment': '# Check if the floating ip address is allocated to the same project', 'include_SATD': False}, {'start_line': 115, 'end_line': 116, 'comment': '# If this address has been previously associated to a # different instance, disassociate the floating_ip', 'include_SATD': False}, {'start_line': 120, 'end_line': 120, 'comment': '# NOTE(vish): if we are multi_host, send to the instances host', 'include_SATD': False}, {'start_line': 139, 'end_line': 139, 'comment': '# NOTE(vish): if we are multi_host, send to the instances host', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/network/api.py'}, {'a_comments': [{'start_line': 271, 'end_line': 271, 'comment': '# NOTE(tr3buchet): all networks hosts in zone now use the same pool', 'include_SATD': False}], 'b_comments': [{'start_line': 288, 'end_line': 288, 'comment': '# NOTE(tr3buchet): all network hosts in zone now use the same pool', 'include_SATD': False}, {'start_line': 305, 'end_line': 305, 'comment': '# handle auto_assigned', 'include_SATD': False}, {'start_line': 309, 'end_line': 309, 'comment': '# make sure project ownz this floating ip (allocated)', 'include_SATD': False}, {'start_line': 312, 'end_line': 312, 'comment': '# make sure floating ip is not associated', 'include_SATD': False}, {'start_line': 329, 'end_line': 329, 'comment': '# handle auto_assigned', 'include_SATD': False}, {'start_line': 333, 'end_line': 333, 'comment': '# make sure project ownz this floating ip (allocated)', 'include_SATD': False}, {'start_line': 336, 'end_line': 336, 'comment': ""# make sure floating ip isn't already associated"", 'include_SATD': False}, {'start_line': 342, 'end_line': 342, 'comment': ""# send to correct host, unless i'm the correct host"", 'include_SATD': False}, {'start_line': 350, 'end_line': 350, 'comment': ""# i'm the correct host"", 'include_SATD': False}, {'start_line': 354, 'end_line': 354, 'comment': '# send to correct host', 'include_SATD': False}, {'start_line': 363, 'end_line': 368, 'comment': '# associate floating ip # gogo driver time', 'include_SATD': False}, {'start_line': 381, 'end_line': 381, 'comment': '# handle auto assigned', 'include_SATD': False}, {'start_line': 385, 'end_line': 385, 'comment': '# make sure project ownz this floating ip (allocated)', 'include_SATD': False}, {'start_line': 388, 'end_line': 388, 'comment': '# make sure floating ip is associated', 'include_SATD': False}, {'start_line': 394, 'end_line': 394, 'comment': ""# send to correct host, unless i'm the correct host"", 'include_SATD': False}, {'start_line': 401, 'end_line': 401, 'comment': ""# i'm the correct host"", 'include_SATD': False}, {'start_line': 404, 'end_line': 404, 'comment': '# send to correct host', 'include_SATD': False}, {'start_line': 412, 'end_line': 412, 'comment': '# disassociate floating ip', 'include_SATD': False}, {'start_line': 415, 'end_line': 415, 'comment': '# go go driver time', 'include_SATD': False}], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/test.py'}, {'a_comments': [{'start_line': 147, 'end_line': 147, 'comment': '# ApiError: Floating ip is in use.  Disassociate it before releasing.', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [{'start_line': 186, 'end_line': 186, 'comment': '# test floating ip allocate/release(deallocate)', 'include_SATD': False}, {'start_line': 229, 'end_line': 229, 'comment': '# test floating ip add/remove -> associate/disassociate', 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/contrib/test_floating_ips.py'}, {'a_comments': [], 'b_comments': [{'start_line': 411, 'end_line': 411, 'comment': '# raises because floating_ip project_id is None', 'include_SATD': False}, {'start_line': 417, 'end_line': 417, 'comment': '# raises because floating_ip project_id is not equal to ctxt project_id', 'include_SATD': False}, {'start_line': 423, 'end_line': 423, 'comment': '# does not raise', 'include_SATD': False}, {'start_line': 442, 'end_line': 442, 'comment': '# this time should raise', 'include_SATD': False}, {'start_line': 448, 'end_line': 448, 'comment': '# this time should not', 'include_SATD': False}, {'start_line': 469, 'end_line': 469, 'comment': '# this time should raise because floating ip is associated to fixed_ip', 'include_SATD': False}, {'start_line': 475, 'end_line': 475, 'comment': '# this time should not', 'include_SATD': False}, {'start_line': 483, 'end_line': 483, 'comment': '# fixed ip with remote host', 'include_SATD': False}, {'start_line': 488, 'end_line': 488, 'comment': '# fixed ip with local host', 'include_SATD': False}, {'start_line': 496, 'end_line': 496, 'comment': ""# floating ip that's already associated"", 'include_SATD': False}, {'start_line': 501, 'end_line': 501, 'comment': ""# floating ip that isn't associated"", 'include_SATD': False}, {'start_line': 515, 'end_line': 515, 'comment': '# raises because floating_ip is already associated to a fixed_ip', 'include_SATD': False}, {'start_line': 525, 'end_line': 525, 'comment': '# does not raise and makes call remotely', 'include_SATD': False}, {'start_line': 532, 'end_line': 532, 'comment': '# does not raise and makes call locally', 'include_SATD': False}, {'start_line': 544, 'end_line': 544, 'comment': '# fixed ip with remote host', 'include_SATD': False}, {'start_line': 549, 'end_line': 549, 'comment': '# fixed ip with local host', 'include_SATD': False}, {'start_line': 557, 'end_line': 557, 'comment': ""# floating ip that isn't associated"", 'include_SATD': False}, {'start_line': 562, 'end_line': 562, 'comment': ""# floating ip that's already associated"", 'include_SATD': False}, {'start_line': 575, 'end_line': 575, 'comment': '# raises because floating_ip is not associated to a fixed_ip', 'include_SATD': False}, {'start_line': 584, 'end_line': 584, 'comment': '# does not raise and makes call remotely', 'include_SATD': False}, {'start_line': 591, 'end_line': 591, 'comment': '# does not raise and makes call locally', 'include_SATD': False}], 'filename': 'nova/tests/test_network.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [{'start_line': 82, 'end_line': 82, 'comment': '# FIXME(ja) - why does self.network_api.list_floating_ips raise?', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/floating_ips.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 676, 'end_line': 676, 'comment': ""# NOTE(tr3buchet) please don't invent an exception here, empty list is fine"", 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [{'start_line': 72, 'end_line': 75, 'comment': ""# NOTE(vish): We don't know which network host should get the ip #             when we deallocate, so just send it to any one.  This #             will probably need to move into a network supervisor #             at some point."", 'include_SATD': False}, {'start_line': 90, 'end_line': 93, 'comment': '# NOTE(tr3buchet): i don\'t like the ""either or"" argument type # funcationility but i\'ve left it alone for now # TODO(tr3buchet): this function needs to be rewritten to move # the network related db lookups into the network host code', 'include_SATD': True}, {'start_line': 99, 'end_line': 99, 'comment': '# Check if the floating ip address is allocated', 'include_SATD': False}, {'start_line': 103, 'end_line': 103, 'comment': '# Check if the floating ip address is allocated to the same project', 'include_SATD': False}, {'start_line': 115, 'end_line': 116, 'comment': '# If this address has been previously associated to a # different instance, disassociate the floating_ip', 'include_SATD': False}, {'start_line': 120, 'end_line': 120, 'comment': '# NOTE(vish): if we are multi_host, send to the instances host', 'include_SATD': False}, {'start_line': 139, 'end_line': 139, 'comment': '# NOTE(vish): if we are multi_host, send to the instances host', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/network/api.py'}, {'a_comments': [{'start_line': 271, 'end_line': 271, 'comment': '# NOTE(tr3buchet): all networks hosts in zone now use the same pool', 'include_SATD': False}], 'b_comments': [{'start_line': 288, 'end_line': 288, 'comment': '# NOTE(tr3buchet): all network hosts in zone now use the same pool', 'include_SATD': False}, {'start_line': 305, 'end_line': 305, 'comment': '# handle auto_assigned', 'include_SATD': False}, {'start_line': 309, 'end_line': 309, 'comment': '# make sure project ownz this floating ip (allocated)', 'include_SATD': False}, {'start_line': 312, 'end_line': 312, 'comment': '# make sure floating ip is not associated', 'include_SATD': False}, {'start_line': 329, 'end_line': 329, 'comment': '# handle auto_assigned', 'include_SATD': False}, {'start_line': 333, 'end_line': 333, 'comment': '# make sure project ownz this floating ip (allocated)', 'include_SATD': False}, {'start_line': 336, 'end_line': 336, 'comment': ""# make sure floating ip isn't already associated"", 'include_SATD': False}, {'start_line': 342, 'end_line': 342, 'comment': ""# send to correct host, unless i'm the correct host"", 'include_SATD': False}, {'start_line': 350, 'end_line': 350, 'comment': ""# i'm the correct host"", 'include_SATD': False}, {'start_line': 354, 'end_line': 354, 'comment': '# send to correct host', 'include_SATD': False}, {'start_line': 363, 'end_line': 368, 'comment': '# associate floating ip # gogo driver time', 'include_SATD': False}, {'start_line': 381, 'end_line': 381, 'comment': '# handle auto assigned', 'include_SATD': False}, {'start_line': 385, 'end_line': 385, 'comment': '# make sure project ownz this floating ip (allocated)', 'include_SATD': False}, {'start_line': 388, 'end_line': 388, 'comment': '# make sure floating ip is associated', 'include_SATD': False}, {'start_line': 394, 'end_line': 394, 'comment': ""# send to correct host, unless i'm the correct host"", 'include_SATD': False}, {'start_line': 401, 'end_line': 401, 'comment': ""# i'm the correct host"", 'include_SATD': False}, {'start_line': 404, 'end_line': 404, 'comment': '# send to correct host', 'include_SATD': False}, {'start_line': 412, 'end_line': 412, 'comment': '# disassociate floating ip', 'include_SATD': False}, {'start_line': 415, 'end_line': 415, 'comment': '# go go driver time', 'include_SATD': False}], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/test.py'}, {'a_comments': [{'start_line': 147, 'end_line': 147, 'comment': '# ApiError: Floating ip is in use.  Disassociate it before releasing.', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [{'start_line': 186, 'end_line': 186, 'comment': '# test floating ip allocate/release(deallocate)', 'include_SATD': False}, {'start_line': 229, 'end_line': 229, 'comment': '# test floating ip add/remove -> associate/disassociate', 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/contrib/test_floating_ips.py'}, {'a_comments': [], 'b_comments': [{'start_line': 411, 'end_line': 411, 'comment': '# raises because floating_ip project_id is None', 'include_SATD': False}, {'start_line': 417, 'end_line': 417, 'comment': '# raises because floating_ip project_id is not equal to ctxt project_id', 'include_SATD': False}, {'start_line': 423, 'end_line': 423, 'comment': '# does not raise', 'include_SATD': False}, {'start_line': 442, 'end_line': 442, 'comment': '# this time should raise', 'include_SATD': False}, {'start_line': 448, 'end_line': 448, 'comment': '# this time should not', 'include_SATD': False}, {'start_line': 469, 'end_line': 469, 'comment': '# this time should raise because floating ip is associated to fixed_ip', 'include_SATD': False}, {'start_line': 475, 'end_line': 475, 'comment': '# this time should not', 'include_SATD': False}, {'start_line': 483, 'end_line': 483, 'comment': '# fixed ip with remote host', 'include_SATD': False}, {'start_line': 488, 'end_line': 488, 'comment': '# fixed ip with local host', 'include_SATD': False}, {'start_line': 496, 'end_line': 496, 'comment': ""# floating ip that's already associated"", 'include_SATD': False}, {'start_line': 501, 'end_line': 501, 'comment': ""# floating ip that isn't associated"", 'include_SATD': False}, {'start_line': 515, 'end_line': 515, 'comment': '# raises because floating_ip is already associated to a fixed_ip', 'include_SATD': False}, {'start_line': 525, 'end_line': 525, 'comment': '# does not raise and makes call remotely', 'include_SATD': False}, {'start_line': 532, 'end_line': 532, 'comment': '# does not raise and makes call locally', 'include_SATD': False}, {'start_line': 544, 'end_line': 544, 'comment': '# fixed ip with remote host', 'include_SATD': False}, {'start_line': 549, 'end_line': 549, 'comment': '# fixed ip with local host', 'include_SATD': False}, {'start_line': 557, 'end_line': 557, 'comment': ""# floating ip that isn't associated"", 'include_SATD': False}, {'start_line': 562, 'end_line': 562, 'comment': ""# floating ip that's already associated"", 'include_SATD': False}, {'start_line': 575, 'end_line': 575, 'comment': '# raises because floating_ip is not associated to a fixed_ip', 'include_SATD': False}, {'start_line': 584, 'end_line': 584, 'comment': '# does not raise and makes call remotely', 'include_SATD': False}, {'start_line': 591, 'end_line': 591, 'comment': '# does not raise and makes call locally', 'include_SATD': False}], 'filename': 'nova/tests/test_network.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [{'start_line': 82, 'end_line': 82, 'comment': '# FIXME(ja) - why does self.network_api.list_floating_ips raise?', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/floating_ips.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 676, 'end_line': 676, 'comment': ""# NOTE(tr3buchet) please don't invent an exception here, empty list is fine"", 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [{'start_line': 72, 'end_line': 75, 'comment': ""# NOTE(vish): We don't know which network host should get the ip #             when we deallocate, so just send it to any one.  This #             will probably need to move into a network supervisor #             at some point."", 'include_SATD': False}, {'start_line': 90, 'end_line': 93, 'comment': '# NOTE(tr3buchet): i don\'t like the ""either or"" argument type # funcationility but i\'ve left it alone for now # TODO(tr3buchet): this function needs to be rewritten to move # the network related db lookups into the network host code', 'include_SATD': True}, {'start_line': 99, 'end_line': 99, 'comment': '# Check if the floating ip address is allocated', 'include_SATD': False}, {'start_line': 103, 'end_line': 103, 'comment': '# Check if the floating ip address is allocated to the same project', 'include_SATD': False}, {'start_line': 115, 'end_line': 116, 'comment': '# If this address has been previously associated to a # different instance, disassociate the floating_ip', 'include_SATD': False}, {'start_line': 120, 'end_line': 120, 'comment': '# NOTE(vish): if we are multi_host, send to the instances host', 'include_SATD': False}, {'start_line': 139, 'end_line': 139, 'comment': '# NOTE(vish): if we are multi_host, send to the instances host', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/network/api.py'}, {'a_comments': [{'start_line': 271, 'end_line': 271, 'comment': '# NOTE(tr3buchet): all networks hosts in zone now use the same pool', 'include_SATD': False}], 'b_comments': [{'start_line': 288, 'end_line': 288, 'comment': '# NOTE(tr3buchet): all network hosts in zone now use the same pool', 'include_SATD': False}, {'start_line': 305, 'end_line': 305, 'comment': '# handle auto_assigned', 'include_SATD': False}, {'start_line': 309, 'end_line': 309, 'comment': '# make sure project ownz this floating ip (allocated)', 'include_SATD': False}, {'start_line': 312, 'end_line': 312, 'comment': '# make sure floating ip is not associated', 'include_SATD': False}, {'start_line': 329, 'end_line': 329, 'comment': '# handle auto_assigned', 'include_SATD': False}, {'start_line': 333, 'end_line': 333, 'comment': '# make sure project ownz this floating ip (allocated)', 'include_SATD': False}, {'start_line': 336, 'end_line': 336, 'comment': ""# make sure floating ip isn't already associated"", 'include_SATD': False}, {'start_line': 342, 'end_line': 342, 'comment': ""# send to correct host, unless i'm the correct host"", 'include_SATD': False}, {'start_line': 350, 'end_line': 350, 'comment': ""# i'm the correct host"", 'include_SATD': False}, {'start_line': 354, 'end_line': 354, 'comment': '# send to correct host', 'include_SATD': False}, {'start_line': 363, 'end_line': 368, 'comment': '# associate floating ip # gogo driver time', 'include_SATD': False}, {'start_line': 381, 'end_line': 381, 'comment': '# handle auto assigned', 'include_SATD': False}, {'start_line': 385, 'end_line': 385, 'comment': '# make sure project ownz this floating ip (allocated)', 'include_SATD': False}, {'start_line': 388, 'end_line': 388, 'comment': '# make sure floating ip is associated', 'include_SATD': False}, {'start_line': 394, 'end_line': 394, 'comment': ""# send to correct host, unless i'm the correct host"", 'include_SATD': False}, {'start_line': 401, 'end_line': 401, 'comment': ""# i'm the correct host"", 'include_SATD': False}, {'start_line': 404, 'end_line': 404, 'comment': '# send to correct host', 'include_SATD': False}, {'start_line': 412, 'end_line': 412, 'comment': '# disassociate floating ip', 'include_SATD': False}, {'start_line': 415, 'end_line': 415, 'comment': '# go go driver time', 'include_SATD': False}], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/test.py'}, {'a_comments': [{'start_line': 147, 'end_line': 147, 'comment': '# ApiError: Floating ip is in use.  Disassociate it before releasing.', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [{'start_line': 186, 'end_line': 186, 'comment': '# test floating ip allocate/release(deallocate)', 'include_SATD': False}, {'start_line': 229, 'end_line': 229, 'comment': '# test floating ip add/remove -> associate/disassociate', 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/contrib/test_floating_ips.py'}, {'a_comments': [], 'b_comments': [{'start_line': 411, 'end_line': 411, 'comment': '# raises because floating_ip project_id is None', 'include_SATD': False}, {'start_line': 417, 'end_line': 417, 'comment': '# raises because floating_ip project_id is not equal to ctxt project_id', 'include_SATD': False}, {'start_line': 423, 'end_line': 423, 'comment': '# does not raise', 'include_SATD': False}, {'start_line': 442, 'end_line': 442, 'comment': '# this time should raise', 'include_SATD': False}, {'start_line': 448, 'end_line': 448, 'comment': '# this time should not', 'include_SATD': False}, {'start_line': 469, 'end_line': 469, 'comment': '# this time should raise because floating ip is associated to fixed_ip', 'include_SATD': False}, {'start_line': 475, 'end_line': 475, 'comment': '# this time should not', 'include_SATD': False}, {'start_line': 483, 'end_line': 483, 'comment': '# fixed ip with remote host', 'include_SATD': False}, {'start_line': 488, 'end_line': 488, 'comment': '# fixed ip with local host', 'include_SATD': False}, {'start_line': 496, 'end_line': 496, 'comment': ""# floating ip that's already associated"", 'include_SATD': False}, {'start_line': 501, 'end_line': 501, 'comment': ""# floating ip that isn't associated"", 'include_SATD': False}, {'start_line': 515, 'end_line': 515, 'comment': '# raises because floating_ip is already associated to a fixed_ip', 'include_SATD': False}, {'start_line': 525, 'end_line': 525, 'comment': '# does not raise and makes call remotely', 'include_SATD': False}, {'start_line': 532, 'end_line': 532, 'comment': '# does not raise and makes call locally', 'include_SATD': False}, {'start_line': 544, 'end_line': 544, 'comment': '# fixed ip with remote host', 'include_SATD': False}, {'start_line': 549, 'end_line': 549, 'comment': '# fixed ip with local host', 'include_SATD': False}, {'start_line': 557, 'end_line': 557, 'comment': ""# floating ip that isn't associated"", 'include_SATD': False}, {'start_line': 562, 'end_line': 562, 'comment': ""# floating ip that's already associated"", 'include_SATD': False}, {'start_line': 575, 'end_line': 575, 'comment': '# raises because floating_ip is not associated to a fixed_ip', 'include_SATD': False}, {'start_line': 584, 'end_line': 584, 'comment': '# does not raise and makes call remotely', 'include_SATD': False}, {'start_line': 591, 'end_line': 591, 'comment': '# does not raise and makes call locally', 'include_SATD': False}], 'filename': 'nova/tests/test_network.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [{'start_line': 82, 'end_line': 82, 'comment': '# FIXME(ja) - why does self.network_api.list_floating_ips raise?', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/floating_ips.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [{'start_line': 78, 'end_line': 81, 'comment': ""# NOTE(vish): We don't know which network host should get the ip #             when we deallocate, so just send it to any one.  This #             will probably need to move into a network supervisor #             at some point."", 'include_SATD': False}, {'start_line': 96, 'end_line': 99, 'comment': '# NOTE(tr3buchet): i don\'t like the ""either or"" argument type # funcationility but i\'ve left it alone for now # TODO(tr3buchet): this function needs to be rewritten to move # the network related db lookups into the network host code', 'include_SATD': True}, {'start_line': 105, 'end_line': 105, 'comment': '# Check if the floating ip address is allocated', 'include_SATD': False}, {'start_line': 109, 'end_line': 109, 'comment': '# Check if the floating ip address is allocated to the same project', 'include_SATD': False}, {'start_line': 121, 'end_line': 122, 'comment': '# If this address has been previously associated to a # different instance, disassociate the floating_ip', 'include_SATD': False}, {'start_line': 126, 'end_line': 126, 'comment': '# NOTE(vish): if we are multi_host, send to the instances host', 'include_SATD': False}, {'start_line': 145, 'end_line': 145, 'comment': '# NOTE(vish): if we are multi_host, send to the instances host', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/network/api.py'}, {'a_comments': [{'start_line': 223, 'end_line': 223, 'comment': '# allocate a floating ip (public_ip is just the address string)', 'include_SATD': False}, {'start_line': 227, 'end_line': 227, 'comment': '# get the floating ip object from public_ip string', 'include_SATD': False}, {'start_line': 231, 'end_line': 231, 'comment': '# get the first fixed_ip belonging to the instance', 'include_SATD': False}, {'start_line': 235, 'end_line': 235, 'comment': '# call to correct network host to associate the floating ip', 'include_SATD': False}, {'start_line': 274, 'end_line': 274, 'comment': '# NOTE(tr3buchet): all networks hosts in zone now use the same pool', 'include_SATD': False}], 'b_comments': [{'start_line': 224, 'end_line': 224, 'comment': '# allocate a floating ip', 'include_SATD': False}, {'start_line': 229, 'end_line': 229, 'comment': '# get the first fixed address belonging to the instance', 'include_SATD': False}, {'start_line': 235, 'end_line': 235, 'comment': '# associate the floating ip to fixed_ip', 'include_SATD': False}, {'start_line': 286, 'end_line': 286, 'comment': '# NOTE(tr3buchet): all network hosts in zone now use the same pool', 'include_SATD': False}, {'start_line': 303, 'end_line': 303, 'comment': '# handle auto_assigned', 'include_SATD': False}, {'start_line': 307, 'end_line': 307, 'comment': '# make sure project ownz this floating ip (allocated)', 'include_SATD': False}, {'start_line': 310, 'end_line': 310, 'comment': '# make sure floating ip is not associated', 'include_SATD': False}, {'start_line': 326, 'end_line': 326, 'comment': '# handle auto_assigned', 'include_SATD': False}, {'start_line': 330, 'end_line': 330, 'comment': '# make sure project ownz this floating ip (allocated)', 'include_SATD': False}, {'start_line': 333, 'end_line': 333, 'comment': ""# make sure floating ip isn't already associated"", 'include_SATD': False}, {'start_line': 340, 'end_line': 340, 'comment': ""# send to correct host, unless i'm the correct host"", 'include_SATD': False}, {'start_line': 348, 'end_line': 348, 'comment': ""# i'm the correct host"", 'include_SATD': False}, {'start_line': 352, 'end_line': 352, 'comment': '# send to correct host', 'include_SATD': False}, {'start_line': 361, 'end_line': 366, 'comment': '# associate floating ip # gogo driver time', 'include_SATD': False}, {'start_line': 379, 'end_line': 379, 'comment': '# handle auto assigned', 'include_SATD': False}, {'start_line': 383, 'end_line': 383, 'comment': '# make sure project ownz this floating ip (allocated)', 'include_SATD': False}, {'start_line': 386, 'end_line': 386, 'comment': '# make sure floating ip is associated', 'include_SATD': False}, {'start_line': 393, 'end_line': 393, 'comment': ""# send to correct host, unless i'm the correct host"", 'include_SATD': False}, {'start_line': 400, 'end_line': 400, 'comment': ""# i'm the correct host"", 'include_SATD': False}, {'start_line': 403, 'end_line': 403, 'comment': '# send to correct host', 'include_SATD': False}, {'start_line': 411, 'end_line': 411, 'comment': '# disassociate floating ip', 'include_SATD': False}, {'start_line': 414, 'end_line': 414, 'comment': '# go go driver time', 'include_SATD': False}], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/test.py'}, {'a_comments': [{'start_line': 147, 'end_line': 147, 'comment': '# ApiError: Floating ip is in use.  Disassociate it before releasing.', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [{'start_line': 186, 'end_line': 186, 'comment': '# test floating ip allocate/release(deallocate)', 'include_SATD': False}, {'start_line': 229, 'end_line': 229, 'comment': '# test floating ip add/remove -> associate/disassociate', 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/contrib/test_floating_ips.py'}, {'a_comments': [], 'b_comments': [{'start_line': 402, 'end_line': 402, 'comment': '# raises because floating_ip project_id is None', 'include_SATD': False}, {'start_line': 410, 'end_line': 410, 'comment': '# raises because floating_ip project_id is not equal to ctxt project_id', 'include_SATD': False}, {'start_line': 418, 'end_line': 418, 'comment': '# does not raise (floating ip is owned by ctxt project)', 'include_SATD': False}, {'start_line': 438, 'end_line': 438, 'comment': '# this time should raise', 'include_SATD': False}, {'start_line': 445, 'end_line': 445, 'comment': '# this time should not', 'include_SATD': False}, {'start_line': 465, 'end_line': 465, 'comment': '# this time should raise because floating ip is associated to fixed_ip', 'include_SATD': False}, {'start_line': 472, 'end_line': 472, 'comment': '# this time should not raise', 'include_SATD': False}, {'start_line': 483, 'end_line': 483, 'comment': ""# floating ip that's already associated"", 'include_SATD': False}, {'start_line': 488, 'end_line': 488, 'comment': ""# floating ip that isn't associated"", 'include_SATD': False}, {'start_line': 493, 'end_line': 493, 'comment': '# fixed ip with remote host', 'include_SATD': False}, {'start_line': 498, 'end_line': 498, 'comment': '# fixed ip with local host', 'include_SATD': False}, {'start_line': 511, 'end_line': 511, 'comment': '# raises because floating_ip is already associated to a fixed_ip', 'include_SATD': False}, {'start_line': 521, 'end_line': 521, 'comment': '# does not raise and makes call remotely', 'include_SATD': False}, {'start_line': 529, 'end_line': 529, 'comment': '# does not raise and makes call locally', 'include_SATD': False}, {'start_line': 544, 'end_line': 544, 'comment': ""# floating ip that isn't associated"", 'include_SATD': False}, {'start_line': 549, 'end_line': 549, 'comment': '# floating ip that is associated', 'include_SATD': False}, {'start_line': 554, 'end_line': 554, 'comment': '# fixed ip with remote host', 'include_SATD': False}, {'start_line': 559, 'end_line': 559, 'comment': '# fixed ip with local host', 'include_SATD': False}, {'start_line': 572, 'end_line': 572, 'comment': '# raises because floating_ip is not associated to a fixed_ip', 'include_SATD': False}, {'start_line': 581, 'end_line': 581, 'comment': '# does not raise and makes call remotely', 'include_SATD': False}, {'start_line': 588, 'end_line': 588, 'comment': '# does not raise and makes call locally', 'include_SATD': False}], 'filename': 'nova/tests/test_network.py'}]}, {'revision': 5, 'changed_files': [{'a_comments': [{'start_line': 82, 'end_line': 82, 'comment': '# FIXME(ja) - why does self.network_api.list_floating_ips raise?', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/floating_ips.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [{'start_line': 79, 'end_line': 82, 'comment': ""# NOTE(vish): We don't know which network host should get the ip #             when we deallocate, so just send it to any one.  This #             will probably need to move into a network supervisor #             at some point."", 'include_SATD': False}, {'start_line': 97, 'end_line': 100, 'comment': '# NOTE(tr3buchet): i don\'t like the ""either or"" argument type # funcationility but i\'ve left it alone for now # TODO(tr3buchet): this function needs to be rewritten to move # the network related db lookups into the network host code', 'include_SATD': True}, {'start_line': 106, 'end_line': 106, 'comment': '# Check if the floating ip address is allocated', 'include_SATD': False}, {'start_line': 110, 'end_line': 110, 'comment': '# Check if the floating ip address is allocated to the same project', 'include_SATD': False}, {'start_line': 122, 'end_line': 123, 'comment': '# If this address has been previously associated to a # different instance, disassociate the floating_ip', 'include_SATD': False}, {'start_line': 127, 'end_line': 127, 'comment': '# NOTE(vish): if we are multi_host, send to the instances host', 'include_SATD': False}, {'start_line': 146, 'end_line': 146, 'comment': '# NOTE(vish): if we are multi_host, send to the instances host', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/network/api.py'}, {'a_comments': [{'start_line': 223, 'end_line': 223, 'comment': '# allocate a floating ip (public_ip is just the address string)', 'include_SATD': False}, {'start_line': 227, 'end_line': 227, 'comment': '# get the floating ip object from public_ip string', 'include_SATD': False}, {'start_line': 231, 'end_line': 231, 'comment': '# get the first fixed_ip belonging to the instance', 'include_SATD': False}, {'start_line': 235, 'end_line': 235, 'comment': '# call to correct network host to associate the floating ip', 'include_SATD': False}, {'start_line': 274, 'end_line': 274, 'comment': '# NOTE(tr3buchet): all networks hosts in zone now use the same pool', 'include_SATD': False}], 'b_comments': [{'start_line': 224, 'end_line': 224, 'comment': '# allocate a floating ip', 'include_SATD': False}, {'start_line': 229, 'end_line': 229, 'comment': '# get the first fixed address belonging to the instance', 'include_SATD': False}, {'start_line': 235, 'end_line': 235, 'comment': '# associate the floating ip to fixed_ip', 'include_SATD': False}, {'start_line': 286, 'end_line': 286, 'comment': '# NOTE(tr3buchet): all network hosts in zone now use the same pool', 'include_SATD': False}, {'start_line': 303, 'end_line': 303, 'comment': '# handle auto_assigned', 'include_SATD': False}, {'start_line': 307, 'end_line': 307, 'comment': '# make sure project ownz this floating ip (allocated)', 'include_SATD': False}, {'start_line': 310, 'end_line': 310, 'comment': '# make sure floating ip is not associated', 'include_SATD': False}, {'start_line': 326, 'end_line': 326, 'comment': '# handle auto_assigned', 'include_SATD': False}, {'start_line': 330, 'end_line': 330, 'comment': '# make sure project ownz this floating ip (allocated)', 'include_SATD': False}, {'start_line': 333, 'end_line': 333, 'comment': ""# make sure floating ip isn't already associated"", 'include_SATD': False}, {'start_line': 340, 'end_line': 340, 'comment': ""# send to correct host, unless i'm the correct host"", 'include_SATD': False}, {'start_line': 348, 'end_line': 348, 'comment': ""# i'm the correct host"", 'include_SATD': False}, {'start_line': 352, 'end_line': 352, 'comment': '# send to correct host', 'include_SATD': False}, {'start_line': 361, 'end_line': 366, 'comment': '# associate floating ip # gogo driver time', 'include_SATD': False}, {'start_line': 379, 'end_line': 379, 'comment': '# handle auto assigned', 'include_SATD': False}, {'start_line': 383, 'end_line': 383, 'comment': '# make sure project ownz this floating ip (allocated)', 'include_SATD': False}, {'start_line': 386, 'end_line': 386, 'comment': '# make sure floating ip is associated', 'include_SATD': False}, {'start_line': 393, 'end_line': 393, 'comment': ""# send to correct host, unless i'm the correct host"", 'include_SATD': False}, {'start_line': 400, 'end_line': 400, 'comment': ""# i'm the correct host"", 'include_SATD': False}, {'start_line': 403, 'end_line': 403, 'comment': '# send to correct host', 'include_SATD': False}, {'start_line': 411, 'end_line': 411, 'comment': '# disassociate floating ip', 'include_SATD': False}, {'start_line': 414, 'end_line': 414, 'comment': '# go go driver time', 'include_SATD': False}], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/test.py'}, {'a_comments': [{'start_line': 147, 'end_line': 147, 'comment': '# ApiError: Floating ip is in use.  Disassociate it before releasing.', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [{'start_line': 186, 'end_line': 186, 'comment': '# test floating ip allocate/release(deallocate)', 'include_SATD': False}, {'start_line': 229, 'end_line': 229, 'comment': '# test floating ip add/remove -> associate/disassociate', 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/contrib/test_floating_ips.py'}, {'a_comments': [], 'b_comments': [{'start_line': 402, 'end_line': 402, 'comment': '# raises because floating_ip project_id is None', 'include_SATD': False}, {'start_line': 410, 'end_line': 410, 'comment': '# raises because floating_ip project_id is not equal to ctxt project_id', 'include_SATD': False}, {'start_line': 418, 'end_line': 418, 'comment': '# does not raise (floating ip is owned by ctxt project)', 'include_SATD': False}, {'start_line': 438, 'end_line': 438, 'comment': '# this time should raise', 'include_SATD': False}, {'start_line': 445, 'end_line': 445, 'comment': '# this time should not', 'include_SATD': False}, {'start_line': 465, 'end_line': 465, 'comment': '# this time should raise because floating ip is associated to fixed_ip', 'include_SATD': False}, {'start_line': 472, 'end_line': 472, 'comment': '# this time should not raise', 'include_SATD': False}, {'start_line': 483, 'end_line': 483, 'comment': ""# floating ip that's already associated"", 'include_SATD': False}, {'start_line': 488, 'end_line': 488, 'comment': ""# floating ip that isn't associated"", 'include_SATD': False}, {'start_line': 493, 'end_line': 493, 'comment': '# fixed ip with remote host', 'include_SATD': False}, {'start_line': 498, 'end_line': 498, 'comment': '# fixed ip with local host', 'include_SATD': False}, {'start_line': 511, 'end_line': 511, 'comment': '# raises because floating_ip is already associated to a fixed_ip', 'include_SATD': False}, {'start_line': 521, 'end_line': 521, 'comment': '# does not raise and makes call remotely', 'include_SATD': False}, {'start_line': 529, 'end_line': 529, 'comment': '# does not raise and makes call locally', 'include_SATD': False}, {'start_line': 544, 'end_line': 544, 'comment': ""# floating ip that isn't associated"", 'include_SATD': False}, {'start_line': 549, 'end_line': 549, 'comment': '# floating ip that is associated', 'include_SATD': False}, {'start_line': 554, 'end_line': 554, 'comment': '# fixed ip with remote host', 'include_SATD': False}, {'start_line': 559, 'end_line': 559, 'comment': '# fixed ip with local host', 'include_SATD': False}, {'start_line': 572, 'end_line': 572, 'comment': '# raises because floating_ip is not associated to a fixed_ip', 'include_SATD': False}, {'start_line': 581, 'end_line': 581, 'comment': '# does not raise and makes call remotely', 'include_SATD': False}, {'start_line': 588, 'end_line': 588, 'comment': '# does not raise and makes call locally', 'include_SATD': False}], 'filename': 'nova/tests/test_network.py'}]}, {'revision': 6, 'changed_files': [{'a_comments': [{'start_line': 82, 'end_line': 82, 'comment': '# FIXME(ja) - why does self.network_api.list_floating_ips raise?', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/floating_ips.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [{'start_line': 79, 'end_line': 82, 'comment': ""# NOTE(vish): We don't know which network host should get the ip #             when we deallocate, so just send it to any one.  This #             will probably need to move into a network supervisor #             at some point."", 'include_SATD': False}, {'start_line': 97, 'end_line': 100, 'comment': '# NOTE(tr3buchet): i don\'t like the ""either or"" argument type # funcationility but i\'ve left it alone for now # TODO(tr3buchet): this function needs to be rewritten to move # the network related db lookups into the network host code', 'include_SATD': True}, {'start_line': 106, 'end_line': 106, 'comment': '# Check if the floating ip address is allocated', 'include_SATD': False}, {'start_line': 110, 'end_line': 110, 'comment': '# Check if the floating ip address is allocated to the same project', 'include_SATD': False}, {'start_line': 122, 'end_line': 123, 'comment': '# If this address has been previously associated to a # different instance, disassociate the floating_ip', 'include_SATD': False}, {'start_line': 127, 'end_line': 127, 'comment': '# NOTE(vish): if we are multi_host, send to the instances host', 'include_SATD': False}, {'start_line': 146, 'end_line': 146, 'comment': '# NOTE(vish): if we are multi_host, send to the instances host', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/network/api.py'}, {'a_comments': [{'start_line': 223, 'end_line': 223, 'comment': '# allocate a floating ip (public_ip is just the address string)', 'include_SATD': False}, {'start_line': 227, 'end_line': 227, 'comment': '# get the floating ip object from public_ip string', 'include_SATD': False}, {'start_line': 231, 'end_line': 231, 'comment': '# get the first fixed_ip belonging to the instance', 'include_SATD': False}, {'start_line': 235, 'end_line': 235, 'comment': '# call to correct network host to associate the floating ip', 'include_SATD': False}, {'start_line': 274, 'end_line': 274, 'comment': '# NOTE(tr3buchet): all networks hosts in zone now use the same pool', 'include_SATD': False}], 'b_comments': [{'start_line': 224, 'end_line': 224, 'comment': '# allocate a floating ip', 'include_SATD': False}, {'start_line': 229, 'end_line': 229, 'comment': '# get the first fixed address belonging to the instance', 'include_SATD': False}, {'start_line': 235, 'end_line': 235, 'comment': '# associate the floating ip to fixed_ip', 'include_SATD': False}, {'start_line': 286, 'end_line': 286, 'comment': '# NOTE(tr3buchet): all network hosts in zone now use the same pool', 'include_SATD': False}, {'start_line': 303, 'end_line': 303, 'comment': '# handle auto_assigned', 'include_SATD': False}, {'start_line': 307, 'end_line': 307, 'comment': '# make sure project ownz this floating ip (allocated)', 'include_SATD': False}, {'start_line': 310, 'end_line': 310, 'comment': '# make sure floating ip is not associated', 'include_SATD': False}, {'start_line': 326, 'end_line': 326, 'comment': '# handle auto_assigned', 'include_SATD': False}, {'start_line': 330, 'end_line': 330, 'comment': '# make sure project ownz this floating ip (allocated)', 'include_SATD': False}, {'start_line': 333, 'end_line': 333, 'comment': ""# make sure floating ip isn't already associated"", 'include_SATD': False}, {'start_line': 340, 'end_line': 340, 'comment': ""# send to correct host, unless i'm the correct host"", 'include_SATD': False}, {'start_line': 348, 'end_line': 348, 'comment': ""# i'm the correct host"", 'include_SATD': False}, {'start_line': 352, 'end_line': 352, 'comment': '# send to correct host', 'include_SATD': False}, {'start_line': 361, 'end_line': 366, 'comment': '# associate floating ip # gogo driver time', 'include_SATD': False}, {'start_line': 379, 'end_line': 379, 'comment': '# handle auto assigned', 'include_SATD': False}, {'start_line': 383, 'end_line': 383, 'comment': '# make sure project ownz this floating ip (allocated)', 'include_SATD': False}, {'start_line': 386, 'end_line': 386, 'comment': '# make sure floating ip is associated', 'include_SATD': False}, {'start_line': 393, 'end_line': 393, 'comment': ""# send to correct host, unless i'm the correct host"", 'include_SATD': False}, {'start_line': 400, 'end_line': 400, 'comment': ""# i'm the correct host"", 'include_SATD': False}, {'start_line': 403, 'end_line': 403, 'comment': '# send to correct host', 'include_SATD': False}, {'start_line': 411, 'end_line': 411, 'comment': '# disassociate floating ip', 'include_SATD': False}, {'start_line': 414, 'end_line': 414, 'comment': '# go go driver time', 'include_SATD': False}], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/test.py'}, {'a_comments': [{'start_line': 147, 'end_line': 147, 'comment': '# ApiError: Floating ip is in use.  Disassociate it before releasing.', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [{'start_line': 186, 'end_line': 186, 'comment': '# test floating ip allocate/release(deallocate)', 'include_SATD': False}, {'start_line': 229, 'end_line': 229, 'comment': '# test floating ip add/remove -> associate/disassociate', 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/contrib/test_floating_ips.py'}, {'a_comments': [], 'b_comments': [{'start_line': 402, 'end_line': 402, 'comment': '# raises because floating_ip project_id is None', 'include_SATD': False}, {'start_line': 410, 'end_line': 410, 'comment': '# raises because floating_ip project_id is not equal to ctxt project_id', 'include_SATD': False}, {'start_line': 418, 'end_line': 418, 'comment': '# does not raise (floating ip is owned by ctxt project)', 'include_SATD': False}, {'start_line': 438, 'end_line': 438, 'comment': '# this time should raise', 'include_SATD': False}, {'start_line': 445, 'end_line': 445, 'comment': '# this time should not', 'include_SATD': False}, {'start_line': 465, 'end_line': 465, 'comment': '# this time should raise because floating ip is associated to fixed_ip', 'include_SATD': False}, {'start_line': 472, 'end_line': 472, 'comment': '# this time should not raise', 'include_SATD': False}, {'start_line': 483, 'end_line': 483, 'comment': ""# floating ip that's already associated"", 'include_SATD': False}, {'start_line': 488, 'end_line': 488, 'comment': ""# floating ip that isn't associated"", 'include_SATD': False}, {'start_line': 493, 'end_line': 493, 'comment': '# fixed ip with remote host', 'include_SATD': False}, {'start_line': 498, 'end_line': 498, 'comment': '# fixed ip with local host', 'include_SATD': False}, {'start_line': 511, 'end_line': 511, 'comment': '# raises because floating_ip is already associated to a fixed_ip', 'include_SATD': False}, {'start_line': 521, 'end_line': 521, 'comment': '# does not raise and makes call remotely', 'include_SATD': False}, {'start_line': 529, 'end_line': 529, 'comment': '# does not raise and makes call locally', 'include_SATD': False}, {'start_line': 544, 'end_line': 544, 'comment': ""# floating ip that isn't associated"", 'include_SATD': False}, {'start_line': 549, 'end_line': 549, 'comment': '# floating ip that is associated', 'include_SATD': False}, {'start_line': 554, 'end_line': 554, 'comment': '# fixed ip with remote host', 'include_SATD': False}, {'start_line': 559, 'end_line': 559, 'comment': '# fixed ip with local host', 'include_SATD': False}, {'start_line': 572, 'end_line': 572, 'comment': '# raises because floating_ip is not associated to a fixed_ip', 'include_SATD': False}, {'start_line': 581, 'end_line': 581, 'comment': '# does not raise and makes call remotely', 'include_SATD': False}, {'start_line': 588, 'end_line': 588, 'comment': '# does not raise and makes call locally', 'include_SATD': False}], 'filename': 'nova/tests/test_network.py'}]}]",6,22,9,MERGED,True,https://review.opendev.org/#/c/628,moved floating ip db access and sanity checking from network api into network manager added floating ip get by fixed address added fixed_ip_get moved floating ip testing from osapi into the network tests where they belong,True,{},False,"{'# FIXME(ja) - why does self.network_api.list_floating_ips raise?': 1, '# NOTE(tr3buchet): i don\'t like the ""either or"" argument type # funcationility but i\'ve left it alone for now # TODO(tr3buchet): this function needs to be rewritten to move # the network related db lookups into the network host code': 1}",True,{}
195,646,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}], 'filename': 'melange/common/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/common/auth.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 16, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License. # code borrowed from Glance, will exist until an openstack.common comes forth:', 'include_SATD': False}, {'start_line': 83, 'end_line': 83, 'comment': '# Use a logging configuration file for all settings...', 'include_SATD': False}, {'start_line': 91, 'end_line': 92, 'comment': '# If either the CLI option or the conf value # is True, we set to True', 'include_SATD': False}, {'start_line': 106, 'end_line': 109, 'comment': '# Set log configuration from options... # Note that we use a hard-coded log format in the options # because of Paste.Deploy bug #379 # httptrac.pythonpaste.org/pythonpaste/ticket/379', 'include_SATD': True}, {'start_line': 143, 'end_line': 143, 'comment': '# Handle standard directory search for $app_name.conf', 'include_SATD': False}, {'start_line': 193, 'end_line': 194, 'comment': '# Setup logging early, supplying both the CLI options and the # configuration mapping from the config file', 'include_SATD': False}, {'start_line': 197, 'end_line': 198, 'comment': '# We only update the conf dict for the verbose and debug # flags. Everything else must be set up in the conf file...', 'include_SATD': False}, {'start_line': 207, 'end_line': 207, 'comment': ""# Log the options used when starting if we're in debug mode..."", 'include_SATD': False}], 'filename': 'melange/common/config.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/common/exception.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/common/pagination.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 67, 'end_line': 67, 'comment': '# calculate something important here', 'include_SATD': False}], 'filename': 'melange/common/utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 156, 'end_line': 156, 'comment': '# Replace the body with fault details.', 'include_SATD': False}, {'start_line': 168, 'end_line': 168, 'comment': ""# 'code' is an attribute on the fault tag itself"", 'include_SATD': False}], 'filename': 'melange/common/wsgi.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010-2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/db/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}], 'filename': 'melange/db/sqlalchemy/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/db/sqlalchemy/mappers.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/db/sqlalchemy/schema.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/db/sqlalchemy/session.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}], 'filename': 'melange/ipam/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010-2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         http: //www.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 258, 'end_line': 259, 'comment': '#TODO(vinkesh/rajaram): very inefficient way to generate ips, #will look at better algos for this', 'include_SATD': True}], 'filename': 'melange/ipam/models.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/ipam/service.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/ipv6/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/ipv6/tenant_based_generator.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 70, 'end_line': 70, 'comment': '#params ordering might be different in the urls', 'include_SATD': False}], 'filename': 'melange/tests/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}], 'filename': 'melange/tests/factories/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/tests/factories/models.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}], 'filename': 'melange/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 58, 'end_line': 58, 'comment': '# close stdio', 'include_SATD': False}], 'filename': 'melange/tests/functional/test_service.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 17, 'end_line': 18, 'comment': '# See httpcode.google.com/p/python-nose/issues/detail?id=373 # The code below enables nosetests to work with i18n _() blocks', 'include_SATD': False}], 'filename': 'melange/tests/unit/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/tests/unit/mock_generator.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/tests/unit/test_auth.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/tests/unit/test_config.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 329, 'end_line': 329, 'comment': '#allocate all ips except last ip(broadcast)', 'include_SATD': False}], 'filename': 'melange/tests/unit/test_ipam_models.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 14, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4 # Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/tests/unit/test_ipam_service.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/tests/unit/test_ipv6.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/tests/unit/test_pagination.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/tests/unit/test_sqlalchemy_api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/tests/unit/test_tenant_based_ipv6_generator.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/tests/unit/test_utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/tests/unit/test_wsgi.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}], 'filename': 'melange/common/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/common/auth.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 16, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License. # code borrowed from Glance, will exist until an openstack.common comes forth:', 'include_SATD': False}, {'start_line': 84, 'end_line': 84, 'comment': '# Use a logging configuration file for all settings...', 'include_SATD': False}, {'start_line': 92, 'end_line': 93, 'comment': '# If either the CLI option or the conf value # is True, we set to True', 'include_SATD': False}, {'start_line': 107, 'end_line': 110, 'comment': '# Set log configuration from options... # Note that we use a hard-coded log format in the options # because of Paste.Deploy bug #379 # httptrac.pythonpaste.org/pythonpaste/ticket/379', 'include_SATD': True}, {'start_line': 144, 'end_line': 144, 'comment': '# Handle standard directory search for $app_name.conf', 'include_SATD': False}, {'start_line': 192, 'end_line': 193, 'comment': '# Setup logging early, supplying both the CLI options and the # configuration mapping from the config file', 'include_SATD': False}, {'start_line': 196, 'end_line': 197, 'comment': '# We only update the conf dict for the verbose and debug # flags. Everything else must be set up in the conf file...', 'include_SATD': False}, {'start_line': 206, 'end_line': 206, 'comment': ""# Log the options used when starting if we're in debug mode..."", 'include_SATD': False}], 'filename': 'melange/common/config.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/common/exception.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/common/pagination.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 67, 'end_line': 67, 'comment': '# calculate something important here', 'include_SATD': False}], 'filename': 'melange/common/utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 157, 'end_line': 157, 'comment': '# Replace the body with fault details.', 'include_SATD': False}, {'start_line': 169, 'end_line': 169, 'comment': ""# 'code' is an attribute on the fault tag itself"", 'include_SATD': False}], 'filename': 'melange/common/wsgi.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010-2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/db/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}], 'filename': 'melange/db/sqlalchemy/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/db/sqlalchemy/mappers.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/db/sqlalchemy/schema.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/db/sqlalchemy/session.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}], 'filename': 'melange/ipam/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010-2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         http: //www.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 258, 'end_line': 259, 'comment': '#TODO(vinkesh/rajaram): very inefficient way to generate ips, #will look at better algos for this', 'include_SATD': True}], 'filename': 'melange/ipam/models.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/ipam/service.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/ipv6/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/ipv6/tenant_based_generator.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 71, 'end_line': 71, 'comment': '#params ordering might be different in the urls', 'include_SATD': False}], 'filename': 'melange/tests/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}], 'filename': 'melange/tests/factories/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/tests/factories/models.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}], 'filename': 'melange/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 60, 'end_line': 60, 'comment': '# close stdio', 'include_SATD': False}], 'filename': 'melange/tests/functional/test_service.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 17, 'end_line': 18, 'comment': '# See httpcode.google.com/p/python-nose/issues/detail?id=373 # The code below enables nosetests to work with i18n _() blocks', 'include_SATD': False}], 'filename': 'melange/tests/unit/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/tests/unit/mock_generator.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/tests/unit/test_auth.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/tests/unit/test_config.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 329, 'end_line': 329, 'comment': '#allocate all ips except last ip(broadcast)', 'include_SATD': False}], 'filename': 'melange/tests/unit/test_ipam_models.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 14, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4 # Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/tests/unit/test_ipam_service.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/tests/unit/test_ipv6.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/tests/unit/test_pagination.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/tests/unit/test_sqlalchemy_api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/tests/unit/test_tenant_based_ipv6_generator.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/tests/unit/test_utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'melange/tests/unit/test_wsgi.py'}]}]",2,13,32,ABANDONED,False,https://review.opendev.org/#/c/646,Adds melange to nova,True,"{'# Set log configuration from options... # Note that we use a hard-coded log format in the options # because of Paste.Deploy bug #379 # httptrac.pythonpaste.org/pythonpaste/ticket/379': 1, '#TODO(vinkesh/rajaram): very inefficient way to generate ips, #will look at better algos for this': 1}",True,{},False,{}
196,674,"[{'revision': 1, 'changed_files': []}, {'revision': 2, 'changed_files': []}, {'revision': 3, 'changed_files': []}]",3,13,0,MERGED,True,https://review.opendev.org/#/c/674,use git config's review.username for rfc.sh,False,{},False,{},False,{}
197,665,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 63, 'end_line': 64, 'comment': '# There may be other parameters (data extensions), so we # should include those in the results dict as well.', 'include_SATD': False}], 'filename': 'quantum/api/api_common.py'}, {'a_comments': [{'start_line': 97, 'end_line': 97, 'comment': '#look for network name in request', 'include_SATD': False}], 'b_comments': [], 'filename': 'quantum/api/networks.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/api/ports.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/SamplePlugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/l2network_plugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/tests/unit/test_database.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/tests/unit/test_l2networkApi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/tests/unit/test_ucs_inventory.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/openvswitch/ovs_quantum_plugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/quantum_plugin_base.py'}]}]",1,2,0,ABANDONED,False,https://review.opendev.org/#/c/665,Change the plugin interface for the create calls to take a param dict,True,{},False,{},False,{}
198,656,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 41, 'end_line': 44, 'comment': '# this is not the real unquoting, but fixing this so that the # RFC is met will result in bugs with internet explorer and # probably some other browsers as well.  IE for example is # uploading files with ""C:\\foo\\bar.txt"" as filename', 'include_SATD': True}, {'start_line': 106, 'end_line': 107, 'comment': '# FIXME: Should we have a more sophisticated matching algorithm that # takes into account the version as well?', 'include_SATD': True}, {'start_line': 207, 'end_line': 207, 'comment': ""# Don't use prefix if it ends up matching default"", 'include_SATD': False}, {'start_line': 231, 'end_line': 231, 'comment': '# Find the best match in the Accept header', 'include_SATD': False}, {'start_line': 253, 'end_line': 255, 'comment': '# The MIME type for the response is determined in one of two ways: # 1) URL path suffix (eg /servers/detail.json) # 2) Accept header (eg application/json;q=0.8, application/xml;q=0.2)', 'include_SATD': False}, {'start_line': 257, 'end_line': 260, 'comment': '# The API version is determined in one of three ways: # 1) URL path prefix (eg /v1.1/tenant/servers/detail) # 2) Content-Type header (eg application/json;version=1.1) # 3) Accept header (eg application/json;q=0.8;version=1.1)', 'include_SATD': False}, {'start_line': 266, 'end_line': 267, 'comment': '# Accept application/atom+xml for the index query of each API # version mount point as well as the root index', 'include_SATD': False}, {'start_line': 286, 'end_line': 286, 'comment': ""# Didn't match a particular version, probably matches default"", 'include_SATD': True}], 'filename': 'nova/api/openstack/urlmap.py'}, {'a_comments': [{'start_line': 146, 'end_line': 146, 'comment': '# Remove atom+xml accept type for 300 responses', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/api/openstack/versions.py'}, {'a_comments': [{'start_line': 73, 'end_line': 73, 'comment': ""# default to application/json if we don't find a preference"", 'include_SATD': False}], 'b_comments': [{'start_line': 59, 'end_line': 59, 'comment': '# Calculate the best MIME type', 'include_SATD': True}, {'start_line': 62, 'end_line': 62, 'comment': '# Check URL path suffix', 'include_SATD': False}], 'filename': 'nova/api/openstack/wsgi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 13, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/test_urlmap.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_versions.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 41, 'end_line': 44, 'comment': '# this is not the real unquoting, but fixing this so that the # RFC is met will result in bugs with internet explorer and # probably some other browsers as well.  IE for example is # uploading files with ""C:\\foo\\bar.txt"" as filename', 'include_SATD': True}, {'start_line': 106, 'end_line': 107, 'comment': '# FIXME: Should we have a more sophisticated matching algorithm that # takes into account the version as well?', 'include_SATD': True}, {'start_line': 207, 'end_line': 207, 'comment': ""# Don't use prefix if it ends up matching default"", 'include_SATD': False}, {'start_line': 231, 'end_line': 231, 'comment': '# Find the best match in the Accept header', 'include_SATD': False}, {'start_line': 253, 'end_line': 255, 'comment': '# The MIME type for the response is determined in one of two ways: # 1) URL path suffix (eg /servers/detail.json) # 2) Accept header (eg application/json;q=0.8, application/xml;q=0.2)', 'include_SATD': False}, {'start_line': 257, 'end_line': 260, 'comment': '# The API version is determined in one of three ways: # 1) URL path prefix (eg /v1.1/tenant/servers/detail) # 2) Content-Type header (eg application/json;version=1.1) # 3) Accept header (eg application/json;q=0.8;version=1.1)', 'include_SATD': False}, {'start_line': 266, 'end_line': 267, 'comment': '# Accept application/atom+xml for the index query of each API # version mount point as well as the root index', 'include_SATD': False}, {'start_line': 286, 'end_line': 286, 'comment': ""# Didn't match a particular version, probably matches default"", 'include_SATD': True}], 'filename': 'nova/api/openstack/urlmap.py'}, {'a_comments': [{'start_line': 146, 'end_line': 146, 'comment': '# Remove atom+xml accept type for 300 responses', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/api/openstack/versions.py'}, {'a_comments': [{'start_line': 73, 'end_line': 73, 'comment': ""# default to application/json if we don't find a preference"", 'include_SATD': False}], 'b_comments': [{'start_line': 59, 'end_line': 59, 'comment': '# Calculate the best MIME type', 'include_SATD': True}, {'start_line': 62, 'end_line': 62, 'comment': '# Check URL path suffix', 'include_SATD': False}], 'filename': 'nova/api/openstack/wsgi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 13, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/test_urlmap.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_versions.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 41, 'end_line': 44, 'comment': '# this is not the real unquoting, but fixing this so that the # RFC is met will result in bugs with internet explorer and # probably some other browsers as well.  IE for example is # uploading files with ""C:\\foo\\bar.txt"" as filename', 'include_SATD': True}, {'start_line': 106, 'end_line': 107, 'comment': '# FIXME: Should we have a more sophisticated matching algorithm that # takes into account the version as well?', 'include_SATD': True}, {'start_line': 207, 'end_line': 207, 'comment': ""# Don't use prefix if it ends up matching default"", 'include_SATD': False}, {'start_line': 231, 'end_line': 231, 'comment': '# Find the best match in the Accept header', 'include_SATD': False}, {'start_line': 253, 'end_line': 255, 'comment': '# The MIME type for the response is determined in one of two ways: # 1) URL path suffix (eg /servers/detail.json) # 2) Accept header (eg application/json;q=0.8, application/xml;q=0.2)', 'include_SATD': False}, {'start_line': 257, 'end_line': 260, 'comment': '# The API version is determined in one of three ways: # 1) URL path prefix (eg /v1.1/tenant/servers/detail) # 2) Content-Type header (eg application/json;version=1.1) # 3) Accept header (eg application/json;q=0.8;version=1.1)', 'include_SATD': False}, {'start_line': 266, 'end_line': 267, 'comment': '# Accept application/atom+xml for the index query of each API # version mount point as well as the root index', 'include_SATD': False}, {'start_line': 286, 'end_line': 286, 'comment': ""# Didn't match a particular version, probably matches default"", 'include_SATD': True}], 'filename': 'nova/api/openstack/urlmap.py'}, {'a_comments': [{'start_line': 146, 'end_line': 146, 'comment': '# Remove atom+xml accept type for 300 responses', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/api/openstack/versions.py'}, {'a_comments': [{'start_line': 73, 'end_line': 73, 'comment': ""# default to application/json if we don't find a preference"", 'include_SATD': False}], 'b_comments': [{'start_line': 59, 'end_line': 59, 'comment': '# Calculate the best MIME type', 'include_SATD': True}, {'start_line': 62, 'end_line': 62, 'comment': '# Check URL path suffix', 'include_SATD': False}], 'filename': 'nova/api/openstack/wsgi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 13, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/test_urlmap.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_versions.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 41, 'end_line': 44, 'comment': '# this is not the real unquoting, but fixing this so that the # RFC is met will result in bugs with internet explorer and # probably some other browsers as well.  IE for example is # uploading files with ""C:\\foo\\bar.txt"" as filename', 'include_SATD': True}, {'start_line': 106, 'end_line': 107, 'comment': '# FIXME: Should we have a more sophisticated matching algorithm that # takes into account the version as well?', 'include_SATD': True}, {'start_line': 207, 'end_line': 207, 'comment': ""# Don't use prefix if it ends up matching default"", 'include_SATD': False}, {'start_line': 231, 'end_line': 231, 'comment': '# Find the best match in the Accept header', 'include_SATD': False}, {'start_line': 253, 'end_line': 255, 'comment': '# The MIME type for the response is determined in one of two ways: # 1) URL path suffix (eg /servers/detail.json) # 2) Accept header (eg application/json;q=0.8, application/xml;q=0.2)', 'include_SATD': False}, {'start_line': 257, 'end_line': 260, 'comment': '# The API version is determined in one of three ways: # 1) URL path prefix (eg /v1.1/tenant/servers/detail) # 2) Content-Type header (eg application/json;version=1.1) # 3) Accept header (eg application/json;q=0.8;version=1.1)', 'include_SATD': False}, {'start_line': 266, 'end_line': 267, 'comment': '# Accept application/atom+xml for the index query of each API # version mount point as well as the root index', 'include_SATD': False}, {'start_line': 286, 'end_line': 286, 'comment': ""# Didn't match a particular version, probably matches default"", 'include_SATD': True}], 'filename': 'nova/api/openstack/urlmap.py'}, {'a_comments': [{'start_line': 146, 'end_line': 146, 'comment': '# Remove atom+xml accept type for 300 responses', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/api/openstack/versions.py'}, {'a_comments': [{'start_line': 73, 'end_line': 73, 'comment': ""# default to application/json if we don't find a preference"", 'include_SATD': False}], 'b_comments': [{'start_line': 59, 'end_line': 59, 'comment': '# Calculate the best MIME type', 'include_SATD': True}, {'start_line': 62, 'end_line': 62, 'comment': '# Check URL path suffix', 'include_SATD': False}], 'filename': 'nova/api/openstack/wsgi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 13, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/test_urlmap.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_versions.py'}]}]",4,10,0,MERGED,True,https://review.opendev.org/#/c/656,Add support for header version parameter to specify API version.,True,"{'# this is not the real unquoting, but fixing this so that the # RFC is met will result in bugs with internet explorer and # probably some other browsers as well.  IE for example is # uploading files with ""C:\\foo\\bar.txt"" as filename': 1, '# FIXME: Should we have a more sophisticated matching algorithm that # takes into account the version as well?': 1, ""# Didn't match a particular version, probably matches default"": 1, '# Calculate the best MIME type': 1}",True,{},False,{}
199,670,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/store/swift.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_swift_store.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/store/swift.py'}, {'a_comments': [], 'b_comments': [{'start_line': 269, 'end_line': 269, 'comment': '# start image id arbitrarily high due to existing fixtures', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_swift_store.py'}]}]",2,5,2,MERGED,True,https://review.opendev.org/#/c/670,Improving swfit store uri construction,True,{},False,{},False,{}
200,676,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}]}]",3,10,5,MERGED,True,https://review.opendev.org/#/c/676,Raise InsufficientFreeMemory,True,{},False,{},False,{}
201,677,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'quantum/common/test_lib.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'run_tests.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'quantum/common/test_lib.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'run_tests.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'quantum/common/test_lib.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'run_tests.py'}]}]",3,5,0,MERGED,True,https://review.opendev.org/#/c/677,Add code-coverage support to run_tests.sh (lp860160),True,{},False,{},False,{}
202,640,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 1402, 'end_line': 1403, 'comment': '# NOTE(comstud): Unfortunately, EC2 requires that the # instance DB entries have been created..', 'include_SATD': False}], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/createserverext.py'}, {'a_comments': [{'start_line': 367, 'end_line': 369, 'comment': ""# We can only return 1 instance via the API, if we happen to # build more than one...  instances is a list, so we'll just # use the first one.."", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/volumes.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 48, 'end_line': 48, 'comment': '# Nothing yet.', 'include_SATD': False}], 'filename': 'nova/api/openstack/contrib/zones.py'}, {'a_comments': [{'start_line': 0, 'end_line': 14, 'comment': '# Copyright 2011 OpenStack LLC. # Copyright 2011 Piston Cloud Computing, Inc. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 88, 'end_line': 89, 'comment': '# If the image href was generated by nova api, strip image_href # down to an id and use the default glance connection params', 'include_SATD': False}, {'start_line': 134, 'end_line': 134, 'comment': '# optional openstack extensions:', 'include_SATD': False}, {'start_line': 147, 'end_line': 149, 'comment': ""# min_count and max_count are optional.  If they exist, they come # in as strings.  We want to default 'min_count' to 1, and default # 'max_count' to be 'min_count'."", 'include_SATD': False}, {'start_line': 208, 'end_line': 208, 'comment': '# Let the caller deal with unhandled exceptions.', 'include_SATD': False}, {'start_line': 230, 'end_line': 230, 'comment': '# if the original error is okay, just reraise it', 'include_SATD': False}, {'start_line': 260, 'end_line': 261, 'comment': ""# NOTE(sirp): extracted to a separate method to aid unit-testing, the # new method doesn't need a request obj or an ImageService stub"", 'include_SATD': False}, {'start_line': 350, 'end_line': 352, 'comment': '#fixed IP address is optional #if the fixed IP address is not provided then #it will use one of the available IP address from the network', 'include_SATD': False}, {'start_line': 357, 'end_line': 359, 'comment': ""# check if the network id is already present in the list, # we don't want duplicate networks to be passed # at the boot time"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/api/openstack/create_instance_helper.py'}, {'a_comments': [{'start_line': 183, 'end_line': 185, 'comment': ""# We can only return 1 instance via the API, if we happen to # build more than one...  instances is a list, so we'll just # use the first one.."", 'include_SATD': False}], 'b_comments': [{'start_line': 1, 'end_line': 1, 'comment': '# Copyright 2011 Piston Cloud Computing, Inc', 'include_SATD': False}, {'start_line': 187, 'end_line': 187, 'comment': '# if the original error is okay, just reraise it', 'include_SATD': False}, {'start_line': 217, 'end_line': 218, 'comment': ""# NOTE(sirp): extracted to a separate method to aid unit-testing, the # new method doesn't need a request obj or an ImageService stub"", 'include_SATD': False}, {'start_line': 307, 'end_line': 309, 'comment': '#fixed IP address is optional #if the fixed IP address is not provided then #it will use one of the available IP address from the network', 'include_SATD': False}, {'start_line': 314, 'end_line': 316, 'comment': ""# check if the network id is already present in the list, # we don't want duplicate networks to be passed # at the boot time"", 'include_SATD': False}, {'start_line': 382, 'end_line': 383, 'comment': '# If the image href was generated by nova api, strip image_href # down to an id and use the default glance connection params', 'include_SATD': False}, {'start_line': 428, 'end_line': 428, 'comment': '# optional openstack extensions:', 'include_SATD': False}, {'start_line': 440, 'end_line': 441, 'comment': '# Only allow admins to specify their own reservation_ids # This is really meant to allow zones to work.', 'include_SATD': False}, {'start_line': 452, 'end_line': 454, 'comment': ""# min_count and max_count are optional.  If they exist, they come # in as strings.  We want to default 'min_count' to 1, and default # 'max_count' to be 'min_count'."", 'include_SATD': False}, {'start_line': 509, 'end_line': 509, 'comment': '# Let the caller deal with unhandled exceptions.', 'include_SATD': False}, {'start_line': 511, 'end_line': 511, 'comment': '# If the caller wanted a reservation_id, return it', 'include_SATD': False}, {'start_line': 515, 'end_line': 515, 'comment': '# Instances is a list', 'include_SATD': False}], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/zones.py'}, {'a_comments': [], 'b_comments': [{'start_line': 328, 'end_line': 332, 'comment': ""# TODO(comstud): We should use rpc.multicall when we can # retrieve the full instance dictionary from the scheduler. # Otherwise, we could exceed the AMQP max message size limit. # This would require the schedulers' schedule_run_instances # methods to return an iterator vs a list."", 'include_SATD': True}, {'start_line': 558, 'end_line': 558, 'comment': '# wait_for_instances must have been False', 'include_SATD': False}, {'start_line': 566, 'end_line': 567, 'comment': ""# Scheduler only gives us the 'id'.  We need to pull # in the created instances from the DB"", 'include_SATD': False}], 'filename': 'nova/compute/api.py'}, {'a_comments': [{'start_line': 66, 'end_line': 68, 'comment': '# TODO(sandy): I guess someone needs to add block_device_mapping # support at some point? Also, OS API has no concept of security # groups.', 'include_SATD': True}, {'start_line': 240, 'end_line': 241, 'comment': ""# Returning None short-circuits the routing to Compute (since # we've already done it here)"", 'include_SATD': False}], 'b_comments': [{'start_line': 210, 'end_line': 210, 'comment': '# Caller expects a list of instances', 'include_SATD': False}], 'filename': 'nova/scheduler/abstract_scheduler.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/chance.py'}, {'a_comments': [{'start_line': 116, 'end_line': 117, 'comment': '# Return value is necessary to send request to src # Check _schedule() in detail.', 'include_SATD': False}], 'b_comments': [{'start_line': 104, 'end_line': 111, 'comment': ""# TODO(comstud): I would love to be able to return the full # instance information here, but we'll need some modifications # to the RPC code to handle datetime conversions with the # json encoding/decoding.  We should be able to set a default # json handler somehow to do it. # # For now, I'll just return the instance ID and let the caller # do a DB lookup :-/"", 'include_SATD': True}, {'start_line': 467, 'end_line': 467, 'comment': '# Should only be None for tests?', 'include_SATD': False}], 'filename': 'nova/scheduler/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/least_cost.py'}, {'a_comments': [], 'b_comments': [{'start_line': 98, 'end_line': 98, 'comment': '# Scheduler methods are responsible for casting.', 'include_SATD': False}], 'filename': 'nova/scheduler/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/multi.py'}, {'a_comments': [{'start_line': 53, 'end_line': 54, 'comment': '# TODO(vish): this probably belongs in the manager, if we #             can generalize this somehow', 'include_SATD': True}, {'start_line': 65, 'end_line': 66, 'comment': '# NOTE(vish): this probably belongs in the manager, if we #             can generalize this somehow', 'include_SATD': True}, {'start_line': 95, 'end_line': 96, 'comment': '# TODO(vish): this probably belongs in the manager, if we #             can generalize this somehow', 'include_SATD': True}, {'start_line': 108, 'end_line': 109, 'comment': '# NOTE(vish): this probably belongs in the manager, if we #             can generalize this somehow', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/scheduler/simple.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/vsa.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/zone.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/api/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 441, 'end_line': 442, 'comment': ""# Create 2 servers, setting 'return_reservation_id, which should # return a reservation_id"", 'include_SATD': False}, {'start_line': 452, 'end_line': 452, 'comment': '# Create 1 more server, which should not return a reservation_id', 'include_SATD': False}, {'start_line': 459, 'end_line': 459, 'comment': '# lookup servers created by the first request.', 'include_SATD': False}, {'start_line': 464, 'end_line': 464, 'comment': '# The server from the 2nd request should not be there.', 'include_SATD': False}, {'start_line': 466, 'end_line': 466, 'comment': '# Should have found 2 servers.', 'include_SATD': False}, {'start_line': 469, 'end_line': 469, 'comment': '# Cleanup', 'include_SATD': False}], 'filename': 'nova/tests/integrated/test_servers.py'}, {'a_comments': [], 'b_comments': [{'start_line': 407, 'end_line': 408, 'comment': ""# make sure this is called with admin context, even though # we're using user context below"", 'include_SATD': False}], 'filename': 'nova/tests/scheduler/test_abstract_scheduler.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_least_cost_scheduler.py'}, {'a_comments': [{'start_line': 267, 'end_line': 268, 'comment': '# NOTE(jk0): If an integer is passed as the image_ref, the image # service will use the default image service (in this case, the fake).', 'include_SATD': False}], 'b_comments': [{'start_line': 61, 'end_line': 62, 'comment': '# NOTE(jk0): If an integer is passed as the image_ref, the image # service will use the default image service (in this case, the fake).', 'include_SATD': False}, {'start_line': 302, 'end_line': 302, 'comment': ""# Assumes we're testing with MultiScheduler"", 'include_SATD': False}], 'filename': 'nova/tests/scheduler/test_scheduler.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_vsa_scheduler.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1487, 'end_line': 1488, 'comment': '# We need admin context to be able to specify our own # reservation_ids.', 'include_SATD': False}, {'start_line': 1490, 'end_line': 1490, 'comment': '# 1 instance', 'include_SATD': False}, {'start_line': 1501, 'end_line': 1501, 'comment': '# 2 instances', 'include_SATD': False}], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quota.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 1403, 'end_line': 1404, 'comment': '# NOTE(comstud): Unfortunately, EC2 requires that the # instance DB entries have been created..', 'include_SATD': False}], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/createserverext.py'}, {'a_comments': [{'start_line': 367, 'end_line': 369, 'comment': ""# We can only return 1 instance via the API, if we happen to # build more than one...  instances is a list, so we'll just # use the first one.."", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/volumes.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 48, 'end_line': 48, 'comment': '# Nothing yet.', 'include_SATD': False}], 'filename': 'nova/api/openstack/contrib/zones.py'}, {'a_comments': [{'start_line': 0, 'end_line': 14, 'comment': '# Copyright 2011 OpenStack LLC. # Copyright 2011 Piston Cloud Computing, Inc. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 88, 'end_line': 89, 'comment': '# If the image href was generated by nova api, strip image_href # down to an id and use the default glance connection params', 'include_SATD': False}, {'start_line': 134, 'end_line': 134, 'comment': '# optional openstack extensions:', 'include_SATD': False}, {'start_line': 147, 'end_line': 149, 'comment': ""# min_count and max_count are optional.  If they exist, they come # in as strings.  We want to default 'min_count' to 1, and default # 'max_count' to be 'min_count'."", 'include_SATD': False}, {'start_line': 208, 'end_line': 208, 'comment': '# Let the caller deal with unhandled exceptions.', 'include_SATD': False}, {'start_line': 230, 'end_line': 230, 'comment': '# if the original error is okay, just reraise it', 'include_SATD': False}, {'start_line': 260, 'end_line': 261, 'comment': ""# NOTE(sirp): extracted to a separate method to aid unit-testing, the # new method doesn't need a request obj or an ImageService stub"", 'include_SATD': False}, {'start_line': 350, 'end_line': 352, 'comment': '#fixed IP address is optional #if the fixed IP address is not provided then #it will use one of the available IP address from the network', 'include_SATD': False}, {'start_line': 357, 'end_line': 359, 'comment': ""# check if the network id is already present in the list, # we don't want duplicate networks to be passed # at the boot time"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/api/openstack/create_instance_helper.py'}, {'a_comments': [{'start_line': 189, 'end_line': 191, 'comment': ""# We can only return 1 instance via the API, if we happen to # build more than one...  instances is a list, so we'll just # use the first one.."", 'include_SATD': False}], 'b_comments': [{'start_line': 1, 'end_line': 1, 'comment': '# Copyright 2011 Piston Cloud Computing, Inc', 'include_SATD': False}, {'start_line': 200, 'end_line': 200, 'comment': '# if the original error is okay, just reraise it', 'include_SATD': False}, {'start_line': 230, 'end_line': 231, 'comment': ""# NOTE(sirp): extracted to a separate method to aid unit-testing, the # new method doesn't need a request obj or an ImageService stub"", 'include_SATD': False}, {'start_line': 320, 'end_line': 322, 'comment': '#fixed IP address is optional #if the fixed IP address is not provided then #it will use one of the available IP address from the network', 'include_SATD': False}, {'start_line': 327, 'end_line': 329, 'comment': ""# check if the network id is already present in the list, # we don't want duplicate networks to be passed # at the boot time"", 'include_SATD': False}, {'start_line': 395, 'end_line': 396, 'comment': '# If the image href was generated by nova api, strip image_href # down to an id and use the default glance connection params', 'include_SATD': False}, {'start_line': 441, 'end_line': 441, 'comment': '# optional openstack extensions:', 'include_SATD': False}, {'start_line': 453, 'end_line': 454, 'comment': '# Only allow admins to specify their own reservation_ids # This is really meant to allow zones to work.', 'include_SATD': False}, {'start_line': 465, 'end_line': 467, 'comment': ""# min_count and max_count are optional.  If they exist, they come # in as strings.  We want to default 'min_count' to 1, and default # 'max_count' to be 'min_count'."", 'include_SATD': False}, {'start_line': 522, 'end_line': 522, 'comment': '# Let the caller deal with unhandled exceptions.', 'include_SATD': False}, {'start_line': 524, 'end_line': 524, 'comment': '# If the caller wanted a reservation_id, return it', 'include_SATD': False}, {'start_line': 528, 'end_line': 528, 'comment': '# Instances is a list', 'include_SATD': False}], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/zones.py'}, {'a_comments': [], 'b_comments': [{'start_line': 328, 'end_line': 332, 'comment': ""# TODO(comstud): We should use rpc.multicall when we can # retrieve the full instance dictionary from the scheduler. # Otherwise, we could exceed the AMQP max message size limit. # This would require the schedulers' schedule_run_instances # methods to return an iterator vs a list."", 'include_SATD': True}, {'start_line': 558, 'end_line': 558, 'comment': '# wait_for_instances must have been False', 'include_SATD': False}, {'start_line': 566, 'end_line': 567, 'comment': ""# Scheduler only gives us the 'id'.  We need to pull # in the created instances from the DB"", 'include_SATD': False}], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [{'start_line': 66, 'end_line': 68, 'comment': '# TODO(sandy): I guess someone needs to add block_device_mapping # support at some point? Also, OS API has no concept of security # groups.', 'include_SATD': True}, {'start_line': 240, 'end_line': 241, 'comment': ""# Returning None short-circuits the routing to Compute (since # we've already done it here)"", 'include_SATD': False}], 'b_comments': [{'start_line': 210, 'end_line': 210, 'comment': '# Caller expects a list of instances', 'include_SATD': False}], 'filename': 'nova/scheduler/abstract_scheduler.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/chance.py'}, {'a_comments': [{'start_line': 116, 'end_line': 117, 'comment': '# Return value is necessary to send request to src # Check _schedule() in detail.', 'include_SATD': False}], 'b_comments': [{'start_line': 104, 'end_line': 111, 'comment': ""# TODO(comstud): I would love to be able to return the full # instance information here, but we'll need some modifications # to the RPC code to handle datetime conversions with the # json encoding/decoding.  We should be able to set a default # json handler somehow to do it. # # For now, I'll just return the instance ID and let the caller # do a DB lookup :-/"", 'include_SATD': True}, {'start_line': 467, 'end_line': 467, 'comment': '# Should only be None for tests?', 'include_SATD': False}], 'filename': 'nova/scheduler/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/least_cost.py'}, {'a_comments': [], 'b_comments': [{'start_line': 98, 'end_line': 98, 'comment': '# Scheduler methods are responsible for casting.', 'include_SATD': False}], 'filename': 'nova/scheduler/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/multi.py'}, {'a_comments': [{'start_line': 53, 'end_line': 54, 'comment': '# TODO(vish): this probably belongs in the manager, if we #             can generalize this somehow', 'include_SATD': True}, {'start_line': 65, 'end_line': 66, 'comment': '# NOTE(vish): this probably belongs in the manager, if we #             can generalize this somehow', 'include_SATD': True}, {'start_line': 95, 'end_line': 96, 'comment': '# TODO(vish): this probably belongs in the manager, if we #             can generalize this somehow', 'include_SATD': True}, {'start_line': 108, 'end_line': 109, 'comment': '# NOTE(vish): this probably belongs in the manager, if we #             can generalize this somehow', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/scheduler/simple.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/vsa.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/zone.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/api/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 443, 'end_line': 444, 'comment': ""# Create 2 servers, setting 'return_reservation_id, which should # return a reservation_id"", 'include_SATD': False}, {'start_line': 454, 'end_line': 454, 'comment': '# Create 1 more server, which should not return a reservation_id', 'include_SATD': False}, {'start_line': 461, 'end_line': 461, 'comment': '# lookup servers created by the first request.', 'include_SATD': False}, {'start_line': 466, 'end_line': 466, 'comment': '# The server from the 2nd request should not be there.', 'include_SATD': False}, {'start_line': 468, 'end_line': 468, 'comment': '# Should have found 2 servers.', 'include_SATD': False}, {'start_line': 471, 'end_line': 471, 'comment': '# Cleanup', 'include_SATD': False}], 'filename': 'nova/tests/integrated/test_servers.py'}, {'a_comments': [], 'b_comments': [{'start_line': 407, 'end_line': 408, 'comment': ""# make sure this is called with admin context, even though # we're using user context below"", 'include_SATD': False}], 'filename': 'nova/tests/scheduler/test_abstract_scheduler.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_least_cost_scheduler.py'}, {'a_comments': [{'start_line': 267, 'end_line': 268, 'comment': '# NOTE(jk0): If an integer is passed as the image_ref, the image # service will use the default image service (in this case, the fake).', 'include_SATD': False}], 'b_comments': [{'start_line': 61, 'end_line': 62, 'comment': '# NOTE(jk0): If an integer is passed as the image_ref, the image # service will use the default image service (in this case, the fake).', 'include_SATD': False}, {'start_line': 302, 'end_line': 302, 'comment': ""# Assumes we're testing with MultiScheduler"", 'include_SATD': False}], 'filename': 'nova/tests/scheduler/test_scheduler.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_vsa_scheduler.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1487, 'end_line': 1488, 'comment': '# We need admin context to be able to specify our own # reservation_ids.', 'include_SATD': False}, {'start_line': 1490, 'end_line': 1490, 'comment': '# 1 instance', 'include_SATD': False}, {'start_line': 1501, 'end_line': 1501, 'comment': '# 2 instances', 'include_SATD': False}], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quota.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 1403, 'end_line': 1404, 'comment': '# NOTE(comstud): Unfortunately, EC2 requires that the # instance DB entries have been created..', 'include_SATD': False}], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/createserverext.py'}, {'a_comments': [{'start_line': 367, 'end_line': 369, 'comment': ""# We can only return 1 instance via the API, if we happen to # build more than one...  instances is a list, so we'll just # use the first one.."", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/volumes.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 48, 'end_line': 48, 'comment': '# Nothing yet.', 'include_SATD': False}], 'filename': 'nova/api/openstack/contrib/zones.py'}, {'a_comments': [{'start_line': 0, 'end_line': 14, 'comment': '# Copyright 2011 OpenStack LLC. # Copyright 2011 Piston Cloud Computing, Inc. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 88, 'end_line': 89, 'comment': '# If the image href was generated by nova api, strip image_href # down to an id and use the default glance connection params', 'include_SATD': False}, {'start_line': 134, 'end_line': 134, 'comment': '# optional openstack extensions:', 'include_SATD': False}, {'start_line': 147, 'end_line': 149, 'comment': ""# min_count and max_count are optional.  If they exist, they come # in as strings.  We want to default 'min_count' to 1, and default # 'max_count' to be 'min_count'."", 'include_SATD': False}, {'start_line': 208, 'end_line': 208, 'comment': '# Let the caller deal with unhandled exceptions.', 'include_SATD': False}, {'start_line': 230, 'end_line': 230, 'comment': '# if the original error is okay, just reraise it', 'include_SATD': False}, {'start_line': 260, 'end_line': 261, 'comment': ""# NOTE(sirp): extracted to a separate method to aid unit-testing, the # new method doesn't need a request obj or an ImageService stub"", 'include_SATD': False}, {'start_line': 350, 'end_line': 352, 'comment': '#fixed IP address is optional #if the fixed IP address is not provided then #it will use one of the available IP address from the network', 'include_SATD': False}, {'start_line': 357, 'end_line': 359, 'comment': ""# check if the network id is already present in the list, # we don't want duplicate networks to be passed # at the boot time"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/api/openstack/create_instance_helper.py'}, {'a_comments': [{'start_line': 189, 'end_line': 191, 'comment': ""# We can only return 1 instance via the API, if we happen to # build more than one...  instances is a list, so we'll just # use the first one.."", 'include_SATD': False}], 'b_comments': [{'start_line': 1, 'end_line': 1, 'comment': '# Copyright 2011 Piston Cloud Computing, Inc', 'include_SATD': False}, {'start_line': 200, 'end_line': 200, 'comment': '# if the original error is okay, just reraise it', 'include_SATD': False}, {'start_line': 230, 'end_line': 231, 'comment': ""# NOTE(sirp): extracted to a separate method to aid unit-testing, the # new method doesn't need a request obj or an ImageService stub"", 'include_SATD': False}, {'start_line': 320, 'end_line': 322, 'comment': '#fixed IP address is optional #if the fixed IP address is not provided then #it will use one of the available IP address from the network', 'include_SATD': False}, {'start_line': 327, 'end_line': 329, 'comment': ""# check if the network id is already present in the list, # we don't want duplicate networks to be passed # at the boot time"", 'include_SATD': False}, {'start_line': 395, 'end_line': 396, 'comment': '# If the image href was generated by nova api, strip image_href # down to an id and use the default glance connection params', 'include_SATD': False}, {'start_line': 441, 'end_line': 441, 'comment': '# optional openstack extensions:', 'include_SATD': False}, {'start_line': 453, 'end_line': 454, 'comment': '# Only allow admins to specify their own reservation_ids # This is really meant to allow zones to work.', 'include_SATD': False}, {'start_line': 465, 'end_line': 467, 'comment': ""# min_count and max_count are optional.  If they exist, they come # in as strings.  We want to default 'min_count' to 1, and default # 'max_count' to be 'min_count'."", 'include_SATD': False}, {'start_line': 522, 'end_line': 522, 'comment': '# Let the caller deal with unhandled exceptions.', 'include_SATD': False}, {'start_line': 524, 'end_line': 524, 'comment': '# If the caller wanted a reservation_id, return it', 'include_SATD': False}, {'start_line': 528, 'end_line': 528, 'comment': '# Instances is a list', 'include_SATD': False}], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/zones.py'}, {'a_comments': [], 'b_comments': [{'start_line': 328, 'end_line': 332, 'comment': ""# TODO(comstud): We should use rpc.multicall when we can # retrieve the full instance dictionary from the scheduler. # Otherwise, we could exceed the AMQP max message size limit. # This would require the schedulers' schedule_run_instances # methods to return an iterator vs a list."", 'include_SATD': True}, {'start_line': 558, 'end_line': 558, 'comment': '# wait_for_instances must have been False', 'include_SATD': False}, {'start_line': 566, 'end_line': 567, 'comment': ""# Scheduler only gives us the 'id'.  We need to pull # in the created instances from the DB"", 'include_SATD': False}], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [{'start_line': 66, 'end_line': 68, 'comment': '# TODO(sandy): I guess someone needs to add block_device_mapping # support at some point? Also, OS API has no concept of security # groups.', 'include_SATD': True}, {'start_line': 240, 'end_line': 241, 'comment': ""# Returning None short-circuits the routing to Compute (since # we've already done it here)"", 'include_SATD': False}], 'b_comments': [{'start_line': 210, 'end_line': 210, 'comment': '# Caller expects a list of instances', 'include_SATD': False}], 'filename': 'nova/scheduler/abstract_scheduler.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/chance.py'}, {'a_comments': [{'start_line': 116, 'end_line': 117, 'comment': '# Return value is necessary to send request to src # Check _schedule() in detail.', 'include_SATD': False}], 'b_comments': [{'start_line': 104, 'end_line': 111, 'comment': ""# TODO(comstud): I would love to be able to return the full # instance information here, but we'll need some modifications # to the RPC code to handle datetime conversions with the # json encoding/decoding.  We should be able to set a default # json handler somehow to do it. # # For now, I'll just return the instance ID and let the caller # do a DB lookup :-/"", 'include_SATD': True}, {'start_line': 467, 'end_line': 467, 'comment': '# Should only be None for tests?', 'include_SATD': False}], 'filename': 'nova/scheduler/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/least_cost.py'}, {'a_comments': [], 'b_comments': [{'start_line': 98, 'end_line': 98, 'comment': '# Scheduler methods are responsible for casting.', 'include_SATD': False}], 'filename': 'nova/scheduler/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/multi.py'}, {'a_comments': [{'start_line': 53, 'end_line': 54, 'comment': '# TODO(vish): this probably belongs in the manager, if we #             can generalize this somehow', 'include_SATD': True}, {'start_line': 65, 'end_line': 66, 'comment': '# NOTE(vish): this probably belongs in the manager, if we #             can generalize this somehow', 'include_SATD': True}, {'start_line': 95, 'end_line': 96, 'comment': '# TODO(vish): this probably belongs in the manager, if we #             can generalize this somehow', 'include_SATD': True}, {'start_line': 108, 'end_line': 109, 'comment': '# NOTE(vish): this probably belongs in the manager, if we #             can generalize this somehow', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/scheduler/simple.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/vsa.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/zone.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/api/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 443, 'end_line': 444, 'comment': ""# Create 2 servers, setting 'return_reservation_id, which should # return a reservation_id"", 'include_SATD': False}, {'start_line': 454, 'end_line': 454, 'comment': '# Create 1 more server, which should not return a reservation_id', 'include_SATD': False}, {'start_line': 461, 'end_line': 461, 'comment': '# lookup servers created by the first request.', 'include_SATD': False}, {'start_line': 466, 'end_line': 466, 'comment': '# The server from the 2nd request should not be there.', 'include_SATD': False}, {'start_line': 468, 'end_line': 468, 'comment': '# Should have found 2 servers.', 'include_SATD': False}, {'start_line': 471, 'end_line': 471, 'comment': '# Cleanup', 'include_SATD': False}], 'filename': 'nova/tests/integrated/test_servers.py'}, {'a_comments': [], 'b_comments': [{'start_line': 407, 'end_line': 408, 'comment': ""# make sure this is called with admin context, even though # we're using user context below"", 'include_SATD': False}], 'filename': 'nova/tests/scheduler/test_abstract_scheduler.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_least_cost_scheduler.py'}, {'a_comments': [{'start_line': 267, 'end_line': 268, 'comment': '# NOTE(jk0): If an integer is passed as the image_ref, the image # service will use the default image service (in this case, the fake).', 'include_SATD': False}], 'b_comments': [{'start_line': 61, 'end_line': 62, 'comment': '# NOTE(jk0): If an integer is passed as the image_ref, the image # service will use the default image service (in this case, the fake).', 'include_SATD': False}, {'start_line': 302, 'end_line': 302, 'comment': ""# Assumes we're testing with MultiScheduler"", 'include_SATD': False}], 'filename': 'nova/tests/scheduler/test_scheduler.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_vsa_scheduler.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1487, 'end_line': 1488, 'comment': '# We need admin context to be able to specify our own # reservation_ids.', 'include_SATD': False}, {'start_line': 1490, 'end_line': 1490, 'comment': '# 1 instance', 'include_SATD': False}, {'start_line': 1501, 'end_line': 1501, 'comment': '# 2 instances', 'include_SATD': False}], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quota.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 1403, 'end_line': 1404, 'comment': '# NOTE(comstud): Unfortunately, EC2 requires that the # instance DB entries have been created..', 'include_SATD': False}], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/createserverext.py'}, {'a_comments': [{'start_line': 367, 'end_line': 369, 'comment': ""# We can only return 1 instance via the API, if we happen to # build more than one...  instances is a list, so we'll just # use the first one.."", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/volumes.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 48, 'end_line': 48, 'comment': '# Nothing yet.', 'include_SATD': False}], 'filename': 'nova/api/openstack/contrib/zones.py'}, {'a_comments': [{'start_line': 0, 'end_line': 14, 'comment': '# Copyright 2011 OpenStack LLC. # Copyright 2011 Piston Cloud Computing, Inc. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 88, 'end_line': 89, 'comment': '# If the image href was generated by nova api, strip image_href # down to an id and use the default glance connection params', 'include_SATD': False}, {'start_line': 134, 'end_line': 134, 'comment': '# optional openstack extensions:', 'include_SATD': False}, {'start_line': 147, 'end_line': 149, 'comment': ""# min_count and max_count are optional.  If they exist, they come # in as strings.  We want to default 'min_count' to 1, and default # 'max_count' to be 'min_count'."", 'include_SATD': False}, {'start_line': 208, 'end_line': 208, 'comment': '# Let the caller deal with unhandled exceptions.', 'include_SATD': False}, {'start_line': 230, 'end_line': 230, 'comment': '# if the original error is okay, just reraise it', 'include_SATD': False}, {'start_line': 260, 'end_line': 261, 'comment': ""# NOTE(sirp): extracted to a separate method to aid unit-testing, the # new method doesn't need a request obj or an ImageService stub"", 'include_SATD': False}, {'start_line': 350, 'end_line': 352, 'comment': '#fixed IP address is optional #if the fixed IP address is not provided then #it will use one of the available IP address from the network', 'include_SATD': False}, {'start_line': 357, 'end_line': 359, 'comment': ""# check if the network id is already present in the list, # we don't want duplicate networks to be passed # at the boot time"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/api/openstack/create_instance_helper.py'}, {'a_comments': [{'start_line': 189, 'end_line': 191, 'comment': ""# We can only return 1 instance via the API, if we happen to # build more than one...  instances is a list, so we'll just # use the first one.."", 'include_SATD': False}], 'b_comments': [{'start_line': 1, 'end_line': 1, 'comment': '# Copyright 2011 Piston Cloud Computing, Inc', 'include_SATD': False}, {'start_line': 200, 'end_line': 200, 'comment': '# if the original error is okay, just reraise it', 'include_SATD': False}, {'start_line': 230, 'end_line': 231, 'comment': ""# NOTE(sirp): extracted to a separate method to aid unit-testing, the # new method doesn't need a request obj or an ImageService stub"", 'include_SATD': False}, {'start_line': 320, 'end_line': 322, 'comment': '#fixed IP address is optional #if the fixed IP address is not provided then #it will use one of the available IP address from the network', 'include_SATD': False}, {'start_line': 327, 'end_line': 329, 'comment': ""# check if the network id is already present in the list, # we don't want duplicate networks to be passed # at the boot time"", 'include_SATD': False}, {'start_line': 395, 'end_line': 396, 'comment': '# If the image href was generated by nova api, strip image_href # down to an id and use the default glance connection params', 'include_SATD': False}, {'start_line': 441, 'end_line': 441, 'comment': '# optional openstack extensions:', 'include_SATD': False}, {'start_line': 453, 'end_line': 454, 'comment': '# Only allow admins to specify their own reservation_ids # This is really meant to allow zones to work.', 'include_SATD': False}, {'start_line': 465, 'end_line': 467, 'comment': ""# min_count and max_count are optional.  If they exist, they come # in as strings.  We want to default 'min_count' to 1, and default # 'max_count' to be 'min_count'."", 'include_SATD': False}, {'start_line': 522, 'end_line': 522, 'comment': '# Let the caller deal with unhandled exceptions.', 'include_SATD': False}, {'start_line': 524, 'end_line': 524, 'comment': '# If the caller wanted a reservation_id, return it', 'include_SATD': False}, {'start_line': 528, 'end_line': 528, 'comment': '# Instances is a list', 'include_SATD': False}], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/zones.py'}, {'a_comments': [], 'b_comments': [{'start_line': 328, 'end_line': 332, 'comment': ""# TODO(comstud): We should use rpc.multicall when we can # retrieve the full instance dictionary from the scheduler. # Otherwise, we could exceed the AMQP max message size limit. # This would require the schedulers' schedule_run_instances # methods to return an iterator vs a list."", 'include_SATD': True}, {'start_line': 558, 'end_line': 558, 'comment': '# wait_for_instances must have been False', 'include_SATD': False}, {'start_line': 566, 'end_line': 567, 'comment': ""# Scheduler only gives us the 'id'.  We need to pull # in the created instances from the DB"", 'include_SATD': False}], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [{'start_line': 66, 'end_line': 68, 'comment': '# TODO(sandy): I guess someone needs to add block_device_mapping # support at some point? Also, OS API has no concept of security # groups.', 'include_SATD': True}, {'start_line': 240, 'end_line': 241, 'comment': ""# Returning None short-circuits the routing to Compute (since # we've already done it here)"", 'include_SATD': False}], 'b_comments': [{'start_line': 210, 'end_line': 210, 'comment': '# Caller expects a list of instances', 'include_SATD': False}], 'filename': 'nova/scheduler/abstract_scheduler.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/chance.py'}, {'a_comments': [{'start_line': 116, 'end_line': 117, 'comment': '# Return value is necessary to send request to src # Check _schedule() in detail.', 'include_SATD': False}], 'b_comments': [{'start_line': 104, 'end_line': 111, 'comment': ""# TODO(comstud): I would love to be able to return the full # instance information here, but we'll need some modifications # to the RPC code to handle datetime conversions with the # json encoding/decoding.  We should be able to set a default # json handler somehow to do it. # # For now, I'll just return the instance ID and let the caller # do a DB lookup :-/"", 'include_SATD': True}, {'start_line': 467, 'end_line': 467, 'comment': '# Should only be None for tests?', 'include_SATD': False}], 'filename': 'nova/scheduler/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/least_cost.py'}, {'a_comments': [], 'b_comments': [{'start_line': 98, 'end_line': 98, 'comment': '# Scheduler methods are responsible for casting.', 'include_SATD': False}], 'filename': 'nova/scheduler/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/multi.py'}, {'a_comments': [{'start_line': 53, 'end_line': 54, 'comment': '# TODO(vish): this probably belongs in the manager, if we #             can generalize this somehow', 'include_SATD': True}, {'start_line': 65, 'end_line': 66, 'comment': '# NOTE(vish): this probably belongs in the manager, if we #             can generalize this somehow', 'include_SATD': True}, {'start_line': 95, 'end_line': 96, 'comment': '# TODO(vish): this probably belongs in the manager, if we #             can generalize this somehow', 'include_SATD': True}, {'start_line': 108, 'end_line': 109, 'comment': '# NOTE(vish): this probably belongs in the manager, if we #             can generalize this somehow', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/scheduler/simple.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/vsa.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/zone.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/api/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 443, 'end_line': 444, 'comment': ""# Create 2 servers, setting 'return_reservation_id, which should # return a reservation_id"", 'include_SATD': False}, {'start_line': 454, 'end_line': 454, 'comment': '# Create 1 more server, which should not return a reservation_id', 'include_SATD': False}, {'start_line': 461, 'end_line': 461, 'comment': '# lookup servers created by the first request.', 'include_SATD': False}, {'start_line': 466, 'end_line': 466, 'comment': '# The server from the 2nd request should not be there.', 'include_SATD': False}, {'start_line': 468, 'end_line': 468, 'comment': '# Should have found 2 servers.', 'include_SATD': False}, {'start_line': 471, 'end_line': 471, 'comment': '# Cleanup', 'include_SATD': False}], 'filename': 'nova/tests/integrated/test_servers.py'}, {'a_comments': [], 'b_comments': [{'start_line': 407, 'end_line': 408, 'comment': ""# make sure this is called with admin context, even though # we're using user context below"", 'include_SATD': False}], 'filename': 'nova/tests/scheduler/test_abstract_scheduler.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_least_cost_scheduler.py'}, {'a_comments': [{'start_line': 267, 'end_line': 268, 'comment': '# NOTE(jk0): If an integer is passed as the image_ref, the image # service will use the default image service (in this case, the fake).', 'include_SATD': False}], 'b_comments': [{'start_line': 61, 'end_line': 62, 'comment': '# NOTE(jk0): If an integer is passed as the image_ref, the image # service will use the default image service (in this case, the fake).', 'include_SATD': False}, {'start_line': 302, 'end_line': 302, 'comment': ""# Assumes we're testing with MultiScheduler"", 'include_SATD': False}], 'filename': 'nova/tests/scheduler/test_scheduler.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_vsa_scheduler.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1487, 'end_line': 1488, 'comment': '# We need admin context to be able to specify our own # reservation_ids.', 'include_SATD': False}, {'start_line': 1490, 'end_line': 1490, 'comment': '# 1 instance', 'include_SATD': False}, {'start_line': 1501, 'end_line': 1501, 'comment': '# 2 instances', 'include_SATD': False}], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quota.py'}]}, {'revision': 5, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 1403, 'end_line': 1404, 'comment': '# NOTE(comstud): Unfortunately, EC2 requires that the # instance DB entries have been created..', 'include_SATD': False}], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/createserverext.py'}, {'a_comments': [{'start_line': 367, 'end_line': 369, 'comment': ""# We can only return 1 instance via the API, if we happen to # build more than one...  instances is a list, so we'll just # use the first one.."", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/volumes.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 48, 'end_line': 48, 'comment': '# Nothing yet.', 'include_SATD': False}], 'filename': 'nova/api/openstack/contrib/zones.py'}, {'a_comments': [{'start_line': 0, 'end_line': 14, 'comment': '# Copyright 2011 OpenStack LLC. # Copyright 2011 Piston Cloud Computing, Inc. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 88, 'end_line': 89, 'comment': '# If the image href was generated by nova api, strip image_href # down to an id and use the default glance connection params', 'include_SATD': False}, {'start_line': 134, 'end_line': 134, 'comment': '# optional openstack extensions:', 'include_SATD': False}, {'start_line': 147, 'end_line': 149, 'comment': ""# min_count and max_count are optional.  If they exist, they come # in as strings.  We want to default 'min_count' to 1, and default # 'max_count' to be 'min_count'."", 'include_SATD': False}, {'start_line': 208, 'end_line': 208, 'comment': '# Let the caller deal with unhandled exceptions.', 'include_SATD': False}, {'start_line': 230, 'end_line': 230, 'comment': '# if the original error is okay, just reraise it', 'include_SATD': False}, {'start_line': 260, 'end_line': 261, 'comment': ""# NOTE(sirp): extracted to a separate method to aid unit-testing, the # new method doesn't need a request obj or an ImageService stub"", 'include_SATD': False}, {'start_line': 350, 'end_line': 352, 'comment': '#fixed IP address is optional #if the fixed IP address is not provided then #it will use one of the available IP address from the network', 'include_SATD': False}, {'start_line': 357, 'end_line': 359, 'comment': ""# check if the network id is already present in the list, # we don't want duplicate networks to be passed # at the boot time"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/api/openstack/create_instance_helper.py'}, {'a_comments': [{'start_line': 189, 'end_line': 191, 'comment': ""# We can only return 1 instance via the API, if we happen to # build more than one...  instances is a list, so we'll just # use the first one.."", 'include_SATD': False}], 'b_comments': [{'start_line': 1, 'end_line': 1, 'comment': '# Copyright 2011 Piston Cloud Computing, Inc', 'include_SATD': False}, {'start_line': 200, 'end_line': 200, 'comment': '# if the original error is okay, just reraise it', 'include_SATD': False}, {'start_line': 230, 'end_line': 231, 'comment': ""# NOTE(sirp): extracted to a separate method to aid unit-testing, the # new method doesn't need a request obj or an ImageService stub"", 'include_SATD': False}, {'start_line': 320, 'end_line': 322, 'comment': '#fixed IP address is optional #if the fixed IP address is not provided then #it will use one of the available IP address from the network', 'include_SATD': False}, {'start_line': 327, 'end_line': 329, 'comment': ""# check if the network id is already present in the list, # we don't want duplicate networks to be passed # at the boot time"", 'include_SATD': False}, {'start_line': 395, 'end_line': 396, 'comment': '# If the image href was generated by nova api, strip image_href # down to an id and use the default glance connection params', 'include_SATD': False}, {'start_line': 441, 'end_line': 441, 'comment': '# optional openstack extensions:', 'include_SATD': False}, {'start_line': 453, 'end_line': 454, 'comment': '# Only allow admins to specify their own reservation_ids # This is really meant to allow zones to work.', 'include_SATD': False}, {'start_line': 465, 'end_line': 467, 'comment': ""# min_count and max_count are optional.  If they exist, they come # in as strings.  We want to default 'min_count' to 1, and default # 'max_count' to be 'min_count'."", 'include_SATD': False}, {'start_line': 522, 'end_line': 522, 'comment': '# Let the caller deal with unhandled exceptions.', 'include_SATD': False}, {'start_line': 524, 'end_line': 524, 'comment': '# If the caller wanted a reservation_id, return it', 'include_SATD': False}, {'start_line': 528, 'end_line': 528, 'comment': '# Instances is a list', 'include_SATD': False}], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/zones.py'}, {'a_comments': [], 'b_comments': [{'start_line': 329, 'end_line': 333, 'comment': ""# TODO(comstud): We should use rpc.multicall when we can # retrieve the full instance dictionary from the scheduler. # Otherwise, we could exceed the AMQP max message size limit. # This would require the schedulers' schedule_run_instances # methods to return an iterator vs a list."", 'include_SATD': True}, {'start_line': 559, 'end_line': 559, 'comment': '# wait_for_instances must have been False', 'include_SATD': False}, {'start_line': 567, 'end_line': 568, 'comment': ""# Scheduler only gives us the 'id'.  We need to pull # in the created instances from the DB"", 'include_SATD': False}], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [{'start_line': 66, 'end_line': 68, 'comment': '# TODO(sandy): I guess someone needs to add block_device_mapping # support at some point? Also, OS API has no concept of security # groups.', 'include_SATD': True}, {'start_line': 240, 'end_line': 241, 'comment': ""# Returning None short-circuits the routing to Compute (since # we've already done it here)"", 'include_SATD': False}], 'b_comments': [{'start_line': 210, 'end_line': 210, 'comment': '# Caller expects a list of instances', 'include_SATD': False}], 'filename': 'nova/scheduler/abstract_scheduler.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/chance.py'}, {'a_comments': [{'start_line': 116, 'end_line': 117, 'comment': '# Return value is necessary to send request to src # Check _schedule() in detail.', 'include_SATD': False}], 'b_comments': [{'start_line': 104, 'end_line': 111, 'comment': ""# TODO(comstud): I would love to be able to return the full # instance information here, but we'll need some modifications # to the RPC code to handle datetime conversions with the # json encoding/decoding.  We should be able to set a default # json handler somehow to do it. # # For now, I'll just return the instance ID and let the caller # do a DB lookup :-/"", 'include_SATD': True}, {'start_line': 467, 'end_line': 467, 'comment': '# Should only be None for tests?', 'include_SATD': False}], 'filename': 'nova/scheduler/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/least_cost.py'}, {'a_comments': [], 'b_comments': [{'start_line': 98, 'end_line': 98, 'comment': '# Scheduler methods are responsible for casting.', 'include_SATD': False}], 'filename': 'nova/scheduler/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/multi.py'}, {'a_comments': [{'start_line': 53, 'end_line': 54, 'comment': '# TODO(vish): this probably belongs in the manager, if we #             can generalize this somehow', 'include_SATD': True}, {'start_line': 65, 'end_line': 66, 'comment': '# NOTE(vish): this probably belongs in the manager, if we #             can generalize this somehow', 'include_SATD': True}, {'start_line': 95, 'end_line': 96, 'comment': '# TODO(vish): this probably belongs in the manager, if we #             can generalize this somehow', 'include_SATD': True}, {'start_line': 108, 'end_line': 109, 'comment': '# NOTE(vish): this probably belongs in the manager, if we #             can generalize this somehow', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/scheduler/simple.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/vsa.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/zone.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/api/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 443, 'end_line': 444, 'comment': ""# Create 2 servers, setting 'return_reservation_id, which should # return a reservation_id"", 'include_SATD': False}, {'start_line': 454, 'end_line': 454, 'comment': '# Create 1 more server, which should not return a reservation_id', 'include_SATD': False}, {'start_line': 461, 'end_line': 461, 'comment': '# lookup servers created by the first request.', 'include_SATD': False}, {'start_line': 466, 'end_line': 466, 'comment': '# The server from the 2nd request should not be there.', 'include_SATD': False}, {'start_line': 468, 'end_line': 468, 'comment': '# Should have found 2 servers.', 'include_SATD': False}, {'start_line': 471, 'end_line': 471, 'comment': '# Cleanup', 'include_SATD': False}], 'filename': 'nova/tests/integrated/test_servers.py'}, {'a_comments': [], 'b_comments': [{'start_line': 407, 'end_line': 408, 'comment': ""# make sure this is called with admin context, even though # we're using user context below"", 'include_SATD': False}], 'filename': 'nova/tests/scheduler/test_abstract_scheduler.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_least_cost_scheduler.py'}, {'a_comments': [{'start_line': 267, 'end_line': 268, 'comment': '# NOTE(jk0): If an integer is passed as the image_ref, the image # service will use the default image service (in this case, the fake).', 'include_SATD': False}], 'b_comments': [{'start_line': 61, 'end_line': 62, 'comment': '# NOTE(jk0): If an integer is passed as the image_ref, the image # service will use the default image service (in this case, the fake).', 'include_SATD': False}, {'start_line': 302, 'end_line': 302, 'comment': ""# Assumes we're testing with MultiScheduler"", 'include_SATD': False}], 'filename': 'nova/tests/scheduler/test_scheduler.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_vsa_scheduler.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1487, 'end_line': 1488, 'comment': '# We need admin context to be able to specify our own # reservation_ids.', 'include_SATD': False}, {'start_line': 1490, 'end_line': 1490, 'comment': '# 1 instance', 'include_SATD': False}, {'start_line': 1501, 'end_line': 1501, 'comment': '# 2 instances', 'include_SATD': False}], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quota.py'}]}]",5,14,13,MERGED,True,https://review.opendev.org/#/c/640,compute_api create*() and schedulers refactoring,True,"{""# TODO(comstud): We should use rpc.multicall when we can # retrieve the full instance dictionary from the scheduler. # Otherwise, we could exceed the AMQP max message size limit. # This would require the schedulers' schedule_run_instances # methods to return an iterator vs a list."": 1, ""# TODO(comstud): I would love to be able to return the full # instance information here, but we'll need some modifications # to the RPC code to handle datetime conversions with the # json encoding/decoding.  We should be able to set a default # json handler somehow to do it. # # For now, I'll just return the instance ID and let the caller # do a DB lookup :-/"": 1}",True,"{'# TODO(sandy): I guess someone needs to add block_device_mapping # support at some point? Also, OS API has no concept of security # groups.': 1, '# TODO(vish): this probably belongs in the manager, if we #             can generalize this somehow': 1, '# NOTE(vish): this probably belongs in the manager, if we #             can generalize this somehow': 1}",True,{}
203,671,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'setup.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'swift/account/server.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'swift/common/utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'swift/common/wsgi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'swift/container/server.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 13, 'comment': '# Copyright (c) 2010-2011 OpenStack, LLC. # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # #    httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or # implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}], 'filename': 'swift/obj/expirer.py'}, {'a_comments': [], 'b_comments': [{'start_line': 364, 'end_line': 364, 'comment': ""        default_allowed_headers = '''"", 'include_SATD': False}, {'start_line': 369, 'end_line': 369, 'comment': ""        '''"", 'include_SATD': False}], 'filename': 'swift/obj/server.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'swift/proxy/server.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'test/unit/account/test_server.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'test/unit/common/test_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'test/unit/container/test_server.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 13, 'comment': '# Copyright (c) 2011 OpenStack, LLC. # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # #    httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or # implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 109, 'end_line': 109, 'comment': '# Reverse test to be sure it still would blow up the way expected.', 'include_SATD': True}, {'start_line': 137, 'end_line': 137, 'comment': '# Reverse test to be sure it still would blow up the way expected.', 'include_SATD': True}, {'start_line': 174, 'end_line': 174, 'comment': '# Reverse test to be sure it still would blow up the way expected.', 'include_SATD': True}], 'filename': 'test/unit/obj/test_expirer.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1700, 'end_line': 1702, 'comment': ""# This 2 timestamp is okay because it's ignored since it's just # part of the current request headers. The above 1 timestamp is the # important one."", 'include_SATD': False}, {'start_line': 1768, 'end_line': 1770, 'comment': ""# This 2 timestamp is okay because it's ignored since it's just # part of the current request headers. The above 1 timestamp is the # important one."", 'include_SATD': False}], 'filename': 'test/unit/obj/test_server.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'test/unit/proxy/test_server.py'}]}]",1,2,6,ABANDONED,False,https://review.opendev.org/#/c/671,Expiring Objects Support,True,{'# Reverse test to be sure it still would blow up the way expected.': 1},True,{},False,{}
204,672,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/store/swift.py'}, {'a_comments': [], 'b_comments': [{'start_line': 400, 'end_line': 400, 'comment': '# POST /images with public image named Image1', 'include_SATD': False}, {'start_line': 417, 'end_line': 417, 'comment': '# GET /images/1 and make sure data was uploaded', 'include_SATD': False}, {'start_line': 428, 'end_line': 428, 'comment': '# use this header as the location for the next image', 'include_SATD': False}, {'start_line': 431, 'end_line': 431, 'comment': '# POST /images with public image named Image1 without uploading data', 'include_SATD': False}, {'start_line': 447, 'end_line': 447, 'comment': '# GET /images/2 ensuring the data already in swift is accessible', 'include_SATD': False}, {'start_line': 458, 'end_line': 459, 'comment': '# DELETE /images/1 and /image/2 # Verify image and all chunks are gone...', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_swift.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/store/swift.py'}, {'a_comments': [], 'b_comments': [{'start_line': 400, 'end_line': 400, 'comment': '# POST /images with public image named Image1', 'include_SATD': False}, {'start_line': 417, 'end_line': 417, 'comment': '# GET /images/1 and make sure data was uploaded', 'include_SATD': False}, {'start_line': 428, 'end_line': 428, 'comment': '# use this header as the location for the next image', 'include_SATD': False}, {'start_line': 431, 'end_line': 431, 'comment': '# POST /images with public image named Image1 without uploading data', 'include_SATD': False}, {'start_line': 447, 'end_line': 447, 'comment': '# GET /images/2 ensuring the data already in swift is accessible', 'include_SATD': False}, {'start_line': 458, 'end_line': 459, 'comment': '# DELETE /images/1 and /image/2 # Verify image and all chunks are gone...', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_swift.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_swift_store.py'}]}]",2,5,0,MERGED,True,https://review.opendev.org/#/c/672,Make remote swift image streaming functional,True,{},False,{},False,{}
205,680,"[{'revision': 1, 'changed_files': []}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/680,Make sure options is set before checking managed_disk setting. Fixes bug 860520.,False,{},False,{},False,{}
206,683,"[{'revision': 1, 'changed_files': []}, {'revision': 2, 'changed_files': []}]",2,4,0,MERGED,True,https://review.opendev.org/#/c/683,Adding run_test.sh artifacts to .gitignore,False,{},False,{},False,{}
207,655,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'doc/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'doc/source/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 14, 'comment': '# -*- coding: utf-8 -*- # Copyright (c) 2010 OpenStack, LLC. # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # #    httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or # implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 16, 'end_line': 27, 'comment': ""# # Keystone documentation build configuration file, created by # sphinx-quickstart on Tue May 18 13:50:15 2010. # # This file is execfile()'d with the current directory set to it's containing # dir. # # Note that not all possible configuration values are present in this # autogenerated file. # # All configuration values have a default; values that are commented out # serve to show the default."", 'include_SATD': False}, {'start_line': 32, 'end_line': 34, 'comment': '# If extensions (or modules to document with autodoc) are in another directory, # add these directories to sys.path here. If the directory is relative to the # documentation root, use os.path.abspath to make it absolute, like shown here.', 'include_SATD': False}, {'start_line': 40, 'end_line': 40, 'comment': '# -- General configuration ---------------------------------------------------', 'include_SATD': False}, {'start_line': 42, 'end_line': 43, 'comment': ""# Add any Sphinx extension module names here, as strings. They can be # extensions coming with Sphinx (named 'sphinx.ext.*') or your custom ones."", 'include_SATD': False}, {'start_line': 54, 'end_line': 54, 'comment': '# Add any paths that contain templates here, relative to this directory.', 'include_SATD': False}, {'start_line': 61, 'end_line': 61, 'comment': '# The suffix of source filenames.', 'include_SATD': False}, {'start_line': 64, 'end_line': 65, 'comment': ""# The encoding of source files. #source_encoding = 'utf-8'"", 'include_SATD': False}, {'start_line': 67, 'end_line': 67, 'comment': '# The master toctree document.', 'include_SATD': False}, {'start_line': 70, 'end_line': 70, 'comment': '# General information about the project.', 'include_SATD': False}, {'start_line': 74, 'end_line': 79, 'comment': ""# The version info for the project you're documenting, acts as replacement for # |version| and |release|, also used in various other places throughout the # built documents. # # Version info # TODO(salvatore-orlando): replace here once Bug #826563 is fixed"", 'include_SATD': True}, {'start_line': 81, 'end_line': 81, 'comment': '# The short X.Y version.', 'include_SATD': False}, {'start_line': 84, 'end_line': 86, 'comment': '# The language for content autogenerated by Sphinx. Refer to documentation # for a list of supported languages. #language = None', 'include_SATD': False}, {'start_line': 88, 'end_line': 92, 'comment': ""# There are two options for replacing |today|: either, you set today to some # non-false value, then it is used: #today = '' # Else, today_fmt is used as the format for a strftime call. #today_fmt = '%B %d, %Y'"", 'include_SATD': False}, {'start_line': 94, 'end_line': 95, 'comment': ""# List of documents that shouldn't be included in the build. #unused_docs = []"", 'include_SATD': False}, {'start_line': 97, 'end_line': 98, 'comment': ""# List of directories, relative to source directory, that shouldn't be searched # for source files."", 'include_SATD': True}, {'start_line': 101, 'end_line': 102, 'comment': '# The reST default role (for this markup: `text`) to use for all documents. #default_role = None', 'include_SATD': False}, {'start_line': 104, 'end_line': 105, 'comment': ""# If true, '()' will be appended to :func: etc. cross-reference text. #add_function_parentheses = True"", 'include_SATD': False}, {'start_line': 107, 'end_line': 109, 'comment': '# If true, the current module name will be prepended to all description # unit titles (such as .. function::). #add_module_names = True', 'include_SATD': False}, {'start_line': 111, 'end_line': 112, 'comment': '# If true, sectionauthor and moduleauthor directives will be shown in the # output. They are ignored by default.', 'include_SATD': False}, {'start_line': 115, 'end_line': 115, 'comment': '# The name of the Pygments (syntax highlighting) style to use.', 'include_SATD': False}, {'start_line': 118, 'end_line': 118, 'comment': '# A list of ignored prefixes for module index sorting.', 'include_SATD': False}, {'start_line': 121, 'end_line': 121, 'comment': '# -- Options for man page output --------------------------------------------', 'include_SATD': False}, {'start_line': 123, 'end_line': 124, 'comment': ""# Grouping the document tree for man pages. # List of tuples 'sourcefile', 'target', u'title', u'Authors name', 'manual'"", 'include_SATD': False}, {'start_line': 126, 'end_line': 129, 'comment': ""#man_pages = [ #    ('man/cli', 'quantum', u'Quantum Command Line Interface', #     [u'OpenStack'], 1) # ]"", 'include_SATD': False}, {'start_line': 132, 'end_line': 132, 'comment': '# -- Options for HTML output -------------------------------------------------', 'include_SATD': False}, {'start_line': 134, 'end_line': 135, 'comment': ""# The theme to use for HTML and HTML Help pages.  Major themes that come with # Sphinx are currently 'default' and 'sphinxdoc'."", 'include_SATD': False}, {'start_line': 139, 'end_line': 142, 'comment': '# Theme options are theme-specific and customize the look and feel of a theme # further.  For a list of options available for each theme, see the # documentation. #html_theme_options = {}', 'include_SATD': False}, {'start_line': 144, 'end_line': 145, 'comment': ""# Add any paths that contain custom themes here, relative to this directory. #html_theme_path = ['_theme']"", 'include_SATD': False}, {'start_line': 147, 'end_line': 149, 'comment': '# The name for this set of Sphinx documents.  If None, it defaults to # ""<project> v<release> documentation"". #html_title = None', 'include_SATD': False}, {'start_line': 151, 'end_line': 152, 'comment': '# A shorter title for the navigation bar.  Default is the same as html_title. #html_short_title = None', 'include_SATD': False}, {'start_line': 154, 'end_line': 156, 'comment': '# The name of an image file (relative to this directory) to place at the top # of the sidebar. #html_logo = None', 'include_SATD': False}, {'start_line': 158, 'end_line': 161, 'comment': '# The name of an image file (within the static path) to use as favicon of the # docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32 # pixels large. #html_favicon = None', 'include_SATD': False}, {'start_line': 163, 'end_line': 165, 'comment': '# Add any paths that contain custom static files (such as style sheets) here, # relative to this directory. They are copied after the builtin static files, # so a file named ""default.css"" will overwrite the builtin ""default.css"".', 'include_SATD': False}, {'start_line': 168, 'end_line': 170, 'comment': ""# If not '', a 'Last updated on:' timestamp is inserted at every page bottom, # using the given strftime format. #html_last_updated_fmt = '%b %d, %Y'"", 'include_SATD': False}, {'start_line': 172, 'end_line': 174, 'comment': '# If true, SmartyPants will be used to convert quotes and dashes to # typographically correct entities. #html_use_smartypants = True', 'include_SATD': False}, {'start_line': 176, 'end_line': 177, 'comment': '# Custom sidebar templates, maps document names to template names. #html_sidebars = {}', 'include_SATD': False}, {'start_line': 179, 'end_line': 181, 'comment': '# Additional templates that should be rendered to pages, maps page names to # template names. #html_additional_pages = {}', 'include_SATD': False}, {'start_line': 183, 'end_line': 184, 'comment': '# If false, no module index is generated. #html_use_modindex = True', 'include_SATD': False}, {'start_line': 186, 'end_line': 187, 'comment': '# If false, no index is generated. #html_use_index = True', 'include_SATD': False}, {'start_line': 189, 'end_line': 190, 'comment': '# If true, the index is split into individual pages for each letter. #html_split_index = False', 'include_SATD': False}, {'start_line': 192, 'end_line': 193, 'comment': '# If true, links to the reST sources are added to the pages. #html_show_sourcelink = True', 'include_SATD': False}, {'start_line': 195, 'end_line': 198, 'comment': ""# If true, an OpenSearch description file will be output, and all pages will # contain a <link> tag referring to it.  The value of this option must be the # base URL from which the finished HTML is served. #html_use_opensearch = ''"", 'include_SATD': False}, {'start_line': 200, 'end_line': 201, 'comment': '# If nonempty, this is the file name suffix for HTML files (e.g. "".xhtml""). #html_file_suffix = \'\'', 'include_SATD': False}, {'start_line': 203, 'end_line': 203, 'comment': '# Output file base name for HTML help builder.', 'include_SATD': False}, {'start_line': 207, 'end_line': 207, 'comment': '# -- Options for LaTeX output ------------------------------------------------', 'include_SATD': False}, {'start_line': 209, 'end_line': 210, 'comment': ""# The paper size ('letter' or 'a4'). #latex_paper_size = 'letter'"", 'include_SATD': False}, {'start_line': 212, 'end_line': 213, 'comment': ""# The font size ('10pt', '11pt' or '12pt'). #latex_font_size = '10pt'"", 'include_SATD': False}, {'start_line': 215, 'end_line': 217, 'comment': '# Grouping the document tree into LaTeX files. List of tuples # (source start file, target name, title, author, # documentclass [howto/manual]).', 'include_SATD': False}, {'start_line': 223, 'end_line': 225, 'comment': '# The name of an image file (relative to this directory) to place at the top of # the title page. #latex_logo = None', 'include_SATD': False}, {'start_line': 227, 'end_line': 229, 'comment': '# For ""manual"" documents, if this is true, then toplevel headings are parts, # not chapters. #latex_use_parts = False', 'include_SATD': False}, {'start_line': 231, 'end_line': 232, 'comment': ""# Additional stuff for the LaTeX preamble. #latex_preamble = ''"", 'include_SATD': False}, {'start_line': 234, 'end_line': 235, 'comment': '# Documents to append as an appendix to all manuals. #latex_appendices = []', 'include_SATD': False}, {'start_line': 237, 'end_line': 238, 'comment': '# If false, no module index is generated. #latex_use_modindex = True', 'include_SATD': False}, {'start_line': 240, 'end_line': 240, 'comment': '# Example configuration for intersphinx: refer to the Python standard library.', 'include_SATD': False}], 'filename': 'doc/source/conf.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'extensions/credential.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'extensions/portprofile.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'extensions/qos.py'}, {'a_comments': [{'start_line': 111, 'end_line': 111, 'comment': '# This will allow us to return a 202 status code.', 'include_SATD': False}], 'b_comments': [{'start_line': 111, 'end_line': 112, 'comment': '# This will allow us to return a 200 status code.  NOTE: in v1.1 we # will be returning a 202 status code.', 'include_SATD': False}], 'filename': 'quantum/api/networks.py'}, {'a_comments': [{'start_line': 120, 'end_line': 120, 'comment': '# This will allow us to return a 202 status code.', 'include_SATD': False}], 'b_comments': [{'start_line': 120, 'end_line': 121, 'comment': '# This will allow us to return a 200 status code.  NOTE: in v1.1 # we will be returning a 202 status code.', 'include_SATD': False}], 'filename': 'quantum/api/ports.py'}, {'a_comments': [{'start_line': 0, 'end_line': 16, 'comment': '#!/usr/bin/env python # vim: tabstop=4 shiftwidth=4 softtabstop=4 # # Copyright (c) 2010-2011 OpenStack, LLC. # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # #    httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or # implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 80, 'end_line': 81, 'comment': '#if app is set, then we are in a WSGI pipeline and requests get passed # on to app. If it is not set, this component should forward requests', 'include_SATD': False}, {'start_line': 83, 'end_line': 85, 'comment': '# where to find the Quantum service (if not in local WSGI chain) # these settings are only used if this component is acting as a proxy # and the OpenSTack service is running remotely', 'include_SATD': False}, {'start_line': 94, 'end_line': 95, 'comment': '# delay_auth_decision means we still allow unauthenticated requests # through and we let the downstream service make the final decision', 'include_SATD': False}, {'start_line': 101, 'end_line': 101, 'comment': '# where to find the auth service (we use this to validate tokens)', 'include_SATD': False}, {'start_line': 110, 'end_line': 111, 'comment': '# Credentials used to verify this component with the Auth service since # validating tokens is a priviledged call', 'include_SATD': False}, {'start_line': 123, 'end_line': 125, 'comment': '#TODO(ziad): maybe we rafactor this into a superclass # Applies to all protocols # Specific to this protocol', 'include_SATD': True}, {'start_line': 134, 'end_line': 134, 'comment': '#Prep headers to forward request to local or remote downstream service', 'include_SATD': False}, {'start_line': 141, 'end_line': 141, 'comment': '#Look for authentication claims', 'include_SATD': False}, {'start_line': 145, 'end_line': 145, 'comment': '#No claim(s) provided', 'include_SATD': False}, {'start_line': 148, 'end_line': 149, 'comment': '#Configured to allow downstream service to make final decision. #So mark status as Invalid and forward the request downstream', 'include_SATD': False}, {'start_line': 152, 'end_line': 152, 'comment': '#Respond to client as appropriate for this auth protocol', 'include_SATD': False}, {'start_line': 155, 'end_line': 155, 'comment': ""# this request is presenting claims. Let's validate them"", 'include_SATD': False}, {'start_line': 159, 'end_line': 159, 'comment': '# Keystone rejected claim', 'include_SATD': False}, {'start_line': 161, 'end_line': 161, 'comment': '# Downstream service will receive call still and decide', 'include_SATD': False}, {'start_line': 164, 'end_line': 164, 'comment': '#Respond to client as appropriate for this auth protocol', 'include_SATD': False}, {'start_line': 169, 'end_line': 169, 'comment': '#Collect information about valid claims', 'include_SATD': False}, {'start_line': 174, 'end_line': 174, 'comment': '# Store authentication data', 'include_SATD': False}, {'start_line': 176, 'end_line': 177, 'comment': '# TODO(Ziad): add additional details we may need, #             like tenant and group info', 'include_SATD': True}, {'start_line': 193, 'end_line': 193, 'comment': '# NOTE(todd): unused', 'include_SATD': False}, {'start_line': 196, 'end_line': 196, 'comment': '#Send request downstream', 'include_SATD': False}, {'start_line': 199, 'end_line': 200, 'comment': '# NOTE(todd): unused # NOTE(salvatore-orlando): temporarily used again', 'include_SATD': False}, {'start_line': 234, 'end_line': 239, 'comment': '# Step 1: We need to auth with the keystone service, so get an # admin token #TODO(ziad): Need to properly implement this, where to store creds # for now using token from ini #TODO(salvatore-orlando): Temporarily restoring auth token retrieval, # with credentials in configuration file', 'include_SATD': True}, {'start_line': 245, 'end_line': 247, 'comment': ""# Step 2: validate the user's token with the auth service # since this is a priviledged op,m we need to auth ourselves # by using an admin token"", 'include_SATD': False}, {'start_line': 251, 'end_line': 255, 'comment': '##TODO(ziad):we need to figure out how to auth to keystone #since validate_token is a priviledged call #Khaled\'s version uses creds to get a token # ""X-Auth-Token"": admin_token} # we\'re using a test token from the ini file for now', 'include_SATD': True}, {'start_line': 262, 'end_line': 267, 'comment': '# Keystone rejected claim # In case a 404 error it might just be that the token has expired # Therefore try and get a new token # of course assuming admin credentials have been specified # Note(salvatore-orlando): the 404 here is not really # what should be returned', 'include_SATD': False}, {'start_line': 276, 'end_line': 278, 'comment': '#TODO(Ziad): there is an optimization we can do here. We have just #received data from Keystone that we can use instead of making #another call in _expound_claims', 'include_SATD': True}, {'start_line': 283, 'end_line': 284, 'comment': '# Valid token. Get user data and put it in to the call # so the downstream service can use it', 'include_SATD': False}, {'start_line': 288, 'end_line': 292, 'comment': '##TODO(ziad):we need to figure out how to auth to keystone #since validate_token is a priviledged call #Khaled\'s version uses creds to get a token # ""X-Auth-Token"": admin_token} # we\'re using a test token from the ini file for now', 'include_SATD': True}, {'start_line': 304, 'end_line': 305, 'comment': ""#TODO(Ziad): make this more robust #first_group = token_info['auth']['user']['groups']['group'][0]"", 'include_SATD': True}, {'start_line': 316, 'end_line': 318, 'comment': ""# TODO(Ziad): removed groups for now #            ,'group': '%s/%s' % (first_group['id'], #                                first_group['tenantId'])}"", 'include_SATD': True}, {'start_line': 328, 'end_line': 328, 'comment': '#now decide how to pass on the call', 'include_SATD': False}, {'start_line': 330, 'end_line': 330, 'comment': '# Pass to downstream WSGI component', 'include_SATD': False}, {'start_line': 332, 'end_line': 332, 'comment': '#.custom_start_response)', 'include_SATD': False}, {'start_line': 334, 'end_line': 334, 'comment': '# We are forwarding to a remote service (no downstream WSGI app)', 'include_SATD': False}, {'start_line': 345, 'end_line': 346, 'comment': '#TODO(ziad): use a more sophisticated proxy # we are rewriting the headers now', 'include_SATD': True}], 'b_comments': [], 'filename': 'quantum/common/authentication.py'}, {'a_comments': [{'start_line': 0, 'end_line': 16, 'comment': '#!/usr/bin/env python # vim: tabstop=4 shiftwidth=4 softtabstop=4 # # Copyright (c) 2010-2011 OpenStack, LLC. # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # #    httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or # implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 38, 'end_line': 39, 'comment': '#TODO(salvatore-orlando): This class should extend Middleware class # defined in common/wsgi.py', 'include_SATD': True}, {'start_line': 55, 'end_line': 56, 'comment': '# Retrieves TENANT ID from headers as the request # should already have been authenticated with Keystone', 'include_SATD': False}, {'start_line': 60, 'end_line': 60, 'comment': '# This is bad, very bad', 'include_SATD': True}, {'start_line': 67, 'end_line': 67, 'comment': '#TODO (salvatore-orlando): need bound checking here', 'include_SATD': True}, {'start_line': 72, 'end_line': 72, 'comment': '# This is bad, very bad', 'include_SATD': True}, {'start_line': 74, 'end_line': 75, 'comment': '# Are you trying to operate on an attachment? # If yes, you must be Quantum:NetworkAdmin', 'include_SATD': False}, {'start_line': 80, 'end_line': 80, 'comment': '#This is bad as you definetely are not an administrator', 'include_SATD': False}, {'start_line': 85, 'end_line': 85, 'comment': ""# Sorry, you're not and admin"", 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': '# Okay, authorize it - pass downstream', 'include_SATD': False}], 'b_comments': [], 'filename': 'quantum/common/authorization.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/tests/unit/test_cisco_extension.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'tests/unit/test_api.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'doc/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'doc/source/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 14, 'comment': '# -*- coding: utf-8 -*- # Copyright (c) 2010 OpenStack, LLC. # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # #    httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or # implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 16, 'end_line': 27, 'comment': ""# # Keystone documentation build configuration file, created by # sphinx-quickstart on Tue May 18 13:50:15 2010. # # This file is execfile()'d with the current directory set to it's containing # dir. # # Note that not all possible configuration values are present in this # autogenerated file. # # All configuration values have a default; values that are commented out # serve to show the default."", 'include_SATD': False}, {'start_line': 32, 'end_line': 34, 'comment': '# If extensions (or modules to document with autodoc) are in another directory, # add these directories to sys.path here. If the directory is relative to the # documentation root, use os.path.abspath to make it absolute, like shown here.', 'include_SATD': False}, {'start_line': 40, 'end_line': 40, 'comment': '# -- General configuration ---------------------------------------------------', 'include_SATD': False}, {'start_line': 42, 'end_line': 43, 'comment': ""# Add any Sphinx extension module names here, as strings. They can be # extensions coming with Sphinx (named 'sphinx.ext.*') or your custom ones."", 'include_SATD': False}, {'start_line': 54, 'end_line': 54, 'comment': '# Add any paths that contain templates here, relative to this directory.', 'include_SATD': False}, {'start_line': 61, 'end_line': 61, 'comment': '# The suffix of source filenames.', 'include_SATD': False}, {'start_line': 64, 'end_line': 65, 'comment': ""# The encoding of source files. #source_encoding = 'utf-8'"", 'include_SATD': False}, {'start_line': 67, 'end_line': 67, 'comment': '# The master toctree document.', 'include_SATD': False}, {'start_line': 70, 'end_line': 70, 'comment': '# General information about the project.', 'include_SATD': False}, {'start_line': 74, 'end_line': 79, 'comment': ""# The version info for the project you're documenting, acts as replacement for # |version| and |release|, also used in various other places throughout the # built documents. # # Version info # TODO(salvatore-orlando): replace here once Bug #826563 is fixed"", 'include_SATD': True}, {'start_line': 81, 'end_line': 81, 'comment': '# The short X.Y version.', 'include_SATD': False}, {'start_line': 84, 'end_line': 86, 'comment': '# The language for content autogenerated by Sphinx. Refer to documentation # for a list of supported languages. #language = None', 'include_SATD': False}, {'start_line': 88, 'end_line': 92, 'comment': ""# There are two options for replacing |today|: either, you set today to some # non-false value, then it is used: #today = '' # Else, today_fmt is used as the format for a strftime call. #today_fmt = '%B %d, %Y'"", 'include_SATD': False}, {'start_line': 94, 'end_line': 95, 'comment': ""# List of documents that shouldn't be included in the build. #unused_docs = []"", 'include_SATD': False}, {'start_line': 97, 'end_line': 98, 'comment': ""# List of directories, relative to source directory, that shouldn't be searched # for source files."", 'include_SATD': True}, {'start_line': 101, 'end_line': 102, 'comment': '# The reST default role (for this markup: `text`) to use for all documents. #default_role = None', 'include_SATD': False}, {'start_line': 104, 'end_line': 105, 'comment': ""# If true, '()' will be appended to :func: etc. cross-reference text. #add_function_parentheses = True"", 'include_SATD': False}, {'start_line': 107, 'end_line': 109, 'comment': '# If true, the current module name will be prepended to all description # unit titles (such as .. function::). #add_module_names = True', 'include_SATD': False}, {'start_line': 111, 'end_line': 112, 'comment': '# If true, sectionauthor and moduleauthor directives will be shown in the # output. They are ignored by default.', 'include_SATD': False}, {'start_line': 115, 'end_line': 115, 'comment': '# The name of the Pygments (syntax highlighting) style to use.', 'include_SATD': False}, {'start_line': 118, 'end_line': 118, 'comment': '# A list of ignored prefixes for module index sorting.', 'include_SATD': False}, {'start_line': 121, 'end_line': 121, 'comment': '# -- Options for man page output --------------------------------------------', 'include_SATD': False}, {'start_line': 123, 'end_line': 124, 'comment': ""# Grouping the document tree for man pages. # List of tuples 'sourcefile', 'target', u'title', u'Authors name', 'manual'"", 'include_SATD': False}, {'start_line': 126, 'end_line': 129, 'comment': ""#man_pages = [ #    ('man/cli', 'quantum', u'Quantum Command Line Interface', #     [u'OpenStack'], 1) # ]"", 'include_SATD': False}, {'start_line': 132, 'end_line': 132, 'comment': '# -- Options for HTML output -------------------------------------------------', 'include_SATD': False}, {'start_line': 134, 'end_line': 135, 'comment': ""# The theme to use for HTML and HTML Help pages.  Major themes that come with # Sphinx are currently 'default' and 'sphinxdoc'."", 'include_SATD': False}, {'start_line': 139, 'end_line': 142, 'comment': '# Theme options are theme-specific and customize the look and feel of a theme # further.  For a list of options available for each theme, see the # documentation. #html_theme_options = {}', 'include_SATD': False}, {'start_line': 144, 'end_line': 145, 'comment': ""# Add any paths that contain custom themes here, relative to this directory. #html_theme_path = ['_theme']"", 'include_SATD': False}, {'start_line': 147, 'end_line': 149, 'comment': '# The name for this set of Sphinx documents.  If None, it defaults to # ""<project> v<release> documentation"". #html_title = None', 'include_SATD': False}, {'start_line': 151, 'end_line': 152, 'comment': '# A shorter title for the navigation bar.  Default is the same as html_title. #html_short_title = None', 'include_SATD': False}, {'start_line': 154, 'end_line': 156, 'comment': '# The name of an image file (relative to this directory) to place at the top # of the sidebar. #html_logo = None', 'include_SATD': False}, {'start_line': 158, 'end_line': 161, 'comment': '# The name of an image file (within the static path) to use as favicon of the # docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32 # pixels large. #html_favicon = None', 'include_SATD': False}, {'start_line': 163, 'end_line': 165, 'comment': '# Add any paths that contain custom static files (such as style sheets) here, # relative to this directory. They are copied after the builtin static files, # so a file named ""default.css"" will overwrite the builtin ""default.css"".', 'include_SATD': False}, {'start_line': 168, 'end_line': 170, 'comment': ""# If not '', a 'Last updated on:' timestamp is inserted at every page bottom, # using the given strftime format. #html_last_updated_fmt = '%b %d, %Y'"", 'include_SATD': False}, {'start_line': 172, 'end_line': 174, 'comment': '# If true, SmartyPants will be used to convert quotes and dashes to # typographically correct entities. #html_use_smartypants = True', 'include_SATD': False}, {'start_line': 176, 'end_line': 177, 'comment': '# Custom sidebar templates, maps document names to template names. #html_sidebars = {}', 'include_SATD': False}, {'start_line': 179, 'end_line': 181, 'comment': '# Additional templates that should be rendered to pages, maps page names to # template names. #html_additional_pages = {}', 'include_SATD': False}, {'start_line': 183, 'end_line': 184, 'comment': '# If false, no module index is generated. #html_use_modindex = True', 'include_SATD': False}, {'start_line': 186, 'end_line': 187, 'comment': '# If false, no index is generated. #html_use_index = True', 'include_SATD': False}, {'start_line': 189, 'end_line': 190, 'comment': '# If true, the index is split into individual pages for each letter. #html_split_index = False', 'include_SATD': False}, {'start_line': 192, 'end_line': 193, 'comment': '# If true, links to the reST sources are added to the pages. #html_show_sourcelink = True', 'include_SATD': False}, {'start_line': 195, 'end_line': 198, 'comment': ""# If true, an OpenSearch description file will be output, and all pages will # contain a <link> tag referring to it.  The value of this option must be the # base URL from which the finished HTML is served. #html_use_opensearch = ''"", 'include_SATD': False}, {'start_line': 200, 'end_line': 201, 'comment': '# If nonempty, this is the file name suffix for HTML files (e.g. "".xhtml""). #html_file_suffix = \'\'', 'include_SATD': False}, {'start_line': 203, 'end_line': 203, 'comment': '# Output file base name for HTML help builder.', 'include_SATD': False}, {'start_line': 207, 'end_line': 207, 'comment': '# -- Options for LaTeX output ------------------------------------------------', 'include_SATD': False}, {'start_line': 209, 'end_line': 210, 'comment': ""# The paper size ('letter' or 'a4'). #latex_paper_size = 'letter'"", 'include_SATD': False}, {'start_line': 212, 'end_line': 213, 'comment': ""# The font size ('10pt', '11pt' or '12pt'). #latex_font_size = '10pt'"", 'include_SATD': False}, {'start_line': 215, 'end_line': 217, 'comment': '# Grouping the document tree into LaTeX files. List of tuples # (source start file, target name, title, author, # documentclass [howto/manual]).', 'include_SATD': False}, {'start_line': 223, 'end_line': 225, 'comment': '# The name of an image file (relative to this directory) to place at the top of # the title page. #latex_logo = None', 'include_SATD': False}, {'start_line': 227, 'end_line': 229, 'comment': '# For ""manual"" documents, if this is true, then toplevel headings are parts, # not chapters. #latex_use_parts = False', 'include_SATD': False}, {'start_line': 231, 'end_line': 232, 'comment': ""# Additional stuff for the LaTeX preamble. #latex_preamble = ''"", 'include_SATD': False}, {'start_line': 234, 'end_line': 235, 'comment': '# Documents to append as an appendix to all manuals. #latex_appendices = []', 'include_SATD': False}, {'start_line': 237, 'end_line': 238, 'comment': '# If false, no module index is generated. #latex_use_modindex = True', 'include_SATD': False}, {'start_line': 240, 'end_line': 240, 'comment': '# Example configuration for intersphinx: refer to the Python standard library.', 'include_SATD': False}], 'filename': 'doc/source/conf.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'extensions/credential.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'extensions/portprofile.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'extensions/qos.py'}, {'a_comments': [{'start_line': 111, 'end_line': 111, 'comment': '# This will allow us to return a 202 status code.', 'include_SATD': False}], 'b_comments': [{'start_line': 111, 'end_line': 112, 'comment': '# This will allow us to return a 200 status code.  NOTE: in v1.1 we # will be returning a 202 status code.', 'include_SATD': False}], 'filename': 'quantum/api/networks.py'}, {'a_comments': [{'start_line': 120, 'end_line': 120, 'comment': '# This will allow us to return a 202 status code.', 'include_SATD': False}], 'b_comments': [{'start_line': 120, 'end_line': 121, 'comment': '# This will allow us to return a 200 status code.  NOTE: in v1.1 # we will be returning a 202 status code.', 'include_SATD': False}], 'filename': 'quantum/api/ports.py'}, {'a_comments': [{'start_line': 0, 'end_line': 16, 'comment': '#!/usr/bin/env python # vim: tabstop=4 shiftwidth=4 softtabstop=4 # # Copyright (c) 2010-2011 OpenStack, LLC. # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # #    httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or # implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 80, 'end_line': 81, 'comment': '#if app is set, then we are in a WSGI pipeline and requests get passed # on to app. If it is not set, this component should forward requests', 'include_SATD': False}, {'start_line': 83, 'end_line': 85, 'comment': '# where to find the Quantum service (if not in local WSGI chain) # these settings are only used if this component is acting as a proxy # and the OpenSTack service is running remotely', 'include_SATD': False}, {'start_line': 94, 'end_line': 95, 'comment': '# delay_auth_decision means we still allow unauthenticated requests # through and we let the downstream service make the final decision', 'include_SATD': False}, {'start_line': 101, 'end_line': 101, 'comment': '# where to find the auth service (we use this to validate tokens)', 'include_SATD': False}, {'start_line': 110, 'end_line': 111, 'comment': '# Credentials used to verify this component with the Auth service since # validating tokens is a priviledged call', 'include_SATD': False}, {'start_line': 123, 'end_line': 125, 'comment': '#TODO(ziad): maybe we rafactor this into a superclass # Applies to all protocols # Specific to this protocol', 'include_SATD': True}, {'start_line': 134, 'end_line': 134, 'comment': '#Prep headers to forward request to local or remote downstream service', 'include_SATD': False}, {'start_line': 141, 'end_line': 141, 'comment': '#Look for authentication claims', 'include_SATD': False}, {'start_line': 145, 'end_line': 145, 'comment': '#No claim(s) provided', 'include_SATD': False}, {'start_line': 148, 'end_line': 149, 'comment': '#Configured to allow downstream service to make final decision. #So mark status as Invalid and forward the request downstream', 'include_SATD': False}, {'start_line': 152, 'end_line': 152, 'comment': '#Respond to client as appropriate for this auth protocol', 'include_SATD': False}, {'start_line': 155, 'end_line': 155, 'comment': ""# this request is presenting claims. Let's validate them"", 'include_SATD': False}, {'start_line': 159, 'end_line': 159, 'comment': '# Keystone rejected claim', 'include_SATD': False}, {'start_line': 161, 'end_line': 161, 'comment': '# Downstream service will receive call still and decide', 'include_SATD': False}, {'start_line': 164, 'end_line': 164, 'comment': '#Respond to client as appropriate for this auth protocol', 'include_SATD': False}, {'start_line': 169, 'end_line': 169, 'comment': '#Collect information about valid claims', 'include_SATD': False}, {'start_line': 174, 'end_line': 174, 'comment': '# Store authentication data', 'include_SATD': False}, {'start_line': 176, 'end_line': 177, 'comment': '# TODO(Ziad): add additional details we may need, #             like tenant and group info', 'include_SATD': True}, {'start_line': 193, 'end_line': 193, 'comment': '# NOTE(todd): unused', 'include_SATD': False}, {'start_line': 196, 'end_line': 196, 'comment': '#Send request downstream', 'include_SATD': False}, {'start_line': 199, 'end_line': 200, 'comment': '# NOTE(todd): unused # NOTE(salvatore-orlando): temporarily used again', 'include_SATD': False}, {'start_line': 234, 'end_line': 239, 'comment': '# Step 1: We need to auth with the keystone service, so get an # admin token #TODO(ziad): Need to properly implement this, where to store creds # for now using token from ini #TODO(salvatore-orlando): Temporarily restoring auth token retrieval, # with credentials in configuration file', 'include_SATD': True}, {'start_line': 245, 'end_line': 247, 'comment': ""# Step 2: validate the user's token with the auth service # since this is a priviledged op,m we need to auth ourselves # by using an admin token"", 'include_SATD': False}, {'start_line': 251, 'end_line': 255, 'comment': '##TODO(ziad):we need to figure out how to auth to keystone #since validate_token is a priviledged call #Khaled\'s version uses creds to get a token # ""X-Auth-Token"": admin_token} # we\'re using a test token from the ini file for now', 'include_SATD': True}, {'start_line': 262, 'end_line': 267, 'comment': '# Keystone rejected claim # In case a 404 error it might just be that the token has expired # Therefore try and get a new token # of course assuming admin credentials have been specified # Note(salvatore-orlando): the 404 here is not really # what should be returned', 'include_SATD': False}, {'start_line': 276, 'end_line': 278, 'comment': '#TODO(Ziad): there is an optimization we can do here. We have just #received data from Keystone that we can use instead of making #another call in _expound_claims', 'include_SATD': True}, {'start_line': 283, 'end_line': 284, 'comment': '# Valid token. Get user data and put it in to the call # so the downstream service can use it', 'include_SATD': False}, {'start_line': 288, 'end_line': 292, 'comment': '##TODO(ziad):we need to figure out how to auth to keystone #since validate_token is a priviledged call #Khaled\'s version uses creds to get a token # ""X-Auth-Token"": admin_token} # we\'re using a test token from the ini file for now', 'include_SATD': True}, {'start_line': 304, 'end_line': 305, 'comment': ""#TODO(Ziad): make this more robust #first_group = token_info['auth']['user']['groups']['group'][0]"", 'include_SATD': True}, {'start_line': 316, 'end_line': 318, 'comment': ""# TODO(Ziad): removed groups for now #            ,'group': '%s/%s' % (first_group['id'], #                                first_group['tenantId'])}"", 'include_SATD': True}, {'start_line': 328, 'end_line': 328, 'comment': '#now decide how to pass on the call', 'include_SATD': False}, {'start_line': 330, 'end_line': 330, 'comment': '# Pass to downstream WSGI component', 'include_SATD': False}, {'start_line': 332, 'end_line': 332, 'comment': '#.custom_start_response)', 'include_SATD': False}, {'start_line': 334, 'end_line': 334, 'comment': '# We are forwarding to a remote service (no downstream WSGI app)', 'include_SATD': False}, {'start_line': 345, 'end_line': 346, 'comment': '#TODO(ziad): use a more sophisticated proxy # we are rewriting the headers now', 'include_SATD': True}], 'b_comments': [], 'filename': 'quantum/common/authentication.py'}, {'a_comments': [{'start_line': 0, 'end_line': 16, 'comment': '#!/usr/bin/env python # vim: tabstop=4 shiftwidth=4 softtabstop=4 # # Copyright (c) 2010-2011 OpenStack, LLC. # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # #    httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or # implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 38, 'end_line': 39, 'comment': '#TODO(salvatore-orlando): This class should extend Middleware class # defined in common/wsgi.py', 'include_SATD': True}, {'start_line': 55, 'end_line': 56, 'comment': '# Retrieves TENANT ID from headers as the request # should already have been authenticated with Keystone', 'include_SATD': False}, {'start_line': 60, 'end_line': 60, 'comment': '# This is bad, very bad', 'include_SATD': True}, {'start_line': 67, 'end_line': 67, 'comment': '#TODO (salvatore-orlando): need bound checking here', 'include_SATD': True}, {'start_line': 72, 'end_line': 72, 'comment': '# This is bad, very bad', 'include_SATD': True}, {'start_line': 74, 'end_line': 75, 'comment': '# Are you trying to operate on an attachment? # If yes, you must be Quantum:NetworkAdmin', 'include_SATD': False}, {'start_line': 80, 'end_line': 80, 'comment': '#This is bad as you definetely are not an administrator', 'include_SATD': False}, {'start_line': 85, 'end_line': 85, 'comment': ""# Sorry, you're not and admin"", 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': '# Okay, authorize it - pass downstream', 'include_SATD': False}], 'b_comments': [], 'filename': 'quantum/common/authorization.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/tests/unit/test_cisco_extension.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'tests/unit/test_api.py'}]}]",2,2,0,MERGED,True,https://review.opendev.org/#/c/655,Merge from launchpad quantum/diablo branch:,True,"{""# The version info for the project you're documenting, acts as replacement for # |version| and |release|, also used in various other places throughout the # built documents. # # Version info # TODO(salvatore-orlando): replace here once Bug #826563 is fixed"": 1, ""# List of directories, relative to source directory, that shouldn't be searched # for source files."": 1}",True,"{'#TODO(ziad): maybe we rafactor this into a superclass # Applies to all protocols # Specific to this protocol': 1, '# TODO(Ziad): add additional details we may need, #             like tenant and group info': 1, '# Step 1: We need to auth with the keystone service, so get an # admin token #TODO(ziad): Need to properly implement this, where to store creds # for now using token from ini #TODO(salvatore-orlando): Temporarily restoring auth token retrieval, # with credentials in configuration file': 1, '##TODO(ziad):we need to figure out how to auth to keystone #since validate_token is a priviledged call #Khaled\'s version uses creds to get a token # ""X-Auth-Token"": admin_token} # we\'re using a test token from the ini file for now': 1, '#TODO(Ziad): there is an optimization we can do here. We have just #received data from Keystone that we can use instead of making #another call in _expound_claims': 1, ""#TODO(Ziad): make this more robust #first_group = token_info['auth']['user']['groups']['group'][0]"": 1, ""# TODO(Ziad): removed groups for now #            ,'group': '%s/%s' % (first_group['id'], #                                first_group['tenantId'])}"": 1, '#TODO(ziad): use a more sophisticated proxy # we are rewriting the headers now': 1, '#TODO(salvatore-orlando): This class should extend Middleware class # defined in common/wsgi.py': 1, '# This is bad, very bad': 1, '#TODO (salvatore-orlando): need bound checking here': 1}",True,{}
208,686,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_compute.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_compute.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_compute.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_compute.py'}]}]",4,8,2,MERGED,True,https://review.opendev.org/#/c/686,Snapshots/backups can no longer happen simultaneously. Tests included.,True,{},False,{},False,{}
209,678,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 75, 'end_line': 75, 'comment': ""# MySQLdb won't accept 'None' in the password field"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/session.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}]}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/678,Removed db_pool complexities from nova.db.sqlalchemy.session. Fixes bug 838581.,True,{},False,{},False,{}
210,679,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [{'start_line': 428, 'end_line': 428, 'comment': '# pylint: disable=W0702', 'include_SATD': False}], 'b_comments': [{'start_line': 428, 'end_line': 428, 'comment': '# pylint: disable=W0702', 'include_SATD': False}], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_servers.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [{'start_line': 428, 'end_line': 428, 'comment': '# pylint: disable=W0702', 'include_SATD': False}], 'b_comments': [{'start_line': 428, 'end_line': 428, 'comment': '# pylint: disable=W0702', 'include_SATD': False}], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_servers.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [{'start_line': 428, 'end_line': 428, 'comment': '# pylint: disable=W0702', 'include_SATD': False}], 'b_comments': [{'start_line': 428, 'end_line': 428, 'comment': '# pylint: disable=W0702', 'include_SATD': False}], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_servers.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [{'start_line': 438, 'end_line': 438, 'comment': '# pylint: disable=W0702', 'include_SATD': False}], 'b_comments': [{'start_line': 438, 'end_line': 438, 'comment': '# pylint: disable=W0702', 'include_SATD': False}], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_servers.py'}]}, {'revision': 5, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [{'start_line': 438, 'end_line': 438, 'comment': '# pylint: disable=W0702', 'include_SATD': False}], 'b_comments': [{'start_line': 438, 'end_line': 438, 'comment': '# pylint: disable=W0702', 'include_SATD': False}], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_servers.py'}]}]",5,16,4,MERGED,True,https://review.opendev.org/#/c/679,Set error state on spawn error + integration test.,True,{},False,{},False,{}
211,675,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright (c) 2010 Openstack, LLC. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/scheduler/attestation/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010-2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/scheduler/attestation/attestation.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 17, 'comment': '# Copyright (c) 2010 Openstack, LLC. # Copyright 2010 United States Government as represented by the # Administrator of the National Aeronautics and Space Administration. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 58, 'end_line': 58, 'comment': ""# If there's no CA File, don't force Server Certificate Check"", 'include_SATD': False}, {'start_line': 124, 'end_line': 124, 'comment': '# remove any params that are None', 'include_SATD': False}, {'start_line': 139, 'end_line': 139, 'comment': '# query is in body', 'include_SATD': False}, {'start_line': 144, 'end_line': 144, 'comment': ""#c.putheader('Content-type', 'text/json')"", 'include_SATD': False}, {'start_line': 149, 'end_line': 149, 'comment': '#chunk = body.read(self.CHUNKSIZE)', 'include_SATD': False}, {'start_line': 153, 'end_line': 153, 'comment': '# Simple request.through uri', 'include_SATD': False}], 'filename': 'nova/scheduler/attestation/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 17, 'comment': '# Copyright (c) 2010 Openstack, LLC. # Copyright 2010 United States Government as represented by the # Administrator of the National Aeronautics and Space Administration. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 60, 'end_line': 60, 'comment': '# tracks request ids with host list', 'include_SATD': False}, {'start_line': 70, 'end_line': 70, 'comment': '# also read PCR22 in', 'include_SATD': False}, {'start_line': 92, 'end_line': 92, 'comment': '# got result', 'include_SATD': False}, {'start_line': 109, 'end_line': 110, 'comment': '# also read PCR22 in #TODO:  need error handling', 'include_SATD': True}], 'filename': 'nova/scheduler/attestation/service.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/filters/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 13, 'comment': '# Copyright (c) 2011 Openstack, LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 78, 'end_line': 78, 'comment': '# If any succeeded, include the host', 'include_SATD': False}, {'start_line': 89, 'end_line': 89, 'comment': '# If any succeeded, include the host', 'include_SATD': False}], 'filename': 'nova/scheduler/filters/json_filter_integrity.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 17, 'comment': '# Copyright (c) 2010 Openstack, LLC. # Copyright 2010 United States Government as represented by the # Administrator of the National Aeronautics and Space Administration. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 49, 'end_line': 49, 'comment': '# {host: utc}', 'include_SATD': False}, {'start_line': 51, 'end_line': 51, 'comment': '# {host: trust_lvl}', 'include_SATD': False}, {'start_line': 151, 'end_line': 151, 'comment': '#Go attestation to get trust state one-by-one', 'include_SATD': False}], 'filename': 'nova/scheduler/manager_integrity.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 13, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 41, 'end_line': 47, 'comment': ""# Returns host capabilities in the following way: # host1 = memory:free 10 (100max) #         disk:available 100 (1000max) # hostN = memory:free 10 + 10N #         disk:available 100 + 100N # in other words: hostN has more resources than host0 # which means ... don't go above 10 hosts."", 'include_SATD': False}, {'start_line': 102, 'end_line': 102, 'comment': '#self.zone_manager.integrity_service_confirm=self.dummy_reconfirm', 'include_SATD': False}, {'start_line': 104, 'end_line': 104, 'comment': '# filter all hosts that can support 50 ram and 500 disk', 'include_SATD': False}, {'start_line': 218, 'end_line': 218, 'comment': '# Try some bogus input ...', 'include_SATD': False}], 'filename': 'nova/tests/scheduler/test_json_filter_integrity.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 16, 'comment': '# Copyright 2010 United States Government as represented by the # Administrator of the National Aeronautics and Space Administration. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/tests/scheduler/test_manager_integrity.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright (c) 2010 Openstack, LLC. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/scheduler/attestation/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010-2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/scheduler/attestation/attestation.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 17, 'comment': '# Copyright (c) 2010 Openstack, LLC. # Copyright 2010 United States Government as represented by the # Administrator of the National Aeronautics and Space Administration. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 58, 'end_line': 58, 'comment': ""# If there's no CA File, don't force Server Certificate Check"", 'include_SATD': False}, {'start_line': 124, 'end_line': 124, 'comment': '# remove any params that are None', 'include_SATD': False}, {'start_line': 139, 'end_line': 139, 'comment': '# query is in body', 'include_SATD': False}, {'start_line': 144, 'end_line': 144, 'comment': ""#c.putheader('Content-type', 'text/json')"", 'include_SATD': False}, {'start_line': 149, 'end_line': 149, 'comment': '#chunk = body.read(self.CHUNKSIZE)', 'include_SATD': False}, {'start_line': 153, 'end_line': 153, 'comment': '# Simple request.through uri', 'include_SATD': False}], 'filename': 'nova/scheduler/attestation/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 17, 'comment': '# Copyright (c) 2010 Openstack, LLC. # Copyright 2010 United States Government as represented by the # Administrator of the National Aeronautics and Space Administration. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 60, 'end_line': 60, 'comment': '# tracks request ids with host list', 'include_SATD': False}, {'start_line': 70, 'end_line': 70, 'comment': '# also read PCR22 in', 'include_SATD': False}, {'start_line': 92, 'end_line': 92, 'comment': '# got result', 'include_SATD': False}, {'start_line': 109, 'end_line': 110, 'comment': '# also read PCR22 in #TODO:  need error handling', 'include_SATD': True}], 'filename': 'nova/scheduler/attestation/service.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/filters/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 13, 'comment': '# Copyright (c) 2011 Openstack, LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 78, 'end_line': 78, 'comment': '# If any succeeded, include the host', 'include_SATD': False}, {'start_line': 89, 'end_line': 89, 'comment': '# If any succeeded, include the host', 'include_SATD': False}], 'filename': 'nova/scheduler/filters/json_filter_integrity.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 17, 'comment': '# Copyright (c) 2010 Openstack, LLC. # Copyright 2010 United States Government as represented by the # Administrator of the National Aeronautics and Space Administration. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 49, 'end_line': 49, 'comment': '# {host: utc}', 'include_SATD': False}, {'start_line': 51, 'end_line': 51, 'comment': '# {host: trust_lvl}', 'include_SATD': False}, {'start_line': 151, 'end_line': 151, 'comment': '#Go attestation to get trust state one-by-one', 'include_SATD': False}], 'filename': 'nova/scheduler/manager_integrity.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 13, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 41, 'end_line': 47, 'comment': ""# Returns host capabilities in the following way: # host1 = memory:free 10 (100max) #         disk:available 100 (1000max) # hostN = memory:free 10 + 10N #         disk:available 100 + 100N # in other words: hostN has more resources than host0 # which means ... don't go above 10 hosts."", 'include_SATD': False}, {'start_line': 102, 'end_line': 102, 'comment': '#self.zone_manager.integrity_service_confirm=self.dummy_reconfirm', 'include_SATD': False}, {'start_line': 104, 'end_line': 104, 'comment': '# filter all hosts that can support 50 ram and 500 disk', 'include_SATD': False}, {'start_line': 218, 'end_line': 218, 'comment': '# Try some bogus input ...', 'include_SATD': False}], 'filename': 'nova/tests/scheduler/test_json_filter_integrity.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 16, 'comment': '# Copyright 2010 United States Government as represented by the # Administrator of the National Aeronautics and Space Administration. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/tests/scheduler/test_manager_integrity.py'}]}]",2,4,0,ABANDONED,False,https://review.opendev.org/#/c/675,Adds TrustedComputingPools support,True,{'# also read PCR22 in #TODO:  need error handling': 1},True,{},False,{}
212,682,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/auth/signer.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 16, 'comment': '# Copyright 2010 United States Government as represented by the # Administrator of the National Aeronautics and Space Administration. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 38, 'end_line': 39, 'comment': '# S3 Authorization Signing input & output examples taken from here: # httpdocs.amazonwebservices.com/AmazonS3/latest/dev/', 'include_SATD': False}, {'start_line': 64, 'end_line': 64, 'comment': '# Stub out haslib.sha256', 'include_SATD': False}, {'start_line': 68, 'end_line': 68, 'comment': '# Create Signer again now that hashlib.sha256 is None', 'include_SATD': False}], 'filename': 'nova/tests/test_signer.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/auth/signer.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 16, 'comment': '# Copyright 2010 United States Government as represented by the # Administrator of the National Aeronautics and Space Administration. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 38, 'end_line': 39, 'comment': '# S3 Authorization Signing input & output examples taken from here: # httpdocs.amazonwebservices.com/AmazonS3/latest/dev/', 'include_SATD': False}, {'start_line': 64, 'end_line': 64, 'comment': '# Stub out haslib.sha256', 'include_SATD': False}, {'start_line': 68, 'end_line': 68, 'comment': '# Create Signer again now that hashlib.sha256 is None', 'include_SATD': False}], 'filename': 'nova/tests/test_signer.py'}]}]",2,11,6,MERGED,True,https://review.opendev.org/#/c/682,Signer no longer fails if hashlib.sha256 is not available. test_signer unit test added.,True,{},False,{},False,{}
213,681,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 160, 'end_line': 160, 'comment': '# Allowed are still visible', 'include_SATD': False}, {'start_line': 164, 'end_line': 164, 'comment': '# Non-allowed are no longer visible', 'include_SATD': False}, {'start_line': 171, 'end_line': 171, 'comment': '# Allowed are still visible', 'include_SATD': False}, {'start_line': 175, 'end_line': 175, 'comment': '# Non-allowed are no longer visible', 'include_SATD': False}, {'start_line': 182, 'end_line': 182, 'comment': '# Allowed are still visible', 'include_SATD': False}, {'start_line': 186, 'end_line': 186, 'comment': '# Non-allowed are no longer visible', 'include_SATD': False}, {'start_line': 192, 'end_line': 192, 'comment': '# New MyLimited class with no _allowed variable', 'include_SATD': False}, {'start_line': 198, 'end_line': 198, 'comment': '# Nothing in MyProxy object visible now', 'include_SATD': False}], 'filename': 'nova/tests/test_direct.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 160, 'end_line': 160, 'comment': '# Allowed are still visible', 'include_SATD': False}, {'start_line': 164, 'end_line': 164, 'comment': '# Non-allowed are no longer visible', 'include_SATD': False}, {'start_line': 171, 'end_line': 171, 'comment': '# Allowed are still visible', 'include_SATD': False}, {'start_line': 175, 'end_line': 175, 'comment': '# Non-allowed are no longer visible', 'include_SATD': False}, {'start_line': 182, 'end_line': 182, 'comment': '# Allowed are still visible', 'include_SATD': False}, {'start_line': 186, 'end_line': 186, 'comment': '# Non-allowed are no longer visible', 'include_SATD': False}, {'start_line': 192, 'end_line': 192, 'comment': '# New MyLimited class with no _allowed variable', 'include_SATD': False}, {'start_line': 198, 'end_line': 198, 'comment': '# Nothing in MyProxy object visible now', 'include_SATD': False}], 'filename': 'nova/tests/test_direct.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 162, 'end_line': 162, 'comment': '# Allowed are still visible', 'include_SATD': False}, {'start_line': 166, 'end_line': 166, 'comment': '# Non-allowed are no longer visible', 'include_SATD': False}, {'start_line': 173, 'end_line': 173, 'comment': '# Allowed are still visible', 'include_SATD': False}, {'start_line': 177, 'end_line': 177, 'comment': '# Non-allowed are no longer visible', 'include_SATD': False}, {'start_line': 183, 'end_line': 183, 'comment': '# New MyLimited class with no _allowed variable', 'include_SATD': False}, {'start_line': 189, 'end_line': 189, 'comment': '# Nothing in MyProxy object visible now', 'include_SATD': False}], 'filename': 'nova/tests/test_direct.py'}]}]",3,8,0,MERGED,True,https://review.opendev.org/#/c/681,Beef up nova/api/direct.py tests,True,{},False,{},False,{}
214,620,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [{'start_line': 1262, 'end_line': 1263, 'comment': '# TODO(yamahata): # should move check_attach to volume manager?', 'include_SATD': True}, {'start_line': 1301, 'end_line': 1304, 'comment': '# pylint: disable=W0702 # NOTE(vish): The inline callback eats the exception info so we #             log the traceback here and reraise the same #             ecxception below.', 'include_SATD': False}], 'b_comments': [{'start_line': 467, 'end_line': 468, 'comment': '## NOTE(vish): The mapping is passed in so the driver can disconnect ##             from remote volumes if necessary', 'include_SATD': False}, {'start_line': 481, 'end_line': 482, 'comment': ""# FIXME(vish): I've kept the files during stop instance, but #              I think start will fail due to the files still"", 'include_SATD': True}, {'start_line': 520, 'end_line': 520, 'comment': '# NOTE(vish): bdms will be deleted on instance destroy', 'include_SATD': False}, {'start_line': 550, 'end_line': 553, 'comment': ""# FIXME(vish): I've kept the files during stop instance, but #              I think start will fail due to the files still #              existing.  I don't really know what the purpose of #              stop and start are when compared to pause and unpause"", 'include_SATD': True}, {'start_line': 1324, 'end_line': 1324, 'comment': '# pylint: disable=W0702', 'include_SATD': False}, {'start_line': 1326, 'end_line': 1328, 'comment': '# NOTE(vish): The inline callback eats the exception info so we #             log the traceback here and reraise the same #             ecxception below.', 'include_SATD': False}, {'start_line': 1359, 'end_line': 1361, 'comment': ""# NOTE(vish): Comparing as strings because the os_api doesn't #             convert to integer and we may wish to support uuids #             in the future."", 'include_SATD': False}, {'start_line': 1394, 'end_line': 1396, 'comment': ""# NOTE(vish): We don't want to actually mark the volume #             detached, or delete the bdm, just remove the #             connection from this host."", 'include_SATD': False}, {'start_line': 1606, 'end_line': 1608, 'comment': ""# NOTE(vish): We don't want to actually mark the volume #             detached, or delete the bdm, just remove the #             connection from this host."", 'include_SATD': False}, {'start_line': 1733, 'end_line': 1734, 'comment': '# NOTE(vish): The mapping is passed in so the driver can disconnect #             from remote volumes if necessary', 'include_SATD': False}], 'filename': 'nova/compute/manager.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright (c) 2011 VA Linux Systems Japan K.K # Copyright (c) 2011 Isaku Yamahata # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 25, 'end_line': 25, 'comment': '#LOG.debug(_(""terminating bdm %s"") % bdm)', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/compute/utils.py'}, {'a_comments': [{'start_line': 822, 'end_line': 822, 'comment': '###################', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/db/api.py'}, {'a_comments': [{'start_line': 1975, 'end_line': 1975, 'comment': '###################', 'include_SATD': False}, {'start_line': 2122, 'end_line': 2123, 'comment': ""# NOTE(vish): if with_lockmode isn't supported, as in sqlite, #             then this has concurrency issues"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright 2011 University of Southern California # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 22, 'end_line': 22, 'comment': '# Table definition', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/048_kill_export_devices.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.from sqlalchemy import *', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/049_add_connection_info_to_block_device_mapping.py'}, {'a_comments': [], 'b_comments': [{'start_line': 471, 'end_line': 471, 'comment': ""# dur, it's information about the connection!"", 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/rpc/common.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1240, 'end_line': 1241, 'comment': '# NOTE(vish): Wait for InstanceNotFound, then verify that #             the instance is actually deleted.', 'include_SATD': False}], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/fake_flags.py'}, {'a_comments': [{'start_line': 264, 'end_line': 264, 'comment': '# Discover_volume and undiscover_volume are called from compute', 'include_SATD': False}], 'b_comments': [{'start_line': 264, 'end_line': 264, 'comment': '# prepare_attach and prepare_detach are called from compute', 'include_SATD': False}], 'filename': 'nova/tests/integrated/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_scheduler.py'}, {'a_comments': [{'start_line': 818, 'end_line': 818, 'comment': '# mock for volume_api.remove_from_compute', 'include_SATD': False}, {'start_line': 887, 'end_line': 887, 'comment': '# Preparing datas', 'include_SATD': False}, {'start_line': 899, 'end_line': 899, 'comment': '# reload is necessary before setting mocks', 'include_SATD': False}, {'start_line': 902, 'end_line': 902, 'comment': '# Preparing mocks', 'include_SATD': False}, {'start_line': 914, 'end_line': 918, 'comment': '# executing # make sure every data is rewritten to dest', 'include_SATD': False}], 'b_comments': [{'start_line': 647, 'end_line': 647, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 653, 'end_line': 653, 'comment': '# start test', 'include_SATD': False}, {'start_line': 657, 'end_line': 657, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 662, 'end_line': 662, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 668, 'end_line': 668, 'comment': '# creating mocks', 'include_SATD': False}, {'start_line': 682, 'end_line': 682, 'comment': '# start test', 'include_SATD': False}, {'start_line': 687, 'end_line': 687, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 692, 'end_line': 692, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 697, 'end_line': 697, 'comment': '# creating volume testdata', 'include_SATD': False}, {'start_line': 704, 'end_line': 704, 'comment': '# creating mocks', 'include_SATD': False}, {'start_line': 713, 'end_line': 713, 'comment': '# mocks for rollback', 'include_SATD': False}, {'start_line': 720, 'end_line': 720, 'comment': '# start test', 'include_SATD': False}, {'start_line': 726, 'end_line': 726, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 734, 'end_line': 734, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 740, 'end_line': 740, 'comment': '# create', 'include_SATD': False}, {'start_line': 747, 'end_line': 747, 'comment': '# start test', 'include_SATD': False}, {'start_line': 752, 'end_line': 752, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 760, 'end_line': 760, 'comment': '# creating testdata', 'include_SATD': False}, {'start_line': 774, 'end_line': 786, 'comment': '# creating mocks # start test # make sure every data is rewritten to destinatioin hostname.', 'include_SATD': False}], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [{'start_line': 686, 'end_line': 689, 'comment': '#        self.mox.StubOutWithMock(self.compute, ""recover_live_migration"") #        self.compute.recover_live_migration(self.context, instance_ref, #                                             dest=\'dest\')', 'include_SATD': False}], 'b_comments': [{'start_line': 105, 'end_line': 105, 'comment': '# NOTE(vish) exists is to make driver assume connecting worked', 'include_SATD': False}, {'start_line': 801, 'end_line': 801, 'comment': '# Creating testdata', 'include_SATD': False}, {'start_line': 807, 'end_line': 807, 'comment': '# Creating mocks', 'include_SATD': False}, {'start_line': 816, 'end_line': 816, 'comment': '# Starting test', 'include_SATD': False}], 'filename': 'nova/tests/test_libvirt.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_virt_drivers.py'}, {'a_comments': [{'start_line': 318, 'end_line': 318, 'comment': '# each volume has a different mountpoint', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': ""# the first vblade process isn't running"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/test_volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/hyperv.py'}, {'a_comments': [{'start_line': 295, 'end_line': 297, 'comment': '# NOTE(justinsb): We remove the domain definition. We probably # would do better to keep it if cleanup=False (e.g. volumes?) # (e.g. #2 - not losing machines on failure)', 'include_SATD': True}], 'b_comments': [{'start_line': 307, 'end_line': 309, 'comment': '# NOTE(justinsb): We remove the domain definition. We probably # would do better to keep it if cleanup=False (e.g. volumes?) # (e.g. #2 - not losing machines on failure)', 'include_SATD': True}, {'start_line': 339, 'end_line': 339, 'comment': '# NOTE(vish): we disconnect from volumes regardless', 'include_SATD': False}, {'start_line': 406, 'end_line': 408, 'comment': ""# NOTE(vish): This is called to cleanup volumes after live migration, #             so we should still logout even if the instance doesn't #             exist here anymore."", 'include_SATD': False}, {'start_line': 1740, 'end_line': 1740, 'comment': '# Establishing connection to volume server.', 'include_SATD': False}], 'filename': 'nova/virt/libvirt/connection.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 87, 'end_line': 89, 'comment': ""# NOTE(vish): if we are on the same host as nova volume, the #             discovery makes the target so we don't need to #             run --op new"", 'include_SATD': False}, {'start_line': 113, 'end_line': 114, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 125, 'end_line': 125, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}], 'filename': 'nova/virt/libvirt/volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/vmwareapi_conn.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/volume_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/volumeops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/api.py'}, {'a_comments': [{'start_line': 233, 'end_line': 233, 'comment': '# NOTE(vish): we depend on vblade-persist for recreating exports', 'include_SATD': False}, {'start_line': 261, 'end_line': 267, 'comment': '# NOTE(vish): The standard _try_execute does not work here #             because these methods throw errors if other #             volumes on this host are in the process of #             being created.  The good news is the command #             still works for the other volumes, so we #             just wait a bit for the current volume to #             be ready and ignore any errors.', 'include_SATD': False}, {'start_line': 317, 'end_line': 317, 'comment': '# Instance will be terminated in this case.', 'include_SATD': False}, {'start_line': 547, 'end_line': 548, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 559, 'end_line': 559, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}], 'b_comments': [{'start_line': 768, 'end_line': 769, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 780, 'end_line': 780, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}, {'start_line': 801, 'end_line': 803, 'comment': '# NOTE(vish): Copied discover from iscsi_driver since it is used #             but this should probably be refactored into a common #             area because it is used in libvirt driver.', 'include_SATD': True}], 'filename': 'nova/volume/driver.py'}, {'a_comments': [], 'b_comments': [{'start_line': 236, 'end_line': 236, 'comment': '# TODO(vish): refactor this into a more general ""reserve""', 'include_SATD': True}, {'start_line': 244, 'end_line': 244, 'comment': '# TODO(vish): refactor this into a more general ""unreserve""', 'include_SATD': True}], 'filename': 'nova/volume/manager.py'}, {'a_comments': [{'start_line': 63, 'end_line': 64, 'comment': '# discover_volume is still OK # undiscover_volume is still OK', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/volume/san.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [{'start_line': 1262, 'end_line': 1263, 'comment': '# TODO(yamahata): # should move check_attach to volume manager?', 'include_SATD': True}, {'start_line': 1301, 'end_line': 1304, 'comment': '# pylint: disable=W0702 # NOTE(vish): The inline callback eats the exception info so we #             log the traceback here and reraise the same #             ecxception below.', 'include_SATD': False}], 'b_comments': [{'start_line': 467, 'end_line': 468, 'comment': '## NOTE(vish): The mapping is passed in so the driver can disconnect ##             from remote volumes if necessary', 'include_SATD': False}, {'start_line': 481, 'end_line': 482, 'comment': ""# FIXME(vish): I've kept the files during stop instance, but #              I think start will fail due to the files still"", 'include_SATD': True}, {'start_line': 520, 'end_line': 520, 'comment': '# NOTE(vish): bdms will be deleted on instance destroy', 'include_SATD': False}, {'start_line': 550, 'end_line': 553, 'comment': ""# FIXME(vish): I've kept the files during stop instance, but #              I think start will fail due to the files still #              existing.  I don't really know what the purpose of #              stop and start are when compared to pause and unpause"", 'include_SATD': True}, {'start_line': 1324, 'end_line': 1324, 'comment': '# pylint: disable=W0702', 'include_SATD': False}, {'start_line': 1326, 'end_line': 1328, 'comment': '# NOTE(vish): The inline callback eats the exception info so we #             log the traceback here and reraise the same #             ecxception below.', 'include_SATD': False}, {'start_line': 1359, 'end_line': 1361, 'comment': ""# NOTE(vish): Comparing as strings because the os_api doesn't #             convert to integer and we may wish to support uuids #             in the future."", 'include_SATD': False}, {'start_line': 1394, 'end_line': 1396, 'comment': ""# NOTE(vish): We don't want to actually mark the volume #             detached, or delete the bdm, just remove the #             connection from this host."", 'include_SATD': False}, {'start_line': 1606, 'end_line': 1608, 'comment': ""# NOTE(vish): We don't want to actually mark the volume #             detached, or delete the bdm, just remove the #             connection from this host."", 'include_SATD': False}, {'start_line': 1733, 'end_line': 1734, 'comment': '# NOTE(vish): The mapping is passed in so the driver can disconnect #             from remote volumes if necessary', 'include_SATD': False}], 'filename': 'nova/compute/manager.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright (c) 2011 VA Linux Systems Japan K.K # Copyright (c) 2011 Isaku Yamahata # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 25, 'end_line': 25, 'comment': '#LOG.debug(_(""terminating bdm %s"") % bdm)', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/compute/utils.py'}, {'a_comments': [{'start_line': 822, 'end_line': 822, 'comment': '###################', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/db/api.py'}, {'a_comments': [{'start_line': 1975, 'end_line': 1975, 'comment': '###################', 'include_SATD': False}, {'start_line': 2122, 'end_line': 2123, 'comment': ""# NOTE(vish): if with_lockmode isn't supported, as in sqlite, #             then this has concurrency issues"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright 2011 University of Southern California # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 22, 'end_line': 22, 'comment': '# Table definition', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/048_kill_export_devices.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.from sqlalchemy import *', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/049_add_connection_info_to_block_device_mapping.py'}, {'a_comments': [], 'b_comments': [{'start_line': 471, 'end_line': 471, 'comment': ""# dur, it's information about the connection!"", 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/rpc/common.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1240, 'end_line': 1241, 'comment': '# NOTE(vish): Wait for InstanceNotFound, then verify that #             the instance is actually deleted.', 'include_SATD': False}], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/fake_flags.py'}, {'a_comments': [{'start_line': 264, 'end_line': 264, 'comment': '# Discover_volume and undiscover_volume are called from compute', 'include_SATD': False}], 'b_comments': [{'start_line': 264, 'end_line': 264, 'comment': '# prepare_attach and prepare_detach are called from compute', 'include_SATD': False}], 'filename': 'nova/tests/integrated/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_scheduler.py'}, {'a_comments': [{'start_line': 818, 'end_line': 818, 'comment': '# mock for volume_api.remove_from_compute', 'include_SATD': False}, {'start_line': 887, 'end_line': 887, 'comment': '# Preparing datas', 'include_SATD': False}, {'start_line': 899, 'end_line': 899, 'comment': '# reload is necessary before setting mocks', 'include_SATD': False}, {'start_line': 902, 'end_line': 902, 'comment': '# Preparing mocks', 'include_SATD': False}, {'start_line': 914, 'end_line': 918, 'comment': '# executing # make sure every data is rewritten to dest', 'include_SATD': False}], 'b_comments': [{'start_line': 647, 'end_line': 647, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 653, 'end_line': 653, 'comment': '# start test', 'include_SATD': False}, {'start_line': 657, 'end_line': 657, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 662, 'end_line': 662, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 668, 'end_line': 668, 'comment': '# creating mocks', 'include_SATD': False}, {'start_line': 682, 'end_line': 682, 'comment': '# start test', 'include_SATD': False}, {'start_line': 687, 'end_line': 687, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 692, 'end_line': 692, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 697, 'end_line': 697, 'comment': '# creating volume testdata', 'include_SATD': False}, {'start_line': 704, 'end_line': 704, 'comment': '# creating mocks', 'include_SATD': False}, {'start_line': 713, 'end_line': 713, 'comment': '# mocks for rollback', 'include_SATD': False}, {'start_line': 720, 'end_line': 720, 'comment': '# start test', 'include_SATD': False}, {'start_line': 726, 'end_line': 726, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 734, 'end_line': 734, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 740, 'end_line': 740, 'comment': '# create', 'include_SATD': False}, {'start_line': 747, 'end_line': 747, 'comment': '# start test', 'include_SATD': False}, {'start_line': 752, 'end_line': 752, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 760, 'end_line': 760, 'comment': '# creating testdata', 'include_SATD': False}, {'start_line': 774, 'end_line': 786, 'comment': '# creating mocks # start test # make sure every data is rewritten to destinatioin hostname.', 'include_SATD': False}], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [{'start_line': 686, 'end_line': 689, 'comment': '#        self.mox.StubOutWithMock(self.compute, ""recover_live_migration"") #        self.compute.recover_live_migration(self.context, instance_ref, #                                             dest=\'dest\')', 'include_SATD': False}], 'b_comments': [{'start_line': 105, 'end_line': 105, 'comment': '# NOTE(vish) exists is to make driver assume connecting worked', 'include_SATD': False}, {'start_line': 801, 'end_line': 801, 'comment': '# Creating testdata', 'include_SATD': False}, {'start_line': 807, 'end_line': 807, 'comment': '# Creating mocks', 'include_SATD': False}, {'start_line': 816, 'end_line': 816, 'comment': '# Starting test', 'include_SATD': False}], 'filename': 'nova/tests/test_libvirt.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_virt_drivers.py'}, {'a_comments': [{'start_line': 318, 'end_line': 318, 'comment': '# each volume has a different mountpoint', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': ""# the first vblade process isn't running"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/test_volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/hyperv.py'}, {'a_comments': [{'start_line': 295, 'end_line': 297, 'comment': '# NOTE(justinsb): We remove the domain definition. We probably # would do better to keep it if cleanup=False (e.g. volumes?) # (e.g. #2 - not losing machines on failure)', 'include_SATD': True}], 'b_comments': [{'start_line': 307, 'end_line': 309, 'comment': '# NOTE(justinsb): We remove the domain definition. We probably # would do better to keep it if cleanup=False (e.g. volumes?) # (e.g. #2 - not losing machines on failure)', 'include_SATD': True}, {'start_line': 339, 'end_line': 339, 'comment': '# NOTE(vish): we disconnect from volumes regardless', 'include_SATD': False}, {'start_line': 406, 'end_line': 408, 'comment': ""# NOTE(vish): This is called to cleanup volumes after live migration, #             so we should still logout even if the instance doesn't #             exist here anymore."", 'include_SATD': False}, {'start_line': 1740, 'end_line': 1740, 'comment': '# Establishing connection to volume server.', 'include_SATD': False}], 'filename': 'nova/virt/libvirt/connection.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 87, 'end_line': 89, 'comment': ""# NOTE(vish): if we are on the same host as nova volume, the #             discovery makes the target so we don't need to #             run --op new"", 'include_SATD': False}, {'start_line': 113, 'end_line': 114, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 125, 'end_line': 125, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}], 'filename': 'nova/virt/libvirt/volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/vmwareapi_conn.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/volume_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/volumeops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/api.py'}, {'a_comments': [{'start_line': 233, 'end_line': 233, 'comment': '# NOTE(vish): we depend on vblade-persist for recreating exports', 'include_SATD': False}, {'start_line': 261, 'end_line': 267, 'comment': '# NOTE(vish): The standard _try_execute does not work here #             because these methods throw errors if other #             volumes on this host are in the process of #             being created.  The good news is the command #             still works for the other volumes, so we #             just wait a bit for the current volume to #             be ready and ignore any errors.', 'include_SATD': False}, {'start_line': 317, 'end_line': 317, 'comment': '# Instance will be terminated in this case.', 'include_SATD': False}, {'start_line': 547, 'end_line': 548, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 559, 'end_line': 559, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}], 'b_comments': [{'start_line': 768, 'end_line': 769, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 780, 'end_line': 780, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}, {'start_line': 801, 'end_line': 803, 'comment': '# NOTE(vish): Copied discover from iscsi_driver since it is used #             but this should probably be refactored into a common #             area because it is used in libvirt driver.', 'include_SATD': True}], 'filename': 'nova/volume/driver.py'}, {'a_comments': [], 'b_comments': [{'start_line': 236, 'end_line': 236, 'comment': '# TODO(vish): refactor this into a more general ""reserve""', 'include_SATD': True}, {'start_line': 244, 'end_line': 244, 'comment': '# TODO(vish): refactor this into a more general ""unreserve""', 'include_SATD': True}], 'filename': 'nova/volume/manager.py'}, {'a_comments': [{'start_line': 63, 'end_line': 64, 'comment': '# discover_volume is still OK # undiscover_volume is still OK', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/volume/san.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [{'start_line': 1262, 'end_line': 1263, 'comment': '# TODO(yamahata): # should move check_attach to volume manager?', 'include_SATD': True}, {'start_line': 1301, 'end_line': 1304, 'comment': '# pylint: disable=W0702 # NOTE(vish): The inline callback eats the exception info so we #             log the traceback here and reraise the same #             ecxception below.', 'include_SATD': False}], 'b_comments': [{'start_line': 467, 'end_line': 468, 'comment': '## NOTE(vish): The mapping is passed in so the driver can disconnect ##             from remote volumes if necessary', 'include_SATD': False}, {'start_line': 481, 'end_line': 482, 'comment': ""# FIXME(vish): I've kept the files during stop instance, but #              I think start will fail due to the files still"", 'include_SATD': True}, {'start_line': 520, 'end_line': 520, 'comment': '# NOTE(vish): bdms will be deleted on instance destroy', 'include_SATD': False}, {'start_line': 550, 'end_line': 553, 'comment': ""# FIXME(vish): I've kept the files during stop instance, but #              I think start will fail due to the files still #              existing.  I don't really know what the purpose of #              stop and start are when compared to pause and unpause"", 'include_SATD': True}, {'start_line': 1324, 'end_line': 1324, 'comment': '# pylint: disable=W0702', 'include_SATD': False}, {'start_line': 1326, 'end_line': 1328, 'comment': '# NOTE(vish): The inline callback eats the exception info so we #             log the traceback here and reraise the same #             ecxception below.', 'include_SATD': False}, {'start_line': 1359, 'end_line': 1361, 'comment': ""# NOTE(vish): Comparing as strings because the os_api doesn't #             convert to integer and we may wish to support uuids #             in the future."", 'include_SATD': False}, {'start_line': 1394, 'end_line': 1396, 'comment': ""# NOTE(vish): We don't want to actually mark the volume #             detached, or delete the bdm, just remove the #             connection from this host."", 'include_SATD': False}, {'start_line': 1606, 'end_line': 1608, 'comment': ""# NOTE(vish): We don't want to actually mark the volume #             detached, or delete the bdm, just remove the #             connection from this host."", 'include_SATD': False}, {'start_line': 1733, 'end_line': 1734, 'comment': '# NOTE(vish): The mapping is passed in so the driver can disconnect #             from remote volumes if necessary', 'include_SATD': False}], 'filename': 'nova/compute/manager.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright (c) 2011 VA Linux Systems Japan K.K # Copyright (c) 2011 Isaku Yamahata # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 25, 'end_line': 25, 'comment': '#LOG.debug(_(""terminating bdm %s"") % bdm)', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/compute/utils.py'}, {'a_comments': [{'start_line': 827, 'end_line': 827, 'comment': '###################', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/db/api.py'}, {'a_comments': [{'start_line': 1992, 'end_line': 1992, 'comment': '###################', 'include_SATD': False}, {'start_line': 2139, 'end_line': 2140, 'comment': ""# NOTE(vish): if with_lockmode isn't supported, as in sqlite, #             then this has concurrency issues"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright 2011 University of Southern California # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 22, 'end_line': 22, 'comment': '# Table definition', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/050_kill_export_devices.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.from sqlalchemy import *', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/051_add_connection_info_to_block_device_mapping.py'}, {'a_comments': [], 'b_comments': [{'start_line': 471, 'end_line': 471, 'comment': ""# dur, it's information about the connection!"", 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/rpc/common.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1240, 'end_line': 1241, 'comment': '# NOTE(vish): Wait for InstanceNotFound, then verify that #             the instance is actually deleted.', 'include_SATD': False}], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/fake_flags.py'}, {'a_comments': [{'start_line': 265, 'end_line': 265, 'comment': '# Discover_volume and undiscover_volume are called from compute', 'include_SATD': False}], 'b_comments': [{'start_line': 265, 'end_line': 265, 'comment': '# prepare_attach and prepare_detach are called from compute', 'include_SATD': False}], 'filename': 'nova/tests/integrated/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_scheduler.py'}, {'a_comments': [{'start_line': 819, 'end_line': 819, 'comment': '# mock for volume_api.remove_from_compute', 'include_SATD': False}, {'start_line': 888, 'end_line': 888, 'comment': '# Preparing datas', 'include_SATD': False}, {'start_line': 900, 'end_line': 900, 'comment': '# reload is necessary before setting mocks', 'include_SATD': False}, {'start_line': 903, 'end_line': 903, 'comment': '# Preparing mocks', 'include_SATD': False}, {'start_line': 915, 'end_line': 919, 'comment': '# executing # make sure every data is rewritten to dest', 'include_SATD': False}], 'b_comments': [{'start_line': 648, 'end_line': 648, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 654, 'end_line': 654, 'comment': '# start test', 'include_SATD': False}, {'start_line': 658, 'end_line': 658, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 663, 'end_line': 663, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 669, 'end_line': 669, 'comment': '# creating mocks', 'include_SATD': False}, {'start_line': 683, 'end_line': 683, 'comment': '# start test', 'include_SATD': False}, {'start_line': 688, 'end_line': 688, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 693, 'end_line': 693, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 698, 'end_line': 698, 'comment': '# creating volume testdata', 'include_SATD': False}, {'start_line': 705, 'end_line': 705, 'comment': '# creating mocks', 'include_SATD': False}, {'start_line': 714, 'end_line': 714, 'comment': '# mocks for rollback', 'include_SATD': False}, {'start_line': 721, 'end_line': 721, 'comment': '# start test', 'include_SATD': False}, {'start_line': 727, 'end_line': 727, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 735, 'end_line': 735, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 741, 'end_line': 741, 'comment': '# create', 'include_SATD': False}, {'start_line': 748, 'end_line': 748, 'comment': '# start test', 'include_SATD': False}, {'start_line': 753, 'end_line': 753, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 761, 'end_line': 761, 'comment': '# creating testdata', 'include_SATD': False}, {'start_line': 775, 'end_line': 787, 'comment': '# creating mocks # start test # make sure every data is rewritten to destinatioin hostname.', 'include_SATD': False}], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [{'start_line': 686, 'end_line': 689, 'comment': '#        self.mox.StubOutWithMock(self.compute, ""recover_live_migration"") #        self.compute.recover_live_migration(self.context, instance_ref, #                                             dest=\'dest\')', 'include_SATD': False}], 'b_comments': [{'start_line': 105, 'end_line': 105, 'comment': '# NOTE(vish) exists is to make driver assume connecting worked', 'include_SATD': False}, {'start_line': 801, 'end_line': 801, 'comment': '# Creating testdata', 'include_SATD': False}, {'start_line': 807, 'end_line': 807, 'comment': '# Creating mocks', 'include_SATD': False}, {'start_line': 816, 'end_line': 816, 'comment': '# Starting test', 'include_SATD': False}], 'filename': 'nova/tests/test_libvirt.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_virt_drivers.py'}, {'a_comments': [{'start_line': 318, 'end_line': 318, 'comment': '# each volume has a different mountpoint', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': ""# the first vblade process isn't running"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/test_volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/hyperv.py'}, {'a_comments': [{'start_line': 295, 'end_line': 297, 'comment': '# NOTE(justinsb): We remove the domain definition. We probably # would do better to keep it if cleanup=False (e.g. volumes?) # (e.g. #2 - not losing machines on failure)', 'include_SATD': True}], 'b_comments': [{'start_line': 307, 'end_line': 309, 'comment': '# NOTE(justinsb): We remove the domain definition. We probably # would do better to keep it if cleanup=False (e.g. volumes?) # (e.g. #2 - not losing machines on failure)', 'include_SATD': True}, {'start_line': 339, 'end_line': 339, 'comment': '# NOTE(vish): we disconnect from volumes regardless', 'include_SATD': False}, {'start_line': 406, 'end_line': 408, 'comment': ""# NOTE(vish): This is called to cleanup volumes after live migration, #             so we should still logout even if the instance doesn't #             exist here anymore."", 'include_SATD': False}, {'start_line': 1740, 'end_line': 1740, 'comment': '# Establishing connection to volume server.', 'include_SATD': False}], 'filename': 'nova/virt/libvirt/connection.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 87, 'end_line': 89, 'comment': ""# NOTE(vish): if we are on the same host as nova volume, the #             discovery makes the target so we don't need to #             run --op new"", 'include_SATD': False}, {'start_line': 113, 'end_line': 114, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 125, 'end_line': 125, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}], 'filename': 'nova/virt/libvirt/volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/vmwareapi_conn.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/volume_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/volumeops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/api.py'}, {'a_comments': [{'start_line': 233, 'end_line': 233, 'comment': '# NOTE(vish): we depend on vblade-persist for recreating exports', 'include_SATD': False}, {'start_line': 261, 'end_line': 267, 'comment': '# NOTE(vish): The standard _try_execute does not work here #             because these methods throw errors if other #             volumes on this host are in the process of #             being created.  The good news is the command #             still works for the other volumes, so we #             just wait a bit for the current volume to #             be ready and ignore any errors.', 'include_SATD': False}, {'start_line': 317, 'end_line': 317, 'comment': '# Instance will be terminated in this case.', 'include_SATD': False}, {'start_line': 547, 'end_line': 548, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 559, 'end_line': 559, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}], 'b_comments': [{'start_line': 768, 'end_line': 769, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 780, 'end_line': 780, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}, {'start_line': 801, 'end_line': 803, 'comment': '# NOTE(vish): Copied discover from iscsi_driver since it is used #             but this should probably be refactored into a common #             area because it is used in libvirt driver.', 'include_SATD': True}], 'filename': 'nova/volume/driver.py'}, {'a_comments': [], 'b_comments': [{'start_line': 236, 'end_line': 236, 'comment': '# TODO(vish): refactor this into a more general ""reserve""', 'include_SATD': True}, {'start_line': 244, 'end_line': 244, 'comment': '# TODO(vish): refactor this into a more general ""unreserve""', 'include_SATD': True}], 'filename': 'nova/volume/manager.py'}, {'a_comments': [{'start_line': 63, 'end_line': 64, 'comment': '# discover_volume is still OK # undiscover_volume is still OK', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/volume/san.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [{'start_line': 1262, 'end_line': 1263, 'comment': '# TODO(yamahata): # should move check_attach to volume manager?', 'include_SATD': True}, {'start_line': 1301, 'end_line': 1304, 'comment': '# pylint: disable=W0702 # NOTE(vish): The inline callback eats the exception info so we #             log the traceback here and reraise the same #             ecxception below.', 'include_SATD': False}], 'b_comments': [{'start_line': 467, 'end_line': 468, 'comment': '## NOTE(vish): The mapping is passed in so the driver can disconnect ##             from remote volumes if necessary', 'include_SATD': False}, {'start_line': 481, 'end_line': 482, 'comment': ""# FIXME(vish): I've kept the files during stop instance, but #              I think start will fail due to the files still"", 'include_SATD': True}, {'start_line': 520, 'end_line': 520, 'comment': '# NOTE(vish): bdms will be deleted on instance destroy', 'include_SATD': False}, {'start_line': 550, 'end_line': 553, 'comment': ""# FIXME(vish): I've kept the files during stop instance, but #              I think start will fail due to the files still #              existing.  I don't really know what the purpose of #              stop and start are when compared to pause and unpause"", 'include_SATD': True}, {'start_line': 1324, 'end_line': 1324, 'comment': '# pylint: disable=W0702', 'include_SATD': False}, {'start_line': 1326, 'end_line': 1328, 'comment': '# NOTE(vish): The inline callback eats the exception info so we #             log the traceback here and reraise the same #             ecxception below.', 'include_SATD': False}, {'start_line': 1359, 'end_line': 1361, 'comment': ""# NOTE(vish): Comparing as strings because the os_api doesn't #             convert to integer and we may wish to support uuids #             in the future."", 'include_SATD': False}, {'start_line': 1394, 'end_line': 1396, 'comment': ""# NOTE(vish): We don't want to actually mark the volume #             detached, or delete the bdm, just remove the #             connection from this host."", 'include_SATD': False}, {'start_line': 1606, 'end_line': 1608, 'comment': ""# NOTE(vish): We don't want to actually mark the volume #             detached, or delete the bdm, just remove the #             connection from this host."", 'include_SATD': False}, {'start_line': 1733, 'end_line': 1734, 'comment': '# NOTE(vish): The mapping is passed in so the driver can disconnect #             from remote volumes if necessary', 'include_SATD': False}], 'filename': 'nova/compute/manager.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright (c) 2011 VA Linux Systems Japan K.K # Copyright (c) 2011 Isaku Yamahata # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 25, 'end_line': 25, 'comment': '#LOG.debug(_(""terminating bdm %s"") % bdm)', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/compute/utils.py'}, {'a_comments': [{'start_line': 827, 'end_line': 827, 'comment': '###################', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/db/api.py'}, {'a_comments': [{'start_line': 1992, 'end_line': 1992, 'comment': '###################', 'include_SATD': False}, {'start_line': 2139, 'end_line': 2140, 'comment': ""# NOTE(vish): if with_lockmode isn't supported, as in sqlite, #             then this has concurrency issues"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright 2011 University of Southern California # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 22, 'end_line': 22, 'comment': '# Table definition', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/050_kill_export_devices.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.from sqlalchemy import *', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/051_add_connection_info_to_block_device_mapping.py'}, {'a_comments': [], 'b_comments': [{'start_line': 471, 'end_line': 471, 'comment': ""# dur, it's information about the connection!"", 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/rpc/common.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1240, 'end_line': 1241, 'comment': '# NOTE(vish): Wait for InstanceNotFound, then verify that #             the instance is actually deleted.', 'include_SATD': False}], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/fake_flags.py'}, {'a_comments': [{'start_line': 265, 'end_line': 265, 'comment': '# Discover_volume and undiscover_volume are called from compute', 'include_SATD': False}], 'b_comments': [{'start_line': 265, 'end_line': 265, 'comment': '# prepare_attach and prepare_detach are called from compute', 'include_SATD': False}], 'filename': 'nova/tests/integrated/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_scheduler.py'}, {'a_comments': [{'start_line': 819, 'end_line': 819, 'comment': '# mock for volume_api.remove_from_compute', 'include_SATD': False}, {'start_line': 888, 'end_line': 888, 'comment': '# Preparing datas', 'include_SATD': False}, {'start_line': 900, 'end_line': 900, 'comment': '# reload is necessary before setting mocks', 'include_SATD': False}, {'start_line': 903, 'end_line': 903, 'comment': '# Preparing mocks', 'include_SATD': False}, {'start_line': 915, 'end_line': 919, 'comment': '# executing # make sure every data is rewritten to dest', 'include_SATD': False}], 'b_comments': [{'start_line': 648, 'end_line': 648, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 654, 'end_line': 654, 'comment': '# start test', 'include_SATD': False}, {'start_line': 658, 'end_line': 658, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 663, 'end_line': 663, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 669, 'end_line': 669, 'comment': '# creating mocks', 'include_SATD': False}, {'start_line': 683, 'end_line': 683, 'comment': '# start test', 'include_SATD': False}, {'start_line': 688, 'end_line': 688, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 693, 'end_line': 693, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 698, 'end_line': 698, 'comment': '# creating volume testdata', 'include_SATD': False}, {'start_line': 705, 'end_line': 705, 'comment': '# creating mocks', 'include_SATD': False}, {'start_line': 714, 'end_line': 714, 'comment': '# mocks for rollback', 'include_SATD': False}, {'start_line': 721, 'end_line': 721, 'comment': '# start test', 'include_SATD': False}, {'start_line': 727, 'end_line': 727, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 735, 'end_line': 735, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 741, 'end_line': 741, 'comment': '# create', 'include_SATD': False}, {'start_line': 748, 'end_line': 748, 'comment': '# start test', 'include_SATD': False}, {'start_line': 753, 'end_line': 753, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 761, 'end_line': 761, 'comment': '# creating testdata', 'include_SATD': False}, {'start_line': 775, 'end_line': 787, 'comment': '# creating mocks # start test # make sure every data is rewritten to destinatioin hostname.', 'include_SATD': False}], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [{'start_line': 686, 'end_line': 689, 'comment': '#        self.mox.StubOutWithMock(self.compute, ""recover_live_migration"") #        self.compute.recover_live_migration(self.context, instance_ref, #                                             dest=\'dest\')', 'include_SATD': False}], 'b_comments': [{'start_line': 105, 'end_line': 105, 'comment': '# NOTE(vish) exists is to make driver assume connecting worked', 'include_SATD': False}, {'start_line': 801, 'end_line': 801, 'comment': '# Creating testdata', 'include_SATD': False}, {'start_line': 807, 'end_line': 807, 'comment': '# Creating mocks', 'include_SATD': False}, {'start_line': 816, 'end_line': 816, 'comment': '# Starting test', 'include_SATD': False}], 'filename': 'nova/tests/test_libvirt.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_virt_drivers.py'}, {'a_comments': [{'start_line': 318, 'end_line': 318, 'comment': '# each volume has a different mountpoint', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': ""# the first vblade process isn't running"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/test_volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/hyperv.py'}, {'a_comments': [{'start_line': 295, 'end_line': 297, 'comment': '# NOTE(justinsb): We remove the domain definition. We probably # would do better to keep it if cleanup=False (e.g. volumes?) # (e.g. #2 - not losing machines on failure)', 'include_SATD': True}], 'b_comments': [{'start_line': 307, 'end_line': 309, 'comment': '# NOTE(justinsb): We remove the domain definition. We probably # would do better to keep it if cleanup=False (e.g. volumes?) # (e.g. #2 - not losing machines on failure)', 'include_SATD': True}, {'start_line': 339, 'end_line': 339, 'comment': '# NOTE(vish): we disconnect from volumes regardless', 'include_SATD': False}, {'start_line': 406, 'end_line': 408, 'comment': ""# NOTE(vish): This is called to cleanup volumes after live migration, #             so we should still logout even if the instance doesn't #             exist here anymore."", 'include_SATD': False}, {'start_line': 1740, 'end_line': 1740, 'comment': '# Establishing connection to volume server.', 'include_SATD': False}], 'filename': 'nova/virt/libvirt/connection.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 87, 'end_line': 89, 'comment': ""# NOTE(vish): if we are on the same host as nova volume, the #             discovery makes the target so we don't need to #             run --op new"", 'include_SATD': False}, {'start_line': 113, 'end_line': 114, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 125, 'end_line': 125, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}], 'filename': 'nova/virt/libvirt/volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/vmwareapi_conn.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/volume_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/volumeops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/api.py'}, {'a_comments': [{'start_line': 233, 'end_line': 233, 'comment': '# NOTE(vish): we depend on vblade-persist for recreating exports', 'include_SATD': False}, {'start_line': 261, 'end_line': 267, 'comment': '# NOTE(vish): The standard _try_execute does not work here #             because these methods throw errors if other #             volumes on this host are in the process of #             being created.  The good news is the command #             still works for the other volumes, so we #             just wait a bit for the current volume to #             be ready and ignore any errors.', 'include_SATD': False}, {'start_line': 317, 'end_line': 317, 'comment': '# Instance will be terminated in this case.', 'include_SATD': False}, {'start_line': 547, 'end_line': 548, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 559, 'end_line': 559, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}], 'b_comments': [{'start_line': 768, 'end_line': 769, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 780, 'end_line': 780, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}, {'start_line': 801, 'end_line': 803, 'comment': '# NOTE(vish): Copied discover from iscsi_driver since it is used #             but this should probably be refactored into a common #             area because it is used in libvirt driver.', 'include_SATD': True}], 'filename': 'nova/volume/driver.py'}, {'a_comments': [], 'b_comments': [{'start_line': 236, 'end_line': 236, 'comment': '# TODO(vish): refactor this into a more general ""reserve""', 'include_SATD': True}, {'start_line': 244, 'end_line': 244, 'comment': '# TODO(vish): refactor this into a more general ""unreserve""', 'include_SATD': True}], 'filename': 'nova/volume/manager.py'}, {'a_comments': [{'start_line': 63, 'end_line': 64, 'comment': '# discover_volume is still OK # undiscover_volume is still OK', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/volume/san.py'}]}, {'revision': 5, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [{'start_line': 1260, 'end_line': 1261, 'comment': '# TODO(yamahata): # should move check_attach to volume manager?', 'include_SATD': True}, {'start_line': 1299, 'end_line': 1302, 'comment': '# pylint: disable=W0702 # NOTE(vish): The inline callback eats the exception info so we #             log the traceback here and reraise the same #             ecxception below.', 'include_SATD': False}], 'b_comments': [{'start_line': 465, 'end_line': 466, 'comment': '## NOTE(vish): The mapping is passed in so the driver can disconnect ##             from remote volumes if necessary', 'include_SATD': False}, {'start_line': 479, 'end_line': 480, 'comment': ""# FIXME(vish): I've kept the files during stop instance, but #              I think start will fail due to the files still"", 'include_SATD': True}, {'start_line': 518, 'end_line': 518, 'comment': '# NOTE(vish): bdms will be deleted on instance destroy', 'include_SATD': False}, {'start_line': 548, 'end_line': 551, 'comment': ""# FIXME(vish): I've kept the files during stop instance, but #              I think start will fail due to the files still #              existing.  I don't really know what the purpose of #              stop and start are when compared to pause and unpause"", 'include_SATD': True}, {'start_line': 1322, 'end_line': 1322, 'comment': '# pylint: disable=W0702', 'include_SATD': False}, {'start_line': 1324, 'end_line': 1326, 'comment': '# NOTE(vish): The inline callback eats the exception info so we #             log the traceback here and reraise the same #             ecxception below.', 'include_SATD': False}, {'start_line': 1357, 'end_line': 1359, 'comment': ""# NOTE(vish): Comparing as strings because the os_api doesn't #             convert to integer and we may wish to support uuids #             in the future."", 'include_SATD': False}, {'start_line': 1392, 'end_line': 1394, 'comment': ""# NOTE(vish): We don't want to actually mark the volume #             detached, or delete the bdm, just remove the #             connection from this host."", 'include_SATD': False}, {'start_line': 1604, 'end_line': 1606, 'comment': ""# NOTE(vish): We don't want to actually mark the volume #             detached, or delete the bdm, just remove the #             connection from this host."", 'include_SATD': False}, {'start_line': 1731, 'end_line': 1732, 'comment': '# NOTE(vish): The mapping is passed in so the driver can disconnect #             from remote volumes if necessary', 'include_SATD': False}], 'filename': 'nova/compute/manager.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright (c) 2011 VA Linux Systems Japan K.K # Copyright (c) 2011 Isaku Yamahata # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 25, 'end_line': 25, 'comment': '#LOG.debug(_(""terminating bdm %s"") % bdm)', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/compute/utils.py'}, {'a_comments': [{'start_line': 827, 'end_line': 827, 'comment': '###################', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/db/api.py'}, {'a_comments': [{'start_line': 2004, 'end_line': 2004, 'comment': '###################', 'include_SATD': False}, {'start_line': 2151, 'end_line': 2152, 'comment': ""# NOTE(vish): if with_lockmode isn't supported, as in sqlite, #             then this has concurrency issues"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright 2011 University of Southern California # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 22, 'end_line': 22, 'comment': '# Table definition', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/050_kill_export_devices.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.from sqlalchemy import *', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/051_add_connection_info_to_block_device_mapping.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/rpc/common.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1317, 'end_line': 1318, 'comment': '# NOTE(vish): Wait for InstanceNotFound, then verify that #             the instance is actually deleted.', 'include_SATD': False}], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/fake_flags.py'}, {'a_comments': [{'start_line': 265, 'end_line': 265, 'comment': '# Discover_volume and undiscover_volume are called from compute', 'include_SATD': False}], 'b_comments': [{'start_line': 265, 'end_line': 265, 'comment': '# prepare_attach and prepare_detach are called from compute', 'include_SATD': False}], 'filename': 'nova/tests/integrated/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_scheduler.py'}, {'a_comments': [{'start_line': 885, 'end_line': 885, 'comment': '# mock for volume_api.remove_from_compute', 'include_SATD': False}, {'start_line': 954, 'end_line': 954, 'comment': '# Preparing datas', 'include_SATD': False}, {'start_line': 966, 'end_line': 966, 'comment': '# reload is necessary before setting mocks', 'include_SATD': False}, {'start_line': 969, 'end_line': 969, 'comment': '# Preparing mocks', 'include_SATD': False}, {'start_line': 981, 'end_line': 985, 'comment': '# executing # make sure every data is rewritten to dest', 'include_SATD': False}], 'b_comments': [{'start_line': 714, 'end_line': 714, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 720, 'end_line': 720, 'comment': '# start test', 'include_SATD': False}, {'start_line': 724, 'end_line': 724, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 729, 'end_line': 729, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 735, 'end_line': 735, 'comment': '# creating mocks', 'include_SATD': False}, {'start_line': 749, 'end_line': 749, 'comment': '# start test', 'include_SATD': False}, {'start_line': 754, 'end_line': 754, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 759, 'end_line': 759, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 764, 'end_line': 764, 'comment': '# creating volume testdata', 'include_SATD': False}, {'start_line': 771, 'end_line': 771, 'comment': '# creating mocks', 'include_SATD': False}, {'start_line': 780, 'end_line': 780, 'comment': '# mocks for rollback', 'include_SATD': False}, {'start_line': 787, 'end_line': 787, 'comment': '# start test', 'include_SATD': False}, {'start_line': 793, 'end_line': 793, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 801, 'end_line': 801, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 807, 'end_line': 807, 'comment': '# create', 'include_SATD': False}, {'start_line': 814, 'end_line': 814, 'comment': '# start test', 'include_SATD': False}, {'start_line': 819, 'end_line': 819, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 827, 'end_line': 827, 'comment': '# creating testdata', 'include_SATD': False}, {'start_line': 841, 'end_line': 853, 'comment': '# creating mocks # start test # make sure every data is rewritten to destinatioin hostname.', 'include_SATD': False}], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [{'start_line': 686, 'end_line': 689, 'comment': '#        self.mox.StubOutWithMock(self.compute, ""recover_live_migration"") #        self.compute.recover_live_migration(self.context, instance_ref, #                                             dest=\'dest\')', 'include_SATD': False}], 'b_comments': [{'start_line': 105, 'end_line': 105, 'comment': '# NOTE(vish) exists is to make driver assume connecting worked', 'include_SATD': False}, {'start_line': 801, 'end_line': 801, 'comment': '# Creating testdata', 'include_SATD': False}, {'start_line': 807, 'end_line': 807, 'comment': '# Creating mocks', 'include_SATD': False}, {'start_line': 816, 'end_line': 816, 'comment': '# Starting test', 'include_SATD': False}], 'filename': 'nova/tests/test_libvirt.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_virt_drivers.py'}, {'a_comments': [{'start_line': 318, 'end_line': 318, 'comment': '# each volume has a different mountpoint', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': ""# the first vblade process isn't running"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/test_volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/hyperv.py'}, {'a_comments': [{'start_line': 295, 'end_line': 297, 'comment': '# NOTE(justinsb): We remove the domain definition. We probably # would do better to keep it if cleanup=False (e.g. volumes?) # (e.g. #2 - not losing machines on failure)', 'include_SATD': True}], 'b_comments': [{'start_line': 307, 'end_line': 309, 'comment': '# NOTE(justinsb): We remove the domain definition. We probably # would do better to keep it if cleanup=False (e.g. volumes?) # (e.g. #2 - not losing machines on failure)', 'include_SATD': True}, {'start_line': 339, 'end_line': 339, 'comment': '# NOTE(vish): we disconnect from volumes regardless', 'include_SATD': False}, {'start_line': 406, 'end_line': 408, 'comment': ""# NOTE(vish): This is called to cleanup volumes after live migration, #             so we should still logout even if the instance doesn't #             exist here anymore."", 'include_SATD': False}, {'start_line': 1742, 'end_line': 1742, 'comment': '# Establishing connection to volume server.', 'include_SATD': False}], 'filename': 'nova/virt/libvirt/connection.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 87, 'end_line': 89, 'comment': ""# NOTE(vish): if we are on the same host as nova volume, the #             discovery makes the target so we don't need to #             run --op new"", 'include_SATD': False}, {'start_line': 113, 'end_line': 114, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 125, 'end_line': 125, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}], 'filename': 'nova/virt/libvirt/volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/vmwareapi_conn.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/volume_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/volumeops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/api.py'}, {'a_comments': [{'start_line': 233, 'end_line': 233, 'comment': '# NOTE(vish): we depend on vblade-persist for recreating exports', 'include_SATD': False}, {'start_line': 261, 'end_line': 267, 'comment': '# NOTE(vish): The standard _try_execute does not work here #             because these methods throw errors if other #             volumes on this host are in the process of #             being created.  The good news is the command #             still works for the other volumes, so we #             just wait a bit for the current volume to #             be ready and ignore any errors.', 'include_SATD': False}, {'start_line': 317, 'end_line': 317, 'comment': '# Instance will be terminated in this case.', 'include_SATD': False}, {'start_line': 547, 'end_line': 548, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 559, 'end_line': 559, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}], 'b_comments': [{'start_line': 785, 'end_line': 786, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 797, 'end_line': 797, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}, {'start_line': 818, 'end_line': 820, 'comment': '# NOTE(vish): Copied discover from iscsi_driver since it is used #             but this should probably be refactored into a common #             area because it is used in libvirt driver.', 'include_SATD': True}], 'filename': 'nova/volume/driver.py'}, {'a_comments': [], 'b_comments': [{'start_line': 236, 'end_line': 236, 'comment': '# TODO(vish): refactor this into a more general ""reserve""', 'include_SATD': True}, {'start_line': 244, 'end_line': 244, 'comment': '# TODO(vish): refactor this into a more general ""unreserve""', 'include_SATD': True}], 'filename': 'nova/volume/manager.py'}, {'a_comments': [{'start_line': 63, 'end_line': 64, 'comment': '# discover_volume is still OK # undiscover_volume is still OK', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/volume/san.py'}]}, {'revision': 6, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [{'start_line': 1260, 'end_line': 1261, 'comment': '# TODO(yamahata): # should move check_attach to volume manager?', 'include_SATD': True}, {'start_line': 1299, 'end_line': 1302, 'comment': '# pylint: disable=W0702 # NOTE(vish): The inline callback eats the exception info so we #             log the traceback here and reraise the same #             ecxception below.', 'include_SATD': False}], 'b_comments': [{'start_line': 465, 'end_line': 466, 'comment': '## NOTE(vish): The mapping is passed in so the driver can disconnect ##             from remote volumes if necessary', 'include_SATD': False}, {'start_line': 479, 'end_line': 480, 'comment': ""# FIXME(vish): I've kept the files during stop instance, but #              I think start will fail due to the files still"", 'include_SATD': True}, {'start_line': 518, 'end_line': 518, 'comment': '# NOTE(vish): bdms will be deleted on instance destroy', 'include_SATD': False}, {'start_line': 548, 'end_line': 551, 'comment': ""# FIXME(vish): I've kept the files during stop instance, but #              I think start will fail due to the files still #              existing.  I don't really know what the purpose of #              stop and start are when compared to pause and unpause"", 'include_SATD': True}, {'start_line': 1322, 'end_line': 1322, 'comment': '# pylint: disable=W0702', 'include_SATD': False}, {'start_line': 1324, 'end_line': 1326, 'comment': '# NOTE(vish): The inline callback eats the exception info so we #             log the traceback here and reraise the same #             ecxception below.', 'include_SATD': False}, {'start_line': 1357, 'end_line': 1359, 'comment': ""# NOTE(vish): Comparing as strings because the os_api doesn't #             convert to integer and we may wish to support uuids #             in the future."", 'include_SATD': False}, {'start_line': 1392, 'end_line': 1394, 'comment': ""# NOTE(vish): We don't want to actually mark the volume #             detached, or delete the bdm, just remove the #             connection from this host."", 'include_SATD': False}, {'start_line': 1604, 'end_line': 1606, 'comment': ""# NOTE(vish): We don't want to actually mark the volume #             detached, or delete the bdm, just remove the #             connection from this host."", 'include_SATD': False}, {'start_line': 1731, 'end_line': 1732, 'comment': '# NOTE(vish): The mapping is passed in so the driver can disconnect #             from remote volumes if necessary', 'include_SATD': False}], 'filename': 'nova/compute/manager.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright (c) 2011 VA Linux Systems Japan K.K # Copyright (c) 2011 Isaku Yamahata # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 25, 'end_line': 25, 'comment': '#LOG.debug(_(""terminating bdm %s"") % bdm)', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/compute/utils.py'}, {'a_comments': [{'start_line': 827, 'end_line': 827, 'comment': '###################', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/db/api.py'}, {'a_comments': [{'start_line': 2004, 'end_line': 2004, 'comment': '###################', 'include_SATD': False}, {'start_line': 2151, 'end_line': 2152, 'comment': ""# NOTE(vish): if with_lockmode isn't supported, as in sqlite, #             then this has concurrency issues"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright 2011 University of Southern California # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 22, 'end_line': 22, 'comment': '# Table definition', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/051_kill_export_devices.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.from sqlalchemy import *', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/052_add_connection_info_to_block_device_mapping.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/rpc/common.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1317, 'end_line': 1318, 'comment': '# NOTE(vish): Wait for InstanceNotFound, then verify that #             the instance is actually deleted.', 'include_SATD': False}], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/fake_flags.py'}, {'a_comments': [{'start_line': 265, 'end_line': 265, 'comment': '# Discover_volume and undiscover_volume are called from compute', 'include_SATD': False}], 'b_comments': [{'start_line': 265, 'end_line': 265, 'comment': '# prepare_attach and prepare_detach are called from compute', 'include_SATD': False}], 'filename': 'nova/tests/integrated/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_scheduler.py'}, {'a_comments': [{'start_line': 885, 'end_line': 885, 'comment': '# mock for volume_api.remove_from_compute', 'include_SATD': False}, {'start_line': 954, 'end_line': 954, 'comment': '# Preparing datas', 'include_SATD': False}, {'start_line': 966, 'end_line': 966, 'comment': '# reload is necessary before setting mocks', 'include_SATD': False}, {'start_line': 969, 'end_line': 969, 'comment': '# Preparing mocks', 'include_SATD': False}, {'start_line': 981, 'end_line': 985, 'comment': '# executing # make sure every data is rewritten to dest', 'include_SATD': False}], 'b_comments': [{'start_line': 714, 'end_line': 714, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 720, 'end_line': 720, 'comment': '# start test', 'include_SATD': False}, {'start_line': 724, 'end_line': 724, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 729, 'end_line': 729, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 735, 'end_line': 735, 'comment': '# creating mocks', 'include_SATD': False}, {'start_line': 749, 'end_line': 749, 'comment': '# start test', 'include_SATD': False}, {'start_line': 754, 'end_line': 754, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 759, 'end_line': 759, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 764, 'end_line': 764, 'comment': '# creating volume testdata', 'include_SATD': False}, {'start_line': 771, 'end_line': 771, 'comment': '# creating mocks', 'include_SATD': False}, {'start_line': 780, 'end_line': 780, 'comment': '# mocks for rollback', 'include_SATD': False}, {'start_line': 787, 'end_line': 787, 'comment': '# start test', 'include_SATD': False}, {'start_line': 793, 'end_line': 793, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 801, 'end_line': 801, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 807, 'end_line': 807, 'comment': '# create', 'include_SATD': False}, {'start_line': 814, 'end_line': 814, 'comment': '# start test', 'include_SATD': False}, {'start_line': 819, 'end_line': 819, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 827, 'end_line': 827, 'comment': '# creating testdata', 'include_SATD': False}, {'start_line': 841, 'end_line': 853, 'comment': '# creating mocks # start test # make sure every data is rewritten to destinatioin hostname.', 'include_SATD': False}], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [], 'b_comments': [{'start_line': 105, 'end_line': 105, 'comment': '# NOTE(vish) exists is to make driver assume connecting worked', 'include_SATD': False}, {'start_line': 804, 'end_line': 804, 'comment': '# Creating testdata', 'include_SATD': False}, {'start_line': 810, 'end_line': 810, 'comment': '# Creating mocks', 'include_SATD': False}, {'start_line': 819, 'end_line': 819, 'comment': '# Starting test', 'include_SATD': False}], 'filename': 'nova/tests/test_libvirt.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_virt_drivers.py'}, {'a_comments': [{'start_line': 318, 'end_line': 318, 'comment': '# each volume has a different mountpoint', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': ""# the first vblade process isn't running"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/test_volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/hyperv.py'}, {'a_comments': [{'start_line': 295, 'end_line': 297, 'comment': '# NOTE(justinsb): We remove the domain definition. We probably # would do better to keep it if cleanup=False (e.g. volumes?) # (e.g. #2 - not losing machines on failure)', 'include_SATD': True}], 'b_comments': [{'start_line': 307, 'end_line': 309, 'comment': '# NOTE(justinsb): We remove the domain definition. We probably # would do better to keep it if cleanup=False (e.g. volumes?) # (e.g. #2 - not losing machines on failure)', 'include_SATD': True}, {'start_line': 339, 'end_line': 339, 'comment': '# NOTE(vish): we disconnect from volumes regardless', 'include_SATD': False}, {'start_line': 406, 'end_line': 408, 'comment': ""# NOTE(vish): This is called to cleanup volumes after live migration, #             so we should still logout even if the instance doesn't #             exist here anymore."", 'include_SATD': False}, {'start_line': 1742, 'end_line': 1742, 'comment': '# Establishing connection to volume server.', 'include_SATD': False}], 'filename': 'nova/virt/libvirt/connection.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 87, 'end_line': 89, 'comment': ""# NOTE(vish): if we are on the same host as nova volume, the #             discovery makes the target so we don't need to #             run --op new"", 'include_SATD': False}, {'start_line': 113, 'end_line': 114, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 125, 'end_line': 125, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}], 'filename': 'nova/virt/libvirt/volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/vmwareapi_conn.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/volume_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/volumeops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/api.py'}, {'a_comments': [{'start_line': 233, 'end_line': 233, 'comment': '# NOTE(vish): we depend on vblade-persist for recreating exports', 'include_SATD': False}, {'start_line': 261, 'end_line': 267, 'comment': '# NOTE(vish): The standard _try_execute does not work here #             because these methods throw errors if other #             volumes on this host are in the process of #             being created.  The good news is the command #             still works for the other volumes, so we #             just wait a bit for the current volume to #             be ready and ignore any errors.', 'include_SATD': False}, {'start_line': 317, 'end_line': 317, 'comment': '# Instance will be terminated in this case.', 'include_SATD': False}, {'start_line': 547, 'end_line': 548, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 559, 'end_line': 559, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}], 'b_comments': [{'start_line': 785, 'end_line': 786, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 797, 'end_line': 797, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}, {'start_line': 818, 'end_line': 820, 'comment': '# NOTE(vish): Copied discover from iscsi_driver since it is used #             but this should probably be refactored into a common #             area because it is used in libvirt driver.', 'include_SATD': True}], 'filename': 'nova/volume/driver.py'}, {'a_comments': [], 'b_comments': [{'start_line': 236, 'end_line': 236, 'comment': '# TODO(vish): refactor this into a more general ""reserve""', 'include_SATD': True}, {'start_line': 244, 'end_line': 244, 'comment': '# TODO(vish): refactor this into a more general ""unreserve""', 'include_SATD': True}], 'filename': 'nova/volume/manager.py'}, {'a_comments': [{'start_line': 63, 'end_line': 64, 'comment': '# discover_volume is still OK # undiscover_volume is still OK', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/volume/san.py'}]}, {'revision': 7, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [{'start_line': 1286, 'end_line': 1287, 'comment': '# TODO(yamahata): # should move check_attach to volume manager?', 'include_SATD': True}, {'start_line': 1325, 'end_line': 1328, 'comment': '# pylint: disable=W0702 # NOTE(vish): The inline callback eats the exception info so we #             log the traceback here and reraise the same #             ecxception below.', 'include_SATD': False}], 'b_comments': [{'start_line': 491, 'end_line': 492, 'comment': '## NOTE(vish): The mapping is passed in so the driver can disconnect ##             from remote volumes if necessary', 'include_SATD': False}, {'start_line': 505, 'end_line': 506, 'comment': ""# FIXME(vish): I've kept the files during stop instance, but #              I think start will fail due to the files still"", 'include_SATD': True}, {'start_line': 544, 'end_line': 544, 'comment': '# NOTE(vish): bdms will be deleted on instance destroy', 'include_SATD': False}, {'start_line': 574, 'end_line': 577, 'comment': ""# FIXME(vish): I've kept the files during stop instance, but #              I think start will fail due to the files still #              existing.  I don't really know what the purpose of #              stop and start are when compared to pause and unpause"", 'include_SATD': True}, {'start_line': 1348, 'end_line': 1348, 'comment': '# pylint: disable=W0702', 'include_SATD': False}, {'start_line': 1350, 'end_line': 1352, 'comment': '# NOTE(vish): The inline callback eats the exception info so we #             log the traceback here and reraise the same #             ecxception below.', 'include_SATD': False}, {'start_line': 1383, 'end_line': 1385, 'comment': ""# NOTE(vish): Comparing as strings because the os_api doesn't #             convert to integer and we may wish to support uuids #             in the future."", 'include_SATD': False}, {'start_line': 1418, 'end_line': 1420, 'comment': ""# NOTE(vish): We don't want to actually mark the volume #             detached, or delete the bdm, just remove the #             connection from this host."", 'include_SATD': False}, {'start_line': 1630, 'end_line': 1632, 'comment': ""# NOTE(vish): We don't want to actually mark the volume #             detached, or delete the bdm, just remove the #             connection from this host."", 'include_SATD': False}, {'start_line': 1757, 'end_line': 1758, 'comment': '# NOTE(vish): The mapping is passed in so the driver can disconnect #             from remote volumes if necessary', 'include_SATD': False}], 'filename': 'nova/compute/manager.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright (c) 2011 VA Linux Systems Japan K.K # Copyright (c) 2011 Isaku Yamahata # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 25, 'end_line': 25, 'comment': '#LOG.debug(_(""terminating bdm %s"") % bdm)', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/compute/utils.py'}, {'a_comments': [{'start_line': 827, 'end_line': 827, 'comment': '###################', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/db/api.py'}, {'a_comments': [{'start_line': 2004, 'end_line': 2004, 'comment': '###################', 'include_SATD': False}, {'start_line': 2151, 'end_line': 2152, 'comment': ""# NOTE(vish): if with_lockmode isn't supported, as in sqlite, #             then this has concurrency issues"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright 2011 University of Southern California # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 22, 'end_line': 22, 'comment': '# Table definition', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/051_kill_export_devices.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.from sqlalchemy import *', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/052_add_connection_info_to_block_device_mapping.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/rpc/common.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1317, 'end_line': 1318, 'comment': '# NOTE(vish): Wait for InstanceNotFound, then verify that #             the instance is actually deleted.', 'include_SATD': False}], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/fake_flags.py'}, {'a_comments': [{'start_line': 265, 'end_line': 265, 'comment': '# Discover_volume and undiscover_volume are called from compute', 'include_SATD': False}], 'b_comments': [{'start_line': 265, 'end_line': 265, 'comment': '# prepare_attach and prepare_detach are called from compute', 'include_SATD': False}], 'filename': 'nova/tests/integrated/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_scheduler.py'}, {'a_comments': [{'start_line': 885, 'end_line': 885, 'comment': '# mock for volume_api.remove_from_compute', 'include_SATD': False}, {'start_line': 954, 'end_line': 954, 'comment': '# Preparing datas', 'include_SATD': False}, {'start_line': 966, 'end_line': 966, 'comment': '# reload is necessary before setting mocks', 'include_SATD': False}, {'start_line': 969, 'end_line': 969, 'comment': '# Preparing mocks', 'include_SATD': False}, {'start_line': 981, 'end_line': 985, 'comment': '# executing # make sure every data is rewritten to dest', 'include_SATD': False}], 'b_comments': [{'start_line': 714, 'end_line': 714, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 720, 'end_line': 720, 'comment': '# start test', 'include_SATD': False}, {'start_line': 724, 'end_line': 724, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 729, 'end_line': 729, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 735, 'end_line': 735, 'comment': '# creating mocks', 'include_SATD': False}, {'start_line': 749, 'end_line': 749, 'comment': '# start test', 'include_SATD': False}, {'start_line': 754, 'end_line': 754, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 759, 'end_line': 759, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 764, 'end_line': 764, 'comment': '# creating volume testdata', 'include_SATD': False}, {'start_line': 771, 'end_line': 771, 'comment': '# creating mocks', 'include_SATD': False}, {'start_line': 780, 'end_line': 780, 'comment': '# mocks for rollback', 'include_SATD': False}, {'start_line': 787, 'end_line': 787, 'comment': '# start test', 'include_SATD': False}, {'start_line': 793, 'end_line': 793, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 801, 'end_line': 801, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 807, 'end_line': 807, 'comment': '# create', 'include_SATD': False}, {'start_line': 814, 'end_line': 814, 'comment': '# start test', 'include_SATD': False}, {'start_line': 819, 'end_line': 819, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 827, 'end_line': 827, 'comment': '# creating testdata', 'include_SATD': False}, {'start_line': 841, 'end_line': 853, 'comment': '# creating mocks # start test # make sure every data is rewritten to destinatioin hostname.', 'include_SATD': False}], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [], 'b_comments': [{'start_line': 105, 'end_line': 105, 'comment': '# NOTE(vish) exists is to make driver assume connecting worked', 'include_SATD': False}, {'start_line': 804, 'end_line': 804, 'comment': '# Creating testdata', 'include_SATD': False}, {'start_line': 810, 'end_line': 810, 'comment': '# Creating mocks', 'include_SATD': False}, {'start_line': 819, 'end_line': 819, 'comment': '# Starting test', 'include_SATD': False}], 'filename': 'nova/tests/test_libvirt.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_virt_drivers.py'}, {'a_comments': [{'start_line': 318, 'end_line': 318, 'comment': '# each volume has a different mountpoint', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': ""# the first vblade process isn't running"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/test_volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/hyperv.py'}, {'a_comments': [{'start_line': 295, 'end_line': 297, 'comment': '# NOTE(justinsb): We remove the domain definition. We probably # would do better to keep it if cleanup=False (e.g. volumes?) # (e.g. #2 - not losing machines on failure)', 'include_SATD': True}], 'b_comments': [{'start_line': 307, 'end_line': 309, 'comment': '# NOTE(justinsb): We remove the domain definition. We probably # would do better to keep it if cleanup=False (e.g. volumes?) # (e.g. #2 - not losing machines on failure)', 'include_SATD': True}, {'start_line': 339, 'end_line': 339, 'comment': '# NOTE(vish): we disconnect from volumes regardless', 'include_SATD': False}, {'start_line': 406, 'end_line': 408, 'comment': ""# NOTE(vish): This is called to cleanup volumes after live migration, #             so we should still logout even if the instance doesn't #             exist here anymore."", 'include_SATD': False}, {'start_line': 1742, 'end_line': 1742, 'comment': '# Establishing connection to volume server.', 'include_SATD': False}], 'filename': 'nova/virt/libvirt/connection.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 87, 'end_line': 89, 'comment': ""# NOTE(vish): if we are on the same host as nova volume, the #             discovery makes the target so we don't need to #             run --op new"", 'include_SATD': False}, {'start_line': 113, 'end_line': 114, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 125, 'end_line': 125, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}], 'filename': 'nova/virt/libvirt/volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/vmwareapi_conn.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/volume_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/volumeops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/api.py'}, {'a_comments': [{'start_line': 233, 'end_line': 233, 'comment': '# NOTE(vish): we depend on vblade-persist for recreating exports', 'include_SATD': False}, {'start_line': 261, 'end_line': 267, 'comment': '# NOTE(vish): The standard _try_execute does not work here #             because these methods throw errors if other #             volumes on this host are in the process of #             being created.  The good news is the command #             still works for the other volumes, so we #             just wait a bit for the current volume to #             be ready and ignore any errors.', 'include_SATD': False}, {'start_line': 317, 'end_line': 317, 'comment': '# Instance will be terminated in this case.', 'include_SATD': False}, {'start_line': 547, 'end_line': 548, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 559, 'end_line': 559, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}], 'b_comments': [{'start_line': 785, 'end_line': 786, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 797, 'end_line': 797, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}, {'start_line': 818, 'end_line': 820, 'comment': '# NOTE(vish): Copied discover from iscsi_driver since it is used #             but this should probably be refactored into a common #             area because it is used in libvirt driver.', 'include_SATD': True}], 'filename': 'nova/volume/driver.py'}, {'a_comments': [], 'b_comments': [{'start_line': 236, 'end_line': 236, 'comment': '# TODO(vish): refactor this into a more general ""reserve""', 'include_SATD': True}, {'start_line': 244, 'end_line': 244, 'comment': '# TODO(vish): refactor this into a more general ""unreserve""', 'include_SATD': True}], 'filename': 'nova/volume/manager.py'}, {'a_comments': [{'start_line': 63, 'end_line': 64, 'comment': '# discover_volume is still OK # undiscover_volume is still OK', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/volume/san.py'}]}, {'revision': 8, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [{'start_line': 1285, 'end_line': 1286, 'comment': '# TODO(yamahata): # should move check_attach to volume manager?', 'include_SATD': True}, {'start_line': 1324, 'end_line': 1327, 'comment': '# pylint: disable=W0702 # NOTE(vish): The inline callback eats the exception info so we #             log the traceback here and reraise the same #             ecxception below.', 'include_SATD': False}], 'b_comments': [{'start_line': 490, 'end_line': 491, 'comment': '## NOTE(vish): The mapping is passed in so the driver can disconnect ##             from remote volumes if necessary', 'include_SATD': False}, {'start_line': 504, 'end_line': 505, 'comment': ""# FIXME(vish): I've kept the files during stop instance, but #              I think start will fail due to the files still"", 'include_SATD': True}, {'start_line': 543, 'end_line': 543, 'comment': '# NOTE(vish): bdms will be deleted on instance destroy', 'include_SATD': False}, {'start_line': 573, 'end_line': 576, 'comment': ""# FIXME(vish): I've kept the files during stop instance, but #              I think start will fail due to the files still #              existing.  I don't really know what the purpose of #              stop and start are when compared to pause and unpause"", 'include_SATD': True}, {'start_line': 1347, 'end_line': 1347, 'comment': '# pylint: disable=W0702', 'include_SATD': False}, {'start_line': 1349, 'end_line': 1351, 'comment': '# NOTE(vish): The inline callback eats the exception info so we #             log the traceback here and reraise the same #             ecxception below.', 'include_SATD': False}, {'start_line': 1382, 'end_line': 1384, 'comment': ""# NOTE(vish): Comparing as strings because the os_api doesn't #             convert to integer and we may wish to support uuids #             in the future."", 'include_SATD': False}, {'start_line': 1417, 'end_line': 1419, 'comment': ""# NOTE(vish): We don't want to actually mark the volume #             detached, or delete the bdm, just remove the #             connection from this host."", 'include_SATD': False}, {'start_line': 1629, 'end_line': 1631, 'comment': ""# NOTE(vish): We don't want to actually mark the volume #             detached, or delete the bdm, just remove the #             connection from this host."", 'include_SATD': False}, {'start_line': 1756, 'end_line': 1757, 'comment': '# NOTE(vish): The mapping is passed in so the driver can disconnect #             from remote volumes if necessary', 'include_SATD': False}], 'filename': 'nova/compute/manager.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright (c) 2011 VA Linux Systems Japan K.K # Copyright (c) 2011 Isaku Yamahata # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 25, 'end_line': 25, 'comment': '#LOG.debug(_(""terminating bdm %s"") % bdm)', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/compute/utils.py'}, {'a_comments': [{'start_line': 832, 'end_line': 832, 'comment': '###################', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/db/api.py'}, {'a_comments': [{'start_line': 2023, 'end_line': 2023, 'comment': '###################', 'include_SATD': False}, {'start_line': 2170, 'end_line': 2171, 'comment': ""# NOTE(vish): if with_lockmode isn't supported, as in sqlite, #             then this has concurrency issues"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright 2011 University of Southern California # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 22, 'end_line': 22, 'comment': '# Table definition', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/051_kill_export_devices.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.from sqlalchemy import *', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/052_add_connection_info_to_block_device_mapping.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/rpc/common.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1299, 'end_line': 1300, 'comment': '# NOTE(vish): Wait for InstanceNotFound, then verify that #             the instance is actually deleted.', 'include_SATD': False}], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/fake_flags.py'}, {'a_comments': [{'start_line': 265, 'end_line': 265, 'comment': '# Discover_volume and undiscover_volume are called from compute', 'include_SATD': False}], 'b_comments': [{'start_line': 265, 'end_line': 265, 'comment': '# prepare_attach and prepare_detach are called from compute', 'include_SATD': False}], 'filename': 'nova/tests/integrated/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_scheduler.py'}, {'a_comments': [{'start_line': 885, 'end_line': 885, 'comment': '# mock for volume_api.remove_from_compute', 'include_SATD': False}, {'start_line': 954, 'end_line': 954, 'comment': '# Preparing datas', 'include_SATD': False}, {'start_line': 966, 'end_line': 966, 'comment': '# reload is necessary before setting mocks', 'include_SATD': False}, {'start_line': 969, 'end_line': 969, 'comment': '# Preparing mocks', 'include_SATD': False}, {'start_line': 981, 'end_line': 985, 'comment': '# executing # make sure every data is rewritten to dest', 'include_SATD': False}], 'b_comments': [{'start_line': 714, 'end_line': 714, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 720, 'end_line': 720, 'comment': '# start test', 'include_SATD': False}, {'start_line': 724, 'end_line': 724, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 729, 'end_line': 729, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 735, 'end_line': 735, 'comment': '# creating mocks', 'include_SATD': False}, {'start_line': 749, 'end_line': 749, 'comment': '# start test', 'include_SATD': False}, {'start_line': 754, 'end_line': 754, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 759, 'end_line': 759, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 764, 'end_line': 764, 'comment': '# creating volume testdata', 'include_SATD': False}, {'start_line': 771, 'end_line': 771, 'comment': '# creating mocks', 'include_SATD': False}, {'start_line': 780, 'end_line': 780, 'comment': '# mocks for rollback', 'include_SATD': False}, {'start_line': 787, 'end_line': 787, 'comment': '# start test', 'include_SATD': False}, {'start_line': 793, 'end_line': 793, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 802, 'end_line': 802, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 808, 'end_line': 808, 'comment': '# create', 'include_SATD': False}, {'start_line': 815, 'end_line': 815, 'comment': '# start test', 'include_SATD': False}, {'start_line': 820, 'end_line': 820, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 828, 'end_line': 828, 'comment': '# creating testdata', 'include_SATD': False}, {'start_line': 842, 'end_line': 854, 'comment': '# creating mocks # start test # make sure every data is rewritten to destinatioin hostname.', 'include_SATD': False}], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [], 'b_comments': [{'start_line': 105, 'end_line': 105, 'comment': '# NOTE(vish) exists is to make driver assume connecting worked', 'include_SATD': False}, {'start_line': 803, 'end_line': 803, 'comment': '# Creating testdata', 'include_SATD': False}, {'start_line': 809, 'end_line': 809, 'comment': '# Creating mocks', 'include_SATD': False}, {'start_line': 818, 'end_line': 818, 'comment': '# Starting test', 'include_SATD': False}], 'filename': 'nova/tests/test_libvirt.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_virt_drivers.py'}, {'a_comments': [{'start_line': 318, 'end_line': 318, 'comment': '# each volume has a different mountpoint', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': ""# the first vblade process isn't running"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/test_volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/hyperv.py'}, {'a_comments': [{'start_line': 295, 'end_line': 297, 'comment': '# NOTE(justinsb): We remove the domain definition. We probably # would do better to keep it if cleanup=False (e.g. volumes?) # (e.g. #2 - not losing machines on failure)', 'include_SATD': True}], 'b_comments': [{'start_line': 307, 'end_line': 309, 'comment': '# NOTE(justinsb): We remove the domain definition. We probably # would do better to keep it if cleanup=False (e.g. volumes?) # (e.g. #2 - not losing machines on failure)', 'include_SATD': True}, {'start_line': 339, 'end_line': 339, 'comment': '# NOTE(vish): we disconnect from volumes regardless', 'include_SATD': False}, {'start_line': 405, 'end_line': 407, 'comment': ""# NOTE(vish): This is called to cleanup volumes after live #             migration, so we should still logout even if #             the instance doesn't exist here anymore."", 'include_SATD': False}, {'start_line': 1739, 'end_line': 1739, 'comment': '# Establishing connection to volume server.', 'include_SATD': False}], 'filename': 'nova/virt/libvirt/connection.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 87, 'end_line': 89, 'comment': ""# NOTE(vish): if we are on the same host as nova volume, the #             discovery makes the target so we don't need to #             run --op new"", 'include_SATD': False}, {'start_line': 113, 'end_line': 114, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 125, 'end_line': 125, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}], 'filename': 'nova/virt/libvirt/volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/vmwareapi_conn.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/volume_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/volumeops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/api.py'}, {'a_comments': [{'start_line': 233, 'end_line': 233, 'comment': '# NOTE(vish): we depend on vblade-persist for recreating exports', 'include_SATD': False}, {'start_line': 261, 'end_line': 267, 'comment': '# NOTE(vish): The standard _try_execute does not work here #             because these methods throw errors if other #             volumes on this host are in the process of #             being created.  The good news is the command #             still works for the other volumes, so we #             just wait a bit for the current volume to #             be ready and ignore any errors.', 'include_SATD': False}, {'start_line': 317, 'end_line': 317, 'comment': '# Instance will be terminated in this case.', 'include_SATD': False}, {'start_line': 547, 'end_line': 548, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 559, 'end_line': 559, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}], 'b_comments': [{'start_line': 782, 'end_line': 783, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 794, 'end_line': 794, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}, {'start_line': 815, 'end_line': 817, 'comment': '# NOTE(vish): Copied discover from iscsi_driver since it is used #             but this should probably be refactored into a common #             area because it is used in libvirt driver.', 'include_SATD': True}], 'filename': 'nova/volume/driver.py'}, {'a_comments': [], 'b_comments': [{'start_line': 236, 'end_line': 236, 'comment': '# TODO(vish): refactor this into a more general ""reserve""', 'include_SATD': True}, {'start_line': 244, 'end_line': 244, 'comment': '# TODO(vish): refactor this into a more general ""unreserve""', 'include_SATD': True}], 'filename': 'nova/volume/manager.py'}, {'a_comments': [{'start_line': 63, 'end_line': 64, 'comment': '# discover_volume is still OK # undiscover_volume is still OK', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/volume/san.py'}]}, {'revision': 9, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [{'start_line': 1285, 'end_line': 1286, 'comment': '# TODO(yamahata): # should move check_attach to volume manager?', 'include_SATD': True}, {'start_line': 1324, 'end_line': 1327, 'comment': '# pylint: disable=W0702 # NOTE(vish): The inline callback eats the exception info so we #             log the traceback here and reraise the same #             ecxception below.', 'include_SATD': False}], 'b_comments': [{'start_line': 490, 'end_line': 491, 'comment': '## NOTE(vish): The mapping is passed in so the driver can disconnect ##             from remote volumes if necessary', 'include_SATD': False}, {'start_line': 504, 'end_line': 505, 'comment': ""# FIXME(vish): I've kept the files during stop instance, but #              I think start will fail due to the files still"", 'include_SATD': True}, {'start_line': 543, 'end_line': 543, 'comment': '# NOTE(vish): bdms will be deleted on instance destroy', 'include_SATD': False}, {'start_line': 573, 'end_line': 576, 'comment': ""# FIXME(vish): I've kept the files during stop instance, but #              I think start will fail due to the files still #              existing.  I don't really know what the purpose of #              stop and start are when compared to pause and unpause"", 'include_SATD': True}, {'start_line': 1347, 'end_line': 1347, 'comment': '# pylint: disable=W0702', 'include_SATD': False}, {'start_line': 1349, 'end_line': 1351, 'comment': '# NOTE(vish): The inline callback eats the exception info so we #             log the traceback here and reraise the same #             ecxception below.', 'include_SATD': False}, {'start_line': 1382, 'end_line': 1384, 'comment': ""# NOTE(vish): Comparing as strings because the os_api doesn't #             convert to integer and we may wish to support uuids #             in the future."", 'include_SATD': False}, {'start_line': 1417, 'end_line': 1419, 'comment': ""# NOTE(vish): We don't want to actually mark the volume #             detached, or delete the bdm, just remove the #             connection from this host."", 'include_SATD': False}, {'start_line': 1629, 'end_line': 1631, 'comment': ""# NOTE(vish): We don't want to actually mark the volume #             detached, or delete the bdm, just remove the #             connection from this host."", 'include_SATD': False}, {'start_line': 1756, 'end_line': 1757, 'comment': '# NOTE(vish): The mapping is passed in so the driver can disconnect #             from remote volumes if necessary', 'include_SATD': False}], 'filename': 'nova/compute/manager.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright (c) 2011 VA Linux Systems Japan K.K # Copyright (c) 2011 Isaku Yamahata # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 25, 'end_line': 25, 'comment': '#LOG.debug(_(""terminating bdm %s"") % bdm)', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/compute/utils.py'}, {'a_comments': [{'start_line': 832, 'end_line': 832, 'comment': '###################', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/db/api.py'}, {'a_comments': [{'start_line': 2023, 'end_line': 2023, 'comment': '###################', 'include_SATD': False}, {'start_line': 2170, 'end_line': 2171, 'comment': ""# NOTE(vish): if with_lockmode isn't supported, as in sqlite, #             then this has concurrency issues"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright 2011 University of Southern California # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 22, 'end_line': 22, 'comment': '# Table definition', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/052_kill_export_devices.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.from sqlalchemy import *', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/053_add_connection_info_to_block_device_mapping.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/rpc/common.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1299, 'end_line': 1300, 'comment': '# NOTE(vish): Wait for InstanceNotFound, then verify that #             the instance is actually deleted.', 'include_SATD': False}], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/fake_flags.py'}, {'a_comments': [{'start_line': 265, 'end_line': 265, 'comment': '# Discover_volume and undiscover_volume are called from compute', 'include_SATD': False}], 'b_comments': [{'start_line': 265, 'end_line': 265, 'comment': '# prepare_attach and prepare_detach are called from compute', 'include_SATD': False}], 'filename': 'nova/tests/integrated/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_scheduler.py'}, {'a_comments': [{'start_line': 885, 'end_line': 885, 'comment': '# mock for volume_api.remove_from_compute', 'include_SATD': False}, {'start_line': 954, 'end_line': 954, 'comment': '# Preparing datas', 'include_SATD': False}, {'start_line': 966, 'end_line': 966, 'comment': '# reload is necessary before setting mocks', 'include_SATD': False}, {'start_line': 969, 'end_line': 969, 'comment': '# Preparing mocks', 'include_SATD': False}, {'start_line': 981, 'end_line': 985, 'comment': '# executing # make sure every data is rewritten to dest', 'include_SATD': False}], 'b_comments': [{'start_line': 714, 'end_line': 714, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 720, 'end_line': 720, 'comment': '# start test', 'include_SATD': False}, {'start_line': 724, 'end_line': 724, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 729, 'end_line': 729, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 735, 'end_line': 735, 'comment': '# creating mocks', 'include_SATD': False}, {'start_line': 749, 'end_line': 749, 'comment': '# start test', 'include_SATD': False}, {'start_line': 754, 'end_line': 754, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 759, 'end_line': 759, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 764, 'end_line': 764, 'comment': '# creating volume testdata', 'include_SATD': False}, {'start_line': 771, 'end_line': 771, 'comment': '# creating mocks', 'include_SATD': False}, {'start_line': 780, 'end_line': 780, 'comment': '# mocks for rollback', 'include_SATD': False}, {'start_line': 787, 'end_line': 787, 'comment': '# start test', 'include_SATD': False}, {'start_line': 793, 'end_line': 793, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 802, 'end_line': 802, 'comment': '# creating instance testdata', 'include_SATD': False}, {'start_line': 808, 'end_line': 808, 'comment': '# create', 'include_SATD': False}, {'start_line': 815, 'end_line': 815, 'comment': '# start test', 'include_SATD': False}, {'start_line': 820, 'end_line': 820, 'comment': '# cleanup', 'include_SATD': False}, {'start_line': 828, 'end_line': 828, 'comment': '# creating testdata', 'include_SATD': False}, {'start_line': 842, 'end_line': 854, 'comment': '# creating mocks # start test # make sure every data is rewritten to destinatioin hostname.', 'include_SATD': False}], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [], 'b_comments': [{'start_line': 105, 'end_line': 105, 'comment': '# NOTE(vish) exists is to make driver assume connecting worked', 'include_SATD': False}, {'start_line': 803, 'end_line': 803, 'comment': '# Creating testdata', 'include_SATD': False}, {'start_line': 809, 'end_line': 809, 'comment': '# Creating mocks', 'include_SATD': False}, {'start_line': 818, 'end_line': 818, 'comment': '# Starting test', 'include_SATD': False}], 'filename': 'nova/tests/test_libvirt.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_virt_drivers.py'}, {'a_comments': [{'start_line': 318, 'end_line': 318, 'comment': '# each volume has a different mountpoint', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': ""# the first vblade process isn't running"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/test_volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/hyperv.py'}, {'a_comments': [{'start_line': 295, 'end_line': 297, 'comment': '# NOTE(justinsb): We remove the domain definition. We probably # would do better to keep it if cleanup=False (e.g. volumes?) # (e.g. #2 - not losing machines on failure)', 'include_SATD': True}], 'b_comments': [{'start_line': 307, 'end_line': 309, 'comment': '# NOTE(justinsb): We remove the domain definition. We probably # would do better to keep it if cleanup=False (e.g. volumes?) # (e.g. #2 - not losing machines on failure)', 'include_SATD': True}, {'start_line': 339, 'end_line': 339, 'comment': '# NOTE(vish): we disconnect from volumes regardless', 'include_SATD': False}, {'start_line': 405, 'end_line': 407, 'comment': ""# NOTE(vish): This is called to cleanup volumes after live #             migration, so we should still logout even if #             the instance doesn't exist here anymore."", 'include_SATD': False}, {'start_line': 1739, 'end_line': 1739, 'comment': '# Establishing connection to volume server.', 'include_SATD': False}], 'filename': 'nova/virt/libvirt/connection.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 87, 'end_line': 89, 'comment': ""# NOTE(vish): if we are on the same host as nova volume, the #             discovery makes the target so we don't need to #             run --op new"", 'include_SATD': False}, {'start_line': 113, 'end_line': 114, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 125, 'end_line': 125, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}], 'filename': 'nova/virt/libvirt/volume.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/vmwareapi_conn.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/volume_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/volumeops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/api.py'}, {'a_comments': [{'start_line': 233, 'end_line': 233, 'comment': '# NOTE(vish): we depend on vblade-persist for recreating exports', 'include_SATD': False}, {'start_line': 261, 'end_line': 267, 'comment': '# NOTE(vish): The standard _try_execute does not work here #             because these methods throw errors if other #             volumes on this host are in the process of #             being created.  The good news is the command #             still works for the other volumes, so we #             just wait a bit for the current volume to #             be ready and ignore any errors.', 'include_SATD': False}, {'start_line': 317, 'end_line': 317, 'comment': '# Instance will be terminated in this case.', 'include_SATD': False}, {'start_line': 547, 'end_line': 548, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 559, 'end_line': 559, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}], 'b_comments': [{'start_line': 782, 'end_line': 783, 'comment': '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?', 'include_SATD': True}, {'start_line': 794, 'end_line': 794, 'comment': ""# The rescan isn't documented as being necessary(?), but it helps"", 'include_SATD': False}, {'start_line': 815, 'end_line': 817, 'comment': '# NOTE(vish): Copied discover from iscsi_driver since it is used #             but this should probably be refactored into a common #             area because it is used in libvirt driver.', 'include_SATD': True}], 'filename': 'nova/volume/driver.py'}, {'a_comments': [], 'b_comments': [{'start_line': 236, 'end_line': 236, 'comment': '# TODO(vish): refactor this into a more general ""reserve""', 'include_SATD': True}, {'start_line': 244, 'end_line': 244, 'comment': '# TODO(vish): refactor this into a more general ""unreserve""', 'include_SATD': True}], 'filename': 'nova/volume/manager.py'}, {'a_comments': [{'start_line': 63, 'end_line': 64, 'comment': '# discover_volume is still OK # undiscover_volume is still OK', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/volume/san.py'}]}]",9,16,10,MERGED,True,https://review.opendev.org/#/c/620,"Remove AoE, Clean up volume code",True,"{""# FIXME(vish): I've kept the files during stop instance, but #              I think start will fail due to the files still"": 1, ""# FIXME(vish): I've kept the files during stop instance, but #              I think start will fail due to the files still #              existing.  I don't really know what the purpose of #              stop and start are when compared to pause and unpause"": 1, '# NOTE(justinsb): We remove the domain definition. We probably # would do better to keep it if cleanup=False (e.g. volumes?) # (e.g. #2 - not losing machines on failure)': 1, '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?': 1, '# NOTE(vish): Copied discover from iscsi_driver since it is used #             but this should probably be refactored into a common #             area because it is used in libvirt driver.': 1, '# TODO(vish): refactor this into a more general ""reserve""': 1, '# TODO(vish): refactor this into a more general ""unreserve""': 1}",True,"{'# TODO(yamahata): # should move check_attach to volume manager?': 1, '# NOTE(justinsb): We remove the domain definition. We probably # would do better to keep it if cleanup=False (e.g. volumes?) # (e.g. #2 - not losing machines on failure)': 1, '# The /dev/disk/by-path/... node is not always present immediately # TODO(justinsb): This retry-with-delay is a pattern, move to utils?': 1}",True,{}
215,684,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 16, 'comment': '# Copyright 2010 United States Government as represented by the # Administrator of the National Aeronautics and Space Administration. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 80, 'end_line': 80, 'comment': '# instances and volumes only used for count', 'include_SATD': False}, {'start_line': 100, 'end_line': 100, 'comment': '# instances and volumes only used for count', 'include_SATD': False}, {'start_line': 104, 'end_line': 105, 'comment': '# service_down_time is 60 by defualt so we set to 70 to simulate # services been down', 'include_SATD': False}, {'start_line': 146, 'end_line': 146, 'comment': '# Returns state running for 127.0.0.1 - look at class setup', 'include_SATD': False}, {'start_line': 169, 'end_line': 169, 'comment': '# Returns state down for 127.0.0.2 - look at class setup', 'include_SATD': False}, {'start_line': 179, 'end_line': 179, 'comment': '# Inline project object - vpn_port of None to make it invalid', 'include_SATD': False}, {'start_line': 184, 'end_line': 184, 'comment': '# Returns state down for 127.0.0.2 - look at class setup', 'include_SATD': False}, {'start_line': 303, 'end_line': 303, 'comment': ""# Default roles ('sysadmin', 'netadmin', 'developer') should be in here"", 'include_SATD': False}], 'filename': 'nova/tests/api/ec2/test_admin.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 16, 'comment': '# Copyright 2010 United States Government as represented by the # Administrator of the National Aeronautics and Space Administration. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 80, 'end_line': 80, 'comment': '# instances and volumes only used for count', 'include_SATD': False}, {'start_line': 100, 'end_line': 100, 'comment': '# instances and volumes only used for count', 'include_SATD': False}, {'start_line': 104, 'end_line': 105, 'comment': '# service_down_time is 60 by defualt so we set to 70 to simulate # services been down', 'include_SATD': False}, {'start_line': 146, 'end_line': 146, 'comment': '# Returns state running for 127.0.0.1 - look at class setup', 'include_SATD': False}, {'start_line': 169, 'end_line': 169, 'comment': '# Returns state down for 127.0.0.2 - look at class setup', 'include_SATD': False}, {'start_line': 179, 'end_line': 179, 'comment': '# Inline project object - vpn_port of None to make it invalid', 'include_SATD': False}, {'start_line': 184, 'end_line': 184, 'comment': '# Returns state down for 127.0.0.2 - look at class setup', 'include_SATD': False}, {'start_line': 303, 'end_line': 303, 'comment': ""# Default roles ('sysadmin', 'netadmin', 'developer') should be in here"", 'include_SATD': False}], 'filename': 'nova/tests/api/ec2/test_admin.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 16, 'comment': '# Copyright 2010 United States Government as represented by the # Administrator of the National Aeronautics and Space Administration. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 80, 'end_line': 80, 'comment': '# instances and volumes only used for count', 'include_SATD': False}, {'start_line': 100, 'end_line': 100, 'comment': '# instances and volumes only used for count', 'include_SATD': False}, {'start_line': 104, 'end_line': 105, 'comment': '# service_down_time is 60 by defualt so we set to 70 to simulate # services been down', 'include_SATD': False}, {'start_line': 146, 'end_line': 146, 'comment': '# Returns state running for 127.0.0.1 - look at class setup', 'include_SATD': False}, {'start_line': 169, 'end_line': 169, 'comment': '# Returns state down for 127.0.0.2 - look at class setup', 'include_SATD': False}, {'start_line': 179, 'end_line': 179, 'comment': '# Inline project object - vpn_port of None to make it invalid', 'include_SATD': False}, {'start_line': 184, 'end_line': 184, 'comment': '# Returns state down for 127.0.0.2 - look at class setup', 'include_SATD': False}, {'start_line': 305, 'end_line': 305, 'comment': ""# Default roles ('sysadmin', 'netadmin', 'developer') should be in here"", 'include_SATD': False}], 'filename': 'nova/tests/api/ec2/test_admin.py'}]}]",3,9,6,MERGED,True,https://review.opendev.org/#/c/684,api.ec2.admin unit tests,True,{},False,{},False,{}
216,698,"[{'revision': 1, 'changed_files': []}]",1,2,1,ABANDONED,False,https://review.opendev.org/#/c/698,Add support querying only specific zones via recon cli.  Add --all shortcut flag.,False,{},False,{},False,{}
217,700,"[{'revision': 1, 'changed_files': []}]",1,5,0,MERGED,True,https://review.opendev.org/#/c/700,Make snapshots private by default,False,{},False,{},False,{}
218,688,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '#!/usr/bin/env python', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright 2011 OpenStack, LLC # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 22, 'end_line': 23, 'comment': '# NOTE(jk0): We need to import this for global access to the XenAPI flag # definitions.', 'include_SATD': False}, {'start_line': 81, 'end_line': 81, 'comment': '# Load all of the VBDs associated to the VM.', 'include_SATD': False}, {'start_line': 85, 'end_line': 85, 'comment': '# We only care about disks.', 'include_SATD': False}, {'start_line': 90, 'end_line': 91, 'comment': '# Loop through all of the potenially orphaned VDIs and remove # any from the list that are associated to an existing VM.', 'include_SATD': False}], 'filename': 'tools/xenserver/vdi-reaper.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [{'start_line': 75, 'end_line': 75, 'comment': ""# MySQLdb won't accept 'None' in the password field"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/session.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '#!/usr/bin/env python', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright 2011 OpenStack, LLC # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 47, 'end_line': 47, 'comment': '# TODO(jk0): Make these configurable.', 'include_SATD': True}, {'start_line': 85, 'end_line': 85, 'comment': '# Load all of the VBDs associated to the VM.', 'include_SATD': False}, {'start_line': 89, 'end_line': 89, 'comment': '# We only care about disks.', 'include_SATD': False}, {'start_line': 94, 'end_line': 95, 'comment': '# Loop through all of the potenially orphaned VDIs and remove # any from the list that are associated to an existing VM.', 'include_SATD': False}], 'filename': 'tools/xenserver/vdi-reaper.py'}]}]",2,4,5,ABANDONED,False,https://review.opendev.org/#/c/688,Fixes bug 809614.,True,{'# TODO(jk0): Make these configurable.': 2},True,{},False,{}
219,701,"[{'revision': 1, 'changed_files': []}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/701,Sskip deleted devices in the ring.,False,{},False,{},False,{}
220,702,"[{'revision': 1, 'changed_files': []}]",1,4,1,MERGED,True,https://review.opendev.org/#/c/702,Query only specific zone via swift-recon,False,{},False,{},False,{}
221,689,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010-2011 Josh Durgin # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 38, 'end_line': 38, 'comment': '# in MiB', 'include_SATD': False}, {'start_line': 109, 'end_line': 110, 'comment': ""# this must not be unicode since it's will be passed to a # non-unicode aware C library"", 'include_SATD': False}], 'filename': 'glance/store/rbd.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 Josh Durgin # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_rbd.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010-2011 Josh Durgin # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 38, 'end_line': 40, 'comment': '# librados will locate the default conf file # let librados decide based on the Ceph conf file # in MiB', 'include_SATD': False}, {'start_line': 114, 'end_line': 115, 'comment': '# these must not be unicode since they will be passed to a # non-unicode-aware C library', 'include_SATD': False}], 'filename': 'glance/store/rbd.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 Josh Durgin # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 75, 'end_line': 75, 'comment': '# use the default configuration if none is specified', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_rbd.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010-2011 Josh Durgin # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 38, 'end_line': 40, 'comment': '# librados will locate the default conf file # let librados decide based on the Ceph conf file # in MiB', 'include_SATD': False}, {'start_line': 114, 'end_line': 115, 'comment': '# these must not be unicode since they will be passed to a # non-unicode-aware C library', 'include_SATD': False}], 'filename': 'glance/store/rbd.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 Josh Durgin # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 57, 'end_line': 57, 'comment': '# use the default configuration if none is specified', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_rbd.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010-2011 Josh Durgin # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 38, 'end_line': 40, 'comment': '# librados will locate the default conf file # let librados decide based on the Ceph conf file # in MiB', 'include_SATD': False}, {'start_line': 114, 'end_line': 115, 'comment': '# these must not be unicode since they will be passed to a # non-unicode-aware C library', 'include_SATD': False}], 'filename': 'glance/store/rbd.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 Josh Durgin # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 57, 'end_line': 57, 'comment': '# use the default configuration if none is specified', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_rbd.py'}]}, {'revision': 5, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010-2011 Josh Durgin # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 38, 'end_line': 40, 'comment': '# librados will locate the default conf file # let librados decide based on the Ceph conf file # in MiB', 'include_SATD': False}, {'start_line': 114, 'end_line': 115, 'comment': '# these must not be unicode since they will be passed to a # non-unicode-aware C library', 'include_SATD': False}], 'filename': 'glance/store/rbd.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 Josh Durgin # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 57, 'end_line': 57, 'comment': '# use the default configuration if none is specified', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_rbd.py'}]}]",5,22,4,MERGED,True,https://review.opendev.org/#/c/689,Add RBD store backend.,True,{},False,{},False,{}
222,695,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/store/s3.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 161, 'end_line': 161, 'comment': '# 1. POST /images with public image named Image1', 'include_SATD': False}, {'start_line': 176, 'end_line': 177, 'comment': '# 2. GET /images/1 # Verify all information on image we just added is correct', 'include_SATD': False}, {'start_line': 185, 'end_line': 185, 'comment': '# 3. GET /images/1 from registry in order to find S3 location', 'include_SATD': False}, {'start_line': 191, 'end_line': 191, 'comment': '# 4. POST /images using location generated by Image1', 'include_SATD': False}, {'start_line': 205, 'end_line': 205, 'comment': '# 5. GET /images/2 and make sure it can stream the image', 'include_SATD': False}, {'start_line': 213, 'end_line': 213, 'comment': '# 6. DELETE /images/1 and /images/2', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_s3.py'}, {'a_comments': [{'start_line': 428, 'end_line': 428, 'comment': '# use this header as the location for the next image', 'include_SATD': False}], 'b_comments': [{'start_line': 428, 'end_line': 428, 'comment': '# GET /images/1 from registry in order to find Swift location', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_swift.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_s3_store.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/store/s3.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 161, 'end_line': 161, 'comment': '# 1. POST /images with public image named Image1', 'include_SATD': False}, {'start_line': 176, 'end_line': 177, 'comment': '# 2. GET /images/1 # Verify all information on image we just added is correct', 'include_SATD': False}, {'start_line': 185, 'end_line': 185, 'comment': '# 3. GET /images/1 from registry in order to find S3 location', 'include_SATD': False}, {'start_line': 191, 'end_line': 191, 'comment': '# 4. POST /images using location generated by Image1', 'include_SATD': False}, {'start_line': 205, 'end_line': 205, 'comment': '# 5. GET /images/2 and make sure it can stream the image', 'include_SATD': False}, {'start_line': 213, 'end_line': 213, 'comment': '# 6. DELETE /images/1 and /images/2', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_s3.py'}, {'a_comments': [{'start_line': 428, 'end_line': 428, 'comment': '# use this header as the location for the next image', 'include_SATD': False}], 'b_comments': [{'start_line': 428, 'end_line': 428, 'comment': '# GET /images/1 from registry in order to find Swift location', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_swift.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_s3_store.py'}]}]",2,4,1,MERGED,True,https://review.opendev.org/#/c/695,Returning functionality of s3 backend to stream remote images,True,{},False,{},False,{}
223,704,"[{'revision': 1, 'changed_files': []}, {'revision': 2, 'changed_files': []}, {'revision': 3, 'changed_files': []}, {'revision': 4, 'changed_files': []}, {'revision': 5, 'changed_files': []}, {'revision': 6, 'changed_files': []}, {'revision': 7, 'changed_files': []}, {'revision': 8, 'changed_files': []}, {'revision': 9, 'changed_files': []}, {'revision': 10, 'changed_files': []}]",10,19,8,MERGED,True,https://review.opendev.org/#/c/704,Add support for OS Auth API version 2,False,{},False,{},False,{}
224,707,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/047_remove_instances_fk_from_vif.py'}]}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/707,Fix 047 migration with SQLAlchemy 0.7.2,True,{},False,{},False,{}
225,708,"[{'revision': 1, 'changed_files': []}]",1,7,0,MERGED,True,https://review.opendev.org/#/c/708,Use latest version of SQLAlchemy,False,{},False,{},False,{}
226,696,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/diskconfig.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/security_groups.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/virtual_interfaces.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/versions.py'}, {'a_comments': [], 'b_comments': [{'start_line': 518, 'end_line': 518, 'comment': ""# Pickling failed; don't modify the body"", 'include_SATD': False}], 'filename': 'nova/api/openstack/wsgi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_limits.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_wsgi.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 160, 'end_line': 160, 'comment': '# Get the lazy response', 'include_SATD': False}, {'start_line': 164, 'end_line': 164, 'comment': '# No attached LazyResponse', 'include_SATD': False}, {'start_line': 171, 'end_line': 171, 'comment': '# Re-attach the lazy response', 'include_SATD': False}], 'filename': 'nova/api/openstack/extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/versions.py'}, {'a_comments': [], 'b_comments': [{'start_line': 522, 'end_line': 522, 'comment': ""# Pickling failed; don't modify the body"", 'include_SATD': False}], 'filename': 'nova/api/openstack/wsgi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/extensions/foxinsocks.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [{'start_line': 272, 'end_line': 273, 'comment': ""# Don't need the serialization middleware here because we're # not doing any serialization"", 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/test_extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_limits.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_wsgi.py'}]}]",2,6,0,ABANDONED,False,https://review.opendev.org/#/c/696,Allow serialization to be performed lazily,True,{},False,{},False,{}
227,693,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '#!/usr/bin/env python', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright 2011 OpenStack, LLC # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 39, 'end_line': 39, 'comment': '# Only setup flags if the credentials are not provided.', 'include_SATD': False}, {'start_line': 77, 'end_line': 77, 'comment': '# TODO(jk0): Make these configurable.', 'include_SATD': True}, {'start_line': 119, 'end_line': 119, 'comment': '# Load all of the VBDs associated to the VM.', 'include_SATD': False}, {'start_line': 123, 'end_line': 123, 'comment': '# We only care about disks.', 'include_SATD': False}, {'start_line': 128, 'end_line': 129, 'comment': '# Loop through all of the potenially orphaned VDIs and remove # any from the list that are associated to an existing VM.', 'include_SATD': False}], 'filename': 'tools/xenserver/vdi-reaper.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '#!/usr/bin/env python', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright 2011 OpenStack, LLC # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 39, 'end_line': 39, 'comment': '# Only setup flags if the credentials are not provided.', 'include_SATD': False}, {'start_line': 77, 'end_line': 77, 'comment': '# TODO(jk0): Make these configurable.', 'include_SATD': True}, {'start_line': 119, 'end_line': 119, 'comment': '# Load all of the VBDs associated to the VM.', 'include_SATD': False}, {'start_line': 123, 'end_line': 123, 'comment': '# We only care about disks.', 'include_SATD': False}, {'start_line': 128, 'end_line': 129, 'comment': '# Loop through all of the potenially orphaned VDIs and remove # any from the list that are associated to an existing VM.', 'include_SATD': False}], 'filename': 'tools/xenserver/vdi-reaper.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '#!/usr/bin/env python', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright 2011 OpenStack, LLC # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 39, 'end_line': 39, 'comment': '# Only setup flags if the credentials are not provided.', 'include_SATD': False}, {'start_line': 77, 'end_line': 77, 'comment': '# TODO(jk0): Make these configurable.', 'include_SATD': True}, {'start_line': 119, 'end_line': 119, 'comment': '# Load all of the VBDs associated to the VM.', 'include_SATD': False}, {'start_line': 123, 'end_line': 123, 'comment': '# We only care about disks.', 'include_SATD': False}, {'start_line': 128, 'end_line': 129, 'comment': '# Loop through all of the potenially orphaned VDIs and remove # any from the list that are associated to an existing VM.', 'include_SATD': False}], 'filename': 'tools/xenserver/vdi-reaper.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '#!/usr/bin/env python', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright 2011 OpenStack, LLC # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 39, 'end_line': 39, 'comment': '# Only setup flags if the credentials are not provided.', 'include_SATD': False}, {'start_line': 77, 'end_line': 77, 'comment': '# TODO(jk0): Make these configurable.', 'include_SATD': True}, {'start_line': 119, 'end_line': 119, 'comment': '# Load all of the VBDs associated to the VM.', 'include_SATD': False}, {'start_line': 123, 'end_line': 123, 'comment': '# We only care about disks.', 'include_SATD': False}, {'start_line': 128, 'end_line': 129, 'comment': '# Loop through all of the potenially orphaned VDIs and remove # any from the list that are associated to an existing VM.', 'include_SATD': False}], 'filename': 'tools/xenserver/vdi-reaper.py'}]}, {'revision': 5, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '#!/usr/bin/env python', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright 2011 OpenStack, LLC # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 39, 'end_line': 39, 'comment': '# Only setup flags if the credentials are not provided.', 'include_SATD': False}, {'start_line': 77, 'end_line': 77, 'comment': '# TODO(jk0): Make these configurable.', 'include_SATD': True}, {'start_line': 112, 'end_line': 112, 'comment': '# We only care about disks.', 'include_SATD': False}], 'filename': 'tools/xenserver/vdi-reaper.py'}]}, {'revision': 6, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '#!/usr/bin/env python', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright 2011 OpenStack, LLC # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 39, 'end_line': 39, 'comment': '# Only setup flags if the credentials are not provided.', 'include_SATD': False}, {'start_line': 77, 'end_line': 77, 'comment': '# TODO(jk0): Make these configurable.', 'include_SATD': True}, {'start_line': 112, 'end_line': 112, 'comment': '# We only care about disks.', 'include_SATD': False}], 'filename': 'tools/xenserver/vdi-reaper.py'}]}, {'revision': 7, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '#!/usr/bin/env python', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright 2011 OpenStack, LLC # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 39, 'end_line': 39, 'comment': '# Only setup flags if the credentials are not provided.', 'include_SATD': False}, {'start_line': 77, 'end_line': 77, 'comment': '# TODO(jk0): Make these configurable.', 'include_SATD': True}, {'start_line': 112, 'end_line': 112, 'comment': '# We only care about disks.', 'include_SATD': False}], 'filename': 'tools/xenserver/vdi-reaper.py'}]}, {'revision': 8, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '#!/usr/bin/env python', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright 2011 OpenStack, LLC # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 40, 'end_line': 40, 'comment': '# Only setup flags if the credentials are not provided.', 'include_SATD': False}, {'start_line': 84, 'end_line': 84, 'comment': '# TODO(jk0): Make these configurable.', 'include_SATD': True}, {'start_line': 119, 'end_line': 119, 'comment': '# We only care about disks.', 'include_SATD': False}], 'filename': 'tools/xenserver/vdi-reaper.py'}]}, {'revision': 9, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '#!/usr/bin/env python', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright 2011 OpenStack, LLC # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 40, 'end_line': 40, 'comment': '# Only setup flags if the credentials are not provided.', 'include_SATD': False}, {'start_line': 84, 'end_line': 84, 'comment': '# TODO(jk0): Make these configurable.', 'include_SATD': True}, {'start_line': 119, 'end_line': 119, 'comment': '# We only care about disks.', 'include_SATD': False}], 'filename': 'tools/xenserver/vdi-reaper.py'}]}, {'revision': 10, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '#!/usr/bin/env python', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright 2011 OpenStack, LLC # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 40, 'end_line': 40, 'comment': '# Only setup flags if the credentials are not provided.', 'include_SATD': False}, {'start_line': 120, 'end_line': 120, 'comment': '# We only care about disks.', 'include_SATD': False}], 'filename': 'tools/xenserver/vdi-reaper.py'}]}, {'revision': 11, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '#!/usr/bin/env python', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright 2011 OpenStack, LLC # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 38, 'end_line': 40, 'comment': ""# NOTE(sirp): Nova futzs with the sys.argv in order to provide default # flagfile. To isolate this awful practice, we're supplying a dummy # argument list."", 'include_SATD': False}, {'start_line': 97, 'end_line': 99, 'comment': '# Interpolate template to figure out where to extract the instance_id from. # The instance_id may be in hex ""%x"" or decimal ""%d"", so try decimal first # then fall back to hex.', 'include_SATD': False}, {'start_line': 146, 'end_line': 148, 'comment': ""# NOTE(jk0): Err on the side of caution here. If we don't know # anything about the particular instance, print a warning and let # the operator handle it manually."", 'include_SATD': True}, {'start_line': 151, 'end_line': 152, 'comment': ""# NOTE(jk0): A zombie VM is an instance that is not active and hasn't # been updated in over the specified period."", 'include_SATD': False}, {'start_line': 223, 'end_line': 223, 'comment': ""# NOTE(sirp): VDI's can have themselves as a parent?!"", 'include_SATD': False}, {'start_line': 270, 'end_line': 271, 'comment': ""# System owned and non-managed VDIs should be considered 'connected' # for our purposes."", 'include_SATD': False}], 'filename': 'tools/xenserver/vm_vdi_cleaner.py'}]}, {'revision': 12, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '#!/usr/bin/env python', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright 2011 OpenStack, LLC # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 38, 'end_line': 40, 'comment': ""# NOTE(sirp): Nova futzs with the sys.argv in order to provide default # flagfile. To isolate this awful practice, we're supplying a dummy # argument list."", 'include_SATD': False}, {'start_line': 97, 'end_line': 99, 'comment': '# Interpolate template to figure out where to extract the instance_id from. # The instance_id may be in hex ""%x"" or decimal ""%d"", so try decimal first # then fall back to hex.', 'include_SATD': False}, {'start_line': 146, 'end_line': 148, 'comment': ""# NOTE(jk0): Err on the side of caution here. If we don't know # anything about the particular instance, print a warning and let # the operator handle it manually."", 'include_SATD': True}, {'start_line': 151, 'end_line': 152, 'comment': ""# NOTE(jk0): A zombie VM is an instance that is not active and hasn't # been updated in over the specified period."", 'include_SATD': False}, {'start_line': 223, 'end_line': 223, 'comment': ""# NOTE(sirp): VDI's can have themselves as a parent?!"", 'include_SATD': False}, {'start_line': 270, 'end_line': 271, 'comment': ""# System owned and non-managed VDIs should be considered 'connected' # for our purposes."", 'include_SATD': False}], 'filename': 'tools/xenserver/vm_vdi_cleaner.py'}]}, {'revision': 13, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '#!/usr/bin/env python', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright 2011 OpenStack, LLC # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # httpwww.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License.', 'include_SATD': False}, {'start_line': 38, 'end_line': 40, 'comment': ""# NOTE(sirp): Nova futzs with the sys.argv in order to provide default # flagfile. To isolate this awful practice, we're supplying a dummy # argument list."", 'include_SATD': False}, {'start_line': 97, 'end_line': 99, 'comment': '# Interpolate template to figure out where to extract the instance_id from. # The instance_id may be in hex ""%x"" or decimal ""%d"", so try decimal first # then fall back to hex.', 'include_SATD': False}, {'start_line': 146, 'end_line': 148, 'comment': ""# NOTE(jk0): Err on the side of caution here. If we don't know # anything about the particular instance, print a warning and let # the operator handle it manually."", 'include_SATD': True}, {'start_line': 151, 'end_line': 152, 'comment': ""# NOTE(jk0): A zombie VM is an instance that is not active and hasn't # been updated in over the specified period."", 'include_SATD': False}, {'start_line': 223, 'end_line': 223, 'comment': ""# NOTE(sirp): VDI's can have themselves as a parent?!"", 'include_SATD': False}, {'start_line': 270, 'end_line': 271, 'comment': ""# System owned and non-managed VDIs should be considered 'connected' # for our purposes."", 'include_SATD': False}], 'filename': 'tools/xenserver/vm_vdi_cleaner.py'}]}]",13,20,3,MERGED,True,https://review.opendev.org/#/c/693,Adds a script that can automatically delete orphaned VDIs. Also had to move some flags around to avoid circular imports.,True,"{'# TODO(jk0): Make these configurable.': 1, ""# NOTE(jk0): Err on the side of caution here. If we don't know # anything about the particular instance, print a warning and let # the operator handle it manually."": 11}",True,{},False,{}
228,712,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/auth/signer.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_signer.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/auth/signer.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_signer.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/auth/signer.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_signer.py'}]}]",3,11,6,MERGED,True,https://review.opendev.org/#/c/712,Fixes Bug #861293 nova.auth.signer.Signer now honors the SignatureMethod parameter for SHA1 when creating signatures,True,{},False,{},False,{}
229,697,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 387, 'end_line': 390, 'comment': ""# NOTE(vish): This could be a cast because we don't do anything #             with the address currently, but I'm leaving it as #             a call to ensure that network setup completes.  We #             will eventually also need to save the address here."", 'include_SATD': False}, {'start_line': 397, 'end_line': 400, 'comment': '# TODO(tr3buchet) not really sure how this should be handled. # virt requires network_info to be passed in but stub_network # is enabled. Setting to [] for now will cause virt to skip # all vif creation and network injection, maybe this is correct', 'include_SATD': True}], 'b_comments': [{'start_line': 366, 'end_line': 369, 'comment': '# TODO(tr3buchet) not really sure how this should be handled. # virt requires network_info to be passed in but stub_network # is enabled. Setting to [] for now will cause virt to skip # all vif creation and network injection, maybe this is correct', 'include_SATD': True}, {'start_line': 372, 'end_line': 375, 'comment': ""# NOTE(vish): This could be a cast because we don't do # anything with the address currently, but I'm leaving it as a # call to ensure that network setup completes.  We will # eventually also need to save the address here."", 'include_SATD': False}, {'start_line': 468, 'end_line': 469, 'comment': '# NOTE(sirp): 3-arg raise needed since Eventlet clears exceptions # when switching between greenthreads.', 'include_SATD': False}, {'start_line': 474, 'end_line': 476, 'comment': '# FIXME(sirp): when/if # httpsgithub.com/jcrocholl/pep8/pull/27 merges, we can add # a per-line disable flag here for W602', 'include_SATD': True}], 'filename': 'nova/compute/manager.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [{'start_line': 387, 'end_line': 390, 'comment': ""# NOTE(vish): This could be a cast because we don't do anything #             with the address currently, but I'm leaving it as #             a call to ensure that network setup completes.  We #             will eventually also need to save the address here."", 'include_SATD': False}, {'start_line': 397, 'end_line': 400, 'comment': '# TODO(tr3buchet) not really sure how this should be handled. # virt requires network_info to be passed in but stub_network # is enabled. Setting to [] for now will cause virt to skip # all vif creation and network injection, maybe this is correct', 'include_SATD': True}], 'b_comments': [{'start_line': 366, 'end_line': 369, 'comment': '# TODO(tr3buchet) not really sure how this should be handled. # virt requires network_info to be passed in but stub_network # is enabled. Setting to [] for now will cause virt to skip # all vif creation and network injection, maybe this is correct', 'include_SATD': True}, {'start_line': 372, 'end_line': 375, 'comment': ""# NOTE(vish): This could be a cast because we don't do # anything with the address currently, but I'm leaving it as a # call to ensure that network setup completes.  We will # eventually also need to save the address here."", 'include_SATD': False}, {'start_line': 468, 'end_line': 469, 'comment': '# NOTE(sirp): 3-arg raise needed since Eventlet clears exceptions # when switching between greenthreads.', 'include_SATD': False}, {'start_line': 474, 'end_line': 476, 'comment': '# FIXME(sirp): when/if # httpsgithub.com/jcrocholl/pep8/pull/27 merges, we can add # a per-line disable flag here for W602', 'include_SATD': True}], 'filename': 'nova/compute/manager.py'}]}]",2,7,0,MERGED,True,https://review.opendev.org/#/c/697,Deallocate ip if build fails.,True,"{'# TODO(tr3buchet) not really sure how this should be handled. # virt requires network_info to be passed in but stub_network # is enabled. Setting to [] for now will cause virt to skip # all vif creation and network injection, maybe this is correct': 1, '# FIXME(sirp): when/if # httpsgithub.com/jcrocholl/pep8/pull/27 merges, we can add # a per-line disable flag here for W602': 1}",True,"{'# TODO(tr3buchet) not really sure how this should be handled. # virt requires network_info to be passed in but stub_network # is enabled. Setting to [] for now will cause virt to skip # all vif creation and network injection, maybe this is correct': 1}",True,{}
230,717,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_signer.py'}]}]",1,3,0,MERGED,True,https://review.opendev.org/#/c/717,Fixes a test failure in master,True,{},False,{},False,{}
231,728,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/connection.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/connection.py'}]}]",2,3,2,ABANDONED,False,https://review.opendev.org/#/c/728,Display LXC container console when using euca-get-console.,True,{},False,{},False,{}
232,729,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/connection.py'}]}]",1,10,0,MERGED,True,https://review.opendev.org/#/c/729,Replace socat with netcat.,True,{},False,{},False,{}
233,703,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 58, 'end_line': 58, 'comment': '# Make sure if there are compute hosts to serve the request.', 'include_SATD': False}], 'filename': 'nova/scheduler/base_scheduler.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 58, 'end_line': 58, 'comment': '# Make sure if there are compute hosts to serve the request.', 'include_SATD': False}], 'filename': 'nova/scheduler/base_scheduler.py'}]}]",2,5,2,MERGED,True,https://review.opendev.org/#/c/703,bug 861310,True,{},False,{},False,{}
234,732,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'tools/install_venv.py'}]}]",1,3,0,MERGED,True,https://review.opendev.org/#/c/732,install_venv: refactor out pip_install helper,True,{},False,{},False,{}
235,709,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 146, 'end_line': 146, 'comment': '# at least get the core message out if something happened', 'include_SATD': False}], 'b_comments': [{'start_line': 147, 'end_line': 147, 'comment': '# at least get the core message out if something happened', 'include_SATD': False}], 'filename': 'nova/exception.py'}]}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/709,Accept message as sole argument to NovaException,True,{},False,{},False,{}
236,733,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'tools/install_venv.py'}]}]",1,3,0,MERGED,True,https://review.opendev.org/#/c/733,install_venv: pass the --upgrade argument to pip install,True,{},False,{},False,{}
237,734,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'tools/install_venv.py'}]}]",1,4,0,MERGED,True,https://review.opendev.org/#/c/734,install_venv: don't use --no-site-packages with virtualenv,True,{},False,{},False,{}
238,706,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 944, 'end_line': 946, 'comment': '# we need one extra byte as the buffer is kept with # one byte free to avoid the head==tail full/empty # problem', 'include_SATD': False}, {'start_line': 960, 'end_line': 961, 'comment': ""# If the file doesn't contain a header, assume it is corrupt # and recreate"", 'include_SATD': False}, {'start_line': 963, 'end_line': 963, 'comment': '# initialise to empty', 'include_SATD': False}, {'start_line': 965, 'end_line': 965, 'comment': '# If head or tail point beyond the file then bomb out', 'include_SATD': False}, {'start_line': 971, 'end_line': 971, 'comment': '# File is zero bytes: treat as new file', 'include_SATD': False}, {'start_line': 980, 'end_line': 980, 'comment': '# head == tail means no data', 'include_SATD': False}, {'start_line': 986, 'end_line': 986, 'comment': '# Built-in open() cannot open in read/write mode without truncating.', 'include_SATD': False}, {'start_line': 1018, 'end_line': 1018, 'comment': '# Wraps around', 'include_SATD': False}, {'start_line': 1023, 'end_line': 1023, 'comment': '# Just from here to head', 'include_SATD': False}, {'start_line': 1031, 'end_line': 1031, 'comment': '# Amount of data to be written on this pass', 'include_SATD': False}, {'start_line': 1034, 'end_line': 1034, 'comment': '# Where head will be after this write', 'include_SATD': False}, {'start_line': 1037, 'end_line': 1039, 'comment': '# In the next comparison, new_head may be self.max_size which is # logically the same point as tail == 0 and must still be within # the range tested.', 'include_SATD': False}, {'start_line': 1043, 'end_line': 1044, 'comment': '# Write will go past tail so tail needs to be pushed back # one past head to indicate full', 'include_SATD': False}, {'start_line': 1048, 'end_line': 1048, 'comment': '# Write the data', 'include_SATD': False}, {'start_line': 1050, 'end_line': 1050, 'comment': '# data now left', 'include_SATD': False}, {'start_line': 1052, 'end_line': 1052, 'comment': '# Push head back', 'include_SATD': False}], 'filename': 'nova/utils.py'}, {'a_comments': [{'start_line': 822, 'end_line': 822, 'comment': '# NOTE(vish): No need add the suffix to console.log', 'include_SATD': False}], 'b_comments': [{'start_line': 887, 'end_line': 887, 'comment': '# NOTE(vish): No need add the suffix', 'include_SATD': False}], 'filename': 'nova/virt/libvirt/connection.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_libvirt.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 945, 'end_line': 947, 'comment': '# We need one extra byte as the buffer is kept with # one byte free to avoid the head==tail full/empty # problem', 'include_SATD': False}, {'start_line': 963, 'end_line': 964, 'comment': ""# If the file doesn't contain a header, assume it is corrupt # and recreate"", 'include_SATD': False}, {'start_line': 966, 'end_line': 966, 'comment': '# initialise to empty', 'include_SATD': False}, {'start_line': 968, 'end_line': 968, 'comment': '# If head or tail point beyond the file then bomb out', 'include_SATD': False}, {'start_line': 975, 'end_line': 975, 'comment': '# File is zero bytes: treat as new file', 'include_SATD': False}, {'start_line': 984, 'end_line': 984, 'comment': '# head == tail means no data', 'include_SATD': False}, {'start_line': 990, 'end_line': 990, 'comment': '# Built-in open() cannot open in read/write mode without truncating.', 'include_SATD': False}, {'start_line': 1022, 'end_line': 1022, 'comment': '# Wraps around', 'include_SATD': False}, {'start_line': 1027, 'end_line': 1027, 'comment': '# Just from here to head', 'include_SATD': False}, {'start_line': 1035, 'end_line': 1035, 'comment': '# Amount of data to be written on this pass', 'include_SATD': False}, {'start_line': 1038, 'end_line': 1038, 'comment': '# Where head will be after this write', 'include_SATD': False}, {'start_line': 1041, 'end_line': 1043, 'comment': '# In the next comparison, new_head may be self.max_size which is # logically the same point as tail == 0 and must still be within # the range tested.', 'include_SATD': False}, {'start_line': 1047, 'end_line': 1048, 'comment': '# Write will go past tail so tail needs to be pushed back # one past head to indicate full', 'include_SATD': False}, {'start_line': 1052, 'end_line': 1052, 'comment': '# Write the data', 'include_SATD': False}, {'start_line': 1054, 'end_line': 1054, 'comment': '# data now left', 'include_SATD': False}, {'start_line': 1056, 'end_line': 1056, 'comment': '# Push head back', 'include_SATD': False}], 'filename': 'nova/utils.py'}, {'a_comments': [{'start_line': 824, 'end_line': 824, 'comment': '# NOTE(vish): No need add the suffix to console.log', 'include_SATD': False}], 'b_comments': [{'start_line': 893, 'end_line': 893, 'comment': '# NOTE(vish): No need add the suffix', 'include_SATD': False}], 'filename': 'nova/virt/libvirt/connection.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_libvirt.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 945, 'end_line': 947, 'comment': '# We need one extra byte as the buffer is kept with # one byte free to avoid the head==tail full/empty # problem', 'include_SATD': False}, {'start_line': 963, 'end_line': 964, 'comment': ""# If the file doesn't contain a header, assume it is corrupt # and recreate"", 'include_SATD': False}, {'start_line': 966, 'end_line': 966, 'comment': '# initialise to empty', 'include_SATD': False}, {'start_line': 968, 'end_line': 968, 'comment': '# If head or tail point beyond the file then bomb out', 'include_SATD': False}, {'start_line': 975, 'end_line': 975, 'comment': '# File is zero bytes: treat as new file', 'include_SATD': False}, {'start_line': 984, 'end_line': 984, 'comment': '# head == tail means no data', 'include_SATD': False}, {'start_line': 990, 'end_line': 990, 'comment': '# Built-in open() cannot open in read/write mode without truncating.', 'include_SATD': False}, {'start_line': 1022, 'end_line': 1022, 'comment': '# Wraps around', 'include_SATD': False}, {'start_line': 1027, 'end_line': 1027, 'comment': '# Just from here to head', 'include_SATD': False}, {'start_line': 1035, 'end_line': 1035, 'comment': '# Amount of data to be written on this pass', 'include_SATD': False}, {'start_line': 1038, 'end_line': 1038, 'comment': '# Where head will be after this write', 'include_SATD': False}, {'start_line': 1041, 'end_line': 1043, 'comment': '# In the next comparison, new_head may be self.max_size which is # logically the same point as tail == 0 and must still be within # the range tested.', 'include_SATD': False}, {'start_line': 1047, 'end_line': 1048, 'comment': '# Write will go past tail so tail needs to be pushed back # one past head to indicate full', 'include_SATD': False}, {'start_line': 1052, 'end_line': 1052, 'comment': '# Write the data', 'include_SATD': False}, {'start_line': 1054, 'end_line': 1054, 'comment': '# data now left', 'include_SATD': False}, {'start_line': 1056, 'end_line': 1056, 'comment': '# Push head back', 'include_SATD': False}], 'filename': 'nova/utils.py'}, {'a_comments': [{'start_line': 824, 'end_line': 824, 'comment': '# NOTE(vish): No need add the suffix to console.log', 'include_SATD': False}], 'b_comments': [{'start_line': 895, 'end_line': 895, 'comment': '# NOTE(vish): No need add the suffix', 'include_SATD': False}], 'filename': 'nova/virt/libvirt/connection.py'}]}]",3,21,2,ABANDONED,False,https://review.opendev.org/#/c/706,Move console.log to a ringbuffer,True,{},False,{},False,{}
239,716,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 686, 'end_line': 689, 'comment': '#        self.mox.StubOutWithMock(self.compute, ""recover_live_migration"") #        self.compute.recover_live_migration(self.context, instance_ref, #                                             dest=\'dest\')', 'include_SATD': False}], 'b_comments': [{'start_line': 631, 'end_line': 633, 'comment': '# _fake_network_info must be called before create_fake_libvirt_mock(), # as _fake_network_info calls utils.import_class() and # create_fake_libvirt_mock() mocks utils.import_class().', 'include_SATD': False}, {'start_line': 814, 'end_line': 816, 'comment': '# _fake_network_info must be called before create_fake_libvirt_mock(), # as _fake_network_info calls utils.import_class() and # create_fake_libvirt_mock() mocks utils.import_class().', 'include_SATD': False}], 'filename': 'nova/tests/test_libvirt.py'}, {'a_comments': [{'start_line': 1728, 'end_line': 1728, 'comment': '# Get image type and create empty disk image.', 'include_SATD': False}], 'b_comments': [{'start_line': 1728, 'end_line': 1729, 'comment': '# Get image type and create empty disk image, and # create backing file in case of qcow2.', 'include_SATD': False}, {'start_line': 1736, 'end_line': 1736, 'comment': '# Creating backing file follows same way as spawning instances.', 'include_SATD': True}], 'filename': 'nova/virt/libvirt/connection.py'}]}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/716,Fixed bug lp850602. Adding backing file copy operation on kvm block migration.,True,{'# Creating backing file follows same way as spawning instances.': 1},True,{},False,{}
240,735,"[{'revision': 1, 'changed_files': []}]",1,4,0,MERGED,True,https://review.opendev.org/#/c/735,install_venv: remove versioned M2Crypto dependency,False,{},False,{},False,{}
241,721,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/__init__.py'}, {'a_comments': [{'start_line': 743, 'end_line': 743, 'comment': '# Figure out can_share', 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 95, 'end_line': 95, 'comment': '# Figure out can_share', 'include_SATD': False}], 'filename': 'glance/api/v1/members.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/__init__.py'}, {'a_comments': [{'start_line': 743, 'end_line': 743, 'comment': '# Figure out can_share', 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 90, 'end_line': 90, 'comment': '# Figure out can_share', 'include_SATD': False}], 'filename': 'glance/api/v1/members.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/__init__.py'}, {'a_comments': [{'start_line': 743, 'end_line': 743, 'comment': '# Figure out can_share', 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 90, 'end_line': 90, 'comment': '# Figure out can_share', 'include_SATD': False}], 'filename': 'glance/api/v1/members.py'}]}]",3,8,0,MERGED,True,https://review.opendev.org/#/c/721,Extract image members into new Glance API controller,True,{},False,{},False,{}
242,739,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_images.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_images.py'}]}]",2,6,0,MERGED,True,https://review.opendev.org/#/c/739,"Updating image progress to be more granular. Before, the image progress had only 2 states, 0 and 100. Now it can be 0, 25, 50 or 100.",True,{},False,{},False,{}
243,724,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 142, 'end_line': 142, 'comment': '# Convert recurse_zones into a boolean', 'include_SATD': False}], 'b_comments': [{'start_line': 142, 'end_line': 142, 'comment': '# Convert local_zone_only into a boolean', 'include_SATD': False}], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [{'start_line': 142, 'end_line': 142, 'comment': '# Convert recurse_zones into a boolean', 'include_SATD': False}], 'b_comments': [{'start_line': 142, 'end_line': 142, 'comment': '# Convert local_zone_only into a boolean', 'include_SATD': False}], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [{'start_line': 975, 'end_line': 976, 'comment': '# Remaps are strings to translate to, or functions to call # to do the translating as defined by the table above.', 'include_SATD': False}], 'filename': 'nova/compute/api.py'}]}]",2,6,6,MERGED,True,https://review.opendev.org/#/c/724,Change 'recurse_zones' to 'local_zone_only'.,True,{},False,{},False,{}
244,726,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 460, 'end_line': 460, 'comment': '# Upload that image to the image service', 'include_SATD': False}, {'start_line': 467, 'end_line': 467, 'comment': '# Clean up', 'include_SATD': False}], 'b_comments': [{'start_line': 461, 'end_line': 461, 'comment': '# Upload that image to the image service', 'include_SATD': False}, {'start_line': 469, 'end_line': 469, 'comment': '# Clean up', 'include_SATD': False}], 'filename': 'nova/virt/libvirt/connection.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [{'start_line': 460, 'end_line': 460, 'comment': '# Upload that image to the image service', 'include_SATD': False}, {'start_line': 467, 'end_line': 467, 'comment': '# Clean up', 'include_SATD': False}], 'b_comments': [{'start_line': 461, 'end_line': 461, 'comment': '# Upload that image to the image service', 'include_SATD': False}, {'start_line': 469, 'end_line': 469, 'comment': '# Clean up', 'include_SATD': False}], 'filename': 'nova/virt/libvirt/connection.py'}]}]",2,6,0,MERGED,True,https://review.opendev.org/#/c/726,Enforce snapshot cleanup.,True,{},False,{},False,{}
245,742,"[{'revision': 1, 'changed_files': []}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/742,Added ==1.0.4 version specifier to kombu in pip-requires to ensure tests pass in a clean venv.,False,{},False,{},False,{}
246,743,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}]}]",2,4,0,MERGED,True,https://review.opendev.org/#/c/743,Adds the tenant id to the create images response Location header Fixes bug 862672,True,{},False,{},False,{}
247,755,"[{'revision': 1, 'changed_files': []}]",1,4,0,MERGED,True,https://review.opendev.org/#/c/755,make drive audit regexes detect 4-letter drives,False,{},False,{},False,{}
248,758,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/log.py'}]}]",1,4,0,MERGED,True,https://review.opendev.org/#/c/758,Ensure non-default FLAGS.logfile_mode is properly converted to an octet.,True,{},False,{},False,{}
249,736,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 74, 'end_line': 74, 'comment': '# Try installing it via easy_install...', 'include_SATD': False}], 'b_comments': [], 'filename': 'tools/install_venv.py'}]}]",1,5,0,MERGED,True,https://review.opendev.org/#/c/736,install_venv: add support for distro specific code,True,{},False,{},False,{}
250,737,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 110, 'end_line': 113, 'comment': '# # pip install M2Crypto fails on Fedora because of # weird differences with OpenSSL headers #', 'include_SATD': False}], 'filename': 'tools/install_venv.py'}]}]",1,8,0,MERGED,True,https://review.opendev.org/#/c/737,install_venv: pip install M2Crypto doesn't work on Fedora,True,{},False,{},False,{}
251,762,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/image/glance.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/image/test_glance.py'}]}]",1,3,0,ABANDONED,False,https://review.opendev.org/#/c/762,List both owned and public images,True,{},False,{},False,{}
252,730,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/api/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010-2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/registry/api/v1/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010-2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 146, 'end_line': 146, 'comment': '# Only admin gets to look for non-public images', 'include_SATD': False}, {'start_line': 165, 'end_line': 165, 'comment': ""# only allow admins to filter on 'deleted'"", 'include_SATD': False}, {'start_line': 185, 'end_line': 185, 'comment': '# if no value is configured, provide a sane default', 'include_SATD': False}, {'start_line': 245, 'end_line': 246, 'comment': '# NOTE(vish): This preserves the default value of showing only #             public images.', 'include_SATD': False}, {'start_line': 273, 'end_line': 274, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 300, 'end_line': 301, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 324, 'end_line': 324, 'comment': '# Ensure the image has a status set', 'include_SATD': False}, {'start_line': 327, 'end_line': 327, 'comment': '# Set up the image owner', 'include_SATD': False}, {'start_line': 359, 'end_line': 359, 'comment': ""# Prohibit modification of 'owner'"", 'include_SATD': False}, {'start_line': 384, 'end_line': 385, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 405, 'end_line': 407, 'comment': '# TODO(sirp): should this be a dict, or a list of dicts? # A plain dict is more convenient, but list of dicts would provide # access to created_at, etc', 'include_SATD': True}], 'filename': 'glance/registry/api/v1/images.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010-2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 44, 'end_line': 45, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 71, 'end_line': 71, 'comment': '# Make sure the image exists', 'include_SATD': False}, {'start_line': 78, 'end_line': 79, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 86, 'end_line': 86, 'comment': '# Can they manipulate the membership?', 'include_SATD': False}, {'start_line': 91, 'end_line': 91, 'comment': '# Get the membership list', 'include_SATD': False}, {'start_line': 95, 'end_line': 95, 'comment': '# Malformed entity...', 'include_SATD': False}, {'start_line': 101, 'end_line': 101, 'comment': '# Walk through the incoming memberships', 'include_SATD': False}, {'start_line': 108, 'end_line': 108, 'comment': '# Malformed entity...', 'include_SATD': False}, {'start_line': 112, 'end_line': 112, 'comment': '# Figure out what can_share should be', 'include_SATD': False}, {'start_line': 116, 'end_line': 116, 'comment': '# Try to find the corresponding membership', 'include_SATD': False}, {'start_line': 123, 'end_line': 123, 'comment': '# Are we overriding can_share?', 'include_SATD': False}, {'start_line': 132, 'end_line': 132, 'comment': '# Default can_share', 'include_SATD': False}, {'start_line': 136, 'end_line': 138, 'comment': ""# We now have a filtered list of memberships to add and # memberships to modify.  Let's start by walking through all # the existing image memberships..."", 'include_SATD': False}, {'start_line': 141, 'end_line': 141, 'comment': '# Just update the membership in place', 'include_SATD': False}, {'start_line': 146, 'end_line': 146, 'comment': '# Outdated one; needs to be deleted', 'include_SATD': False}, {'start_line': 149, 'end_line': 149, 'comment': '# Now add the non-existant ones', 'include_SATD': False}, {'start_line': 153, 'end_line': 153, 'comment': '# Make an appropriate result', 'include_SATD': False}, {'start_line': 174, 'end_line': 174, 'comment': '# Make sure the image exists', 'include_SATD': False}, {'start_line': 180, 'end_line': 181, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 188, 'end_line': 188, 'comment': '# Can they manipulate the membership?', 'include_SATD': False}, {'start_line': 193, 'end_line': 193, 'comment': '# Determine the applicable can_share value', 'include_SATD': False}, {'start_line': 199, 'end_line': 199, 'comment': '# Malformed entity...', 'include_SATD': False}, {'start_line': 203, 'end_line': 203, 'comment': '# Look up an existing membership...', 'include_SATD': False}, {'start_line': 229, 'end_line': 229, 'comment': '# Make sure the image exists', 'include_SATD': False}, {'start_line': 235, 'end_line': 236, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 243, 'end_line': 243, 'comment': '# Can they manipulate the membership?', 'include_SATD': False}, {'start_line': 248, 'end_line': 248, 'comment': '# Look up an existing membership', 'include_SATD': False}, {'start_line': 261, 'end_line': 261, 'comment': '# Make an appropriate result', 'include_SATD': False}, {'start_line': 293, 'end_line': 293, 'comment': '# Return the list of members with the given attribute mapping', 'include_SATD': False}], 'filename': 'glance/registry/api/v1/members.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/client.py'}, {'a_comments': [{'start_line': 149, 'end_line': 149, 'comment': '# Only admin gets to look for non-public images', 'include_SATD': False}, {'start_line': 168, 'end_line': 168, 'comment': ""# only allow admins to filter on 'deleted'"", 'include_SATD': False}, {'start_line': 188, 'end_line': 188, 'comment': '# if no value is configured, provide a sane default', 'include_SATD': False}, {'start_line': 248, 'end_line': 249, 'comment': '# NOTE(vish): This preserves the default value of showing only #             public images.', 'include_SATD': False}, {'start_line': 276, 'end_line': 277, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 303, 'end_line': 304, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 327, 'end_line': 327, 'comment': '# Ensure the image has a status set', 'include_SATD': False}, {'start_line': 330, 'end_line': 330, 'comment': '# Set up the image owner', 'include_SATD': False}, {'start_line': 362, 'end_line': 362, 'comment': ""# Prohibit modification of 'owner'"", 'include_SATD': False}, {'start_line': 387, 'end_line': 388, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 406, 'end_line': 407, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 450, 'end_line': 450, 'comment': '# Make sure the image exists', 'include_SATD': False}, {'start_line': 457, 'end_line': 458, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 465, 'end_line': 465, 'comment': '# Can they manipulate the membership?', 'include_SATD': False}, {'start_line': 469, 'end_line': 469, 'comment': '# Get the membership list', 'include_SATD': False}, {'start_line': 473, 'end_line': 473, 'comment': '# Malformed entity...', 'include_SATD': False}, {'start_line': 479, 'end_line': 479, 'comment': '# Walk through the incoming memberships', 'include_SATD': False}, {'start_line': 486, 'end_line': 486, 'comment': '# Malformed entity...', 'include_SATD': False}, {'start_line': 490, 'end_line': 490, 'comment': '# Figure out what can_share should be', 'include_SATD': False}, {'start_line': 494, 'end_line': 494, 'comment': '# Try to find the corresponding membership', 'include_SATD': False}, {'start_line': 501, 'end_line': 501, 'comment': '# Are we overriding can_share?', 'include_SATD': False}, {'start_line': 510, 'end_line': 510, 'comment': '# Default can_share', 'include_SATD': False}, {'start_line': 514, 'end_line': 516, 'comment': ""# We now have a filtered list of memberships to add and # memberships to modify.  Let's start by walking through all # the existing image memberships..."", 'include_SATD': False}, {'start_line': 519, 'end_line': 519, 'comment': '# Just update the membership in place', 'include_SATD': False}, {'start_line': 524, 'end_line': 524, 'comment': '# Outdated one; needs to be deleted', 'include_SATD': False}, {'start_line': 527, 'end_line': 527, 'comment': '# Now add the non-existant ones', 'include_SATD': False}, {'start_line': 531, 'end_line': 531, 'comment': '# Make an appropriate result', 'include_SATD': False}, {'start_line': 552, 'end_line': 552, 'comment': '# Make sure the image exists', 'include_SATD': False}, {'start_line': 558, 'end_line': 559, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 566, 'end_line': 566, 'comment': '# Can they manipulate the membership?', 'include_SATD': False}, {'start_line': 570, 'end_line': 570, 'comment': '# Determine the applicable can_share value', 'include_SATD': False}, {'start_line': 576, 'end_line': 576, 'comment': '# Malformed entity...', 'include_SATD': False}, {'start_line': 580, 'end_line': 580, 'comment': '# Look up an existing membership...', 'include_SATD': False}, {'start_line': 595, 'end_line': 595, 'comment': '# Make an appropriate result', 'include_SATD': False}, {'start_line': 607, 'end_line': 607, 'comment': '# Make sure the image exists', 'include_SATD': False}, {'start_line': 613, 'end_line': 614, 'comment': ""# If it's private and doesn't belong to them, don't let on # that it exists"", 'include_SATD': False}, {'start_line': 621, 'end_line': 621, 'comment': '# Can they manipulate the membership?', 'include_SATD': False}, {'start_line': 625, 'end_line': 625, 'comment': '# Look up an existing membership', 'include_SATD': False}, {'start_line': 638, 'end_line': 638, 'comment': '# Make an appropriate result', 'include_SATD': False}, {'start_line': 685, 'end_line': 687, 'comment': '# TODO(sirp): should this be a dict, or a list of dicts? # A plain dict is more convenient, but list of dicts would provide # access to created_at, etc', 'include_SATD': True}, {'start_line': 708, 'end_line': 708, 'comment': '# Return the list of members with the given attribute mapping', 'include_SATD': False}], 'b_comments': [{'start_line': 17, 'end_line': 18, 'comment': ""# NOTE(bcwaldon): This is done as a convenience for people # so they don't have to update their paste configs just yet."", 'include_SATD': False}], 'filename': 'glance/registry/server.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/stubs.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_api.py'}]}]",1,3,0,MERGED,True,https://review.opendev.org/#/c/730,Refactoring registry api controllers,True,"{'# TODO(sirp): should this be a dict, or a list of dicts? # A plain dict is more convenient, but list of dicts would provide # access to created_at, etc': 1}",True,"{'# TODO(sirp): should this be a dict, or a list of dicts? # A plain dict is more convenient, but list of dicts would provide # access to created_at, etc': 1}",True,{}
253,744,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 273, 'end_line': 273, 'comment': '# only loop through ipv4 addresses', 'include_SATD': False}], 'filename': 'nova/api/ec2/cloud.py'}]}]",1,4,0,MERGED,True,https://review.opendev.org/#/c/744,Fixes bug 862658 -- ec2 metadata issue getting IPs,True,{},False,{},False,{}
254,745,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [{'start_line': 428, 'end_line': 428, 'comment': '# GET /images/1 from registry in order to find Swift location', 'include_SATD': False}], 'b_comments': [{'start_line': 429, 'end_line': 430, 'comment': '# Find the location that was just added and use it as # the remote image location for the next image', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_swift.py'}, {'a_comments': [], 'b_comments': [{'start_line': 2170, 'end_line': 2170, 'comment': '# Check index and details...', 'include_SATD': False}, {'start_line': 2182, 'end_line': 2182, 'comment': '# Check GET', 'include_SATD': False}, {'start_line': 2188, 'end_line': 2188, 'comment': '# Check HEAD', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_clients.py'}]}]",1,3,0,MERGED,True,https://review.opendev.org/#/c/745,Fixes LP Bug#860862 - Security creds still shown,True,{},False,{},False,{}
255,746,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/consoles.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 16, 'comment': '# Copyright 2010-2011 OpenStack LLC. # Copyright 2011 Piston Cloud Computing, Inc. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 57, 'end_line': 57, 'comment': ""# ReservationID isn't sent back, hack it in there."", 'include_SATD': True}], 'filename': 'nova/tests/api/openstack/test_consoles.py'}]}]",1,4,1,MERGED,True,https://review.opendev.org/#/c/746,Fixes bug 862633 -- OS api consoles create() broken,True,"{""# ReservationID isn't sent back, hack it in there."": 1}",True,{},False,{}
256,771,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/least_cost.py'}]}]",1,4,0,ABANDONED,False,https://review.opendev.org/#/c/771,Least Cost function weights are now floats,True,{},False,{},False,{}
257,748,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_compute.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 174, 'end_line': 174, 'comment': '# Support templates like ""uuid-%(uuid)s"", etc.', 'include_SATD': False}, {'start_line': 177, 'end_line': 178, 'comment': '# prevent recursion if someone specifies %(name)s # %(name) will not be valid.', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1565, 'end_line': 1565, 'comment': '# not allowed.. default is uuid', 'include_SATD': False}], 'filename': 'nova/tests/test_compute.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 174, 'end_line': 174, 'comment': '# Support templates like ""uuid-%(uuid)s"", etc.', 'include_SATD': False}, {'start_line': 177, 'end_line': 178, 'comment': '# prevent recursion if someone specifies %(name)s # %(name)s will not be valid.', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1434, 'end_line': 1434, 'comment': '# not allowed.. default is uuid', 'include_SATD': False}], 'filename': 'nova/tests/test_compute.py'}]}]",3,6,1,MERGED,True,https://review.opendev.org/#/c/748,Fixes bug 862637 -- make instance_name_template more flexible,True,{},False,{},False,{}
258,786,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migration.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migration.py'}]}]",2,5,1,MERGED,True,https://review.opendev.org/#/c/786,Allow db schema downgrades,True,{},False,{},False,{}
259,787,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/network/linux_net.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/network/linux_net.py'}]}]",2,9,0,MERGED,True,https://review.opendev.org/#/c/787,Use new ip addr del syntax,True,{},False,{},False,{}
260,788,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/network/linux_net.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/network/linux_net.py'}]}]",2,6,1,MERGED,True,https://review.opendev.org/#/c/788,Handle pidfile exception for dnsmasq,True,{},False,{},False,{}
261,791,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/driver.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/utils.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/utils.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/utils.py'}]}]",4,14,2,MERGED,True,https://review.opendev.org/#/c/791,Improve the liveness checking for services,True,{},False,{},False,{}
262,761,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 293, 'end_line': 297, 'comment': '# NOTE(parthi): only allow image deletions if the user # is a member of the project owning the image # TODO Currently this access control breaks if # 1. Image is not owned by a project # 2. Deleting user is not bound a project', 'include_SATD': True}], 'filename': 'nova/image/glance.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/image/test_glance.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 295, 'end_line': 300, 'comment': '# NOTE(parthi): only allow image deletions if the user # is a member of the project owning the image, in case of # setup without keystone # TODO Currently this access control breaks if # 1. Image is not owned by a project # 2. Deleting user is not bound a project', 'include_SATD': True}], 'filename': 'nova/image/glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 401, 'end_line': 401, 'comment': '# this test is only relevant for deprecated auth mode', 'include_SATD': False}], 'filename': 'nova/tests/image/test_glance.py'}]}]",2,6,3,MERGED,True,https://review.opendev.org/#/c/761,Improve access check on images,True,"{'# NOTE(parthi): only allow image deletions if the user # is a member of the project owning the image # TODO Currently this access control breaks if # 1. Image is not owned by a project # 2. Deleting user is not bound a project': 1, '# NOTE(parthi): only allow image deletions if the user # is a member of the project owning the image, in case of # setup without keystone # TODO Currently this access control breaks if # 1. Image is not owned by a project # 2. Deleting user is not bound a project': 2}",True,{},False,{}
263,794,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/__init__.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/auth/manager.py'}]}]",2,7,0,MERGED,True,https://review.opendev.org/#/c/794,Stop returning correct password on api calls,True,{},False,{},False,{}
264,796,"[{'revision': 1, 'changed_files': []}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/796,Fix documentation leftover from swift-stats rename,False,{},False,{},False,{}
265,756,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 513, 'end_line': 513, 'comment': '#generate usage info.', 'include_SATD': False}, {'start_line': 1738, 'end_line': 1740, 'comment': ""# Not all hypervisors have bandwidth polling implemented yet. # If they don't id doesn't break anything, they just don't get the # info in the usage events. (mdragon)"", 'include_SATD': False}], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 2, 'end_line': 2, 'comment': '# Copyright (c) 2011 OpenStack, LLC.', 'include_SATD': False}], 'filename': 'nova/compute/utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1490, 'end_line': 1490, 'comment': '####################', 'include_SATD': False}], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 3687, 'end_line': 3687, 'comment': '####################', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 MORITA Kazutaka. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 41, 'end_line': 42, 'comment': ""# Upgrade operations go here. Don't create your own engine; # bind migrate_engine to your metadata"", 'include_SATD': False}, {'start_line': 55, 'end_line': 55, 'comment': '# Operations to reverse the above upgrade go here.', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/051_add_bw_usage_data_cache.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/tests/test_compute_utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 302, 'end_line': 302, 'comment': '# we are currently only using multiples of 1 unit (mdragon)', 'include_SATD': False}], 'filename': 'nova/utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 513, 'end_line': 513, 'comment': '#generate usage info.', 'include_SATD': False}, {'start_line': 1738, 'end_line': 1740, 'comment': ""# Not all hypervisors have bandwidth polling implemented yet. # If they don't id doesn't break anything, they just don't get the # info in the usage events. (mdragon)"", 'include_SATD': False}], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 2, 'end_line': 2, 'comment': '# Copyright (c) 2011 OpenStack, LLC.', 'include_SATD': False}], 'filename': 'nova/compute/utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1490, 'end_line': 1490, 'comment': '####################', 'include_SATD': False}], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 3687, 'end_line': 3687, 'comment': '####################', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 MORITA Kazutaka. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 41, 'end_line': 42, 'comment': ""# Upgrade operations go here. Don't create your own engine; # bind migrate_engine to your metadata"", 'include_SATD': False}, {'start_line': 55, 'end_line': 55, 'comment': '# Operations to reverse the above upgrade go here.', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/051_add_bw_usage_data_cache.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/tests/test_compute_utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 302, 'end_line': 302, 'comment': '# we are currently only using multiples of 1 unit (mdragon)', 'include_SATD': False}], 'filename': 'nova/utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 538, 'end_line': 538, 'comment': '#generate usage info.', 'include_SATD': False}, {'start_line': 1762, 'end_line': 1764, 'comment': ""# Not all hypervisors have bandwidth polling implemented yet. # If they don't id doesn't break anything, they just don't get the # info in the usage events. (mdragon)"", 'include_SATD': False}], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 2, 'end_line': 2, 'comment': '# Copyright (c) 2011 OpenStack, LLC.', 'include_SATD': False}], 'filename': 'nova/compute/utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1490, 'end_line': 1490, 'comment': '####################', 'include_SATD': False}], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 3687, 'end_line': 3687, 'comment': '####################', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 MORITA Kazutaka. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 41, 'end_line': 42, 'comment': ""# Upgrade operations go here. Don't create your own engine; # bind migrate_engine to your metadata"", 'include_SATD': False}, {'start_line': 55, 'end_line': 55, 'comment': '# Operations to reverse the above upgrade go here.', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/051_add_bw_usage_data_cache.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/tests/test_compute_utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 302, 'end_line': 302, 'comment': '# we are currently only using multiples of 1 unit (mdragon)', 'include_SATD': False}], 'filename': 'nova/utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 538, 'end_line': 538, 'comment': '#generate usage info.', 'include_SATD': False}, {'start_line': 1762, 'end_line': 1764, 'comment': ""# Not all hypervisors have bandwidth polling implemented yet. # If they don't id doesn't break anything, they just don't get the # info in the usage events. (mdragon)"", 'include_SATD': False}], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 2, 'end_line': 2, 'comment': '# Copyright (c) 2011 OpenStack, LLC.', 'include_SATD': False}], 'filename': 'nova/compute/utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1495, 'end_line': 1495, 'comment': '####################', 'include_SATD': False}], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 3706, 'end_line': 3706, 'comment': '####################', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 MORITA Kazutaka. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 41, 'end_line': 42, 'comment': ""# Upgrade operations go here. Don't create your own engine; # bind migrate_engine to your metadata"", 'include_SATD': False}, {'start_line': 55, 'end_line': 55, 'comment': '# Operations to reverse the above upgrade go here.', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/051_add_bw_usage_data_cache.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/tests/test_compute_utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 302, 'end_line': 302, 'comment': '# we are currently only using multiples of 1 unit (mdragon)', 'include_SATD': False}], 'filename': 'nova/utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}]}, {'revision': 5, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 538, 'end_line': 538, 'comment': '#generate usage info.', 'include_SATD': False}, {'start_line': 1762, 'end_line': 1764, 'comment': ""# Not all hypervisors have bandwidth polling implemented yet. # If they don't id doesn't break anything, they just don't get the # info in the usage events. (mdragon)"", 'include_SATD': False}], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 2, 'end_line': 2, 'comment': '# Copyright (c) 2011 OpenStack, LLC.', 'include_SATD': False}], 'filename': 'nova/compute/utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1495, 'end_line': 1495, 'comment': '####################', 'include_SATD': False}], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 3706, 'end_line': 3706, 'comment': '####################', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 MORITA Kazutaka. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 41, 'end_line': 42, 'comment': ""# Upgrade operations go here. Don't create your own engine; # bind migrate_engine to your metadata"", 'include_SATD': False}, {'start_line': 55, 'end_line': 55, 'comment': '# Operations to reverse the above upgrade go here.', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/052_add_bw_usage_data_cache.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/tests/test_compute_utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 302, 'end_line': 302, 'comment': '# we are currently only using multiples of 1 unit (mdragon)', 'include_SATD': False}], 'filename': 'nova/utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}]}, {'revision': 6, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 569, 'end_line': 569, 'comment': '#generate usage info.', 'include_SATD': False}, {'start_line': 1826, 'end_line': 1828, 'comment': ""# Not all hypervisors have bandwidth polling implemented yet. # If they don't id doesn't break anything, they just don't get the # info in the usage events. (mdragon)"", 'include_SATD': False}], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 14, 'comment': '# Copyright (c) 2011 OpenStack, LLC. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/compute/utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1461, 'end_line': 1461, 'comment': '####################', 'include_SATD': False}], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 3655, 'end_line': 3655, 'comment': '####################', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 MORITA Kazutaka. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 41, 'end_line': 42, 'comment': ""# Upgrade operations go here. Don't create your own engine; # bind migrate_engine to your metadata"", 'include_SATD': False}, {'start_line': 55, 'end_line': 55, 'comment': '# Operations to reverse the above upgrade go here.', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/054_add_bw_usage_data_cache.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/tests/test_compute_utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 302, 'end_line': 302, 'comment': '# we are currently only using multiples of 1 unit (mdragon)', 'include_SATD': False}], 'filename': 'nova/utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}]}]",6,18,4,MERGED,True,https://review.opendev.org/#/c/756,Adds more usage data to Nova's usage notifications.,True,{},False,{},False,{}
266,797,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'setup.py'}]}]",1,6,0,ABANDONED,False,https://review.opendev.org/#/c/797,Allow shorter periods for instance audit,True,{},False,{},False,{}
267,807,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/utils.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/utils.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/utils.py'}]}]",3,6,0,MERGED,True,https://review.opendev.org/#/c/807,Include original exception in ClassNotFound exception,True,{},False,{},False,{}
268,768,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/abstract_scheduler.py'}, {'a_comments': [{'start_line': 41, 'end_line': 41, 'comment': '# Make sure that the requested filter is legitimate.', 'include_SATD': False}], 'b_comments': [{'start_line': 42, 'end_line': 42, 'comment': '# Not specified; use the default', 'include_SATD': False}, {'start_line': 47, 'end_line': 47, 'comment': ""# Get the full list (only considering 'compute' services)"", 'include_SATD': False}, {'start_line': 52, 'end_line': 52, 'comment': '# Make sure that the requested filters are legitimate.', 'include_SATD': False}], 'filename': 'nova/scheduler/base_scheduler.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/filters/abstract_filter.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/filters/all_hosts_filter.py'}, {'a_comments': [], 'b_comments': [{'start_line': 47, 'end_line': 48, 'comment': ""# In case the capabilities have not yet been extracted from # the zone manager's services dict..."", 'include_SATD': False}], 'filename': 'nova/scheduler/filters/instance_type_filter.py'}, {'a_comments': [], 'b_comments': [{'start_line': 141, 'end_line': 141, 'comment': '# Host is disabled', 'include_SATD': False}], 'filename': 'nova/scheduler/filters/json_filter.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/host_filter.py'}, {'a_comments': [], 'b_comments': [{'start_line': 121, 'end_line': 121, 'comment': '# Schedulers only support compute right now.', 'include_SATD': False}], 'filename': 'nova/scheduler/least_cost.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_abstract_scheduler.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_host_filter.py'}, {'a_comments': [{'start_line': 137, 'end_line': 139, 'comment': '# Costs are normalized so over 10 hosts, each host with increasing # free ram will cost 1/N more. Since the lowest cost host has some # free ram, we add in the 1/N for the base_cost', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_least_cost_scheduler.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/abstract_scheduler.py'}, {'a_comments': [{'start_line': 41, 'end_line': 41, 'comment': '# Make sure that the requested filter is legitimate.', 'include_SATD': False}], 'b_comments': [{'start_line': 42, 'end_line': 42, 'comment': '# Not specified; use the default', 'include_SATD': False}, {'start_line': 47, 'end_line': 47, 'comment': ""# Get the full list (only considering 'compute' services)"", 'include_SATD': False}, {'start_line': 52, 'end_line': 52, 'comment': '# Make sure that the requested filters are legitimate.', 'include_SATD': False}], 'filename': 'nova/scheduler/base_scheduler.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/filters/abstract_filter.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/filters/all_hosts_filter.py'}, {'a_comments': [], 'b_comments': [{'start_line': 47, 'end_line': 48, 'comment': ""# In case the capabilities have not yet been extracted from # the zone manager's services dict..."", 'include_SATD': False}], 'filename': 'nova/scheduler/filters/instance_type_filter.py'}, {'a_comments': [], 'b_comments': [{'start_line': 141, 'end_line': 141, 'comment': '# Host is disabled', 'include_SATD': False}], 'filename': 'nova/scheduler/filters/json_filter.py'}, {'a_comments': [{'start_line': 34, 'end_line': 37, 'comment': ""# NOTE(Vek): Even though we don't use filters in here anywhere, we #            depend on default_host_filter being available in FLAGS, #            and that happens only when filters/abstract_filter.py is #            imported."", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/scheduler/host_filter.py'}, {'a_comments': [], 'b_comments': [{'start_line': 121, 'end_line': 121, 'comment': '# Schedulers only support compute right now.', 'include_SATD': False}], 'filename': 'nova/scheduler/least_cost.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_abstract_scheduler.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_host_filter.py'}, {'a_comments': [{'start_line': 137, 'end_line': 139, 'comment': '# Costs are normalized so over 10 hosts, each host with increasing # free ram will cost 1/N more. Since the lowest cost host has some # free ram, we add in the 1/N for the base_cost', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_least_cost_scheduler.py'}]}]",2,6,3,MERGED,True,https://review.opendev.org/#/c/768,Restructure host filtering to be easier to use.,True,{},False,{},False,{}
269,810,"[{'revision': 1, 'changed_files': []}]",1,5,0,ABANDONED,False,https://review.opendev.org/#/c/810,Add myself to the Authors file,False,{},False,{},False,{}
270,789,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 162, 'end_line': 163, 'comment': '# ensure the bridge is available and iptable rules are # inserted after a restart of service', 'include_SATD': False}], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/linux_net.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1678, 'end_line': 1678, 'comment': '# injected failure', 'include_SATD': False}, {'start_line': 1696, 'end_line': 1696, 'comment': '# fake network', 'include_SATD': False}, {'start_line': 1709, 'end_line': 1709, 'comment': '# verified call', 'include_SATD': False}], 'filename': 'nova/tests/test_compute.py'}]}]",1,11,4,ABANDONED,False,https://review.opendev.org/#/c/789,Improve the vlan/bridge startup,True,{},False,{},False,{}
271,803,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 199, 'end_line': 199, 'comment': ""# NOTE(dprince): the extensions alias is used as the 'id' for show"", 'include_SATD': False}], 'b_comments': [{'start_line': 200, 'end_line': 200, 'comment': ""# NOTE(dprince): the extensions alias is used as the 'id' for show"", 'include_SATD': False}], 'filename': 'nova/api/openstack/extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_extensions.py'}]}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/803,Make sure unknown extensions return 404,True,{},False,{},False,{}
272,802,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 52, 'end_line': 52, 'comment': '## Fault Wrapper around all EC2 requests ##', 'include_SATD': True}], 'filename': 'nova/api/ec2/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 12, 'comment': '#    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 36, 'end_line': 36, 'comment': '# Extract the status code', 'include_SATD': False}, {'start_line': 38, 'end_line': 38, 'comment': '# Extract exception messsage', 'include_SATD': False}, {'start_line': 41, 'end_line': 41, 'comment': '# Return custom message for 501 NotImplemented Status', 'include_SATD': False}, {'start_line': 45, 'end_line': 45, 'comment': '# Cast code into string', 'include_SATD': False}], 'filename': 'nova/api/ec2/faults.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/__init__.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 52, 'end_line': 52, 'comment': '## Fault Wrapper around all EC2 requests ##', 'include_SATD': True}], 'filename': 'nova/api/ec2/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 12, 'comment': '#    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/api/ec2/faults.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 12, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4 # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/tests/api/ec2/test_faults.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 52, 'end_line': 52, 'comment': '## Fault Wrapper around all EC2 requests ##', 'include_SATD': True}], 'filename': 'nova/api/ec2/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 12, 'comment': '#    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/api/ec2/faults.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 12, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4 # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/tests/api/ec2/test_faults.py'}]}]",3,12,6,MERGED,True,https://review.opendev.org/#/c/802,Capture exceptions happening in API layer,True,{'## Fault Wrapper around all EC2 requests ##': 1},True,{},False,{}
273,808,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 118, 'end_line': 118, 'comment': '# Ensure the accounts we handle have been created', 'include_SATD': False}], 'b_comments': [], 'filename': 'swift/common/middleware/tempauth.py'}]}]",1,3,0,MERGED,True,https://review.opendev.org/#/c/808,Use account_autocreate for tempauth.,True,{},False,{},False,{}
274,801,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 Grid Dynamics # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 118, 'end_line': 118, 'comment': '# TODO(nsokolov): implement full CRUD, not done right in nova too', 'include_SATD': True}], 'filename': 'nova/api/openstack/contrib/networks.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 13, 'comment': '# Copyright 2011 Grid Dynamics # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 163, 'end_line': 163, 'comment': '# admin required', 'include_SATD': False}, {'start_line': 182, 'end_line': 182, 'comment': '# not present', 'include_SATD': False}, {'start_line': 215, 'end_line': 215, 'comment': '# check it was really deleted', 'include_SATD': False}, {'start_line': 223, 'end_line': 223, 'comment': '# not present', 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/contrib/test_networks.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_extensions.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 Grid Dynamics # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 118, 'end_line': 118, 'comment': '# TODO(nsokolov): implement full CRUD, not done right in nova too', 'include_SATD': True}], 'filename': 'nova/api/openstack/contrib/networks.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 13, 'comment': '# Copyright 2011 Grid Dynamics # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 163, 'end_line': 163, 'comment': '# admin required', 'include_SATD': False}, {'start_line': 182, 'end_line': 182, 'comment': '# not present', 'include_SATD': False}, {'start_line': 215, 'end_line': 215, 'comment': '# check it was really deleted', 'include_SATD': False}, {'start_line': 223, 'end_line': 223, 'comment': '# not present', 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/contrib/test_networks.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_extensions.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 Grid Dynamics # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 110, 'end_line': 110, 'comment': '# TODO(nsokolov): implement full CRUD, not done right in nova too', 'include_SATD': True}], 'filename': 'nova/api/openstack/contrib/networks.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/extensions.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 13, 'comment': '# Copyright 2011 Grid Dynamics # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 163, 'end_line': 163, 'comment': '# admin required', 'include_SATD': False}, {'start_line': 182, 'end_line': 182, 'comment': '# not present', 'include_SATD': False}, {'start_line': 215, 'end_line': 215, 'comment': '# check it was really deleted', 'include_SATD': False}, {'start_line': 223, 'end_line': 223, 'comment': '# not present', 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/contrib/test_networks.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_extensions.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 Grid Dynamics # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 110, 'end_line': 110, 'comment': '# TODO(nsokolov): implement full CRUD, not done right in nova too', 'include_SATD': True}], 'filename': 'nova/api/openstack/contrib/networks.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/extensions.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 13, 'comment': '# Copyright 2011 Grid Dynamics # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 163, 'end_line': 163, 'comment': '# admin required', 'include_SATD': False}, {'start_line': 182, 'end_line': 182, 'comment': '# not present', 'include_SATD': False}, {'start_line': 215, 'end_line': 215, 'comment': '# check it was really deleted', 'include_SATD': False}, {'start_line': 223, 'end_line': 223, 'comment': '# not present', 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/contrib/test_networks.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_extensions.py'}]}, {'revision': 5, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 16, 'comment': '# Copyright 2011 Grid Dynamics # Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/api/openstack/v2/contrib/networks.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/v2/extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 14, 'comment': '# Copyright 2011 Grid Dynamics # Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 73, 'end_line': 73, 'comment': '#NOTE(bcwaldon): this does nothing other than check for existance', 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/v2/contrib/test_networks.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/v2/test_extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/fake_network.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_network.py'}]}]",5,29,2,MERGED,True,https://review.opendev.org/#/c/801,Add 'os-networks' extension,True,"{'# TODO(nsokolov): implement full CRUD, not done right in nova too': 1}",True,{},False,{}
275,820,"[{'revision': 1, 'changed_files': []}]",1,3,0,MERGED,True,https://review.opendev.org/#/c/820,Fix documentation example.,False,{},False,{},False,{}
276,823,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'tools/xenserver/vm_vdi_cleaner.py'}]}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/823,Continue to the next iteration of the loop if an instance is not found.,True,{},False,{},False,{}
277,812,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/limits.py'}, {'a_comments': [], 'b_comments': [{'start_line': 256, 'end_line': 256, 'comment': '# set routing arguments.', 'include_SATD': False}, {'start_line': 271, 'end_line': 271, 'comment': '# set routing arguments.', 'include_SATD': False}, {'start_line': 286, 'end_line': 286, 'comment': '# set routing arguments.', 'include_SATD': False}, {'start_line': 301, 'end_line': 301, 'comment': '# set routing arguments.', 'include_SATD': False}, {'start_line': 315, 'end_line': 315, 'comment': '# set routing arguments.', 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/test_limits.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/limits.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_limits.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/v2/limits.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/v2/test_limits.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/v2/limits.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/v2/test_limits.py'}]}]",4,23,0,ABANDONED,False,https://review.opendev.org/#/c/812,Add missing methods to limit controller,True,{},False,{},False,{}
278,813,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [{'start_line': 101, 'end_line': 101, 'comment': '# Test the wsgi sever through SSL communication', 'include_SATD': False}, {'start_line': 104, 'end_line': 105, 'comment': '# An Echo app that runs as a wsgi server and replies back # to the requests', 'include_SATD': False}, {'start_line': 110, 'end_line': 110, 'comment': '# Initialize the server', 'include_SATD': False}, {'start_line': 114, 'end_line': 114, 'comment': '# Test server port', 'include_SATD': False}, {'start_line': 117, 'end_line': 118, 'comment': '# Enable SSL for API communication and provide # certificate and private key', 'include_SATD': False}, {'start_line': 123, 'end_line': 123, 'comment': '# Start listening for requrests', 'include_SATD': False}, {'start_line': 126, 'end_line': 126, 'comment': '# Connect to socket to check the response', 'include_SATD': False}, {'start_line': 134, 'end_line': 134, 'comment': '# Tear down', 'include_SATD': False}], 'filename': 'nova/tests/test_wsgi.py'}, {'a_comments': [], 'b_comments': [{'start_line': 83, 'end_line': 92, 'comment': '# Inititalize the server socket. Supports both # SSL and non-SSL communication # Three new flags have been introduced in flags.py. # These can be overridden through nova.conf # # enable_api_ssl: (true/false) Enable or disable SSL # certificate: Path to the server certificate # privatekey: Path to the server private key # # The users can override the above three flags in nova.conf', 'include_SATD': False}, {'start_line': 103, 'end_line': 103, 'comment': '# Check if certificate path exists in nova configuration', 'include_SATD': False}, {'start_line': 108, 'end_line': 108, 'comment': '# Check if private key path exists in nova configuration', 'include_SATD': False}, {'start_line': 113, 'end_line': 117, 'comment': '# Wrapping a normal socket into a SSL socket. # Additional Parameters: # certfile: The certificate of a server signed # by CA (Certification Authority) # keyfile: The private key of the server', 'include_SATD': False}, {'start_line': 127, 'end_line': 127, 'comment': '# Creating a normal socket', 'include_SATD': False}], 'filename': 'nova/wsgi.py'}]}]",1,8,12,ABANDONED,False,https://review.opendev.org/#/c/813,Add SSL support to API,True,{},False,{},False,{}
279,814,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 59, 'end_line': 60, 'comment': '# Raise NotImplemented exception for Admin specific request if # admin flag is set to false in nova.conf', 'include_SATD': False}, {'start_line': 63, 'end_line': 63, 'comment': '## Raise InvalidRequest exception for EC2 Admin interface ##', 'include_SATD': False}], 'filename': 'nova/api/ec2/apirequest.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}]}]",1,8,1,MERGED,True,https://review.opendev.org/#/c/814,Enable admin access to EC2 API server,True,{},False,{},False,{}
280,826,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'tools/xenserver/vm_vdi_cleaner.py'}]}]",1,1,0,MERGED,True,https://review.opendev.org/#/c/826,Reference orphaned_instance instead of instance.,True,{},False,{},False,{}
281,829,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/network/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}]}]",1,3,0,MERGED,True,https://review.opendev.org/#/c/829,Remove duplicated functions.,True,{},False,{},False,{}
282,809,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 273, 'end_line': 273, 'comment': '# only loop through ipv4 addresses', 'include_SATD': False}, {'start_line': 277, 'end_line': 277, 'comment': '# Allows a short circuit if we just need any floater.', 'include_SATD': False}, {'start_line': 290, 'end_line': 290, 'comment': '# only look at ipv4 addresses', 'include_SATD': False}, {'start_line': 371, 'end_line': 372, 'comment': '# This ensures that all attributes of the instance # are populated.', 'include_SATD': False}, {'start_line': 410, 'end_line': 410, 'comment': '# public-keys should be in meta-data only if user specified one', 'include_SATD': False}, {'start_line': 422, 'end_line': 422, 'comment': '# TODO(vish): store ancestor ids', 'include_SATD': True}, {'start_line': 424, 'end_line': 424, 'comment': '# TODO(vish): store product codes', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [{'start_line': 163, 'end_line': 163, 'comment': '# only loop through ipv4 addresses', 'include_SATD': False}, {'start_line': 167, 'end_line': 167, 'comment': '# Allows a short circuit if we just need any floater.', 'include_SATD': False}, {'start_line': 187, 'end_line': 188, 'comment': '# NOTE(todd): see how /latest/meta-data/public-keys/0 works # so stop here, run callback, then finish lookup', 'include_SATD': False}, {'start_line': 218, 'end_line': 219, 'comment': '#TODO(wwolf): once we have ec2_id -> glance_id mapping # in place, this wont be necessary', 'include_SATD': True}, {'start_line': 228, 'end_line': 229, 'comment': '#TODO(wwolf): once we have ec2_id -> glance_id mapping # in place, this wont be necessary', 'include_SATD': True}, {'start_line': 238, 'end_line': 239, 'comment': '#TODO(wwolf): once we have ec2_id -> glance_id mapping # in place, this wont be necessary', 'include_SATD': True}, {'start_line': 261, 'end_line': 261, 'comment': ""# 'ephemeralN', 'swap' and ebs"", 'include_SATD': False}, {'start_line': 267, 'end_line': 267, 'comment': '# ebs volume case', 'include_SATD': False}, {'start_line': 279, 'end_line': 281, 'comment': ""# NOTE(yamahata): I'm not sure how ebs device should be numbered. #                 Right now sort by device name for deterministic #                 result."", 'include_SATD': False}, {'start_line': 327, 'end_line': 327, 'comment': '# only look at ipv4 addresses', 'include_SATD': False}], 'filename': 'nova/api/ec2/metadatarequesthandler.py'}, {'a_comments': [], 'b_comments': [{'start_line': 162, 'end_line': 162, 'comment': '# keys are built on the fly, and return a dict', 'include_SATD': False}], 'filename': 'nova/tests/test_metadata.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [{'start_line': 273, 'end_line': 273, 'comment': '# only loop through ipv4 addresses', 'include_SATD': False}, {'start_line': 277, 'end_line': 277, 'comment': '# Allows a short circuit if we just need any floater.', 'include_SATD': False}, {'start_line': 290, 'end_line': 290, 'comment': '# only look at ipv4 addresses', 'include_SATD': False}, {'start_line': 371, 'end_line': 372, 'comment': '# This ensures that all attributes of the instance # are populated.', 'include_SATD': False}, {'start_line': 410, 'end_line': 410, 'comment': '# public-keys should be in meta-data only if user specified one', 'include_SATD': False}, {'start_line': 422, 'end_line': 422, 'comment': '# TODO(vish): store ancestor ids', 'include_SATD': True}, {'start_line': 424, 'end_line': 424, 'comment': '# TODO(vish): store product codes', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [{'start_line': 163, 'end_line': 163, 'comment': '# only loop through ipv4 addresses', 'include_SATD': False}, {'start_line': 167, 'end_line': 167, 'comment': '# Allows a short circuit if we just need any floater.', 'include_SATD': False}, {'start_line': 187, 'end_line': 188, 'comment': '# NOTE(todd): see how /latest/meta-data/public-keys/0 works # so stop here, run callback, then finish lookup', 'include_SATD': False}, {'start_line': 218, 'end_line': 219, 'comment': '#TODO(wwolf): once we have ec2_id -> glance_id mapping # in place, this wont be necessary', 'include_SATD': True}, {'start_line': 228, 'end_line': 229, 'comment': '#TODO(wwolf): once we have ec2_id -> glance_id mapping # in place, this wont be necessary', 'include_SATD': True}, {'start_line': 238, 'end_line': 239, 'comment': '#TODO(wwolf): once we have ec2_id -> glance_id mapping # in place, this wont be necessary', 'include_SATD': True}, {'start_line': 261, 'end_line': 261, 'comment': ""# 'ephemeralN', 'swap' and ebs"", 'include_SATD': False}, {'start_line': 267, 'end_line': 267, 'comment': '# ebs volume case', 'include_SATD': False}, {'start_line': 279, 'end_line': 281, 'comment': ""# NOTE(yamahata): I'm not sure how ebs device should be numbered. #                 Right now sort by device name for deterministic #                 result."", 'include_SATD': False}, {'start_line': 327, 'end_line': 327, 'comment': '# only look at ipv4 addresses', 'include_SATD': False}], 'filename': 'nova/api/ec2/metadatarequesthandler.py'}, {'a_comments': [], 'b_comments': [{'start_line': 162, 'end_line': 162, 'comment': '# keys are built on the fly, and return a dict', 'include_SATD': False}], 'filename': 'nova/tests/test_metadata.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [{'start_line': 273, 'end_line': 273, 'comment': '# only loop through ipv4 addresses', 'include_SATD': False}, {'start_line': 277, 'end_line': 277, 'comment': '# Allows a short circuit if we just need any floater.', 'include_SATD': False}, {'start_line': 290, 'end_line': 290, 'comment': '# only look at ipv4 addresses', 'include_SATD': False}, {'start_line': 371, 'end_line': 372, 'comment': '# This ensures that all attributes of the instance # are populated.', 'include_SATD': False}, {'start_line': 410, 'end_line': 410, 'comment': '# public-keys should be in meta-data only if user specified one', 'include_SATD': False}, {'start_line': 422, 'end_line': 422, 'comment': '# TODO(vish): store ancestor ids', 'include_SATD': True}, {'start_line': 424, 'end_line': 424, 'comment': '# TODO(vish): store product codes', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [{'start_line': 163, 'end_line': 163, 'comment': '# only loop through ipv4 addresses', 'include_SATD': False}, {'start_line': 167, 'end_line': 167, 'comment': '# Allows a short circuit if we just need any floater.', 'include_SATD': False}, {'start_line': 187, 'end_line': 188, 'comment': '# NOTE(todd): see how /latest/meta-data/public-keys/0 works # so stop here, run callback, then finish lookup', 'include_SATD': False}, {'start_line': 218, 'end_line': 219, 'comment': '#TODO(wwolf): once we have ec2_id -> glance_id mapping # in place, this wont be necessary', 'include_SATD': True}, {'start_line': 228, 'end_line': 229, 'comment': '#TODO(wwolf): once we have ec2_id -> glance_id mapping # in place, this wont be necessary', 'include_SATD': True}, {'start_line': 238, 'end_line': 239, 'comment': '#TODO(wwolf): once we have ec2_id -> glance_id mapping # in place, this wont be necessary', 'include_SATD': True}, {'start_line': 261, 'end_line': 261, 'comment': ""# 'ephemeralN', 'swap' and ebs"", 'include_SATD': False}, {'start_line': 267, 'end_line': 267, 'comment': '# ebs volume case', 'include_SATD': False}, {'start_line': 279, 'end_line': 281, 'comment': ""# NOTE(yamahata): I'm not sure how ebs device should be numbered. #                 Right now sort by device name for deterministic #                 result."", 'include_SATD': False}, {'start_line': 327, 'end_line': 327, 'comment': '# only look at ipv4 addresses', 'include_SATD': False}], 'filename': 'nova/api/ec2/metadatarequesthandler.py'}, {'a_comments': [], 'b_comments': [{'start_line': 162, 'end_line': 162, 'comment': '# keys are built on the fly, and return a dict', 'include_SATD': False}], 'filename': 'nova/tests/test_metadata.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [{'start_line': 273, 'end_line': 273, 'comment': '# only loop through ipv4 addresses', 'include_SATD': False}, {'start_line': 277, 'end_line': 277, 'comment': '# Allows a short circuit if we just need any floater.', 'include_SATD': False}, {'start_line': 290, 'end_line': 290, 'comment': '# only look at ipv4 addresses', 'include_SATD': False}, {'start_line': 371, 'end_line': 372, 'comment': '# This ensures that all attributes of the instance # are populated.', 'include_SATD': False}, {'start_line': 410, 'end_line': 410, 'comment': '# public-keys should be in meta-data only if user specified one', 'include_SATD': False}, {'start_line': 422, 'end_line': 422, 'comment': '# TODO(vish): store ancestor ids', 'include_SATD': True}, {'start_line': 424, 'end_line': 424, 'comment': '# TODO(vish): store product codes', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [{'start_line': 163, 'end_line': 163, 'comment': '# only loop through ipv4 addresses', 'include_SATD': False}, {'start_line': 167, 'end_line': 167, 'comment': '# Allows a short circuit if we just need any floater.', 'include_SATD': False}, {'start_line': 187, 'end_line': 188, 'comment': '# NOTE(todd): see how /latest/meta-data/public-keys/0 works # so stop here, run callback, then finish lookup', 'include_SATD': False}, {'start_line': 218, 'end_line': 219, 'comment': '#TODO(wwolf): once we have ec2_id -> glance_id mapping # in place, this wont be necessary', 'include_SATD': True}, {'start_line': 228, 'end_line': 229, 'comment': '#TODO(wwolf): once we have ec2_id -> glance_id mapping # in place, this wont be necessary', 'include_SATD': True}, {'start_line': 238, 'end_line': 239, 'comment': '#TODO(wwolf): once we have ec2_id -> glance_id mapping # in place, this wont be necessary', 'include_SATD': True}, {'start_line': 261, 'end_line': 261, 'comment': ""# 'ephemeralN', 'swap' and ebs"", 'include_SATD': False}, {'start_line': 267, 'end_line': 267, 'comment': '# ebs volume case', 'include_SATD': False}, {'start_line': 279, 'end_line': 281, 'comment': ""# NOTE(yamahata): I'm not sure how ebs device should be numbered. #                 Right now sort by device name for deterministic #                 result."", 'include_SATD': False}, {'start_line': 327, 'end_line': 327, 'comment': '# only look at ipv4 addresses', 'include_SATD': False}], 'filename': 'nova/api/ec2/metadatarequesthandler.py'}, {'a_comments': [], 'b_comments': [{'start_line': 162, 'end_line': 162, 'comment': '# keys are built on the fly, and return a dict', 'include_SATD': False}], 'filename': 'nova/tests/test_metadata.py'}]}, {'revision': 5, 'changed_files': [{'a_comments': [{'start_line': 273, 'end_line': 273, 'comment': '# only loop through ipv4 addresses', 'include_SATD': False}, {'start_line': 277, 'end_line': 277, 'comment': '# Allows a short circuit if we just need any floater.', 'include_SATD': False}, {'start_line': 290, 'end_line': 290, 'comment': '# only look at ipv4 addresses', 'include_SATD': False}, {'start_line': 371, 'end_line': 372, 'comment': '# This ensures that all attributes of the instance # are populated.', 'include_SATD': False}, {'start_line': 410, 'end_line': 410, 'comment': '# public-keys should be in meta-data only if user specified one', 'include_SATD': False}, {'start_line': 422, 'end_line': 422, 'comment': '# TODO(vish): store ancestor ids', 'include_SATD': True}, {'start_line': 424, 'end_line': 424, 'comment': '# TODO(vish): store product codes', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [{'start_line': 163, 'end_line': 163, 'comment': '# only loop through ipv4 addresses', 'include_SATD': False}, {'start_line': 167, 'end_line': 167, 'comment': '# Allows a short circuit if we just need any floater.', 'include_SATD': False}, {'start_line': 187, 'end_line': 188, 'comment': '# NOTE(todd): see how /latest/meta-data/public-keys/0 works # so stop here, run callback, then finish lookup', 'include_SATD': False}, {'start_line': 218, 'end_line': 219, 'comment': '#TODO(wwolf): once we have ec2_id -> glance_id mapping # in place, this wont be necessary', 'include_SATD': True}, {'start_line': 228, 'end_line': 229, 'comment': '#TODO(wwolf): once we have ec2_id -> glance_id mapping # in place, this wont be necessary', 'include_SATD': True}, {'start_line': 238, 'end_line': 239, 'comment': '#TODO(wwolf): once we have ec2_id -> glance_id mapping # in place, this wont be necessary', 'include_SATD': True}, {'start_line': 261, 'end_line': 261, 'comment': ""# 'ephemeralN', 'swap' and ebs"", 'include_SATD': False}, {'start_line': 267, 'end_line': 267, 'comment': '# ebs volume case', 'include_SATD': False}, {'start_line': 279, 'end_line': 281, 'comment': ""# NOTE(yamahata): I'm not sure how ebs device should be numbered. #                 Right now sort by device name for deterministic #                 result."", 'include_SATD': False}, {'start_line': 327, 'end_line': 327, 'comment': '# only look at ipv4 addresses', 'include_SATD': False}], 'filename': 'nova/api/ec2/metadatarequesthandler.py'}, {'a_comments': [], 'b_comments': [{'start_line': 162, 'end_line': 162, 'comment': '# keys are built on the fly, and return a dict', 'include_SATD': False}], 'filename': 'nova/tests/test_metadata.py'}]}, {'revision': 6, 'changed_files': [{'a_comments': [{'start_line': 273, 'end_line': 273, 'comment': '# only loop through ipv4 addresses', 'include_SATD': False}, {'start_line': 277, 'end_line': 277, 'comment': '# Allows a short circuit if we just need any floater.', 'include_SATD': False}, {'start_line': 290, 'end_line': 290, 'comment': '# only look at ipv4 addresses', 'include_SATD': False}, {'start_line': 371, 'end_line': 372, 'comment': '# This ensures that all attributes of the instance # are populated.', 'include_SATD': False}, {'start_line': 410, 'end_line': 410, 'comment': '# public-keys should be in meta-data only if user specified one', 'include_SATD': False}, {'start_line': 422, 'end_line': 422, 'comment': '# TODO(vish): store ancestor ids', 'include_SATD': True}, {'start_line': 424, 'end_line': 424, 'comment': '# TODO(vish): store product codes', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [{'start_line': 48, 'end_line': 48, 'comment': '# only loop through ipv4 addresses', 'include_SATD': False}, {'start_line': 53, 'end_line': 53, 'comment': '# Allows a short circuit if we just need any floater.', 'include_SATD': False}, {'start_line': 165, 'end_line': 166, 'comment': '# NOTE(todd): see how /latest/meta-data/public-keys/0 works # so stop here, run callback, then finish lookup', 'include_SATD': False}, {'start_line': 196, 'end_line': 197, 'comment': '#TODO(wwolf): once we have ec2_id -> glance_id mapping # in place, this wont be necessary', 'include_SATD': True}, {'start_line': 206, 'end_line': 207, 'comment': '#TODO(wwolf): once we have ec2_id -> glance_id mapping # in place, this wont be necessary', 'include_SATD': True}, {'start_line': 216, 'end_line': 217, 'comment': '#TODO(wwolf): once we have ec2_id -> glance_id mapping # in place, this wont be necessary', 'include_SATD': True}, {'start_line': 239, 'end_line': 239, 'comment': ""# 'ephemeralN', 'swap' and ebs"", 'include_SATD': False}, {'start_line': 245, 'end_line': 245, 'comment': '# ebs volume case', 'include_SATD': False}, {'start_line': 257, 'end_line': 259, 'comment': ""# NOTE(yamahata): I'm not sure how ebs device should be numbered. #                 Right now sort by device name for deterministic #                 result."", 'include_SATD': False}, {'start_line': 279, 'end_line': 280, 'comment': '# NOTE: this gets any ip, not necessarily the one the metadata #       request came through.', 'include_SATD': False}, {'start_line': 308, 'end_line': 308, 'comment': '# only look at ipv4 addresses', 'include_SATD': False}], 'filename': 'nova/api/ec2/metadatarequesthandler.py'}, {'a_comments': [], 'b_comments': [{'start_line': 168, 'end_line': 168, 'comment': '# placement/availabilty-zone is where the callback is nested deeper', 'include_SATD': False}, {'start_line': 175, 'end_line': 175, 'comment': '# keys are built on the fly, and return a dict', 'include_SATD': False}], 'filename': 'nova/tests/test_metadata.py'}]}]",6,18,15,ABANDONED,False,https://review.opendev.org/#/c/809,Build metadata as needed through callbacks.,True,"{'#TODO(wwolf): once we have ec2_id -> glance_id mapping # in place, this wont be necessary': 1}",True,"{'# TODO(vish): store ancestor ids': 1, '# TODO(vish): store product codes': 1}",True,{}
283,825,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/common/auth.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/client.py'}, {'a_comments': [{'start_line': 123, 'end_line': 123, 'comment': '#exc_type, exc_value, exc_traceback = sys.exc_info()', 'include_SATD': False}, {'start_line': 125, 'end_line': 125, 'comment': '#logging.error(traceback.extract_stack(exc_traceback))', 'include_SATD': False}], 'b_comments': [{'start_line': 38, 'end_line': 41, 'comment': ""# If there is a non-kwarg parameter, assume it's the error # message or reason description and tack it on to the end # of the exception message # Convert all arguments into their string representations..."", 'include_SATD': False}], 'filename': 'glance/common/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 90, 'end_line': 91, 'comment': '# Test that import_class raises a descriptive error when the # class to import could not be found.', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_misc.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/common/auth.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/client.py'}, {'a_comments': [{'start_line': 123, 'end_line': 123, 'comment': '#exc_type, exc_value, exc_traceback = sys.exc_info()', 'include_SATD': False}, {'start_line': 125, 'end_line': 125, 'comment': '#logging.error(traceback.extract_stack(exc_traceback))', 'include_SATD': False}], 'b_comments': [{'start_line': 38, 'end_line': 41, 'comment': ""# If there is a non-kwarg parameter, assume it's the error # message or reason description and tack it on to the end # of the exception message # Convert all arguments into their string representations..."", 'include_SATD': False}], 'filename': 'glance/common/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 90, 'end_line': 91, 'comment': '# Test that import_class raises a descriptive error when the # class to import could not be found.', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_misc.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/common/auth.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/client.py'}, {'a_comments': [{'start_line': 123, 'end_line': 123, 'comment': '#exc_type, exc_value, exc_traceback = sys.exc_info()', 'include_SATD': False}, {'start_line': 125, 'end_line': 125, 'comment': '#logging.error(traceback.extract_stack(exc_traceback))', 'include_SATD': False}], 'b_comments': [{'start_line': 38, 'end_line': 41, 'comment': ""# If there is a non-kwarg parameter, assume it's the error # message or reason description and tack it on to the end # of the exception message # Convert all arguments into their string representations..."", 'include_SATD': False}], 'filename': 'glance/common/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 90, 'end_line': 91, 'comment': '# Test that import_class raises a descriptive error when the # class to import could not be found.', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_misc.py'}]}]",3,10,2,MERGED,True,https://review.opendev.org/#/c/825,Refactoring/cleanup around our exception handling,True,{},False,{},False,{}
284,828,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 147, 'end_line': 148, 'comment': '# anything about the particular instance, print a warning and let # the operator handle it manually.', 'include_SATD': True}], 'b_comments': [{'start_line': 149, 'end_line': 149, 'comment': '# anything about the particular instance, ignore it.', 'include_SATD': False}, {'start_line': 154, 'end_line': 155, 'comment': '# NOTE(jk0): This would be triggered if a VM was deleted but the # actual deletion process failed somewhere along the line.', 'include_SATD': True}], 'filename': 'tools/xenserver/vm_vdi_cleaner.py'}]}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/828,Further changes to the cleaner.,True,{'# NOTE(jk0): This would be triggered if a VM was deleted but the # actual deletion process failed somewhere along the line.': 1},True,"{'# anything about the particular instance, print a warning and let # the operator handle it manually.': 1}",True,{}
285,831,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 55, 'end_line': 55, 'comment': '# Return custom message for 501 NotImplemented Status', 'include_SATD': False}], 'filename': 'nova/api/openstack/faults.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_faults.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 55, 'end_line': 55, 'comment': '# Return custom message for 501 NotImplemented Status', 'include_SATD': False}], 'filename': 'nova/api/openstack/faults.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_faults.py'}]}]",2,6,0,ABANDONED,False,https://review.opendev.org/#/c/831,Add userfriendly message for NotImplemented,True,{},False,{},False,{}
286,815,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 745, 'end_line': 745, 'comment': '# Validate the correct CIDR Address', 'include_SATD': False}, {'start_line': 748, 'end_line': 748, 'comment': '# Raise exception for non-valid address', 'include_SATD': False}, {'start_line': 751, 'end_line': 752, 'comment': '# Prior validation partially verify /xx part # Verify it here', 'include_SATD': False}, {'start_line': 768, 'end_line': 768, 'comment': '# Verify integer conversions', 'include_SATD': False}, {'start_line': 782, 'end_line': 783, 'comment': '# Verify that from_port must always be less than # or equal to to_port', 'include_SATD': False}, {'start_line': 789, 'end_line': 789, 'comment': '# Verify valid TCP, UDP port ranges', 'include_SATD': False}, {'start_line': 797, 'end_line': 797, 'comment': '# Verify ICMP type and code', 'include_SATD': False}], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [{'start_line': 276, 'end_line': 277, 'comment': '# Prior validation partially verify /xx part # Verify it here', 'include_SATD': False}, {'start_line': 306, 'end_line': 307, 'comment': '# Verify that from_port must always be less than # or equal to to_port', 'include_SATD': False}, {'start_line': 313, 'end_line': 313, 'comment': '# Verify valid TCP, UDP port ranges', 'include_SATD': False}, {'start_line': 321, 'end_line': 321, 'comment': '# Verify ICMP type and code', 'include_SATD': False}], 'filename': 'nova/api/openstack/contrib/security_groups.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_security_groups.py'}, {'a_comments': [], 'b_comments': [{'start_line': 390, 'end_line': 390, 'comment': '# Invalid CIDR address', 'include_SATD': False}, {'start_line': 393, 'end_line': 393, 'comment': '# Missing ports', 'include_SATD': False}, {'start_line': 396, 'end_line': 396, 'comment': '# from port cannot be greater than to port', 'include_SATD': False}, {'start_line': 399, 'end_line': 399, 'comment': '# For tcp, negative values are not allowed', 'include_SATD': False}, {'start_line': 402, 'end_line': 402, 'comment': '# For tcp, valid port range 1-65535', 'include_SATD': False}, {'start_line': 405, 'end_line': 405, 'comment': '# For icmp, only -1:-1 is allowed for type:code', 'include_SATD': False}, {'start_line': 408, 'end_line': 408, 'comment': '# Non valid type:code', 'include_SATD': False}, {'start_line': 411, 'end_line': 411, 'comment': '# Invalid Cidr for ICMP type', 'include_SATD': False}, {'start_line': 414, 'end_line': 414, 'comment': '# Invalid protocol', 'include_SATD': False}, {'start_line': 417, 'end_line': 417, 'comment': '# Invalid port', 'include_SATD': False}, {'start_line': 420, 'end_line': 420, 'comment': '# Invalid icmp port', 'include_SATD': False}, {'start_line': 423, 'end_line': 423, 'comment': '# Invalid CIDR Address', 'include_SATD': False}, {'start_line': 426, 'end_line': 426, 'comment': '# Invalid CIDR Address', 'include_SATD': False}, {'start_line': 429, 'end_line': 429, 'comment': '# Invalid Cidr ports', 'include_SATD': False}], 'filename': 'nova/tests/test_api.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 730, 'end_line': 730, 'comment': '# Validate the correct CIDR Address', 'include_SATD': False}, {'start_line': 733, 'end_line': 733, 'comment': '# Raise exception for non-valid address', 'include_SATD': False}, {'start_line': 736, 'end_line': 737, 'comment': '# Prior validation partially verify /xx part # Verify it here', 'include_SATD': False}, {'start_line': 753, 'end_line': 753, 'comment': '# Verify integer conversions', 'include_SATD': False}, {'start_line': 767, 'end_line': 768, 'comment': '# Verify that from_port must always be less than # or equal to to_port', 'include_SATD': False}, {'start_line': 774, 'end_line': 774, 'comment': '# Verify valid TCP, UDP port ranges', 'include_SATD': False}, {'start_line': 782, 'end_line': 782, 'comment': '# Verify ICMP type and code', 'include_SATD': False}], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [{'start_line': 276, 'end_line': 277, 'comment': '# Prior validation partially verify /xx part # Verify it here', 'include_SATD': False}, {'start_line': 306, 'end_line': 307, 'comment': '# Verify that from_port must always be less than # or equal to to_port', 'include_SATD': False}, {'start_line': 313, 'end_line': 313, 'comment': '# Verify valid TCP, UDP port ranges', 'include_SATD': False}, {'start_line': 321, 'end_line': 321, 'comment': '# Verify ICMP type and code', 'include_SATD': False}], 'filename': 'nova/api/openstack/contrib/security_groups.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_security_groups.py'}, {'a_comments': [], 'b_comments': [{'start_line': 390, 'end_line': 390, 'comment': '# Invalid CIDR address', 'include_SATD': False}, {'start_line': 393, 'end_line': 393, 'comment': '# Missing ports', 'include_SATD': False}, {'start_line': 396, 'end_line': 396, 'comment': '# from port cannot be greater than to port', 'include_SATD': False}, {'start_line': 399, 'end_line': 399, 'comment': '# For tcp, negative values are not allowed', 'include_SATD': False}, {'start_line': 402, 'end_line': 402, 'comment': '# For tcp, valid port range 1-65535', 'include_SATD': False}, {'start_line': 405, 'end_line': 405, 'comment': '# For icmp, only -1:-1 is allowed for type:code', 'include_SATD': False}, {'start_line': 408, 'end_line': 408, 'comment': '# Non valid type:code', 'include_SATD': False}, {'start_line': 411, 'end_line': 411, 'comment': '# Invalid Cidr for ICMP type', 'include_SATD': False}, {'start_line': 414, 'end_line': 414, 'comment': '# Invalid protocol', 'include_SATD': False}, {'start_line': 417, 'end_line': 417, 'comment': '# Invalid port', 'include_SATD': False}, {'start_line': 420, 'end_line': 420, 'comment': '# Invalid icmp port', 'include_SATD': False}, {'start_line': 423, 'end_line': 423, 'comment': '# Invalid CIDR Address', 'include_SATD': False}, {'start_line': 426, 'end_line': 426, 'comment': '# Invalid CIDR Address', 'include_SATD': False}, {'start_line': 429, 'end_line': 429, 'comment': '# Invalid Cidr ports', 'include_SATD': False}], 'filename': 'nova/tests/test_api.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 730, 'end_line': 730, 'comment': '# Raise exception for non-valid address', 'include_SATD': False}, {'start_line': 741, 'end_line': 741, 'comment': '# Verify integer conversions', 'include_SATD': False}, {'start_line': 755, 'end_line': 756, 'comment': '# Verify that from_port must always be less than # or equal to to_port', 'include_SATD': False}, {'start_line': 762, 'end_line': 762, 'comment': '# Verify valid TCP, UDP port ranges', 'include_SATD': False}, {'start_line': 769, 'end_line': 769, 'comment': '# Verify ICMP type and code', 'include_SATD': False}], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [{'start_line': 276, 'end_line': 276, 'comment': '# Raise exception for non-valid address', 'include_SATD': False}, {'start_line': 300, 'end_line': 301, 'comment': '# Verify that from_port must always be less than # or equal to to_port', 'include_SATD': False}, {'start_line': 307, 'end_line': 307, 'comment': '# Verify valid TCP, UDP port ranges', 'include_SATD': False}, {'start_line': 314, 'end_line': 314, 'comment': '# Verify ICMP type and code', 'include_SATD': False}], 'filename': 'nova/api/openstack/contrib/security_groups.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_security_groups.py'}, {'a_comments': [], 'b_comments': [{'start_line': 390, 'end_line': 390, 'comment': '# Invalid CIDR address', 'include_SATD': False}, {'start_line': 393, 'end_line': 393, 'comment': '# Missing ports', 'include_SATD': False}, {'start_line': 396, 'end_line': 396, 'comment': '# from port cannot be greater than to port', 'include_SATD': False}, {'start_line': 399, 'end_line': 399, 'comment': '# For tcp, negative values are not allowed', 'include_SATD': False}, {'start_line': 402, 'end_line': 402, 'comment': '# For tcp, valid port range 1-65535', 'include_SATD': False}, {'start_line': 405, 'end_line': 405, 'comment': '# For icmp, only -1:-1 is allowed for type:code', 'include_SATD': False}, {'start_line': 408, 'end_line': 408, 'comment': '# Non valid type:code', 'include_SATD': False}, {'start_line': 411, 'end_line': 411, 'comment': '# Invalid Cidr for ICMP type', 'include_SATD': False}, {'start_line': 414, 'end_line': 414, 'comment': '# Invalid protocol', 'include_SATD': False}, {'start_line': 417, 'end_line': 417, 'comment': '# Invalid port', 'include_SATD': False}, {'start_line': 420, 'end_line': 420, 'comment': '# Invalid icmp port', 'include_SATD': False}, {'start_line': 423, 'end_line': 423, 'comment': '# Invalid CIDR Address', 'include_SATD': False}, {'start_line': 426, 'end_line': 426, 'comment': '# Invalid CIDR Address', 'include_SATD': False}, {'start_line': 429, 'end_line': 429, 'comment': '# Invalid Cidr ports', 'include_SATD': False}], 'filename': 'nova/tests/test_api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 915, 'end_line': 915, 'comment': '# Validate the correct CIDR Address', 'include_SATD': False}, {'start_line': 920, 'end_line': 921, 'comment': '# Prior validation partially verify /xx part # Verify it here', 'include_SATD': False}], 'filename': 'nova/utils.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 730, 'end_line': 730, 'comment': '# Raise exception for non-valid address', 'include_SATD': False}, {'start_line': 741, 'end_line': 741, 'comment': '# Verify integer conversions', 'include_SATD': False}, {'start_line': 755, 'end_line': 756, 'comment': '# Verify that from_port must always be less than # or equal to to_port', 'include_SATD': False}, {'start_line': 762, 'end_line': 762, 'comment': '# Verify valid TCP, UDP port ranges', 'include_SATD': False}, {'start_line': 769, 'end_line': 769, 'comment': '# Verify ICMP type and code', 'include_SATD': False}], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [{'start_line': 276, 'end_line': 276, 'comment': '# Raise exception for non-valid address', 'include_SATD': False}, {'start_line': 300, 'end_line': 301, 'comment': '# Verify that from_port must always be less than # or equal to to_port', 'include_SATD': False}, {'start_line': 307, 'end_line': 307, 'comment': '# Verify valid TCP, UDP port ranges', 'include_SATD': False}, {'start_line': 314, 'end_line': 314, 'comment': '# Verify ICMP type and code', 'include_SATD': False}], 'filename': 'nova/api/openstack/contrib/security_groups.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_security_groups.py'}, {'a_comments': [], 'b_comments': [{'start_line': 390, 'end_line': 390, 'comment': '# Invalid CIDR address', 'include_SATD': False}, {'start_line': 393, 'end_line': 393, 'comment': '# Missing ports', 'include_SATD': False}, {'start_line': 396, 'end_line': 396, 'comment': '# from port cannot be greater than to port', 'include_SATD': False}, {'start_line': 399, 'end_line': 399, 'comment': '# For tcp, negative values are not allowed', 'include_SATD': False}, {'start_line': 402, 'end_line': 402, 'comment': '# For tcp, valid port range 1-65535', 'include_SATD': False}, {'start_line': 405, 'end_line': 405, 'comment': '# For icmp, only -1:-1 is allowed for type:code', 'include_SATD': False}, {'start_line': 408, 'end_line': 408, 'comment': '# Non valid type:code', 'include_SATD': False}, {'start_line': 411, 'end_line': 411, 'comment': '# Invalid Cidr for ICMP type', 'include_SATD': False}, {'start_line': 414, 'end_line': 414, 'comment': '# Invalid protocol', 'include_SATD': False}, {'start_line': 417, 'end_line': 417, 'comment': '# Invalid port', 'include_SATD': False}, {'start_line': 420, 'end_line': 420, 'comment': '# Invalid icmp port', 'include_SATD': False}, {'start_line': 423, 'end_line': 423, 'comment': '# Invalid CIDR Address', 'include_SATD': False}, {'start_line': 426, 'end_line': 426, 'comment': '# Invalid CIDR Address', 'include_SATD': False}, {'start_line': 429, 'end_line': 429, 'comment': '# Invalid Cidr ports', 'include_SATD': False}], 'filename': 'nova/tests/test_api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 915, 'end_line': 915, 'comment': '# Validate the correct CIDR Address', 'include_SATD': False}, {'start_line': 920, 'end_line': 921, 'comment': '# Prior validation partially verify /xx part # Verify it here', 'include_SATD': False}], 'filename': 'nova/utils.py'}]}, {'revision': 5, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 730, 'end_line': 730, 'comment': '# Raise exception for non-valid address', 'include_SATD': False}, {'start_line': 741, 'end_line': 741, 'comment': '# Verify integer conversions', 'include_SATD': False}, {'start_line': 755, 'end_line': 756, 'comment': '# Verify that from_port must always be less than # or equal to to_port', 'include_SATD': False}, {'start_line': 762, 'end_line': 762, 'comment': '# Verify valid TCP, UDP port ranges', 'include_SATD': False}, {'start_line': 769, 'end_line': 769, 'comment': '# Verify ICMP type and code', 'include_SATD': False}], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [{'start_line': 276, 'end_line': 276, 'comment': '# Raise exception for non-valid address', 'include_SATD': False}, {'start_line': 300, 'end_line': 301, 'comment': '# Verify that from_port must always be less than # or equal to to_port', 'include_SATD': False}, {'start_line': 307, 'end_line': 307, 'comment': '# Verify valid TCP, UDP port ranges', 'include_SATD': False}, {'start_line': 314, 'end_line': 314, 'comment': '# Verify ICMP type and code', 'include_SATD': False}], 'filename': 'nova/api/openstack/contrib/security_groups.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_security_groups.py'}, {'a_comments': [], 'b_comments': [{'start_line': 390, 'end_line': 390, 'comment': '# Invalid CIDR address', 'include_SATD': False}, {'start_line': 393, 'end_line': 393, 'comment': '# Missing ports', 'include_SATD': False}, {'start_line': 396, 'end_line': 396, 'comment': '# from port cannot be greater than to port', 'include_SATD': False}, {'start_line': 399, 'end_line': 399, 'comment': '# For tcp, negative values are not allowed', 'include_SATD': False}, {'start_line': 402, 'end_line': 402, 'comment': '# For tcp, valid port range 1-65535', 'include_SATD': False}, {'start_line': 405, 'end_line': 405, 'comment': '# For icmp, only -1:-1 is allowed for type:code', 'include_SATD': False}, {'start_line': 408, 'end_line': 408, 'comment': '# Non valid type:code', 'include_SATD': False}, {'start_line': 411, 'end_line': 411, 'comment': '# Invalid Cidr for ICMP type', 'include_SATD': False}, {'start_line': 414, 'end_line': 414, 'comment': '# Invalid protocol', 'include_SATD': False}, {'start_line': 417, 'end_line': 417, 'comment': '# Invalid port', 'include_SATD': False}, {'start_line': 420, 'end_line': 420, 'comment': '# Invalid icmp port', 'include_SATD': False}, {'start_line': 423, 'end_line': 423, 'comment': '# Invalid CIDR Address', 'include_SATD': False}, {'start_line': 426, 'end_line': 426, 'comment': '# Invalid CIDR Address', 'include_SATD': False}, {'start_line': 429, 'end_line': 429, 'comment': '# Invalid Cidr ports', 'include_SATD': False}], 'filename': 'nova/tests/test_api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 915, 'end_line': 915, 'comment': '# Validate the correct CIDR Address', 'include_SATD': False}, {'start_line': 920, 'end_line': 921, 'comment': '# Prior validation partially verify /xx part # Verify it here', 'include_SATD': False}], 'filename': 'nova/utils.py'}]}]",5,13,6,MERGED,True,https://review.opendev.org/#/c/815,Verify security group parameters,True,{},False,{},False,{}
287,830,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 467, 'end_line': 468, 'comment': '# NOTE(sirp): 3-arg raise needed since Eventlet clears exceptions # when switching between greenthreads.', 'include_SATD': False}, {'start_line': 473, 'end_line': 475, 'comment': '# FIXME(sirp): when/if # httpsgithub.com/jcrocholl/pep8/pull/27 merges, we can add # a per-line disable flag here for W602', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/db/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/utils.py'}, {'a_comments': [{'start_line': 1062, 'end_line': 1064, 'comment': ""# NOTE(johannes): Unit tests will end up with a device called # 'autodetect' which obviously won't exist. It's not ideal, # but the alternatives were much messier"", 'include_SATD': True}], 'b_comments': [{'start_line': 417, 'end_line': 417, 'comment': '# 1. Create VDI', 'include_SATD': False}, {'start_line': 426, 'end_line': 426, 'comment': '# 2. Attach VDI to compute worker (VBD hotplug)', 'include_SATD': False}, {'start_line': 428, 'end_line': 428, 'comment': '# 3. Create swap partition', 'include_SATD': False}, {'start_line': 441, 'end_line': 441, 'comment': '# 4. Create VBD between instance VM and swap VDI', 'include_SATD': False}, {'start_line': 1110, 'end_line': 1112, 'comment': ""# NOTE(johannes): Unit tests will end up with a device called # 'autodetect' which obviously won't exist. It's not ideal, # but the alternatives were much messier"", 'include_SATD': True}, {'start_line': 1259, 'end_line': 1259, 'comment': '# NB: Partition 1 hardcoded', 'include_SATD': False}], 'filename': 'nova/virt/xenapi/vm_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [{'start_line': 467, 'end_line': 468, 'comment': '# NOTE(sirp): 3-arg raise needed since Eventlet clears exceptions # when switching between greenthreads.', 'include_SATD': False}, {'start_line': 473, 'end_line': 475, 'comment': '# FIXME(sirp): when/if # httpsgithub.com/jcrocholl/pep8/pull/27 merges, we can add # a per-line disable flag here for W602', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/db/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/utils.py'}, {'a_comments': [{'start_line': 1062, 'end_line': 1064, 'comment': ""# NOTE(johannes): Unit tests will end up with a device called # 'autodetect' which obviously won't exist. It's not ideal, # but the alternatives were much messier"", 'include_SATD': True}], 'b_comments': [{'start_line': 417, 'end_line': 417, 'comment': '# 1. Create VDI', 'include_SATD': False}, {'start_line': 426, 'end_line': 426, 'comment': '# 2. Attach VDI to compute worker (VBD hotplug)', 'include_SATD': False}, {'start_line': 428, 'end_line': 428, 'comment': '# 3. Create swap partition', 'include_SATD': False}, {'start_line': 441, 'end_line': 441, 'comment': '# 4. Create VBD between instance VM and swap VDI', 'include_SATD': False}, {'start_line': 1110, 'end_line': 1112, 'comment': ""# NOTE(johannes): Unit tests will end up with a device called # 'autodetect' which obviously won't exist. It's not ideal, # but the alternatives were much messier"", 'include_SATD': True}, {'start_line': 1259, 'end_line': 1259, 'comment': '# NB: Partition 1 hardcoded', 'include_SATD': False}], 'filename': 'nova/virt/xenapi/vm_utils.py'}, {'a_comments': [{'start_line': 343, 'end_line': 344, 'comment': ""# vdi['vdi_type'] is either 'os' or 'swap', but we don't # really care what it is right here."", 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}]}]",2,8,5,MERGED,True,https://review.opendev.org/#/c/830,Xenapi driver can now generate swap from instance_type,True,"{""# NOTE(johannes): Unit tests will end up with a device called # 'autodetect' which obviously won't exist. It's not ideal, # but the alternatives were much messier"": 1}",True,"{'# FIXME(sirp): when/if # httpsgithub.com/jcrocholl/pep8/pull/27 merges, we can add # a per-line disable flag here for W602': 1, ""# NOTE(johannes): Unit tests will end up with a device called # 'autodetect' which obviously won't exist. It's not ideal, # but the alternatives were much messier"": 1, ""# vdi['vdi_type'] is either 'os' or 'swap', but we don't # really care what it is right here."": 2}",True,{}
288,833,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/attestation/attestation.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/attestation/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/attestation/service.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/filters/json_filter_integrity.py'}, {'a_comments': [{'start_line': 49, 'end_line': 49, 'comment': '# {host: utc}', 'include_SATD': False}, {'start_line': 51, 'end_line': 51, 'comment': '# {host: trust_lvl}', 'include_SATD': False}], 'b_comments': [{'start_line': 50, 'end_line': 51, 'comment': '# {host: utc} # {host: trust_lvl}', 'include_SATD': False}], 'filename': 'nova/scheduler/manager_integrity.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_json_filter_integrity.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_manager_integrity.py'}]}]",1,2,0,ABANDONED,False,https://review.opendev.org/#/c/833,Code clean-up w/ pep8 and code style,True,{},False,{},False,{}
289,837,"[{'revision': 1, 'changed_files': []}, {'revision': 2, 'changed_files': []}, {'revision': 3, 'changed_files': []}]",3,9,0,MERGED,True,https://review.opendev.org/#/c/837,Better document using Glance with Keystone.,False,{},False,{},False,{}
290,834,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/attestation/attestation.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/attestation/client.py'}, {'a_comments': [{'start_line': 73, 'end_line': 73, 'comment': '# also read PCR22 in', 'include_SATD': False}, {'start_line': 112, 'end_line': 113, 'comment': '# also read PCR22 in #TODO:  need error handling', 'include_SATD': True}], 'b_comments': [{'start_line': 116, 'end_line': 116, 'comment': '#TODO: (Fred) need error handling', 'include_SATD': True}], 'filename': 'nova/scheduler/attestation/service_client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/scheduler/filters/json_filter_integrity.py'}, {'a_comments': [{'start_line': 51, 'end_line': 51, 'comment': '# {host: trust_lvl}', 'include_SATD': False}], 'b_comments': [{'start_line': 49, 'end_line': 49, 'comment': '# {host: trust_state}', 'include_SATD': False}, {'start_line': 182, 'end_line': 182, 'comment': '# if HW geo tag is used, then verify any change since', 'include_SATD': False}], 'filename': 'nova/scheduler/manager_integrity.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_manager_integrity.py'}]}]",1,2,0,ABANDONED,False,https://review.opendev.org/#/c/834,Coding style clean up through pep8 and pylint Complete geo tag as part of trust_state{} with default off,True,{'#TODO: (Fred) need error handling': 1},True,{'# also read PCR22 in #TODO:  need error handling': 1},True,{}
291,838,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'swift/common/middleware/ratelimit.py'}]}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/838,Adding what acc/cont/obj into the ratelimit error messages,True,{},False,{},False,{}
292,835,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 63, 'end_line': 64, 'comment': '# There may be other parameters (data extensions), so we # should include those in the results dict as well.', 'include_SATD': False}], 'filename': 'quantum/api/api_common.py'}, {'a_comments': [{'start_line': 97, 'end_line': 97, 'comment': '#look for network name in request', 'include_SATD': False}], 'b_comments': [{'start_line': 103, 'end_line': 108, 'comment': ""# NOTE(bgh): We're currently passing both request_params['name'] and # the entire request_params dict because their may be pieces of # information (data extensions) inside the request params that the # actual plugin will want to parse.  We could just pass only # request_params but that would mean all the plugins would need to # change."", 'include_SATD': False}], 'filename': 'quantum/api/networks.py'}, {'a_comments': [{'start_line': 106, 'end_line': 106, 'comment': '#look for port state in request', 'include_SATD': False}], 'b_comments': [], 'filename': 'quantum/api/ports.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/SamplePlugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/quantum_plugin_base.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 63, 'end_line': 64, 'comment': '# There may be other parameters (data extensions), so we # should include those in the results dict as well.', 'include_SATD': False}], 'filename': 'quantum/api/api_common.py'}, {'a_comments': [{'start_line': 97, 'end_line': 97, 'comment': '#look for network name in request', 'include_SATD': False}], 'b_comments': [{'start_line': 103, 'end_line': 108, 'comment': ""# NOTE(bgh): We're currently passing both request_params['name'] and # the entire request_params dict because their may be pieces of # information (data extensions) inside the request params that the # actual plugin will want to parse.  We could just pass only # request_params but that would mean all the plugins would need to # change."", 'include_SATD': False}], 'filename': 'quantum/api/networks.py'}, {'a_comments': [{'start_line': 106, 'end_line': 106, 'comment': '#look for port state in request', 'include_SATD': False}], 'b_comments': [], 'filename': 'quantum/api/ports.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/SamplePlugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/quantum_plugin_base.py'}]}]",2,5,3,MERGED,True,https://review.opendev.org/#/c/835,Change port/net create calls to take an additional kwargs param,True,{},False,{},False,{}
293,839,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'quantum/common/extensions.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'quantum/common/extensions.py'}]}]",2,6,2,MERGED,True,https://review.opendev.org/#/c/839,Add the ability to specify multiple extension directories,True,{},False,{},False,{}
294,849,"[{'revision': 1, 'changed_files': []}]",1,4,0,MERGED,True,https://review.opendev.org/#/c/849,Updating HACKING to make split up imports into three blocks,False,{},False,{},False,{}
295,836,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 12, 'comment': '# Copyright 2011 OpenStack LLC. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/051_add_vcpu_weight_to_instance_types.py'}, {'a_comments': [], 'b_comments': [{'start_line': 136, 'end_line': 137, 'comment': '# NOTE(jk0): 256 is the default VCPU weight used in XenServer. If # there is no value provided in the database, default to this.', 'include_SATD': False}], 'filename': 'nova/virt/xenapi/vm_utils.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 12, 'comment': '# Copyright 2011 OpenStack LLC. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/051_add_vcpu_weight_to_instance_types.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}]}]",2,6,1,MERGED,True,https://review.opendev.org/#/c/836,Adds vcpu_weight column to instance_types table and uses this value when building XenServer instances.,True,{},False,{},False,{}
296,852,"[{'revision': 1, 'changed_files': []}, {'revision': 2, 'changed_files': []}]",2,4,0,MERGED,True,https://review.opendev.org/#/c/852,Fixes LP Bug#872276 - small typo in error message,False,{},False,{},False,{}
297,853,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/cloud.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}]}]",2,11,0,MERGED,True,https://review.opendev.org/#/c/853,Update EC2 get_metadata calls to search 'deleted': False. Fixes nova smoke_tests!!!,True,{},False,{},False,{}
298,856,"[{'revision': 1, 'changed_files': []}, {'revision': 2, 'changed_files': []}, {'revision': 3, 'changed_files': []}, {'revision': 4, 'changed_files': []}, {'revision': 5, 'changed_files': []}]",5,11,0,MERGED,True,https://review.opendev.org/#/c/856,changing config files to be on section 5 and also running spellchecks against all files,False,{},False,{},False,{}
299,862,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_libvirt.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_libvirt.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'smoketests/test_netadmin.py'}]}]",2,7,4,ABANDONED,False,https://review.opendev.org/#/c/862,bug 817872,True,{},False,{},False,{}
300,842,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/common/utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 110, 'end_line': 111, 'comment': ""# Try importing an object by supplying a class and # verify the object's class name is the same as that supplied"", 'include_SATD': False}, {'start_line': 116, 'end_line': 116, 'comment': '# Try importing a module itself', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_misc.py'}]}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/842,Increases test coverage for the common utils,True,{},False,{},False,{}
301,848,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/common.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/flavorextraspecs.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/flavors.py'}, {'a_comments': [], 'b_comments': [{'start_line': 903, 'end_line': 903, 'comment': '# cast flavor uuid back to an integer for internal use', 'include_SATD': False}], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_common.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_flavors_extra_specs.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/common.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/flavorextraspecs.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/flavors.py'}, {'a_comments': [], 'b_comments': [{'start_line': 903, 'end_line': 903, 'comment': '# cast flavor uuid back to an integer for internal use', 'include_SATD': False}], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_common.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_flavors_extra_specs.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/common.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/flavorextraspecs.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/flavors.py'}, {'a_comments': [], 'b_comments': [{'start_line': 903, 'end_line': 903, 'comment': '# cast flavor uuid back to an integer for internal use', 'include_SATD': False}], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_common.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_flavors_extra_specs.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/common.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/flavorextraspecs.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/flavors.py'}, {'a_comments': [], 'b_comments': [{'start_line': 903, 'end_line': 903, 'comment': '# cast flavor uuid back to an integer for internal use', 'include_SATD': False}], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_common.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_flavors_extra_specs.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}]}]",4,5,2,ABANDONED,False,https://review.opendev.org/#/c/848,Returning flavor ids as uuids in OSAPI v1.1,True,{},False,{},False,{}
302,845,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 17, 'end_line': 17, 'comment': '# NOTE(vish): this forces the fixtures from tests/__init.py:setup() to work', 'include_SATD': False}, {'start_line': 82, 'end_line': 82, 'comment': '# Use up all of our ""POST"" allowance for the minute, 5 times', 'include_SATD': False}, {'start_line': 85, 'end_line': 85, 'comment': ""# Reset the 'POST' action counter."", 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': '# All 50 daily ""POST servers"" actions should be all used up', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/__init__.py'}]}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/845,Remove RateLimitingMiddlewareTest,True,{},False,{},False,{}
303,868,"[{'revision': 1, 'changed_files': []}]",1,3,0,MERGED,True,https://review.opendev.org/#/c/868,Additions to .gitignore,False,{},False,{},False,{}
304,869,"[{'revision': 1, 'changed_files': []}]",1,3,0,MERGED,True,https://review.opendev.org/#/c/869,Updated links in the README that were out of date.,False,{},False,{},False,{}
305,874,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/051_add_vcpu_weight_to_instance_types.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}]}]",1,4,0,MERGED,True,https://review.opendev.org/#/c/874,Added vcpu_weight to models.,True,{},False,{},False,{}
306,876,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}]}]",1,3,0,MERGED,True,https://review.opendev.org/#/c/876,"Remove redundant, dead code.",True,{},False,{},False,{}
307,863,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_api.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 63, 'end_line': 64, 'comment': '# We set this to None to trigger a reconfigure, otherwise # other modules may have already correctly configured the DB', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_api.py'}]}]",2,5,1,MERGED,True,https://review.opendev.org/#/c/863,Fixes LP Bug#844618 - SQLAlchemy errors not logged,True,{},False,{},False,{}
308,866,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 32, 'end_line': 32, 'comment': ""        '''"", 'include_SATD': False}, {'start_line': 34, 'end_line': 34, 'comment': ""        '''"", 'include_SATD': False}], 'filename': 'swift/common/middleware/catch_errors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'swift/common/middleware/staticweb.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'swift/common/middleware/tempauth.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'swift/common/wsgi.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1635, 'end_line': 1635, 'comment': ""# if this wasn't set by an earlier middleware, set it now"", 'include_SATD': False}, {'start_line': 1719, 'end_line': 1719, 'comment': '# done with this transaction', 'include_SATD': False}], 'filename': 'swift/proxy/server.py'}, {'a_comments': [], 'b_comments': [{'start_line': 59, 'end_line': 59, 'comment': ""# 32 hex + 'tx'"", 'include_SATD': False}], 'filename': 'test/unit/common/middleware/test_except.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'test/unit/common/test_wsgi.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'swift/common/middleware/catch_errors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'swift/common/middleware/staticweb.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'swift/common/middleware/tempauth.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'swift/common/utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'swift/common/wsgi.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1635, 'end_line': 1635, 'comment': ""# if this wasn't set by an earlier middleware, set it now"", 'include_SATD': False}, {'start_line': 1719, 'end_line': 1719, 'comment': '# done with this transaction', 'include_SATD': False}], 'filename': 'swift/proxy/server.py'}, {'a_comments': [], 'b_comments': [{'start_line': 61, 'end_line': 61, 'comment': ""# 32 hex + 'tx'"", 'include_SATD': False}], 'filename': 'test/unit/common/middleware/test_except.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'test/unit/common/test_wsgi.py'}]}]",2,4,0,MERGED,True,https://review.opendev.org/#/c/866,Fixing bug with x-trans-id.  Will now be set on all incoming requests to proxy and trans-ids will not be reused.,True,{},False,{},False,{}
309,878,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 423, 'end_line': 423, 'comment': '# FIXME(sirp); hard-coding for now, should pull from flavor', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/878,Pull swap from instance_type,True,{},False,"{'# FIXME(sirp); hard-coding for now, should pull from flavor': 1}",True,{}
310,879,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/879,Fixing comments,True,{},False,{},False,{}
311,840,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/__init__.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/api/openstack/backup_schedules.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/common.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/virtual_storage_arrays.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/faults.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/ips.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/limits.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/api/openstack/shared_ip_groups.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/versions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/addresses.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/limits.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/zones.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_accounts.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 34, 'end_line': 34, 'comment': '# We should still be able to access public operations.', 'include_SATD': False}, {'start_line': 38, 'end_line': 38, 'comment': '# TODO: Confirm admin operations are available.', 'include_SATD': True}, {'start_line': 42, 'end_line': 42, 'comment': '# We should still be able to access public operations.', 'include_SATD': False}, {'start_line': 45, 'end_line': 45, 'comment': '# TODO: Confirm admin operations are unavailable.', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_adminapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_auth.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_consoles.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_faults.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_limits.py'}, {'a_comments': [{'start_line': 144, 'end_line': 145, 'comment': '#        res = req.get_response(fakes.wsgi_app()) #        self.assertEqual(res.status_int, 501)', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}, {'a_comments': [{'start_line': 1230, 'end_line': 1230, 'comment': '# 1.0 API ignores unknown options', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_shared_ip_groups.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_urlmap.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_users.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_versions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_zones.py'}, {'a_comments': [{'start_line': 98, 'end_line': 98, 'comment': '# Add a valid imageId/imageRef', 'include_SATD': False}, {'start_line': 102, 'end_line': 107, 'comment': '# Without flavorId, this throws 500 # Set a valid flavorId/flavorRef', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/integrated/test_servers.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/__init__.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/api/openstack/backup_schedules.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/common.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/virtual_storage_arrays.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/faults.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/ips.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/limits.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/api/openstack/shared_ip_groups.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/versions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/addresses.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/limits.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/zones.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_accounts.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 34, 'end_line': 34, 'comment': '# We should still be able to access public operations.', 'include_SATD': False}, {'start_line': 38, 'end_line': 38, 'comment': '# TODO: Confirm admin operations are available.', 'include_SATD': True}, {'start_line': 42, 'end_line': 42, 'comment': '# We should still be able to access public operations.', 'include_SATD': False}, {'start_line': 45, 'end_line': 45, 'comment': '# TODO: Confirm admin operations are unavailable.', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_adminapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_auth.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_consoles.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_faults.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_limits.py'}, {'a_comments': [{'start_line': 144, 'end_line': 145, 'comment': '#        res = req.get_response(fakes.wsgi_app()) #        self.assertEqual(res.status_int, 501)', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}, {'a_comments': [{'start_line': 1230, 'end_line': 1230, 'comment': '# 1.0 API ignores unknown options', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_shared_ip_groups.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_urlmap.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_users.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_versions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_zones.py'}, {'a_comments': [{'start_line': 98, 'end_line': 98, 'comment': '# Add a valid imageId/imageRef', 'include_SATD': False}, {'start_line': 102, 'end_line': 107, 'comment': '# Without flavorId, this throws 500 # Set a valid flavorId/flavorRef', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/integrated/test_servers.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/__init__.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/api/openstack/backup_schedules.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/common.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/virtual_storage_arrays.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/faults.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/ips.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/limits.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/api/openstack/shared_ip_groups.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/versions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/addresses.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/limits.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/zones.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_accounts.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 34, 'end_line': 34, 'comment': '# We should still be able to access public operations.', 'include_SATD': False}, {'start_line': 38, 'end_line': 38, 'comment': '# TODO: Confirm admin operations are available.', 'include_SATD': True}, {'start_line': 42, 'end_line': 42, 'comment': '# We should still be able to access public operations.', 'include_SATD': False}, {'start_line': 45, 'end_line': 45, 'comment': '# TODO: Confirm admin operations are unavailable.', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_adminapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_auth.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_consoles.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_faults.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_limits.py'}, {'a_comments': [{'start_line': 144, 'end_line': 145, 'comment': '#        res = req.get_response(fakes.wsgi_app()) #        self.assertEqual(res.status_int, 501)', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}, {'a_comments': [{'start_line': 1230, 'end_line': 1230, 'comment': '# 1.0 API ignores unknown options', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_shared_ip_groups.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_urlmap.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_users.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_versions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_zones.py'}, {'a_comments': [{'start_line': 98, 'end_line': 98, 'comment': '# Add a valid imageId/imageRef', 'include_SATD': False}, {'start_line': 102, 'end_line': 107, 'comment': '# Without flavorId, this throws 500 # Set a valid flavorId/flavorRef', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/integrated/test_servers.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/__init__.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/api/openstack/backup_schedules.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/common.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/virtual_storage_arrays.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/faults.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/ips.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/limits.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/api/openstack/shared_ip_groups.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/versions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/addresses.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/limits.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/zones.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_accounts.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 34, 'end_line': 34, 'comment': '# We should still be able to access public operations.', 'include_SATD': False}, {'start_line': 38, 'end_line': 38, 'comment': '# TODO: Confirm admin operations are available.', 'include_SATD': True}, {'start_line': 42, 'end_line': 42, 'comment': '# We should still be able to access public operations.', 'include_SATD': False}, {'start_line': 45, 'end_line': 45, 'comment': '# TODO: Confirm admin operations are unavailable.', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_adminapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_auth.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_consoles.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_faults.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_limits.py'}, {'a_comments': [{'start_line': 144, 'end_line': 145, 'comment': '#        res = req.get_response(fakes.wsgi_app()) #        self.assertEqual(res.status_int, 501)', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}, {'a_comments': [{'start_line': 1230, 'end_line': 1230, 'comment': '# 1.0 API ignores unknown options', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_shared_ip_groups.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_urlmap.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_users.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_versions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_zones.py'}, {'a_comments': [{'start_line': 98, 'end_line': 98, 'comment': '# Add a valid imageId/imageRef', 'include_SATD': False}, {'start_line': 102, 'end_line': 107, 'comment': '# Without flavorId, this throws 500 # Set a valid flavorId/flavorRef', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/integrated/test_servers.py'}]}, {'revision': 5, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/__init__.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/api/openstack/backup_schedules.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/common.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/virtual_storage_arrays.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/faults.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/ips.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/limits.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/api/openstack/shared_ip_groups.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/versions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/addresses.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/limits.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/zones.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_accounts.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 34, 'end_line': 34, 'comment': '# We should still be able to access public operations.', 'include_SATD': False}, {'start_line': 38, 'end_line': 38, 'comment': '# TODO: Confirm admin operations are available.', 'include_SATD': True}, {'start_line': 42, 'end_line': 42, 'comment': '# We should still be able to access public operations.', 'include_SATD': False}, {'start_line': 45, 'end_line': 45, 'comment': '# TODO: Confirm admin operations are unavailable.', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_adminapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_auth.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_consoles.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_faults.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_limits.py'}, {'a_comments': [{'start_line': 144, 'end_line': 145, 'comment': '#        res = req.get_response(fakes.wsgi_app()) #        self.assertEqual(res.status_int, 501)', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}, {'a_comments': [{'start_line': 1230, 'end_line': 1230, 'comment': '# 1.0 API ignores unknown options', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_shared_ip_groups.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_urlmap.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_users.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_versions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_zones.py'}, {'a_comments': [{'start_line': 98, 'end_line': 98, 'comment': '# Add a valid imageId/imageRef', 'include_SATD': False}, {'start_line': 102, 'end_line': 107, 'comment': '# Without flavorId, this throws 500 # Set a valid flavorId/flavorRef', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/integrated/test_servers.py'}]}, {'revision': 6, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/__init__.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/api/openstack/backup_schedules.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/common.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/virtual_storage_arrays.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/faults.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/ips.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/limits.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/api/openstack/shared_ip_groups.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/versions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/addresses.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/limits.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/zones.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_accounts.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 34, 'end_line': 34, 'comment': '# We should still be able to access public operations.', 'include_SATD': False}, {'start_line': 38, 'end_line': 38, 'comment': '# TODO: Confirm admin operations are available.', 'include_SATD': True}, {'start_line': 42, 'end_line': 42, 'comment': '# We should still be able to access public operations.', 'include_SATD': False}, {'start_line': 45, 'end_line': 45, 'comment': '# TODO: Confirm admin operations are unavailable.', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_adminapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_auth.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_consoles.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_faults.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_limits.py'}, {'a_comments': [{'start_line': 144, 'end_line': 145, 'comment': '#        res = req.get_response(fakes.wsgi_app()) #        self.assertEqual(res.status_int, 501)', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}, {'a_comments': [{'start_line': 1230, 'end_line': 1230, 'comment': '# 1.0 API ignores unknown options', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_shared_ip_groups.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_urlmap.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_users.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_versions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_zones.py'}, {'a_comments': [{'start_line': 98, 'end_line': 98, 'comment': '# Add a valid imageId/imageRef', 'include_SATD': False}, {'start_line': 102, 'end_line': 107, 'comment': '# Without flavorId, this throws 500 # Set a valid flavorId/flavorRef', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/integrated/test_servers.py'}]}, {'revision': 7, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/__init__.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/api/openstack/backup_schedules.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/common.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/virtual_storage_arrays.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/faults.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/ips.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/limits.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/api/openstack/shared_ip_groups.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/versions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/addresses.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/limits.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/zones.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_accounts.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 34, 'end_line': 34, 'comment': '# We should still be able to access public operations.', 'include_SATD': False}, {'start_line': 38, 'end_line': 38, 'comment': '# TODO: Confirm admin operations are available.', 'include_SATD': True}, {'start_line': 42, 'end_line': 42, 'comment': '# We should still be able to access public operations.', 'include_SATD': False}, {'start_line': 45, 'end_line': 45, 'comment': '# TODO: Confirm admin operations are unavailable.', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_adminapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_auth.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_consoles.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_faults.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_limits.py'}, {'a_comments': [{'start_line': 144, 'end_line': 145, 'comment': '#        res = req.get_response(fakes.wsgi_app()) #        self.assertEqual(res.status_int, 501)', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}, {'a_comments': [{'start_line': 1230, 'end_line': 1230, 'comment': '# 1.0 API ignores unknown options', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2010 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_shared_ip_groups.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_urlmap.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_users.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_versions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_zones.py'}, {'a_comments': [{'start_line': 98, 'end_line': 98, 'comment': '# Add a valid imageId/imageRef', 'include_SATD': False}, {'start_line': 102, 'end_line': 107, 'comment': '# Without flavorId, this throws 500 # Set a valid flavorId/flavorRef', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/integrated/test_servers.py'}]}]",7,19,0,MERGED,True,https://review.opendev.org/#/c/840,Remove OSAPI v1.0,True,{},False,"{'# TODO: Confirm admin operations are available.': 1, '# TODO: Confirm admin operations are unavailable.': 1}",True,{}
312,880,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/880,Pep8 fixes,True,{},False,{},False,{}
313,776,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/instance_types.py'}, {'a_comments': [], 'b_comments': [{'start_line': 482, 'end_line': 482, 'comment': '# AlexL - Zadara: unfortunately need a call to instance_get', 'include_SATD': False}], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 3433, 'end_line': 3433, 'comment': '# AlexL-Zadara - destroy all the extra-specs too', 'include_SATD': False}, {'start_line': 3459, 'end_line': 3459, 'comment': '# AlexL-Zadara - purge all the extra-specs too', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [{'start_line': 176, 'end_line': 176, 'comment': '# extra_specs values must be all strings', 'include_SATD': False}, {'start_line': 186, 'end_line': 186, 'comment': '# Fetch instance type id', 'include_SATD': False}, {'start_line': 203, 'end_line': 203, 'comment': '# Fetch instance type id', 'include_SATD': False}, {'start_line': 213, 'end_line': 213, 'comment': ""# If it's still in the DB, let's purge it"", 'include_SATD': False}, {'start_line': 221, 'end_line': 221, 'comment': ""# If it's still in the DB, let's purge it"", 'include_SATD': False}, {'start_line': 283, 'end_line': 284, 'comment': ""# After destorying the instance, its extra specs are also marked as # 'deleted' and get_instance_type should not bring them"", 'include_SATD': False}, {'start_line': 286, 'end_line': 286, 'comment': '# But extra_specs should still exist in the DB', 'include_SATD': False}, {'start_line': 292, 'end_line': 292, 'comment': '# Verify that inst2 extra_specs are still there', 'include_SATD': False}, {'start_line': 310, 'end_line': 310, 'comment': '# Make sure that extra specs are gone too', 'include_SATD': False}, {'start_line': 315, 'end_line': 315, 'comment': '# Now first destroy the instance and then purge it', 'include_SATD': False}, {'start_line': 318, 'end_line': 319, 'comment': ""# This shouldn't raise # But extra_specs should be empty"", 'include_SATD': True}, {'start_line': 321, 'end_line': 321, 'comment': '# Validate that extra specs are still in db', 'include_SATD': False}, {'start_line': 327, 'end_line': 327, 'comment': '# Now purge the instance', 'include_SATD': False}, {'start_line': 331, 'end_line': 331, 'comment': '# Make sure that extra specs are gone too', 'include_SATD': False}], 'filename': 'nova/tests/test_instance_types.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright (c) 2011 Zadara Storage Inc. # Copyright (c) 2011 OpenStack LLC. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 35, 'end_line': 37, 'comment': '############################################################# # The following methods are abstract within nova.virt.pci.PciDriver # and are implemented here', 'include_SATD': False}, {'start_line': 59, 'end_line': 59, 'comment': '# Test malformed flags', 'include_SATD': False}, {'start_line': 70, 'end_line': 70, 'comment': '# Test not having ""pci_addr""', 'include_SATD': False}, {'start_line': 76, 'end_line': 76, 'comment': '# Test bad PCI address (PCI function must be 0-7)', 'include_SATD': False}, {'start_line': 82, 'end_line': 82, 'comment': '# Test bad PCI address (. instead of :)', 'include_SATD': False}, {'start_line': 88, 'end_line': 88, 'comment': '# Test bad PCI address (invalid hex digit)', 'include_SATD': False}, {'start_line': 94, 'end_line': 94, 'comment': '# Test bad PCI address (not enough digits in PCI domain)', 'include_SATD': False}, {'start_line': 99, 'end_line': 99, 'comment': '# Test bad PCI address (no PCI domain)', 'include_SATD': False}, {'start_line': 105, 'end_line': 105, 'comment': '# Test bad PCI address (missing :)', 'include_SATD': False}, {'start_line': 111, 'end_line': 111, 'comment': '# Test not having ""pci_class""', 'include_SATD': False}, {'start_line': 117, 'end_line': 118, 'comment': '# Test adding same device twice (note that after this piece of code, # 0010:00:ab.1 and 0010:00:ab.2 are added to the inventory)', 'include_SATD': False}, {'start_line': 129, 'end_line': 129, 'comment': '# Test not supplying required parameters for net_vf', 'include_SATD': False}, {'start_line': 235, 'end_line': 235, 'comment': '# Malformed', 'include_SATD': False}, {'start_line': 237, 'end_line': 237, 'comment': '# Not a JSON array', 'include_SATD': False}, {'start_line': 239, 'end_line': 239, 'comment': '# Not an array of dict', 'include_SATD': False}, {'start_line': 244, 'end_line': 244, 'comment': ""# No 'pci_class'"", 'include_SATD': False}, {'start_line': 246, 'end_line': 246, 'comment': ""# No 'count'"", 'include_SATD': False}, {'start_line': 248, 'end_line': 248, 'comment': ""# 'count' not int"", 'include_SATD': False}, {'start_line': 250, 'end_line': 250, 'comment': '# Negative count', 'include_SATD': False}, {'start_line': 307, 'end_line': 307, 'comment': '# Invalid syntax in the pci_devices string', 'include_SATD': False}, {'start_line': 313, 'end_line': 313, 'comment': '# Not a JSON array', 'include_SATD': False}, {'start_line': 319, 'end_line': 319, 'comment': '# Not a JSON dictionary within a list', 'include_SATD': False}, {'start_line': 324, 'end_line': 324, 'comment': '# No host key', 'include_SATD': False}, {'start_line': 332, 'end_line': 332, 'comment': '# No pci_class key', 'include_SATD': False}, {'start_line': 340, 'end_line': 340, 'comment': '# No pci_devices key', 'include_SATD': False}, {'start_line': 348, 'end_line': 348, 'comment': '# pci_devices key is not a list', 'include_SATD': False}, {'start_line': 356, 'end_line': 356, 'comment': ""# All devices are on different hosts (it's not an error, actually)"", 'include_SATD': False}, {'start_line': 364, 'end_line': 364, 'comment': '# Malformed PCI address', 'include_SATD': False}, {'start_line': 420, 'end_line': 421, 'comment': '# Create instances in the DB with already-allocated devices # Note that the values in DB are always uppercase', 'include_SATD': False}, {'start_line': 426, 'end_line': 427, 'comment': '# We pass a shallow copy, because instance_create modifies # the passed dictionary', 'include_SATD': False}, {'start_line': 554, 'end_line': 554, 'comment': '# We have PCI devices of three classes, each class has 8 devices', 'include_SATD': False}, {'start_line': 611, 'end_line': 611, 'comment': '# Register instance types', 'include_SATD': False}, {'start_line': 614, 'end_line': 614, 'comment': '# 1 from class1', 'include_SATD': False}, {'start_line': 618, 'end_line': 618, 'comment': '# 1 from class2', 'include_SATD': False}, {'start_line': 621, 'end_line': 621, 'comment': '# 1 from net_vf', 'include_SATD': False}, {'start_line': 625, 'end_line': 625, 'comment': '# 3 from class1, 2 from class2', 'include_SATD': False}, {'start_line': 629, 'end_line': 629, 'comment': '# 2 from net_vf, 1 from class1', 'include_SATD': False}, {'start_line': 633, 'end_line': 633, 'comment': '# 1 from class1, 1 from class2', 'include_SATD': False}, {'start_line': 636, 'end_line': 636, 'comment': '# 4 from class1', 'include_SATD': False}, {'start_line': 639, 'end_line': 639, 'comment': '# 2 from class1, 1 from class2, 3 from net_vf', 'include_SATD': False}, {'start_line': 676, 'end_line': 676, 'comment': '# These will track allocations during the test', 'include_SATD': False}, {'start_line': 689, 'end_line': 689, 'comment': '# Update instance entry', 'include_SATD': False}, {'start_line': 700, 'end_line': 700, 'comment': '# Update global allocs', 'include_SATD': False}, {'start_line': 715, 'end_line': 716, 'comment': '# Verify allocations for instance, global allocations, # check for duplicates', 'include_SATD': False}, {'start_line': 740, 'end_line': 741, 'comment': '# we know there is at least one cased character in # pci addr in our case', 'include_SATD': False}, {'start_line': 753, 'end_line': 754, 'comment': '# we know there is at least one cased character in # pci addr in our case', 'include_SATD': False}, {'start_line': 766, 'end_line': 767, 'comment': '# we know there is at least one cased character in # pci addr in our case', 'include_SATD': False}, {'start_line': 786, 'end_line': 786, 'comment': '# class1: 0, class2: 0, netvf: 0', 'include_SATD': False}, {'start_line': 824, 'end_line': 824, 'comment': '# Not enough PCI devices of class1', 'include_SATD': False}, {'start_line': 831, 'end_line': 831, 'comment': '# Not enough PCI devicses of class1', 'include_SATD': False}, {'start_line': 838, 'end_line': 838, 'comment': ""# Let's destroy instance i5, this frees up his allocations"", 'include_SATD': False}, {'start_line': 860, 'end_line': 860, 'comment': ""# Let's destroy i8 and i1"", 'include_SATD': False}, {'start_line': 866, 'end_line': 866, 'comment': ""# Let's destroy i8 and i1"", 'include_SATD': False}, {'start_line': 872, 'end_line': 872, 'comment': '# Now we can allocate for i7', 'include_SATD': False}, {'start_line': 877, 'end_line': 877, 'comment': ""# Let's destroy i7"", 'include_SATD': False}, {'start_line': 883, 'end_line': 883, 'comment': '# Now we can allocate for i9', 'include_SATD': False}, {'start_line': 894, 'end_line': 894, 'comment': ""# We have 3 networks, each has 8 PCI 'net_vf' devices"", 'include_SATD': False}, {'start_line': 947, 'end_line': 947, 'comment': '# Generate the FLAGS.pci_devices value and initialize the inventory', 'include_SATD': False}, {'start_line': 956, 'end_line': 958, 'comment': '# Register simple instance types (where each # PCI class appears only once) # 1 from all', 'include_SATD': False}, {'start_line': 960, 'end_line': 960, 'comment': '# 2 from all', 'include_SATD': False}, {'start_line': 963, 'end_line': 963, 'comment': '# 1 from br500', 'include_SATD': False}, {'start_line': 966, 'end_line': 966, 'comment': '# 2 from br500', 'include_SATD': False}, {'start_line': 969, 'end_line': 969, 'comment': '# 1 from br501', 'include_SATD': False}, {'start_line': 972, 'end_line': 972, 'comment': '# 2 from br501', 'include_SATD': False}, {'start_line': 975, 'end_line': 975, 'comment': '# 1 from br502', 'include_SATD': False}, {'start_line': 978, 'end_line': 978, 'comment': '# 2 from br502', 'include_SATD': False}, {'start_line': 1013, 'end_line': 1014, 'comment': '# Register more complex instance types (same PCI class # appears more than once)', 'include_SATD': False}, {'start_line': 1016, 'end_line': 1016, 'comment': '# 2 from all', 'include_SATD': False}, {'start_line': 1021, 'end_line': 1021, 'comment': '# 1 from br500, 1 from br502', 'include_SATD': False}, {'start_line': 1027, 'end_line': 1027, 'comment': '# 3 from br501, 1 from br502', 'include_SATD': False}, {'start_line': 1029, 'end_line': 1029, 'comment': '# One from br501, 2 from all (so 3 from br501, 2 from the rest)', 'include_SATD': False}, {'start_line': 1054, 'end_line': 1054, 'comment': '# These will track allocations during the test', 'include_SATD': False}, {'start_line': 1071, 'end_line': 1071, 'comment': '# Update instance entry', 'include_SATD': False}, {'start_line': 1082, 'end_line': 1082, 'comment': '# Update global allocs', 'include_SATD': False}, {'start_line': 1094, 'end_line': 1095, 'comment': '# Verify allocations for instance, global allocations, # check for duplicates', 'include_SATD': False}, {'start_line': 1120, 'end_line': 1121, 'comment': '# we know there is at least one cased character in # pci addr in our case', 'include_SATD': False}, {'start_line': 1123, 'end_line': 1123, 'comment': '# Duplicates check', 'include_SATD': False}, {'start_line': 1127, 'end_line': 1127, 'comment': '# Update per-instance and global allocations', 'include_SATD': False}, {'start_line': 1144, 'end_line': 1144, 'comment': '# br500: 0, br501: 0, br502: 0', 'include_SATD': False}, {'start_line': 1152, 'end_line': 1152, 'comment': '# Allocate for the same instance again', 'include_SATD': False}, {'start_line': 1175, 'end_line': 1175, 'comment': '# Ask to allocate again for i4 - it should fail', 'include_SATD': False}, {'start_line': 1178, 'end_line': 1178, 'comment': '# Make sure the DB is still valid', 'include_SATD': False}, {'start_line': 1211, 'end_line': 1212, 'comment': '# Delete instance 5, it allocated 1 device from br502, # then we can allocate for i9', 'include_SATD': False}, {'start_line': 1222, 'end_line': 1222, 'comment': '# Verify that we indeed cannot allocate from br500 and from br502', 'include_SATD': False}, {'start_line': 1224, 'end_line': 1224, 'comment': '# Needs one from br500', 'include_SATD': False}, {'start_line': 1226, 'end_line': 1226, 'comment': '# Needs one from br502', 'include_SATD': False}, {'start_line': 1228, 'end_line': 1228, 'comment': '# Verify that we cannot allocate 2 from br501', 'include_SATD': False}, {'start_line': 1235, 'end_line': 1235, 'comment': '# ... but we can allocate 1 from br501', 'include_SATD': False}, {'start_line': 1245, 'end_line': 1245, 'comment': '# br500: 0, br501: 0, br502: 0', 'include_SATD': False}], 'filename': 'nova/tests/test_pci.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/connection.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright (c) 2011 Zadara Storage Inc. # Copyright (c) 2011 OpenStack LLC. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 39, 'end_line': 41, 'comment': '############################################################# # The following methods are abstract within nova.virt.pci.PciDriver # and are implemented here', 'include_SATD': False}, {'start_line': 57, 'end_line': 59, 'comment': '# The code below is not needed, because, as it turns out, # libvirt/KVM does all the necessary preparations # The code below is left only as reference', 'include_SATD': False}, {'start_line': 61, 'end_line': 65, 'comment': ""# First create a PCI device name in libvirt format: pci_0000_00_04_0 # pci_domain, pci_bus, pci_slot, pci_function = \\ #       self._pci_addr_split_re.split(pci_device_address) # pci_dev_name_libvirt = 'pci_' + pci_domain + '_' + pci_bus + '_' +\\ #                        pci_slot + '_' + pci_function"", 'include_SATD': False}], 'filename': 'nova/virt/libvirt/pci.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright (c) 2011 Zadara Storage Inc. # Copyright (c) 2011 OpenStack LLC. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 73, 'end_line': 73, 'comment': '# Setup inventory managers', 'include_SATD': False}, {'start_line': 77, 'end_line': 77, 'comment': '# Add additional PCI device classes here when they are supported', 'include_SATD': False}, {'start_line': 80, 'end_line': 80, 'comment': '# Setup the regular expression that matches a PCI device address', 'include_SATD': False}, {'start_line': 86, 'end_line': 86, 'comment': '# Setup the regular expression that splits PCI addresses to domain, bus, slot & function', 'include_SATD': True}, {'start_line': 98, 'end_line': 98, 'comment': '# FLAGS.pci_devices is a python list of strings; each string represents a JSON object(key/value pairs)', 'include_SATD': False}, {'start_line': 101, 'end_line': 101, 'comment': '# Raises ValueError/TypeError if there is a problem', 'include_SATD': True}, {'start_line': 127, 'end_line': 127, 'comment': '# Get PCI allocation requirements', 'include_SATD': False}, {'start_line': 130, 'end_line': 130, 'comment': '# PCI allocation not required for this instance', 'include_SATD': False}, {'start_line': 136, 'end_line': 136, 'comment': '# Get all currently-allocated devices and also devices allocated to the required instance', 'include_SATD': False}, {'start_line': 139, 'end_line': 139, 'comment': '# Allocate devices for the instance', 'include_SATD': False}, {'start_line': 142, 'end_line': 144, 'comment': '# We need at this point to update the DB # However, the current instance may (in principle) have already-allocated devices # So we need to update its metadata entry in the DB', 'include_SATD': False}, {'start_line': 151, 'end_line': 152, 'comment': ""# Now we have all the required information in 'curr_instance_allocated_devices_dict' # So we commit the allocation in the db"", 'include_SATD': False}, {'start_line': 180, 'end_line': 181, 'comment': '# We need to append the 0x prefix, otherwise libvirt gets confused with strings like ""0010"" and ""0A"", # because it things these are in octal base', 'include_SATD': False}, {'start_line': 199, 'end_line': 200, 'comment': '############################################################# # The following methods must be overridden by derived classes', 'include_SATD': False}, {'start_line': 223, 'end_line': 224, 'comment': '############################################################# # Private methods', 'include_SATD': False}, {'start_line': 234, 'end_line': 234, 'comment': '# Extract and verify the PCI device address', 'include_SATD': False}, {'start_line': 241, 'end_line': 241, 'comment': ""# We don't need the pci address in the dictionary anymore"", 'include_SATD': False}, {'start_line': 244, 'end_line': 244, 'comment': '# Make sure that PCI address is in uppercase!', 'include_SATD': False}, {'start_line': 247, 'end_line': 247, 'comment': '# Extract and verify the PCI device class', 'include_SATD': False}, {'start_line': 252, 'end_line': 252, 'comment': '# Add the PCI device to the global inventory and to apropriate inventory manager', 'include_SATD': False}, {'start_line': 273, 'end_line': 273, 'comment': '# Note: at this point instance_type comes from joinedload with instance, so extra_specs are not loaded', 'include_SATD': False}, {'start_line': 282, 'end_line': 283, 'comment': ""# Convert the JSON string into a list of python dictionaries # Then verify the list of dictionaries, since we're going to return it"", 'include_SATD': False}, {'start_line': 285, 'end_line': 285, 'comment': '# Raises ValueError/TypeError if there is a problem', 'include_SATD': True}, {'start_line': 289, 'end_line': 289, 'comment': '# Verify each dictionary in the list', 'include_SATD': False}, {'start_line': 299, 'end_line': 299, 'comment': '# Raises TypeError if not an integer', 'include_SATD': False}, {'start_line': 306, 'end_line': 306, 'comment': '# Everything seems fine, return the allocation requirements dictionary', 'include_SATD': False}, {'start_line': 310, 'end_line': 310, 'comment': '# If there is a wrong entry in the DB, log an error and return an empty allocation', 'include_SATD': False}, {'start_line': 339, 'end_line': 339, 'comment': '# Set the output for the instance', 'include_SATD': False}, {'start_line': 343, 'end_line': 343, 'comment': ""# Update the global output with this instance's data"", 'include_SATD': False}, {'start_line': 351, 'end_line': 351, 'comment': '# Return a 2-tuple', 'include_SATD': False}, {'start_line': 363, 'end_line': 363, 'comment': ""# Fetch the 'pci_devices' metadata key"", 'include_SATD': False}, {'start_line': 368, 'end_line': 368, 'comment': ""# Metadata is a list of InstanceMetadata objects....let's find the correct one...and hope there is only one"", 'include_SATD': False}, {'start_line': 377, 'end_line': 377, 'comment': '# Convert the pci_devices key to a list (of dictionaries)', 'include_SATD': False}, {'start_line': 387, 'end_line': 388, 'comment': '# Go over entries in the pci_devices list, verify them and produce output # The output dictionary', 'include_SATD': False}, {'start_line': 392, 'end_line': 392, 'comment': ""# Move to next entry in 'pci_devices' key"", 'include_SATD': True}, {'start_line': 399, 'end_line': 399, 'comment': ""# Move to next entry in 'pci_devices' key"", 'include_SATD': True}, {'start_line': 402, 'end_line': 402, 'comment': ""# If these PCI devices are on another host, we don't care"", 'include_SATD': False}, {'start_line': 404, 'end_line': 404, 'comment': ""# Move to next entry in 'pci_devices' key"", 'include_SATD': True}, {'start_line': 407, 'end_line': 407, 'comment': '# Go over PCI addresses, verify them and add to output', 'include_SATD': False}, {'start_line': 410, 'end_line': 410, 'comment': '# Do not add this PCI device to output', 'include_SATD': False}, {'start_line': 414, 'end_line': 414, 'comment': '# Fetch/create output set for the PCI class', 'include_SATD': False}, {'start_line': 420, 'end_line': 420, 'comment': '# Add to output - in uppercase!', 'include_SATD': False}, {'start_line': 427, 'end_line': 427, 'comment': ""# Move to next entry in 'pci_devices' key"", 'include_SATD': True}, {'start_line': 465, 'end_line': 465, 'comment': '# Obtain the pci_class and an inventory manager for this class', 'include_SATD': False}, {'start_line': 469, 'end_line': 469, 'comment': '# This is not supposed to happen, because we have DefaultPciInventoryManagers', 'include_SATD': False}, {'start_line': 472, 'end_line': 472, 'comment': ""# Fetch the set of currently-allocated device for 'pci_class'"", 'include_SATD': False}, {'start_line': 478, 'end_line': 478, 'comment': '# Ask the inventory manager to perform the allocation', 'include_SATD': False}, {'start_line': 483, 'end_line': 484, 'comment': '# Update the curr_allocated_dict (by updating curr_allocated_for_pci_class) # This is required if there are several entries for the same PCI class in alloc_requirement_list', 'include_SATD': False}, {'start_line': 487, 'end_line': 487, 'comment': '# Set/Append to the output', 'include_SATD': False}, {'start_line': 510, 'end_line': 510, 'comment': ""# Build the python representation of the 'pci_devices' entry in the 'instance_metadata' table"", 'include_SATD': False}, {'start_line': 516, 'end_line': 516, 'comment': '# Now produce a JSON string representation of all this', 'include_SATD': False}, {'start_line': 519, 'end_line': 519, 'comment': '# Finally, write to db', 'include_SATD': False}, {'start_line': 522, 'end_line': 522, 'comment': ""# The last argument is 'delete', which we set to False!"", 'include_SATD': False}, {'start_line': 525, 'end_line': 525, 'comment': '##############################################################################', 'include_SATD': False}, {'start_line': 541, 'end_line': 541, 'comment': '##############################################################################', 'include_SATD': False}, {'start_line': 547, 'end_line': 548, 'comment': '############################################################# # The following methods must be overridden by derived classes', 'include_SATD': False}, {'start_line': 572, 'end_line': 572, 'comment': '##############################################################################', 'include_SATD': False}, {'start_line': 583, 'end_line': 583, 'comment': '# key: PCI address, value: a dict of class-specific params', 'include_SATD': False}, {'start_line': 589, 'end_line': 589, 'comment': '# No need for duplicate check here; this is done by the global inventory', 'include_SATD': False}, {'start_line': 594, 'end_line': 594, 'comment': '# Just a safety check; somewhere else is verified that count > 0', 'include_SATD': False}, {'start_line': 598, 'end_line': 598, 'comment': '# Just a printout', 'include_SATD': False}, {'start_line': 617, 'end_line': 617, 'comment': '##############################################################################', 'include_SATD': False}, {'start_line': 640, 'end_line': 640, 'comment': '# key: parent PF, value: set of NetVfPciDevice objects', 'include_SATD': False}, {'start_line': 655, 'end_line': 655, 'comment': '# Note that NetVfPciDevice objects are compared here by identity!', 'include_SATD': False}, {'start_line': 668, 'end_line': 668, 'comment': ""# If we don't find this PCI device in our bucket, it's a warning"", 'include_SATD': False}, {'start_line': 680, 'end_line': 680, 'comment': '# Put this PCI device aside', 'include_SATD': False}, {'start_line': 694, 'end_line': 694, 'comment': '# AlexL-Zadara TODO: do smarter allocation with load balancing between PFs', 'include_SATD': True}, {'start_line': 737, 'end_line': 737, 'comment': '# key: network_id, value: NetVfNetworkBucket', 'include_SATD': False}, {'start_line': 739, 'end_line': 739, 'comment': '# This is a flat mapping of PCI addresses to NetVfPciDevice objects', 'include_SATD': False}, {'start_line': 751, 'end_line': 751, 'comment': '# Check that additional arguments are present', 'include_SATD': False}, {'start_line': 757, 'end_line': 757, 'comment': '# Create a NetVfPciDevice object', 'include_SATD': False}, {'start_line': 760, 'end_line': 760, 'comment': '# Add to the flat map', 'include_SATD': False}, {'start_line': 763, 'end_line': 765, 'comment': ""# Add to the network bucket # Note: we allow here to add 2 PCI devices of different networks, but having the same parent PF # Not sure if that is possible, but let's not block it for now"", 'include_SATD': False}, {'start_line': 777, 'end_line': 784, 'comment': ""# The idea here is the same as in DefaultPciInventoryManager: # We go over all devices, and we allocate from those that are not in 'allocated_devices_set' # Except that we need to look also at 'network_id', and allocate from # the appropriate network bucket. # As an optimization we do the following: #   - go over all devices in allocated_devices_set and temporarily mark them as 'allocated' #   - allocate from all those that are not marked as 'allocated' #   - clear the 'allocated' markings"", 'include_SATD': False}, {'start_line': 790, 'end_line': 790, 'comment': '# Mark all the relevant objects as allocated in their buckets', 'include_SATD': False}, {'start_line': 794, 'end_line': 794, 'comment': ""# We don't have this PCI device in our data structures, forget it"", 'include_SATD': False}, {'start_line': 801, 'end_line': 801, 'comment': '# Strange, but forget it', 'include_SATD': False}, {'start_line': 806, 'end_line': 806, 'comment': '# Print', 'include_SATD': False}, {'start_line': 810, 'end_line': 811, 'comment': ""# We need to allocate 'count' devices from appropriate network_id # If network_id is None, then we need to allocate 'count' devices from all available networks"", 'include_SATD': False}, {'start_line': 819, 'end_line': 819, 'comment': '# NetVfNetworkBucket.allocate_pci_devices returns None in case it fails to allocate', 'include_SATD': False}, {'start_line': 822, 'end_line': 822, 'comment': '# Whatever happens, we must clear all the allocations before leaving this function', 'include_SATD': False}], 'filename': 'nova/virt/pci.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/instance_types.py'}, {'a_comments': [], 'b_comments': [{'start_line': 495, 'end_line': 495, 'comment': '# AlexL - Zadara: unfortunately need a call to instance_get', 'include_SATD': False}], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 3412, 'end_line': 3412, 'comment': '# AlexL-Zadara-PCI - destroy all the extra-specs too', 'include_SATD': False}, {'start_line': 3439, 'end_line': 3439, 'comment': '# AlexL-Zadara-PCI - purge all the extra-specs too', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 845, 'end_line': 845, 'comment': '# AlexL-Zadara-PCI - added PCI device allocation exceptions', 'include_SATD': False}], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [{'start_line': 221, 'end_line': 221, 'comment': '# AlexL-Zadara-PCI', 'include_SATD': False}, {'start_line': 233, 'end_line': 233, 'comment': '# extra_specs values must be all strings', 'include_SATD': False}, {'start_line': 243, 'end_line': 243, 'comment': '# Fetch instance type id', 'include_SATD': False}, {'start_line': 260, 'end_line': 260, 'comment': '# Fetch instance type id', 'include_SATD': False}, {'start_line': 270, 'end_line': 270, 'comment': ""# If it's still in the DB, let's purge it"", 'include_SATD': False}, {'start_line': 278, 'end_line': 278, 'comment': ""# If it's still in the DB, let's purge it"", 'include_SATD': False}, {'start_line': 340, 'end_line': 341, 'comment': ""# After destorying the instance, its extra specs are also marked as # 'deleted' and get_instance_type should not bring them"", 'include_SATD': False}, {'start_line': 343, 'end_line': 343, 'comment': '# But extra_specs should still exist in the DB', 'include_SATD': False}, {'start_line': 349, 'end_line': 349, 'comment': '# Verify that inst2 extra_specs are still there', 'include_SATD': False}, {'start_line': 367, 'end_line': 367, 'comment': '# Make sure that extra specs are gone too', 'include_SATD': False}, {'start_line': 372, 'end_line': 372, 'comment': '# Now first destroy the instance and then purge it', 'include_SATD': False}, {'start_line': 375, 'end_line': 376, 'comment': ""# This shouldn't raise # But extra_specs should be empty"", 'include_SATD': True}, {'start_line': 378, 'end_line': 378, 'comment': '# Validate that extra specs are still in db', 'include_SATD': False}, {'start_line': 384, 'end_line': 384, 'comment': '# Now purge the instance', 'include_SATD': False}, {'start_line': 388, 'end_line': 388, 'comment': '# Make sure that extra specs are gone too', 'include_SATD': False}], 'filename': 'nova/tests/test_instance_types.py'}, {'a_comments': [], 'b_comments': [{'start_line': 276, 'end_line': 277, 'comment': '# AlexL-Zadara-PCI # A fake PCI driver', 'include_SATD': False}, {'start_line': 296, 'end_line': 296, 'comment': '# AlexL-Zadara-PCI', 'include_SATD': False}, {'start_line': 306, 'end_line': 306, 'comment': '# AlexL-Zadara-PCI', 'include_SATD': False}], 'filename': 'nova/tests/test_libvirt.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright (c) 2011 Zadara Storage Inc. # Copyright (c) 2011 OpenStack LLC. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 35, 'end_line': 37, 'comment': '############################################################# # The following methods are abstract within nova.virt.pci.PciDriver # and are implemented here', 'include_SATD': False}, {'start_line': 59, 'end_line': 59, 'comment': '# Test malformed flags', 'include_SATD': False}, {'start_line': 70, 'end_line': 70, 'comment': '# Test not having ""pci_addr""', 'include_SATD': False}, {'start_line': 76, 'end_line': 76, 'comment': '# Test bad PCI address (PCI function must be 0-7)', 'include_SATD': False}, {'start_line': 82, 'end_line': 82, 'comment': '# Test bad PCI address (. instead of :)', 'include_SATD': False}, {'start_line': 88, 'end_line': 88, 'comment': '# Test bad PCI address (invalid hex digit)', 'include_SATD': False}, {'start_line': 94, 'end_line': 94, 'comment': '# Test bad PCI address (not enough digits in PCI domain)', 'include_SATD': False}, {'start_line': 100, 'end_line': 100, 'comment': '# Test bad PCI address (no PCI domain)', 'include_SATD': False}, {'start_line': 106, 'end_line': 106, 'comment': '# Test bad PCI address (missing :)', 'include_SATD': False}, {'start_line': 112, 'end_line': 112, 'comment': '# Test not having ""pci_class""', 'include_SATD': False}, {'start_line': 118, 'end_line': 119, 'comment': '# Test adding same device twice (note that after this piece of code, # 0010:00:ab.1 and 0010:00:ab.2 are added to the inventory)', 'include_SATD': False}, {'start_line': 130, 'end_line': 130, 'comment': '# Test not supplying required parameters for net_vf', 'include_SATD': False}, {'start_line': 242, 'end_line': 242, 'comment': '# Malformed', 'include_SATD': False}, {'start_line': 244, 'end_line': 244, 'comment': '# Not a JSON array', 'include_SATD': False}, {'start_line': 246, 'end_line': 246, 'comment': '# The second element is not a valid JSON object', 'include_SATD': False}, {'start_line': 251, 'end_line': 251, 'comment': ""# No 'pci_class'"", 'include_SATD': False}, {'start_line': 253, 'end_line': 253, 'comment': ""# No 'count'"", 'include_SATD': False}, {'start_line': 255, 'end_line': 255, 'comment': ""# 'count' not int"", 'include_SATD': False}, {'start_line': 257, 'end_line': 257, 'comment': '# Negative count', 'include_SATD': False}, {'start_line': 328, 'end_line': 328, 'comment': '# Invalid syntax in the pci_devices string', 'include_SATD': False}, {'start_line': 333, 'end_line': 333, 'comment': '# Not a JSON array', 'include_SATD': False}, {'start_line': 338, 'end_line': 338, 'comment': '# PCI devices not in inventory', 'include_SATD': False}, {'start_line': 343, 'end_line': 343, 'comment': '# PCI devices not in inventory or on a different host', 'include_SATD': False}, {'start_line': 349, 'end_line': 349, 'comment': '# Empty list of PCI devices???', 'include_SATD': False}, {'start_line': 394, 'end_line': 394, 'comment': '# Set up inventory', 'include_SATD': False}, {'start_line': 446, 'end_line': 447, 'comment': '# Create instances in the DB with already-allocated devices # Note that the values in DB are always uppercase', 'include_SATD': False}, {'start_line': 451, 'end_line': 452, 'comment': '# We pass a shallow copy, because instance_create modifies # the passed dictionary', 'include_SATD': False}, {'start_line': 577, 'end_line': 577, 'comment': ""# Give some instance id to the method, it doesn't matter for the test"", 'include_SATD': False}, {'start_line': 588, 'end_line': 588, 'comment': '# We have PCI devices of three classes, each class has 8 devices', 'include_SATD': False}, {'start_line': 645, 'end_line': 645, 'comment': ""# Let's also build our own list of PciDevice objects"", 'include_SATD': False}, {'start_line': 655, 'end_line': 655, 'comment': '# Register instance types', 'include_SATD': False}, {'start_line': 658, 'end_line': 658, 'comment': '# 1 from class1', 'include_SATD': False}, {'start_line': 662, 'end_line': 662, 'comment': '# 1 from class2', 'include_SATD': False}, {'start_line': 665, 'end_line': 665, 'comment': '# 1 from net_vf', 'include_SATD': False}, {'start_line': 669, 'end_line': 669, 'comment': '# 3 from class1, 2 from class2', 'include_SATD': False}, {'start_line': 673, 'end_line': 673, 'comment': '# 2 from net_vf, 1 from class1', 'include_SATD': False}, {'start_line': 677, 'end_line': 677, 'comment': '# 1 from class1, 1 from class2', 'include_SATD': False}, {'start_line': 680, 'end_line': 680, 'comment': '# 4 from class1', 'include_SATD': False}, {'start_line': 683, 'end_line': 683, 'comment': '# 2 from class1, 1 from class2, 3 from net_vf', 'include_SATD': False}, {'start_line': 720, 'end_line': 720, 'comment': '# These will track allocations during the test', 'include_SATD': False}, {'start_line': 736, 'end_line': 736, 'comment': '# Update instance entry', 'include_SATD': False}, {'start_line': 747, 'end_line': 747, 'comment': '# Update global allocs', 'include_SATD': False}, {'start_line': 762, 'end_line': 763, 'comment': '# Verify allocations for instance, global allocations, # check for duplicates', 'include_SATD': False}, {'start_line': 824, 'end_line': 824, 'comment': '# class1: 0, class2: 0, netvf: 0', 'include_SATD': False}, {'start_line': 844, 'end_line': 844, 'comment': '# Ask to allocate again, and verify that nothing is allocated', 'include_SATD': False}, {'start_line': 870, 'end_line': 870, 'comment': '# Ask to allocate again, and verify that nothing is allocated', 'include_SATD': False}, {'start_line': 884, 'end_line': 884, 'comment': '# Not enough PCI devices of class1', 'include_SATD': False}, {'start_line': 891, 'end_line': 891, 'comment': '# Not enough PCI devicses of class1', 'include_SATD': False}, {'start_line': 898, 'end_line': 898, 'comment': ""# Let's destroy instance i5, this frees up his allocations"", 'include_SATD': False}, {'start_line': 914, 'end_line': 914, 'comment': '# Ask to allocate again, and verify that nothing is allocated', 'include_SATD': False}, {'start_line': 934, 'end_line': 934, 'comment': ""# Let's destroy i8 and i1"", 'include_SATD': False}, {'start_line': 940, 'end_line': 940, 'comment': ""# Let's destroy i8 and i1"", 'include_SATD': False}, {'start_line': 946, 'end_line': 946, 'comment': '# Now we can allocate for i7', 'include_SATD': False}, {'start_line': 951, 'end_line': 951, 'comment': '# Ask to allocate again, and verify that nothing is allocated', 'include_SATD': False}, {'start_line': 963, 'end_line': 963, 'comment': ""# Let's destroy i7"", 'include_SATD': False}, {'start_line': 969, 'end_line': 969, 'comment': '# Now we can allocate for i9', 'include_SATD': False}, {'start_line': 974, 'end_line': 974, 'comment': '# Ask to allocate again, and verify that nothing is allocated', 'include_SATD': False}, {'start_line': 995, 'end_line': 995, 'comment': '# Need to do a lazy load here', 'include_SATD': False}, {'start_line': 1014, 'end_line': 1014, 'comment': '# Need to do a lazy load here', 'include_SATD': False}, {'start_line': 1033, 'end_line': 1033, 'comment': '# Need to do a lazy load here', 'include_SATD': False}, {'start_line': 1052, 'end_line': 1052, 'comment': '# Need to do a lazy load here', 'include_SATD': False}, {'start_line': 1066, 'end_line': 1067, 'comment': '# Here the instance has allocated more than it needs to and also # some devices from non-needed classes', 'include_SATD': False}, {'start_line': 1074, 'end_line': 1074, 'comment': '# Need to do a lazy load here', 'include_SATD': False}, {'start_line': 1087, 'end_line': 1087, 'comment': ""# We have 3 networks, each has 8 PCI 'net_vf' devices"", 'include_SATD': False}, {'start_line': 1140, 'end_line': 1140, 'comment': '# Generate the FLAGS.pci_devices value and initialize the inventory', 'include_SATD': False}, {'start_line': 1149, 'end_line': 1151, 'comment': '# Register simple instance types (where each # PCI class appears only once) # 1 from all', 'include_SATD': False}, {'start_line': 1153, 'end_line': 1153, 'comment': '# 2 from all', 'include_SATD': False}, {'start_line': 1156, 'end_line': 1156, 'comment': '# 1 from br500', 'include_SATD': False}, {'start_line': 1159, 'end_line': 1159, 'comment': '# 2 from br500', 'include_SATD': False}, {'start_line': 1162, 'end_line': 1162, 'comment': '# 1 from br501', 'include_SATD': False}, {'start_line': 1165, 'end_line': 1165, 'comment': '# 2 from br501', 'include_SATD': False}, {'start_line': 1168, 'end_line': 1168, 'comment': '# 1 from br502', 'include_SATD': False}, {'start_line': 1171, 'end_line': 1171, 'comment': '# 2 from br502', 'include_SATD': False}, {'start_line': 1206, 'end_line': 1207, 'comment': '# Register more complex instance types (same PCI class # appears more than once)', 'include_SATD': False}, {'start_line': 1209, 'end_line': 1209, 'comment': '# 2 from all', 'include_SATD': False}, {'start_line': 1214, 'end_line': 1214, 'comment': '# 1 from br500, 1 from br502', 'include_SATD': False}, {'start_line': 1220, 'end_line': 1220, 'comment': '# 3 from br501, 1 from br502', 'include_SATD': False}, {'start_line': 1222, 'end_line': 1222, 'comment': '# One from br502, 2 from all (so 3 from br502, 2 from the rest)', 'include_SATD': False}, {'start_line': 1247, 'end_line': 1247, 'comment': '# These will track allocations during the test', 'include_SATD': False}, {'start_line': 1263, 'end_line': 1263, 'comment': '# Update instance entry', 'include_SATD': False}, {'start_line': 1274, 'end_line': 1274, 'comment': '# Update global allocs', 'include_SATD': False}, {'start_line': 1286, 'end_line': 1287, 'comment': '# Verify allocations for instance, global allocations, # check for duplicates', 'include_SATD': False}, {'start_line': 1312, 'end_line': 1312, 'comment': '# Duplicates check', 'include_SATD': False}, {'start_line': 1316, 'end_line': 1316, 'comment': '# Update per-instance and global allocations', 'include_SATD': False}, {'start_line': 1332, 'end_line': 1332, 'comment': '# br500: 0, br501: 0, br502: 0', 'include_SATD': False}, {'start_line': 1352, 'end_line': 1352, 'comment': '# Ask to allocate again and verify that nothing gets allocated', 'include_SATD': False}, {'start_line': 1378, 'end_line': 1378, 'comment': '# Ask to allocate again and verify that nothing gets allocated', 'include_SATD': False}, {'start_line': 1410, 'end_line': 1411, 'comment': '# Delete instance 5, it allocated 1 device from br502, # then we can allocate for i9', 'include_SATD': False}, {'start_line': 1421, 'end_line': 1421, 'comment': '# Ask to allocate again and verify that nothing gets allocated', 'include_SATD': False}, {'start_line': 1438, 'end_line': 1439, 'comment': '# Verify that we indeed cannot allocate from br500 and from br502 # Needs one from br500', 'include_SATD': False}, {'start_line': 1444, 'end_line': 1444, 'comment': '# Needs one from br502', 'include_SATD': False}, {'start_line': 1451, 'end_line': 1451, 'comment': '# Verify that we cannot allocate 2 from br501', 'include_SATD': False}, {'start_line': 1458, 'end_line': 1458, 'comment': '# ... but we can allocate 1 from br501', 'include_SATD': False}, {'start_line': 1465, 'end_line': 1465, 'comment': '# Ask to allocate again and verify that nothing gets allocated', 'include_SATD': False}, {'start_line': 1488, 'end_line': 1488, 'comment': '# br500: 0, br501: 0, br502: 0', 'include_SATD': False}, {'start_line': 1514, 'end_line': 1514, 'comment': '# Ask to allocate again and verify that nothing gets allocated', 'include_SATD': False}, {'start_line': 1532, 'end_line': 1532, 'comment': '# Need to do a lazy load here', 'include_SATD': False}, {'start_line': 1546, 'end_line': 1546, 'comment': '# Instance has allocated more than needed', 'include_SATD': False}, {'start_line': 1552, 'end_line': 1552, 'comment': '# Need to do a lazy load here', 'include_SATD': False}], 'filename': 'nova/tests/test_pci.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/fake.py'}, {'a_comments': [], 'b_comments': [{'start_line': 142, 'end_line': 142, 'comment': '# AlexL-Zadara-PCI', 'include_SATD': False}, {'start_line': 203, 'end_line': 203, 'comment': '# AlexL-Zadara-PCI', 'include_SATD': False}, {'start_line': 209, 'end_line': 209, 'comment': '# AlexL-Zadara-PCI', 'include_SATD': False}, {'start_line': 540, 'end_line': 540, 'comment': '# AlexL-Zadara-PCI', 'include_SATD': False}, {'start_line': 654, 'end_line': 654, 'comment': '# AlexL-Zadara-PCI', 'include_SATD': False}, {'start_line': 673, 'end_line': 673, 'comment': '# AlexL-Zadara-PCI', 'include_SATD': False}, {'start_line': 1226, 'end_line': 1226, 'comment': '# AlexL-Zadara-PCI', 'include_SATD': False}], 'filename': 'nova/virt/libvirt/connection.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright (c) 2011 Zadara Storage Inc. # Copyright (c) 2011 OpenStack LLC. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 39, 'end_line': 41, 'comment': '############################################################# # The following methods are abstract within nova.virt.pci.PciDriver # and are implemented here', 'include_SATD': False}, {'start_line': 57, 'end_line': 65, 'comment': '# The code below is not needed, in principle, because, as it turns out, # libvirt/KVM does all the necessary preparations. # However, see issue #172: VM can be running, that has attached PCI # devices, but this VM is already marked as \'deleted\' in nova DB. # So his PCI devices can be assigned to a different VM, which will # result in strange libvirt failure with error message: # ""failed to retrieve chardev info in qemu with \'info chardev\' # So we hope to catch this error earlier here, when we try to detach # the PCI device.', 'include_SATD': False}, {'start_line': 67, 'end_line': 67, 'comment': '# First create a PCI device name in libvirt format: pci_0000_00_04_0', 'include_SATD': False}, {'start_line': 74, 'end_line': 74, 'comment': '# Lookup the device', 'include_SATD': False}, {'start_line': 79, 'end_line': 79, 'comment': '# Note the double-t', 'include_SATD': False}], 'filename': 'nova/virt/libvirt/pci.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright (c) 2011 Zadara Storage Inc. # Copyright (c) 2011 OpenStack LLC. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 87, 'end_line': 88, 'comment': '# Note that this method is called only when the attribute is not # found in ""usual places""', 'include_SATD': False}, {'start_line': 112, 'end_line': 112, 'comment': '# Setup inventory managers', 'include_SATD': False}, {'start_line': 115, 'end_line': 115, 'comment': '# Add additional PCI device classes here when they are supported', 'include_SATD': False}, {'start_line': 118, 'end_line': 118, 'comment': '# Setup the regular expression that matches a PCI device address', 'include_SATD': False}, {'start_line': 127, 'end_line': 128, 'comment': '# Setup the regular expression that splits PCI addresses to # domain, bus, slot & function', 'include_SATD': True}, {'start_line': 134, 'end_line': 135, 'comment': ""# Since we are going to use the hostname as part of a database key, # let's make sure it's a valid one"", 'include_SATD': False}, {'start_line': 148, 'end_line': 149, 'comment': '# FLAGS.pci_devices is a python list of strings; # each string represents a JSON object(key/value pairs)', 'include_SATD': False}, {'start_line': 152, 'end_line': 152, 'comment': '# Raises ValueError/TypeError if there is a problem', 'include_SATD': True}, {'start_line': 191, 'end_line': 191, 'comment': '# Print', 'include_SATD': False}, {'start_line': 197, 'end_line': 197, 'comment': '# Get PCI allocation requirements', 'include_SATD': False}, {'start_line': 201, 'end_line': 201, 'comment': '# PCI allocation not required for this instance', 'include_SATD': False}, {'start_line': 204, 'end_line': 205, 'comment': '# Go over all inventory managers and ask them to normalize the # allocation requirements', 'include_SATD': False}, {'start_line': 210, 'end_line': 211, 'comment': '# Fetch all the currently-allocated devices on this host, and also # the devices allocated to this instance', 'include_SATD': False}, {'start_line': 215, 'end_line': 216, 'comment': '# Update the PCI allocation requirements, according to what is already # allocated to this instance', 'include_SATD': False}, {'start_line': 219, 'end_line': 220, 'comment': '# If at this point we see that alloc_requirement_list becomes empty, # we are done', 'include_SATD': False}, {'start_line': 224, 'end_line': 224, 'comment': '# Allocate devices for the instance', 'include_SATD': False}, {'start_line': 230, 'end_line': 232, 'comment': '# We need at this point to update the DB # The current instance may have already-allocated devices # So we need to update its metadata entry in the DB', 'include_SATD': False}, {'start_line': 235, 'end_line': 236, 'comment': '# Note: we do not clone pci_devices_set here, because # we will not touch new_alloc_for_instance from now on', 'include_SATD': False}, {'start_line': 241, 'end_line': 243, 'comment': ""# Now we have all the required information in # 'instance_alloc_devices_dict' # So we commit the allocation in the db"", 'include_SATD': False}, {'start_line': 253, 'end_line': 258, 'comment': ""# At this point it would be best to replace the appropriate # InstanceMetadata object in instance['metadata'] list. # But this is not easily possible, because of SqlAlchemy restrictions. # So we do a dirty trick: we cache instance_alloc_devices_dict in the # instance dictionary, and prepare_pci_devices_for_instance() and # get_allocated_pci_devices() will look there first"", 'include_SATD': True}, {'start_line': 261, 'end_line': 261, 'comment': '# Print', 'include_SATD': False}, {'start_line': 283, 'end_line': 283, 'comment': '# Try to get the cached entry first, then look at metadata', 'include_SATD': False}, {'start_line': 293, 'end_line': 295, 'comment': '# We need to append the 0x prefix, otherwise libvirt gets # confused with strings like ""0010"" and ""0A"", because it thinks # these are in octal base', 'include_SATD': False}, {'start_line': 308, 'end_line': 308, 'comment': '# Try to get the cached entry first, then look at metadata', 'include_SATD': False}, {'start_line': 318, 'end_line': 319, 'comment': '############################################################# # The following methods must be overridden by derived classes', 'include_SATD': False}, {'start_line': 346, 'end_line': 347, 'comment': '############################################################# # Private methods', 'include_SATD': False}, {'start_line': 358, 'end_line': 358, 'comment': '# Extract and verify the PCI device address', 'include_SATD': False}, {'start_line': 367, 'end_line': 367, 'comment': ""# We don't need the pci address in the dictionary anymore"", 'include_SATD': False}, {'start_line': 370, 'end_line': 370, 'comment': '# Make sure that PCI address is in uppercase!', 'include_SATD': False}, {'start_line': 373, 'end_line': 373, 'comment': '# Extract and verify the PCI device class', 'include_SATD': False}, {'start_line': 379, 'end_line': 379, 'comment': ""# We don't need the pci class in the dictionary anymore"", 'include_SATD': False}, {'start_line': 382, 'end_line': 382, 'comment': '# Create a PciDevice object', 'include_SATD': False}, {'start_line': 385, 'end_line': 386, 'comment': '# Add the PCI device to the global inventory and to apropriate # inventory manager', 'include_SATD': False}, {'start_line': 407, 'end_line': 408, 'comment': '# Note: at this point instance_type comes from joinedload with # instance, so extra_specs are not loaded', 'include_SATD': False}, {'start_line': 418, 'end_line': 419, 'comment': ""# Convert the JSON string into a list of python dictionaries # Then verify the list of dictionaries, since we're going to return it"", 'include_SATD': False}, {'start_line': 421, 'end_line': 421, 'comment': '# Raises ValueError/TypeError if there is a problem', 'include_SATD': True}, {'start_line': 426, 'end_line': 426, 'comment': '# Verify each dictionary in the list', 'include_SATD': False}, {'start_line': 438, 'end_line': 438, 'comment': '# Raises TypeError if not an integer', 'include_SATD': False}, {'start_line': 446, 'end_line': 446, 'comment': '# Looks ok, return the allocation requirements dictionary', 'include_SATD': False}, {'start_line': 450, 'end_line': 451, 'comment': '# If there is a wrong entry in the DB, log an error and # return an empty allocation', 'include_SATD': False}, {'start_line': 485, 'end_line': 485, 'comment': '# Set the output for the instance', 'include_SATD': False}, {'start_line': 489, 'end_line': 489, 'comment': ""# Update the global output with this instance's data"", 'include_SATD': False}, {'start_line': 493, 'end_line': 498, 'comment': '# NOTE!! # It is important to clone the pci_devices_set here, # othewise out_instance_dict and out_all_dict[pci_class] # will point to the same set, and later we will add # devices to this set, so out_instance_dict will get # messed up', 'include_SATD': False}, {'start_line': 503, 'end_line': 503, 'comment': '# Return a 2-tuple', 'include_SATD': False}, {'start_line': 517, 'end_line': 517, 'comment': ""# Fetch the 'pci_devices_<hostname>' metadata key"", 'include_SATD': False}, {'start_line': 522, 'end_line': 523, 'comment': ""# Metadata is a list of InstanceMetadata objects.... # Let's find the correct one...and hope there is only one"", 'include_SATD': False}, {'start_line': 533, 'end_line': 533, 'comment': '# Convert the pci_devices key to a python list PCI addresses', 'include_SATD': False}, {'start_line': 535, 'end_line': 535, 'comment': '# This may throw a ValueError in case of malformed JSON', 'include_SATD': False}, {'start_line': 546, 'end_line': 547, 'comment': '# Go over entries in pci_addr_list, check them, produce output # The output dictionary', 'include_SATD': False}, {'start_line': 554, 'end_line': 554, 'comment': '# Move to next PCI address', 'include_SATD': True}, {'start_line': 556, 'end_line': 556, 'comment': '# Add pci_dev to output (if not already there)', 'include_SATD': False}, {'start_line': 604, 'end_line': 605, 'comment': ""# We don't have anything already-allocated for that class # So nothing to do"", 'include_SATD': False}, {'start_line': 640, 'end_line': 640, 'comment': '# Obtain the pci_class and an inventory manager for this class', 'include_SATD': False}, {'start_line': 644, 'end_line': 645, 'comment': ""# If we don't have the default inventory manager, this means # we don't have any available PCI devices of that class"", 'include_SATD': False}, {'start_line': 648, 'end_line': 648, 'comment': ""# Fetch the set of currently-allocated devices for 'pci_class'"", 'include_SATD': False}, {'start_line': 654, 'end_line': 654, 'comment': '# Ask the inventory manager to perform the allocation', 'include_SATD': False}, {'start_line': 661, 'end_line': 664, 'comment': '# Update the all_alloc_devices_dict # (by updating alloc_for_pci_class_set) # This is required if there are several entries for the same # PCI class in alloc_requirement_list', 'include_SATD': False}, {'start_line': 667, 'end_line': 667, 'comment': '# Set/Append to the output', 'include_SATD': False}, {'start_line': 670, 'end_line': 670, 'comment': ""# Note: it's ok not to clone alloc_for_instance_set here"", 'include_SATD': False}, {'start_line': 695, 'end_line': 696, 'comment': ""# Build the python representation of the 'pci_devices_<hostname>' # entry in the 'instance_metadata' table"", 'include_SATD': False}, {'start_line': 703, 'end_line': 703, 'comment': '# Now produce a JSON string representation of all this', 'include_SATD': False}, {'start_line': 706, 'end_line': 706, 'comment': '# Finally, write to db', 'include_SATD': False}, {'start_line': 710, 'end_line': 711, 'comment': ""# The last argument is 'delete', # which we set to False!"", 'include_SATD': False}, {'start_line': 715, 'end_line': 715, 'comment': '##############################################################################', 'include_SATD': False}, {'start_line': 740, 'end_line': 740, 'comment': '##############################################################################', 'include_SATD': False}, {'start_line': 746, 'end_line': 747, 'comment': '############################################################# # The following methods must be overridden by derived classes', 'include_SATD': False}, {'start_line': 815, 'end_line': 815, 'comment': '##############################################################################', 'include_SATD': False}, {'start_line': 834, 'end_line': 835, 'comment': '# No need for duplicate check here; # this is done by the global inventory', 'include_SATD': False}, {'start_line': 839, 'end_line': 842, 'comment': ""# If there are multiple entries with our pci_class, # let's make them one entry # Since we are in default inventory manager, we know nothing of # class-specific parameters, so we ignore and eventually drop them"", 'include_SATD': False}, {'start_line': 845, 'end_line': 846, 'comment': ""# We are going to modify alloc_requirement_list, so let's iterate over # a copy, while we modify the original"", 'include_SATD': False}, {'start_line': 853, 'end_line': 853, 'comment': '# Create an accumulative single entry, if needed', 'include_SATD': False}, {'start_line': 863, 'end_line': 863, 'comment': '# If nothing is allocated for us, nothing to do', 'include_SATD': False}, {'start_line': 867, 'end_line': 868, 'comment': ""# Let's find our only requirement entry (we know there is only one, # because it's after normalization"", 'include_SATD': False}, {'start_line': 875, 'end_line': 875, 'comment': '# Nothing to do', 'include_SATD': False}, {'start_line': 880, 'end_line': 880, 'comment': '# This is just for printing', 'include_SATD': False}, {'start_line': 895, 'end_line': 895, 'comment': '# Just a safety check; somewhere else is verified that count > 0', 'include_SATD': False}, {'start_line': 899, 'end_line': 899, 'comment': '# Just a printout', 'include_SATD': False}, {'start_line': 920, 'end_line': 920, 'comment': '##############################################################################', 'include_SATD': False}, {'start_line': 934, 'end_line': 934, 'comment': '# key: parent PF, value: set of PciDevice objects', 'include_SATD': False}, {'start_line': 949, 'end_line': 949, 'comment': '# Note that PciDevice objects are compared by identity!', 'include_SATD': False}, {'start_line': 963, 'end_line': 963, 'comment': ""# If we don't find this PCI device in our bucket, it's a warning"", 'include_SATD': False}, {'start_line': 983, 'end_line': 983, 'comment': '# Put this PCI device aside', 'include_SATD': False}, {'start_line': 998, 'end_line': 999, 'comment': '# AlexL-Zadara TODO: do smarter allocation with load balancing # between PFs', 'include_SATD': True}, {'start_line': 1045, 'end_line': 1045, 'comment': '# key: network_id, value: NetVfNetworkBucket', 'include_SATD': False}, {'start_line': 1058, 'end_line': 1058, 'comment': '# Check that additional arguments are present', 'include_SATD': False}, {'start_line': 1064, 'end_line': 1067, 'comment': ""# Add to the network bucket # Note: we allow here to add 2 PCI devices of different networks, # but having the same parent PF # Not sure if that is possible, but let's not block it for now"", 'include_SATD': False}, {'start_line': 1077, 'end_line': 1077, 'comment': '# We will get rid of entries with network_id==None and expand them', 'include_SATD': False}, {'start_line': 1088, 'end_line': 1089, 'comment': ""# We are going to modify alloc_requirement_list, so let's iterate over # a copy, while we modify the original"", 'include_SATD': False}, {'start_line': 1098, 'end_line': 1098, 'comment': ""# We need 'count' devices from all networks we have"", 'include_SATD': False}, {'start_line': 1118, 'end_line': 1118, 'comment': '# If nothing is allocated for us, nothing to do', 'include_SATD': False}, {'start_line': 1122, 'end_line': 1122, 'comment': ""# Let's count the number of devices allocated per network_id"", 'include_SATD': False}, {'start_line': 1140, 'end_line': 1141, 'comment': '# We know that there is a single entry per each network_id, # because we have normalized the allocation requirements list', 'include_SATD': False}, {'start_line': 1146, 'end_line': 1146, 'comment': ""# We don't have any existing allocation"", 'include_SATD': False}, {'start_line': 1151, 'end_line': 1151, 'comment': ""# We don't have to allocate"", 'include_SATD': False}, {'start_line': 1157, 'end_line': 1157, 'comment': '# We have to allocate the difference', 'include_SATD': False}, {'start_line': 1162, 'end_line': 1162, 'comment': ""# Drop those that don't need anymore allocations"", 'include_SATD': False}, {'start_line': 1171, 'end_line': 1180, 'comment': ""# The idea here is the same as in DefaultPciInventoryManager: # We go over all devices, and we allocate from those that are not # in 'alloc_for_pci_class_set' # Except that we need to look also at 'network_id', and allocate from # the appropriate network bucket. # As an optimization we do is the following: #   - go over all devices in alloc_for_pci_class_set and temporarily #     mark them as 'allocated' #   - allocate from all those that are not marked as 'allocated' #   - clear the 'allocated' markings"", 'include_SATD': False}, {'start_line': 1186, 'end_line': 1186, 'comment': '# Mark all the relevant objects as allocated in their buckets', 'include_SATD': False}, {'start_line': 1193, 'end_line': 1193, 'comment': '# Strange, but forget it', 'include_SATD': False}, {'start_line': 1198, 'end_line': 1198, 'comment': '# Print', 'include_SATD': False}, {'start_line': 1202, 'end_line': 1204, 'comment': ""# We need to allocate 'count' devices from appropriate network_id # If network_id is None, then we need to allocate 'count' devices # from all available networks"", 'include_SATD': False}, {'start_line': 1213, 'end_line': 1214, 'comment': '# NetVfNetworkBucket.allocate_pci_devices returns None # in case it fails to allocate', 'include_SATD': False}, {'start_line': 1218, 'end_line': 1219, 'comment': '# Whatever happens, we must clear all the allocations before # leaving this function', 'include_SATD': False}], 'filename': 'nova/virt/pci.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/instance_types.py'}, {'a_comments': [], 'b_comments': [{'start_line': 3412, 'end_line': 3412, 'comment': '# AlexL-Zadara-PCI - destroy all the extra-specs too', 'include_SATD': False}, {'start_line': 3439, 'end_line': 3439, 'comment': '# AlexL-Zadara-PCI - purge all the extra-specs too', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 845, 'end_line': 845, 'comment': '# AlexL-Zadara-PCI - added PCI device allocation exceptions', 'include_SATD': False}], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [{'start_line': 221, 'end_line': 221, 'comment': '# AlexL-Zadara-PCI', 'include_SATD': False}, {'start_line': 233, 'end_line': 233, 'comment': '# extra_specs values must be all strings', 'include_SATD': False}, {'start_line': 243, 'end_line': 243, 'comment': '# Fetch instance type id', 'include_SATD': False}, {'start_line': 260, 'end_line': 260, 'comment': '# Fetch instance type id', 'include_SATD': False}, {'start_line': 270, 'end_line': 270, 'comment': ""# If it's still in the DB, let's purge it"", 'include_SATD': False}, {'start_line': 278, 'end_line': 278, 'comment': ""# If it's still in the DB, let's purge it"", 'include_SATD': False}, {'start_line': 340, 'end_line': 341, 'comment': ""# After destorying the instance, its extra specs are also marked as # 'deleted' and get_instance_type should not bring them"", 'include_SATD': False}, {'start_line': 343, 'end_line': 343, 'comment': '# But extra_specs should still exist in the DB', 'include_SATD': False}, {'start_line': 349, 'end_line': 349, 'comment': '# Verify that inst2 extra_specs are still there', 'include_SATD': False}, {'start_line': 367, 'end_line': 367, 'comment': '# Make sure that extra specs are gone too', 'include_SATD': False}, {'start_line': 372, 'end_line': 372, 'comment': '# Now first destroy the instance and then purge it', 'include_SATD': False}, {'start_line': 375, 'end_line': 376, 'comment': ""# This shouldn't raise # But extra_specs should be empty"", 'include_SATD': True}, {'start_line': 378, 'end_line': 378, 'comment': '# Validate that extra specs are still in db', 'include_SATD': False}, {'start_line': 384, 'end_line': 384, 'comment': '# Now purge the instance', 'include_SATD': False}, {'start_line': 388, 'end_line': 388, 'comment': '# Make sure that extra specs are gone too', 'include_SATD': False}], 'filename': 'nova/tests/test_instance_types.py'}, {'a_comments': [], 'b_comments': [{'start_line': 276, 'end_line': 277, 'comment': '# AlexL-Zadara-PCI # A fake PCI driver', 'include_SATD': False}, {'start_line': 296, 'end_line': 296, 'comment': '# AlexL-Zadara-PCI', 'include_SATD': False}, {'start_line': 306, 'end_line': 306, 'comment': '# AlexL-Zadara-PCI', 'include_SATD': False}], 'filename': 'nova/tests/test_libvirt.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright (c) 2011 Zadara Storage Inc. # Copyright (c) 2011 OpenStack LLC. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 35, 'end_line': 37, 'comment': '############################################################# # The following methods are abstract within nova.virt.pci.PciDriver # and are implemented here', 'include_SATD': False}, {'start_line': 59, 'end_line': 59, 'comment': '# Test malformed flags', 'include_SATD': False}, {'start_line': 70, 'end_line': 70, 'comment': '# Test not having ""pci_addr""', 'include_SATD': False}, {'start_line': 76, 'end_line': 76, 'comment': '# Test bad PCI address (PCI function must be 0-7)', 'include_SATD': False}, {'start_line': 82, 'end_line': 82, 'comment': '# Test bad PCI address (. instead of :)', 'include_SATD': False}, {'start_line': 88, 'end_line': 88, 'comment': '# Test bad PCI address (invalid hex digit)', 'include_SATD': False}, {'start_line': 94, 'end_line': 94, 'comment': '# Test bad PCI address (not enough digits in PCI domain)', 'include_SATD': False}, {'start_line': 100, 'end_line': 100, 'comment': '# Test bad PCI address (no PCI domain)', 'include_SATD': False}, {'start_line': 106, 'end_line': 106, 'comment': '# Test bad PCI address (missing :)', 'include_SATD': False}, {'start_line': 112, 'end_line': 112, 'comment': '# Test not having ""pci_class""', 'include_SATD': False}, {'start_line': 118, 'end_line': 119, 'comment': '# Test adding same device twice (note that after this piece of code, # 0010:00:ab.1 and 0010:00:ab.2 are added to the inventory)', 'include_SATD': False}, {'start_line': 130, 'end_line': 130, 'comment': '# Test not supplying required parameters for net_vf', 'include_SATD': False}, {'start_line': 242, 'end_line': 242, 'comment': '# Malformed', 'include_SATD': False}, {'start_line': 244, 'end_line': 244, 'comment': '# Not a JSON array', 'include_SATD': False}, {'start_line': 246, 'end_line': 246, 'comment': '# The second element is not a valid JSON object', 'include_SATD': False}, {'start_line': 251, 'end_line': 251, 'comment': ""# No 'pci_class'"", 'include_SATD': False}, {'start_line': 253, 'end_line': 253, 'comment': ""# No 'count'"", 'include_SATD': False}, {'start_line': 255, 'end_line': 255, 'comment': ""# 'count' not int"", 'include_SATD': False}, {'start_line': 257, 'end_line': 257, 'comment': '# Negative count', 'include_SATD': False}, {'start_line': 328, 'end_line': 328, 'comment': '# Invalid syntax in the pci_devices string', 'include_SATD': False}, {'start_line': 333, 'end_line': 333, 'comment': '# Not a JSON array', 'include_SATD': False}, {'start_line': 338, 'end_line': 338, 'comment': '# PCI devices not in inventory', 'include_SATD': False}, {'start_line': 343, 'end_line': 343, 'comment': '# PCI devices not in inventory or on a different host', 'include_SATD': False}, {'start_line': 349, 'end_line': 349, 'comment': '# Empty list of PCI devices???', 'include_SATD': False}, {'start_line': 394, 'end_line': 394, 'comment': '# Set up inventory', 'include_SATD': False}, {'start_line': 446, 'end_line': 447, 'comment': '# Create instances in the DB with already-allocated devices # Note that the values in DB are always uppercase', 'include_SATD': False}, {'start_line': 451, 'end_line': 452, 'comment': '# We pass a shallow copy, because instance_create modifies # the passed dictionary', 'include_SATD': False}, {'start_line': 577, 'end_line': 577, 'comment': ""# Give some instance id to the method, it doesn't matter for the test"", 'include_SATD': False}, {'start_line': 588, 'end_line': 588, 'comment': '# We have PCI devices of three classes, each class has 8 devices', 'include_SATD': False}, {'start_line': 645, 'end_line': 645, 'comment': ""# Let's also build our own list of PciDevice objects"", 'include_SATD': False}, {'start_line': 655, 'end_line': 655, 'comment': '# Register instance types', 'include_SATD': False}, {'start_line': 658, 'end_line': 658, 'comment': '# 1 from class1', 'include_SATD': False}, {'start_line': 662, 'end_line': 662, 'comment': '# 1 from class2', 'include_SATD': False}, {'start_line': 665, 'end_line': 665, 'comment': '# 1 from net_vf', 'include_SATD': False}, {'start_line': 669, 'end_line': 669, 'comment': '# 3 from class1, 2 from class2', 'include_SATD': False}, {'start_line': 673, 'end_line': 673, 'comment': '# 2 from net_vf, 1 from class1', 'include_SATD': False}, {'start_line': 677, 'end_line': 677, 'comment': '# 1 from class1, 1 from class2', 'include_SATD': False}, {'start_line': 680, 'end_line': 680, 'comment': '# 4 from class1', 'include_SATD': False}, {'start_line': 683, 'end_line': 683, 'comment': '# 2 from class1, 1 from class2, 3 from net_vf', 'include_SATD': False}, {'start_line': 720, 'end_line': 720, 'comment': '# These will track allocations during the test', 'include_SATD': False}, {'start_line': 736, 'end_line': 736, 'comment': '# Update instance entry', 'include_SATD': False}, {'start_line': 747, 'end_line': 747, 'comment': '# Update global allocs', 'include_SATD': False}, {'start_line': 762, 'end_line': 763, 'comment': '# Verify allocations for instance, global allocations, # check for duplicates', 'include_SATD': False}, {'start_line': 824, 'end_line': 824, 'comment': '# class1: 0, class2: 0, netvf: 0', 'include_SATD': False}, {'start_line': 844, 'end_line': 844, 'comment': '# Ask to allocate again, and verify that nothing is allocated', 'include_SATD': False}, {'start_line': 870, 'end_line': 870, 'comment': '# Ask to allocate again, and verify that nothing is allocated', 'include_SATD': False}, {'start_line': 884, 'end_line': 884, 'comment': '# Not enough PCI devices of class1', 'include_SATD': False}, {'start_line': 891, 'end_line': 891, 'comment': '# Not enough PCI devicses of class1', 'include_SATD': False}, {'start_line': 898, 'end_line': 898, 'comment': ""# Let's destroy instance i5, this frees up his allocations"", 'include_SATD': False}, {'start_line': 914, 'end_line': 914, 'comment': '# Ask to allocate again, and verify that nothing is allocated', 'include_SATD': False}, {'start_line': 934, 'end_line': 934, 'comment': ""# Let's destroy i8 and i1"", 'include_SATD': False}, {'start_line': 940, 'end_line': 940, 'comment': ""# Let's destroy i8 and i1"", 'include_SATD': False}, {'start_line': 946, 'end_line': 946, 'comment': '# Now we can allocate for i7', 'include_SATD': False}, {'start_line': 951, 'end_line': 951, 'comment': '# Ask to allocate again, and verify that nothing is allocated', 'include_SATD': False}, {'start_line': 963, 'end_line': 963, 'comment': ""# Let's destroy i7"", 'include_SATD': False}, {'start_line': 969, 'end_line': 969, 'comment': '# Now we can allocate for i9', 'include_SATD': False}, {'start_line': 974, 'end_line': 974, 'comment': '# Ask to allocate again, and verify that nothing is allocated', 'include_SATD': False}, {'start_line': 995, 'end_line': 995, 'comment': '# Need to do a lazy load here', 'include_SATD': False}, {'start_line': 1014, 'end_line': 1014, 'comment': '# Need to do a lazy load here', 'include_SATD': False}, {'start_line': 1033, 'end_line': 1033, 'comment': '# Need to do a lazy load here', 'include_SATD': False}, {'start_line': 1052, 'end_line': 1052, 'comment': '# Need to do a lazy load here', 'include_SATD': False}, {'start_line': 1066, 'end_line': 1067, 'comment': '# Here the instance has allocated more than it needs to and also # some devices from non-needed classes', 'include_SATD': False}, {'start_line': 1074, 'end_line': 1074, 'comment': '# Need to do a lazy load here', 'include_SATD': False}, {'start_line': 1087, 'end_line': 1087, 'comment': ""# We have 3 networks, each has 8 PCI 'net_vf' devices"", 'include_SATD': False}, {'start_line': 1140, 'end_line': 1140, 'comment': '# Generate the FLAGS.pci_devices value and initialize the inventory', 'include_SATD': False}, {'start_line': 1149, 'end_line': 1151, 'comment': '# Register simple instance types (where each # PCI class appears only once) # 1 from all', 'include_SATD': False}, {'start_line': 1153, 'end_line': 1153, 'comment': '# 2 from all', 'include_SATD': False}, {'start_line': 1156, 'end_line': 1156, 'comment': '# 1 from br500', 'include_SATD': False}, {'start_line': 1159, 'end_line': 1159, 'comment': '# 2 from br500', 'include_SATD': False}, {'start_line': 1162, 'end_line': 1162, 'comment': '# 1 from br501', 'include_SATD': False}, {'start_line': 1165, 'end_line': 1165, 'comment': '# 2 from br501', 'include_SATD': False}, {'start_line': 1168, 'end_line': 1168, 'comment': '# 1 from br502', 'include_SATD': False}, {'start_line': 1171, 'end_line': 1171, 'comment': '# 2 from br502', 'include_SATD': False}, {'start_line': 1206, 'end_line': 1207, 'comment': '# Register more complex instance types (same PCI class # appears more than once)', 'include_SATD': False}, {'start_line': 1209, 'end_line': 1209, 'comment': '# 2 from all', 'include_SATD': False}, {'start_line': 1214, 'end_line': 1214, 'comment': '# 1 from br500, 1 from br502', 'include_SATD': False}, {'start_line': 1220, 'end_line': 1220, 'comment': '# 3 from br501, 1 from br502', 'include_SATD': False}, {'start_line': 1222, 'end_line': 1222, 'comment': '# One from br502, 2 from all (so 3 from br502, 2 from the rest)', 'include_SATD': False}, {'start_line': 1247, 'end_line': 1247, 'comment': '# These will track allocations during the test', 'include_SATD': False}, {'start_line': 1263, 'end_line': 1263, 'comment': '# Update instance entry', 'include_SATD': False}, {'start_line': 1274, 'end_line': 1274, 'comment': '# Update global allocs', 'include_SATD': False}, {'start_line': 1286, 'end_line': 1287, 'comment': '# Verify allocations for instance, global allocations, # check for duplicates', 'include_SATD': False}, {'start_line': 1312, 'end_line': 1312, 'comment': '# Duplicates check', 'include_SATD': False}, {'start_line': 1316, 'end_line': 1316, 'comment': '# Update per-instance and global allocations', 'include_SATD': False}, {'start_line': 1332, 'end_line': 1332, 'comment': '# br500: 0, br501: 0, br502: 0', 'include_SATD': False}, {'start_line': 1352, 'end_line': 1352, 'comment': '# Ask to allocate again and verify that nothing gets allocated', 'include_SATD': False}, {'start_line': 1378, 'end_line': 1378, 'comment': '# Ask to allocate again and verify that nothing gets allocated', 'include_SATD': False}, {'start_line': 1410, 'end_line': 1411, 'comment': '# Delete instance 5, it allocated 1 device from br502, # then we can allocate for i9', 'include_SATD': False}, {'start_line': 1421, 'end_line': 1421, 'comment': '# Ask to allocate again and verify that nothing gets allocated', 'include_SATD': False}, {'start_line': 1438, 'end_line': 1439, 'comment': '# Verify that we indeed cannot allocate from br500 and from br502 # Needs one from br500', 'include_SATD': False}, {'start_line': 1444, 'end_line': 1444, 'comment': '# Needs one from br502', 'include_SATD': False}, {'start_line': 1451, 'end_line': 1451, 'comment': '# Verify that we cannot allocate 2 from br501', 'include_SATD': False}, {'start_line': 1458, 'end_line': 1458, 'comment': '# ... but we can allocate 1 from br501', 'include_SATD': False}, {'start_line': 1465, 'end_line': 1465, 'comment': '# Ask to allocate again and verify that nothing gets allocated', 'include_SATD': False}, {'start_line': 1488, 'end_line': 1488, 'comment': '# br500: 0, br501: 0, br502: 0', 'include_SATD': False}, {'start_line': 1514, 'end_line': 1514, 'comment': '# Ask to allocate again and verify that nothing gets allocated', 'include_SATD': False}, {'start_line': 1532, 'end_line': 1532, 'comment': '# Need to do a lazy load here', 'include_SATD': False}, {'start_line': 1546, 'end_line': 1546, 'comment': '# Instance has allocated more than needed', 'include_SATD': False}, {'start_line': 1552, 'end_line': 1552, 'comment': '# Need to do a lazy load here', 'include_SATD': False}], 'filename': 'nova/tests/test_pci.py'}, {'a_comments': [], 'b_comments': [{'start_line': 142, 'end_line': 142, 'comment': '# AlexL-Zadara-PCI', 'include_SATD': False}, {'start_line': 203, 'end_line': 203, 'comment': '# AlexL-Zadara-PCI', 'include_SATD': False}, {'start_line': 209, 'end_line': 209, 'comment': '# AlexL-Zadara-PCI', 'include_SATD': False}, {'start_line': 540, 'end_line': 540, 'comment': '# AlexL-Zadara-PCI', 'include_SATD': False}, {'start_line': 654, 'end_line': 654, 'comment': '# AlexL-Zadara-PCI', 'include_SATD': False}, {'start_line': 673, 'end_line': 673, 'comment': '# AlexL-Zadara-PCI', 'include_SATD': False}, {'start_line': 1226, 'end_line': 1226, 'comment': '# AlexL-Zadara-PCI', 'include_SATD': False}], 'filename': 'nova/virt/libvirt/connection.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright (c) 2011 Zadara Storage Inc. # Copyright (c) 2011 OpenStack LLC. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 39, 'end_line': 41, 'comment': '############################################################# # The following methods are abstract within nova.virt.pci.PciDriver # and are implemented here', 'include_SATD': False}, {'start_line': 57, 'end_line': 65, 'comment': '# The code below is not needed, in principle, because, as it turns out, # libvirt/KVM does all the necessary preparations. # However, see issue #172: VM can be running, that has attached PCI # devices, but this VM is already marked as \'deleted\' in nova DB. # So his PCI devices can be assigned to a different VM, which will # result in strange libvirt failure with error message: # ""failed to retrieve chardev info in qemu with \'info chardev\' # So we hope to catch this error earlier here, when we try to detach # the PCI device.', 'include_SATD': False}, {'start_line': 67, 'end_line': 67, 'comment': '# First create a PCI device name in libvirt format: pci_0000_00_04_0', 'include_SATD': False}, {'start_line': 74, 'end_line': 74, 'comment': '# Lookup the device', 'include_SATD': False}, {'start_line': 79, 'end_line': 79, 'comment': '# Note the double-t', 'include_SATD': False}], 'filename': 'nova/virt/libvirt/pci.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright (c) 2011 Zadara Storage Inc. # Copyright (c) 2011 OpenStack LLC. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 87, 'end_line': 88, 'comment': '# Note that this method is called only when the attribute is not # found in ""usual places""', 'include_SATD': False}, {'start_line': 112, 'end_line': 112, 'comment': '# Setup inventory managers', 'include_SATD': False}, {'start_line': 115, 'end_line': 115, 'comment': '# Add additional PCI device classes here when they are supported', 'include_SATD': False}, {'start_line': 118, 'end_line': 118, 'comment': '# Setup the regular expression that matches a PCI device address', 'include_SATD': False}, {'start_line': 127, 'end_line': 128, 'comment': '# Setup the regular expression that splits PCI addresses to # domain, bus, slot & function', 'include_SATD': True}, {'start_line': 134, 'end_line': 135, 'comment': ""# Since we are going to use the hostname as part of a database key, # let's make sure it's a valid one"", 'include_SATD': False}, {'start_line': 148, 'end_line': 149, 'comment': '# FLAGS.pci_devices is a python list of strings; # each string represents a JSON object(key/value pairs)', 'include_SATD': False}, {'start_line': 152, 'end_line': 152, 'comment': '# Raises ValueError/TypeError if there is a problem', 'include_SATD': True}, {'start_line': 191, 'end_line': 191, 'comment': '# Print', 'include_SATD': False}, {'start_line': 197, 'end_line': 197, 'comment': '# Get PCI allocation requirements', 'include_SATD': False}, {'start_line': 201, 'end_line': 201, 'comment': '# PCI allocation not required for this instance', 'include_SATD': False}, {'start_line': 204, 'end_line': 205, 'comment': '# Go over all inventory managers and ask them to normalize the # allocation requirements', 'include_SATD': False}, {'start_line': 210, 'end_line': 211, 'comment': '# Fetch all the currently-allocated devices on this host, and also # the devices allocated to this instance', 'include_SATD': False}, {'start_line': 215, 'end_line': 216, 'comment': '# Update the PCI allocation requirements, according to what is already # allocated to this instance', 'include_SATD': False}, {'start_line': 219, 'end_line': 220, 'comment': '# If at this point we see that alloc_requirement_list becomes empty, # we are done', 'include_SATD': False}, {'start_line': 224, 'end_line': 224, 'comment': '# Allocate devices for the instance', 'include_SATD': False}, {'start_line': 230, 'end_line': 232, 'comment': '# We need at this point to update the DB # The current instance may have already-allocated devices # So we need to update its metadata entry in the DB', 'include_SATD': False}, {'start_line': 235, 'end_line': 236, 'comment': '# Note: we do not clone pci_devices_set here, because # we will not touch new_alloc_for_instance from now on', 'include_SATD': False}, {'start_line': 241, 'end_line': 243, 'comment': ""# Now we have all the required information in # 'instance_alloc_devices_dict' # So we commit the allocation in the db"", 'include_SATD': False}, {'start_line': 253, 'end_line': 258, 'comment': ""# At this point it would be best to replace the appropriate # InstanceMetadata object in instance['metadata'] list. # But this is not easily possible, because of SqlAlchemy restrictions. # So we do a dirty trick: we cache instance_alloc_devices_dict in the # instance dictionary, and prepare_pci_devices_for_instance() and # get_allocated_pci_devices() will look there first"", 'include_SATD': True}, {'start_line': 261, 'end_line': 261, 'comment': '# Print', 'include_SATD': False}, {'start_line': 283, 'end_line': 283, 'comment': '# Try to get the cached entry first, then look at metadata', 'include_SATD': False}, {'start_line': 293, 'end_line': 295, 'comment': '# We need to append the 0x prefix, otherwise libvirt gets # confused with strings like ""0010"" and ""0A"", because it thinks # these are in octal base', 'include_SATD': False}, {'start_line': 308, 'end_line': 308, 'comment': '# Try to get the cached entry first, then look at metadata', 'include_SATD': False}, {'start_line': 318, 'end_line': 319, 'comment': '############################################################# # The following methods must be overridden by derived classes', 'include_SATD': False}, {'start_line': 346, 'end_line': 347, 'comment': '############################################################# # Private methods', 'include_SATD': False}, {'start_line': 358, 'end_line': 358, 'comment': '# Extract and verify the PCI device address', 'include_SATD': False}, {'start_line': 367, 'end_line': 367, 'comment': ""# We don't need the pci address in the dictionary anymore"", 'include_SATD': False}, {'start_line': 370, 'end_line': 370, 'comment': '# Make sure that PCI address is in uppercase!', 'include_SATD': False}, {'start_line': 373, 'end_line': 373, 'comment': '# Extract and verify the PCI device class', 'include_SATD': False}, {'start_line': 379, 'end_line': 379, 'comment': ""# We don't need the pci class in the dictionary anymore"", 'include_SATD': False}, {'start_line': 382, 'end_line': 382, 'comment': '# Create a PciDevice object', 'include_SATD': False}, {'start_line': 385, 'end_line': 386, 'comment': '# Add the PCI device to the global inventory and to apropriate # inventory manager', 'include_SATD': False}, {'start_line': 407, 'end_line': 408, 'comment': '# Note: at this point instance_type comes from joinedload with # instance, so extra_specs are not loaded', 'include_SATD': False}, {'start_line': 418, 'end_line': 419, 'comment': ""# Convert the JSON string into a list of python dictionaries # Then verify the list of dictionaries, since we're going to return it"", 'include_SATD': False}, {'start_line': 421, 'end_line': 421, 'comment': '# Raises ValueError/TypeError if there is a problem', 'include_SATD': True}, {'start_line': 426, 'end_line': 426, 'comment': '# Verify each dictionary in the list', 'include_SATD': False}, {'start_line': 438, 'end_line': 438, 'comment': '# Raises TypeError if not an integer', 'include_SATD': False}, {'start_line': 446, 'end_line': 446, 'comment': '# Looks ok, return the allocation requirements dictionary', 'include_SATD': False}, {'start_line': 450, 'end_line': 451, 'comment': '# If there is a wrong entry in the DB, log an error and # return an empty allocation', 'include_SATD': False}, {'start_line': 485, 'end_line': 485, 'comment': '# Set the output for the instance', 'include_SATD': False}, {'start_line': 489, 'end_line': 489, 'comment': ""# Update the global output with this instance's data"", 'include_SATD': False}, {'start_line': 493, 'end_line': 498, 'comment': '# NOTE!! # It is important to clone the pci_devices_set here, # othewise out_instance_dict and out_all_dict[pci_class] # will point to the same set, and later we will add # devices to this set, so out_instance_dict will get # messed up', 'include_SATD': False}, {'start_line': 503, 'end_line': 503, 'comment': '# Return a 2-tuple', 'include_SATD': False}, {'start_line': 517, 'end_line': 517, 'comment': ""# Fetch the 'pci_devices_<hostname>' metadata key"", 'include_SATD': False}, {'start_line': 522, 'end_line': 523, 'comment': ""# Metadata is a list of InstanceMetadata objects.... # Let's find the correct one...and hope there is only one"", 'include_SATD': False}, {'start_line': 533, 'end_line': 533, 'comment': '# Convert the pci_devices key to a python list PCI addresses', 'include_SATD': False}, {'start_line': 535, 'end_line': 535, 'comment': '# This may throw a ValueError in case of malformed JSON', 'include_SATD': False}, {'start_line': 546, 'end_line': 547, 'comment': '# Go over entries in pci_addr_list, check them, produce output # The output dictionary', 'include_SATD': False}, {'start_line': 554, 'end_line': 554, 'comment': '# Move to next PCI address', 'include_SATD': True}, {'start_line': 556, 'end_line': 556, 'comment': '# Add pci_dev to output (if not already there)', 'include_SATD': False}, {'start_line': 604, 'end_line': 605, 'comment': ""# We don't have anything already-allocated for that class # So nothing to do"", 'include_SATD': False}, {'start_line': 640, 'end_line': 640, 'comment': '# Obtain the pci_class and an inventory manager for this class', 'include_SATD': False}, {'start_line': 644, 'end_line': 645, 'comment': ""# If we don't have the default inventory manager, this means # we don't have any available PCI devices of that class"", 'include_SATD': False}, {'start_line': 648, 'end_line': 648, 'comment': ""# Fetch the set of currently-allocated devices for 'pci_class'"", 'include_SATD': False}, {'start_line': 654, 'end_line': 654, 'comment': '# Ask the inventory manager to perform the allocation', 'include_SATD': False}, {'start_line': 661, 'end_line': 664, 'comment': '# Update the all_alloc_devices_dict # (by updating alloc_for_pci_class_set) # This is required if there are several entries for the same # PCI class in alloc_requirement_list', 'include_SATD': False}, {'start_line': 667, 'end_line': 667, 'comment': '# Set/Append to the output', 'include_SATD': False}, {'start_line': 670, 'end_line': 670, 'comment': ""# Note: it's ok not to clone alloc_for_instance_set here"", 'include_SATD': False}, {'start_line': 695, 'end_line': 696, 'comment': ""# Build the python representation of the 'pci_devices_<hostname>' # entry in the 'instance_metadata' table"", 'include_SATD': False}, {'start_line': 703, 'end_line': 703, 'comment': '# Now produce a JSON string representation of all this', 'include_SATD': False}, {'start_line': 706, 'end_line': 706, 'comment': '# Finally, write to db', 'include_SATD': False}, {'start_line': 710, 'end_line': 711, 'comment': ""# The last argument is 'delete', # which we set to False!"", 'include_SATD': False}, {'start_line': 715, 'end_line': 715, 'comment': '##############################################################################', 'include_SATD': False}, {'start_line': 740, 'end_line': 740, 'comment': '##############################################################################', 'include_SATD': False}, {'start_line': 746, 'end_line': 747, 'comment': '############################################################# # The following methods must be overridden by derived classes', 'include_SATD': False}, {'start_line': 815, 'end_line': 815, 'comment': '##############################################################################', 'include_SATD': False}, {'start_line': 834, 'end_line': 835, 'comment': '# No need for duplicate check here; # this is done by the global inventory', 'include_SATD': False}, {'start_line': 839, 'end_line': 842, 'comment': ""# If there are multiple entries with our pci_class, # let's make them one entry # Since we are in default inventory manager, we know nothing of # class-specific parameters, so we ignore and eventually drop them"", 'include_SATD': False}, {'start_line': 845, 'end_line': 846, 'comment': ""# We are going to modify alloc_requirement_list, so let's iterate over # a copy, while we modify the original"", 'include_SATD': False}, {'start_line': 853, 'end_line': 853, 'comment': '# Create an accumulative single entry, if needed', 'include_SATD': False}, {'start_line': 863, 'end_line': 863, 'comment': '# If nothing is allocated for us, nothing to do', 'include_SATD': False}, {'start_line': 867, 'end_line': 868, 'comment': ""# Let's find our only requirement entry (we know there is only one, # because it's after normalization"", 'include_SATD': False}, {'start_line': 875, 'end_line': 875, 'comment': '# Nothing to do', 'include_SATD': False}, {'start_line': 880, 'end_line': 880, 'comment': '# This is just for printing', 'include_SATD': False}, {'start_line': 895, 'end_line': 895, 'comment': '# Just a safety check; somewhere else is verified that count > 0', 'include_SATD': False}, {'start_line': 899, 'end_line': 899, 'comment': '# Just a printout', 'include_SATD': False}, {'start_line': 920, 'end_line': 920, 'comment': '##############################################################################', 'include_SATD': False}, {'start_line': 934, 'end_line': 934, 'comment': '# key: parent PF, value: set of PciDevice objects', 'include_SATD': False}, {'start_line': 949, 'end_line': 949, 'comment': '# Note that PciDevice objects are compared by identity!', 'include_SATD': False}, {'start_line': 963, 'end_line': 963, 'comment': ""# If we don't find this PCI device in our bucket, it's a warning"", 'include_SATD': False}, {'start_line': 983, 'end_line': 983, 'comment': '# Put this PCI device aside', 'include_SATD': False}, {'start_line': 998, 'end_line': 999, 'comment': '# AlexL-Zadara TODO: do smarter allocation with load balancing # between PFs', 'include_SATD': True}, {'start_line': 1045, 'end_line': 1045, 'comment': '# key: network_id, value: NetVfNetworkBucket', 'include_SATD': False}, {'start_line': 1058, 'end_line': 1058, 'comment': '# Check that additional arguments are present', 'include_SATD': False}, {'start_line': 1064, 'end_line': 1067, 'comment': ""# Add to the network bucket # Note: we allow here to add 2 PCI devices of different networks, # but having the same parent PF # Not sure if that is possible, but let's not block it for now"", 'include_SATD': False}, {'start_line': 1077, 'end_line': 1077, 'comment': '# We will get rid of entries with network_id==None and expand them', 'include_SATD': False}, {'start_line': 1088, 'end_line': 1089, 'comment': ""# We are going to modify alloc_requirement_list, so let's iterate over # a copy, while we modify the original"", 'include_SATD': False}, {'start_line': 1098, 'end_line': 1098, 'comment': ""# We need 'count' devices from all networks we have"", 'include_SATD': False}, {'start_line': 1118, 'end_line': 1118, 'comment': '# If nothing is allocated for us, nothing to do', 'include_SATD': False}, {'start_line': 1122, 'end_line': 1122, 'comment': ""# Let's count the number of devices allocated per network_id"", 'include_SATD': False}, {'start_line': 1140, 'end_line': 1141, 'comment': '# We know that there is a single entry per each network_id, # because we have normalized the allocation requirements list', 'include_SATD': False}, {'start_line': 1146, 'end_line': 1146, 'comment': ""# We don't have any existing allocation"", 'include_SATD': False}, {'start_line': 1151, 'end_line': 1151, 'comment': ""# We don't have to allocate"", 'include_SATD': False}, {'start_line': 1157, 'end_line': 1157, 'comment': '# We have to allocate the difference', 'include_SATD': False}, {'start_line': 1162, 'end_line': 1162, 'comment': ""# Drop those that don't need anymore allocations"", 'include_SATD': False}, {'start_line': 1171, 'end_line': 1180, 'comment': ""# The idea here is the same as in DefaultPciInventoryManager: # We go over all devices, and we allocate from those that are not # in 'alloc_for_pci_class_set' # Except that we need to look also at 'network_id', and allocate from # the appropriate network bucket. # As an optimization we do is the following: #   - go over all devices in alloc_for_pci_class_set and temporarily #     mark them as 'allocated' #   - allocate from all those that are not marked as 'allocated' #   - clear the 'allocated' markings"", 'include_SATD': False}, {'start_line': 1186, 'end_line': 1186, 'comment': '# Mark all the relevant objects as allocated in their buckets', 'include_SATD': False}, {'start_line': 1193, 'end_line': 1193, 'comment': '# Strange, but forget it', 'include_SATD': False}, {'start_line': 1198, 'end_line': 1198, 'comment': '# Print', 'include_SATD': False}, {'start_line': 1202, 'end_line': 1204, 'comment': ""# We need to allocate 'count' devices from appropriate network_id # If network_id is None, then we need to allocate 'count' devices # from all available networks"", 'include_SATD': False}, {'start_line': 1213, 'end_line': 1214, 'comment': '# NetVfNetworkBucket.allocate_pci_devices returns None # in case it fails to allocate', 'include_SATD': False}, {'start_line': 1218, 'end_line': 1219, 'comment': '# Whatever happens, we must clear all the allocations before # leaving this function', 'include_SATD': False}], 'filename': 'nova/virt/pci.py'}]}]",3,10,34,ABANDONED,False,https://review.opendev.org/#/c/776,Adds support for PCI-passthrough. Implements blueprint pci-passthrough.,True,"{""# This shouldn't raise # But extra_specs should be empty"": 1, '# Setup the regular expression that splits PCI addresses to domain, bus, slot & function': 1, '# Raises ValueError/TypeError if there is a problem': 1, ""# Move to next entry in 'pci_devices' key"": 1, '# AlexL-Zadara TODO: do smarter allocation with load balancing between PFs': 1, '# Setup the regular expression that splits PCI addresses to # domain, bus, slot & function': 2, ""# At this point it would be best to replace the appropriate # InstanceMetadata object in instance['metadata'] list. # But this is not easily possible, because of SqlAlchemy restrictions. # So we do a dirty trick: we cache instance_alloc_devices_dict in the # instance dictionary, and prepare_pci_devices_for_instance() and # get_allocated_pci_devices() will look there first"": 2, '# Move to next PCI address': 2, '# AlexL-Zadara TODO: do smarter allocation with load balancing # between PFs': 2}",True,{},False,{}
314,881,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/db/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [{'start_line': 1122, 'end_line': 1122, 'comment': '# FIXME(sirp): old style, REMOVE', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/881,Using new-style vdi attached here,True,{},False,"{'# FIXME(sirp): old style, REMOVE': 1}",True,{}
315,859,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/admin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 44, 'end_line': 44, 'comment': '# ensure some attributes are integers and greater than or equal to 0', 'include_SATD': False}, {'start_line': 53, 'end_line': 53, 'comment': '# some value are required to be nonzero, not just positive', 'include_SATD': False}], 'filename': 'nova/compute/instance_types.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 3284, 'end_line': 3284, 'comment': '#TODO(bcwaldon): find out why we have to manually check uniqueness here', 'include_SATD': True}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/054_convert_flavor_id_to_str.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [], 'b_comments': [{'start_line': 70, 'end_line': 70, 'comment': '# create new type and make sure values stick', 'include_SATD': False}, {'start_line': 82, 'end_line': 82, 'comment': '# make sure new type shows up in list', 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': '# destroy instance and make sure deleted flag is set to True', 'include_SATD': False}, {'start_line': 92, 'end_line': 92, 'comment': '# deleted instance should not be in list anymoer', 'include_SATD': False}, {'start_line': 96, 'end_line': 96, 'comment': '# ensure instances are gone after purge', 'include_SATD': False}], 'filename': 'nova/tests/test_instance_types.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/admin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 44, 'end_line': 44, 'comment': '# ensure some attributes are integers and greater than or equal to 0', 'include_SATD': False}, {'start_line': 53, 'end_line': 53, 'comment': '# some value are required to be nonzero, not just positive', 'include_SATD': False}], 'filename': 'nova/compute/instance_types.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 3284, 'end_line': 3284, 'comment': '#TODO(bcwaldon): find out why we have to manually check uniqueness here', 'include_SATD': True}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/054_convert_flavor_id_to_str.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [], 'b_comments': [{'start_line': 70, 'end_line': 70, 'comment': '# create new type and make sure values stick', 'include_SATD': False}, {'start_line': 82, 'end_line': 82, 'comment': '# make sure new type shows up in list', 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': '# destroy instance and make sure deleted flag is set to True', 'include_SATD': False}, {'start_line': 92, 'end_line': 92, 'comment': '# deleted instance should not be in list anymoer', 'include_SATD': False}, {'start_line': 96, 'end_line': 96, 'comment': '# ensure instances are gone after purge', 'include_SATD': False}], 'filename': 'nova/tests/test_instance_types.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/admin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 44, 'end_line': 44, 'comment': '# ensure some attributes are integers and greater than or equal to 0', 'include_SATD': False}, {'start_line': 53, 'end_line': 53, 'comment': '# some value are required to be nonzero, not just positive', 'include_SATD': False}], 'filename': 'nova/compute/instance_types.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 22, 'end_line': 22, 'comment': ""# preserve uniqueness constraint on existing 'name' column"", 'include_SATD': False}, {'start_line': 65, 'end_line': 65, 'comment': ""# preserve uniqueness constraint on existing 'name' column"", 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/054_convert_flavor_id_to_str.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [], 'b_comments': [{'start_line': 70, 'end_line': 70, 'comment': '# create new type and make sure values stick', 'include_SATD': False}, {'start_line': 82, 'end_line': 82, 'comment': '# make sure new type shows up in list', 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': '# destroy instance and make sure deleted flag is set to True', 'include_SATD': False}, {'start_line': 92, 'end_line': 92, 'comment': '# deleted instance should not be in list anymoer', 'include_SATD': False}, {'start_line': 96, 'end_line': 96, 'comment': '# ensure instances are gone after purge', 'include_SATD': False}], 'filename': 'nova/tests/test_instance_types.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/admin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 44, 'end_line': 44, 'comment': '# ensure some attributes are integers and greater than or equal to 0', 'include_SATD': False}, {'start_line': 53, 'end_line': 53, 'comment': '# some value are required to be nonzero, not just positive', 'include_SATD': False}], 'filename': 'nova/compute/instance_types.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 25, 'end_line': 26, 'comment': ""# NOTE(bcwaldon): this is a hack to preserve uniqueness constraint # on existing 'name' column"", 'include_SATD': True}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/054_convert_flavor_id_to_str.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [], 'b_comments': [{'start_line': 70, 'end_line': 70, 'comment': '# create new type and make sure values stick', 'include_SATD': False}, {'start_line': 82, 'end_line': 82, 'comment': '# make sure new type shows up in list', 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': '# destroy instance and make sure deleted flag is set to True', 'include_SATD': False}, {'start_line': 92, 'end_line': 92, 'comment': '# deleted instance should not be in list anymoer', 'include_SATD': False}, {'start_line': 96, 'end_line': 96, 'comment': '# ensure instances are gone after purge', 'include_SATD': False}], 'filename': 'nova/tests/test_instance_types.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}]}, {'revision': 5, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/admin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 44, 'end_line': 44, 'comment': '# ensure some attributes are integers and greater than or equal to 0', 'include_SATD': False}, {'start_line': 53, 'end_line': 53, 'comment': '# some value are required to be nonzero, not just positive', 'include_SATD': False}], 'filename': 'nova/compute/instance_types.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 25, 'end_line': 26, 'comment': ""# NOTE(bcwaldon): this is a hack to preserve uniqueness constraint # on existing 'name' column"", 'include_SATD': True}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/055_convert_flavor_id_to_str.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [], 'b_comments': [{'start_line': 70, 'end_line': 70, 'comment': '# create new type and make sure values stick', 'include_SATD': False}, {'start_line': 82, 'end_line': 82, 'comment': '# make sure new type shows up in list', 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': '# destroy instance and make sure deleted flag is set to True', 'include_SATD': False}, {'start_line': 92, 'end_line': 92, 'comment': '# deleted instance should not be in list anymoer', 'include_SATD': False}, {'start_line': 96, 'end_line': 96, 'comment': '# ensure instances are gone after purge', 'include_SATD': False}], 'filename': 'nova/tests/test_instance_types.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}]}, {'revision': 6, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/admin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 44, 'end_line': 44, 'comment': '# ensure some attributes are integers and greater than or equal to 0', 'include_SATD': False}, {'start_line': 53, 'end_line': 53, 'comment': '# some value are required to be nonzero, not just positive', 'include_SATD': False}], 'filename': 'nova/compute/instance_types.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 25, 'end_line': 26, 'comment': ""# NOTE(bcwaldon): this is a hack to preserve uniqueness constraint # on existing 'name' column"", 'include_SATD': True}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/055_convert_flavor_id_to_str.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [], 'b_comments': [{'start_line': 70, 'end_line': 70, 'comment': '# create new type and make sure values stick', 'include_SATD': False}, {'start_line': 82, 'end_line': 82, 'comment': '# make sure new type shows up in list', 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': '# destroy instance and make sure deleted flag is set to True', 'include_SATD': False}, {'start_line': 92, 'end_line': 92, 'comment': '# deleted instance should not be in list anymoer', 'include_SATD': False}, {'start_line': 96, 'end_line': 96, 'comment': '# ensure instances are gone after purge', 'include_SATD': False}], 'filename': 'nova/tests/test_instance_types.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}]}, {'revision': 7, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/admin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 44, 'end_line': 44, 'comment': '# ensure some attributes are integers and greater than or equal to 0', 'include_SATD': False}, {'start_line': 53, 'end_line': 53, 'comment': '# some value are required to be nonzero, not just positive', 'include_SATD': False}], 'filename': 'nova/compute/instance_types.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 25, 'end_line': 26, 'comment': ""# NOTE(bcwaldon): this is a hack to preserve uniqueness constraint # on existing 'name' column"", 'include_SATD': True}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/055_convert_flavor_id_to_str.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [], 'b_comments': [{'start_line': 70, 'end_line': 70, 'comment': '# create new type and make sure values stick', 'include_SATD': False}, {'start_line': 82, 'end_line': 82, 'comment': '# make sure new type shows up in list', 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': '# destroy instance and make sure deleted flag is set to True', 'include_SATD': False}, {'start_line': 92, 'end_line': 92, 'comment': '# deleted instance should not be in list anymoer', 'include_SATD': False}, {'start_line': 96, 'end_line': 96, 'comment': '# ensure instances are gone after purge', 'include_SATD': False}], 'filename': 'nova/tests/test_instance_types.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}]}, {'revision': 8, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/admin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 44, 'end_line': 44, 'comment': '# ensure some attributes are integers and greater than or equal to 0', 'include_SATD': False}, {'start_line': 53, 'end_line': 53, 'comment': '# some value are required to be nonzero, not just positive', 'include_SATD': False}], 'filename': 'nova/compute/instance_types.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 25, 'end_line': 26, 'comment': ""# NOTE(bcwaldon): this is a hack to preserve uniqueness constraint # on existing 'name' column"", 'include_SATD': True}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/055_convert_flavor_id_to_str.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [], 'b_comments': [{'start_line': 70, 'end_line': 70, 'comment': '# create new type and make sure values stick', 'include_SATD': False}, {'start_line': 82, 'end_line': 82, 'comment': '# make sure new type shows up in list', 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': '# destroy instance and make sure deleted flag is set to True', 'include_SATD': False}, {'start_line': 92, 'end_line': 92, 'comment': '# deleted instance should not be in list anymoer', 'include_SATD': False}, {'start_line': 96, 'end_line': 96, 'comment': '# ensure instances are gone after purge', 'include_SATD': False}], 'filename': 'nova/tests/test_instance_types.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}]}, {'revision': 9, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/admin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 44, 'end_line': 44, 'comment': '# ensure some attributes are integers and greater than or equal to 0', 'include_SATD': False}, {'start_line': 53, 'end_line': 53, 'comment': '# some value are required to be nonzero, not just positive', 'include_SATD': False}], 'filename': 'nova/compute/instance_types.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 25, 'end_line': 26, 'comment': ""# NOTE(bcwaldon): this is a hack to preserve uniqueness constraint # on existing 'name' column"", 'include_SATD': True}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/055_convert_flavor_id_to_str.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [], 'b_comments': [{'start_line': 70, 'end_line': 70, 'comment': '# create new type and make sure values stick', 'include_SATD': False}, {'start_line': 82, 'end_line': 82, 'comment': '# make sure new type shows up in list', 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': '# destroy instance and make sure deleted flag is set to True', 'include_SATD': False}, {'start_line': 92, 'end_line': 92, 'comment': '# deleted instance should not be in list anymoer', 'include_SATD': False}, {'start_line': 96, 'end_line': 96, 'comment': '# ensure instances are gone after purge', 'include_SATD': False}], 'filename': 'nova/tests/test_instance_types.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}]}, {'revision': 10, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/admin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 44, 'end_line': 44, 'comment': '# ensure some attributes are integers and greater than or equal to 0', 'include_SATD': False}, {'start_line': 53, 'end_line': 53, 'comment': '# some value are required to be nonzero, not just positive', 'include_SATD': False}], 'filename': 'nova/compute/instance_types.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 42, 'end_line': 43, 'comment': '# NOTE(bcwaldon): This catches a bug with python-migrate # failing to add the unique constraint', 'include_SATD': False}, {'start_line': 50, 'end_line': 51, 'comment': ""# NOTE(bcwaldon): this is a hack to preserve uniqueness constraint # on existing 'name' column"", 'include_SATD': True}, {'start_line': 85, 'end_line': 86, 'comment': '# NOTE(bcwaldon): This catches a bug with python-migrate # failing to add the unique constraint', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/055_convert_flavor_id_to_str.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [], 'b_comments': [{'start_line': 70, 'end_line': 70, 'comment': '# create new type and make sure values stick', 'include_SATD': False}, {'start_line': 82, 'end_line': 82, 'comment': '# make sure new type shows up in list', 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': '# destroy instance and make sure deleted flag is set to True', 'include_SATD': False}, {'start_line': 92, 'end_line': 92, 'comment': '# deleted instance should not be in list anymoer', 'include_SATD': False}, {'start_line': 96, 'end_line': 96, 'comment': '# ensure instances are gone after purge', 'include_SATD': False}], 'filename': 'nova/tests/test_instance_types.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}]}, {'revision': 11, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/admin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 44, 'end_line': 44, 'comment': '# ensure some attributes are integers and greater than or equal to 0', 'include_SATD': False}, {'start_line': 53, 'end_line': 53, 'comment': '# some value are required to be nonzero, not just positive', 'include_SATD': False}], 'filename': 'nova/compute/instance_types.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 42, 'end_line': 43, 'comment': '# NOTE(bcwaldon): This catches a bug with python-migrate # failing to add the unique constraint', 'include_SATD': False}, {'start_line': 50, 'end_line': 51, 'comment': ""# NOTE(bcwaldon): this is a hack to preserve uniqueness constraint # on existing 'name' column"", 'include_SATD': True}, {'start_line': 85, 'end_line': 86, 'comment': '# NOTE(bcwaldon): This catches a bug with python-migrate # failing to add the unique constraint', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/055_convert_flavor_id_to_str.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_compute.py'}, {'a_comments': [], 'b_comments': [{'start_line': 70, 'end_line': 70, 'comment': '# create new type and make sure values stick', 'include_SATD': False}, {'start_line': 82, 'end_line': 82, 'comment': '# make sure new type shows up in list', 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': '# destroy instance and make sure deleted flag is set to True', 'include_SATD': False}, {'start_line': 92, 'end_line': 92, 'comment': '# deleted instance should not be in list anymoer', 'include_SATD': False}, {'start_line': 96, 'end_line': 96, 'comment': '# ensure instances are gone after purge', 'include_SATD': False}], 'filename': 'nova/tests/test_instance_types.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}]}]",11,37,20,MERGED,True,https://review.opendev.org/#/c/859,Convert instancetype.flavorid to string,True,"{'#TODO(bcwaldon): find out why we have to manually check uniqueness here': 1, ""# NOTE(bcwaldon): this is a hack to preserve uniqueness constraint # on existing 'name' column"": 4}",True,{},False,{}
316,885,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/connection.py'}]}]",1,4,0,ABANDONED,False,https://review.opendev.org/#/c/885,Fix pep8 errors,True,{},False,{},False,{}
317,886,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_versions.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_versions.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_versions.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 114, 'end_line': 114, 'comment': '#.# to /v#.#/', 'include_SATD': False}], 'filename': 'nova/api/openstack/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_versions.py'}]}, {'revision': 5, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_versions.py'}]}]",5,8,0,MERGED,True,https://review.opendev.org/#/c/886,Redirects requests from /v#.# to /v#.#/,True,{},False,{},False,{}
318,872,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 129, 'end_line': 129, 'comment': '# Ensure no instances are returned.', 'include_SATD': False}, {'start_line': 133, 'end_line': 134, 'comment': '# Ensure one rebooting instance with updated_at older than 10 seconds # is returned.', 'include_SATD': False}, {'start_line': 142, 'end_line': 142, 'comment': '# Ensure the newly rebooted instance is not returned.', 'include_SATD': False}], 'filename': 'nova/tests/test_db_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_virt_drivers.py'}, {'a_comments': [], 'b_comments': [{'start_line': 484, 'end_line': 484, 'comment': '# TODO(Vek): Need to pass context in for access to auth_token', 'include_SATD': True}], 'filename': 'nova/virt/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/hyperv.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/connection.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 129, 'end_line': 129, 'comment': '# Ensure no instances are returned.', 'include_SATD': False}, {'start_line': 133, 'end_line': 134, 'comment': '# Ensure one rebooting instance with updated_at older than 10 seconds # is returned.', 'include_SATD': False}, {'start_line': 142, 'end_line': 142, 'comment': '# Ensure the newly rebooted instance is not returned.', 'include_SATD': False}], 'filename': 'nova/tests/test_db_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_virt_drivers.py'}, {'a_comments': [], 'b_comments': [{'start_line': 489, 'end_line': 489, 'comment': '# TODO(Vek): Need to pass context in for access to auth_token', 'include_SATD': True}], 'filename': 'nova/virt/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/hyperv.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/connection.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 129, 'end_line': 129, 'comment': '# Ensure no instances are returned.', 'include_SATD': False}, {'start_line': 133, 'end_line': 134, 'comment': '# Ensure one rebooting instance with updated_at older than 10 seconds # is returned.', 'include_SATD': False}, {'start_line': 142, 'end_line': 142, 'comment': '# Ensure the newly rebooted instance is not returned.', 'include_SATD': False}], 'filename': 'nova/tests/test_db_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_virt_drivers.py'}, {'a_comments': [], 'b_comments': [{'start_line': 489, 'end_line': 489, 'comment': '# TODO(Vek): Need to pass context in for access to auth_token', 'include_SATD': True}], 'filename': 'nova/virt/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/hyperv.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/connection.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}]}]",3,11,3,MERGED,True,https://review.opendev.org/#/c/872,Adds the ability to automatically issue a hard reboot to instances that have been stuck in a 'rebooting' state for longer than a specified window.,True,{'# TODO(Vek): Need to pass context in for access to auth_token': 1},True,{},False,{}
319,877,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/utils.py'}, {'a_comments': [{'start_line': 1062, 'end_line': 1064, 'comment': ""# NOTE(johannes): Unit tests will end up with a device called # 'autodetect' which obviously won't exist. It's not ideal, # but the alternatives were much messier"", 'include_SATD': True}], 'b_comments': [{'start_line': 419, 'end_line': 419, 'comment': '# 1. Create VDI', 'include_SATD': False}, {'start_line': 423, 'end_line': 423, 'comment': '# FIXME(sirp); hard-coding for now, should pull from flavor', 'include_SATD': True}, {'start_line': 430, 'end_line': 430, 'comment': '# 2. Attach VDI to compute worker (VBD hotplug)', 'include_SATD': False}, {'start_line': 444, 'end_line': 444, 'comment': '# 5. Create VBD between instance VM and swap VDI', 'include_SATD': False}, {'start_line': 1111, 'end_line': 1113, 'comment': ""# NOTE(johannes): Unit tests will end up with a device called # 'autodetect' which obviously won't exist. It's not ideal, # but the alternatives were much messier"", 'include_SATD': True}, {'start_line': 1125, 'end_line': 1125, 'comment': '# FIXME(sirp): old style, REMOVE', 'include_SATD': True}], 'filename': 'nova/virt/xenapi/vm_utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 57, 'end_line': 57, 'comment': '# FIXME(sirp): temporary flag used for testing', 'include_SATD': True}], 'filename': 'nova/virt/xenapi/vmops.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/877,Initial working version of generate_swap,True,"{'# FIXME(sirp); hard-coding for now, should pull from flavor': 1, ""# NOTE(johannes): Unit tests will end up with a device called # 'autodetect' which obviously won't exist. It's not ideal, # but the alternatives were much messier"": 1, '# FIXME(sirp): old style, REMOVE': 1, '# FIXME(sirp): temporary flag used for testing': 1}",True,"{""# NOTE(johannes): Unit tests will end up with a device called # 'autodetect' which obviously won't exist. It's not ideal, # but the alternatives were much messier"": 1}",True,{}
320,888,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/connection.py'}]}]",1,7,1,ABANDONED,False,https://review.opendev.org/#/c/888,Allow user to decide whether or not to inject ssh keys into the image. Fixes LP: 833499,True,{},False,{},False,{}
321,891,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/connection.py'}]}]",1,3,0,ABANDONED,False,https://review.opendev.org/#/c/891,Check to see LXC container can actually run properly on a host before starting. Fixes LP: 83351,True,{},False,{},False,{}
322,898,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_hosts.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_hosts.py'}]}]",2,6,0,MERGED,True,https://review.opendev.org/#/c/898,Chain up to superclass tearDown in ServerActionsTest,True,{},False,{},False,{}
323,882,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 467, 'end_line': 468, 'comment': '# NOTE(sirp): 3-arg raise needed since Eventlet clears exceptions # when switching between greenthreads.', 'include_SATD': False}, {'start_line': 473, 'end_line': 475, 'comment': '# FIXME(sirp): when/if # httpsgithub.com/jcrocholl/pep8/pull/27 merges, we can add # a per-line disable flag here for W602', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/compute/manager.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/882,Using original exception raised handler,True,{},False,"{'# FIXME(sirp): when/if # httpsgithub.com/jcrocholl/pep8/pull/27 merges, we can add # a per-line disable flag here for W602': 1}",True,{}
324,883,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 1258, 'end_line': 1258, 'comment': '# NB: Partition 1 hardcoded', 'include_SATD': False}], 'filename': 'nova/virt/xenapi/vm_utils.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/883,using dev_path,True,{},False,{},False,{}
325,901,"[{'revision': 1, 'changed_files': []}]",1,2,0,ABANDONED,False,https://review.opendev.org/#/c/901,bug 863635: remove vestigial cheetah import from bin/cli,False,{},False,{},False,{}
326,902,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 517, 'end_line': 517, 'comment': '#blade_intf_data[blade_intf][const.PROFILE_ID] = \\', 'include_SATD': False}], 'b_comments': [{'start_line': 498, 'end_line': 498, 'comment': '#intf_data[const.PROFILE_ID] = \\', 'include_SATD': False}], 'filename': 'quantum/plugins/cisco/ucs/cisco_ucs_inventory.py'}]}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/902,fix pep8 issues in Cisco plugin,True,{},False,{},False,{}
327,903,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'quantum/client.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'quantum/client.py'}]}]",2,5,0,MERGED,True,https://review.opendev.org/#/c/903,fix minor double-serialization bug in client.py,True,{},False,{},False,{}
328,894,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 1152, 'end_line': 1153, 'comment': '# NOTE(jk0): All existing clean_reboot tasks must be cancelled before # we can kick off the hard_reboot tasks.', 'include_SATD': False}], 'filename': 'nova/virt/xenapi/vmops.py'}]}]",1,3,0,MERGED,True,https://review.opendev.org/#/c/894,Cancel any clean_reboot tasks before issuing the hard_reboot.,True,{},False,{},False,{}
329,889,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/image/fake.py'}, {'a_comments': [], 'b_comments': [{'start_line': 360, 'end_line': 360, 'comment': '# Start test', 'include_SATD': False}, {'start_line': 363, 'end_line': 364, 'comment': '# Assign image_ref = 3 from nova/images/fakes for testing # ami image', 'include_SATD': False}, {'start_line': 368, 'end_line': 368, 'comment': '# Assuming that base image already exists in image_service', 'include_SATD': False}, {'start_line': 375, 'end_line': 376, 'comment': '# Create new image. It will be updated in snapshot method # To work with it from snapshot, the single image_service is needed', 'include_SATD': False}], 'filename': 'nova/tests/test_libvirt.py'}, {'a_comments': [], 'b_comments': [{'start_line': 450, 'end_line': 450, 'comment': '# NOTE(vish): assume amis are raw', 'include_SATD': False}, {'start_line': 455, 'end_line': 455, 'comment': '# NOTE(vish): glance forces ami disk format to be ami', 'include_SATD': False}], 'filename': 'nova/virt/libvirt/connection.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/image/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_image.py'}, {'a_comments': [], 'b_comments': [{'start_line': 360, 'end_line': 360, 'comment': '# Start test', 'include_SATD': False}, {'start_line': 363, 'end_line': 364, 'comment': '# Assign image_ref = 3 from nova/images/fakes for testing # ami image', 'include_SATD': False}, {'start_line': 368, 'end_line': 368, 'comment': '# Assuming that base image already exists in image_service', 'include_SATD': False}, {'start_line': 375, 'end_line': 376, 'comment': '# Create new image. It will be updated in snapshot method # To work with it from snapshot, the single image_service is needed', 'include_SATD': False}], 'filename': 'nova/tests/test_libvirt.py'}, {'a_comments': [], 'b_comments': [{'start_line': 450, 'end_line': 450, 'comment': '# NOTE(vish): assume amis are raw', 'include_SATD': False}, {'start_line': 455, 'end_line': 455, 'comment': '# NOTE(vish): glance forces ami disk format to be ami', 'include_SATD': False}], 'filename': 'nova/virt/libvirt/connection.py'}]}]",2,3,0,MERGED,True,https://review.opendev.org/#/c/889,Makes snapshots work for amis. Fixes bug 873156,True,{},False,{},False,{}
330,904,"[{'revision': 1, 'changed_files': []}, {'revision': 2, 'changed_files': []}, {'revision': 3, 'changed_files': []}, {'revision': 4, 'changed_files': []}, {'revision': 5, 'changed_files': []}]",5,14,1,MERGED,True,https://review.opendev.org/#/c/904,Utility script that makes enforcing PEP8 within git's pre-commit hook as easy as possible.,False,{},False,{},False,{}
331,899,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 175, 'end_line': 175, 'comment': ""# Store original flag value if it's not been overriden yet"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/test.py'}]}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/899,Remove unused flag_overrides from TestCase,True,{},False,{},False,{}
332,908,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_flavors.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_flavors.py'}]}]",2,5,0,MERGED,True,https://review.opendev.org/#/c/908,Refactoring nova.tests.api.openstack.test_flavors,True,{},False,{},False,{}
333,892,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 16, 'comment': '# Copyright 2010 United States Government as represented by the # Administrator of the National Aeronautics and Space Administration. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 54, 'end_line': 54, 'comment': '# set up our cloud', 'include_SATD': False}, {'start_line': 57, 'end_line': 57, 'comment': '# set up services', 'include_SATD': False}, {'start_line': 78, 'end_line': 78, 'comment': '# NOTE(vish): set up a manual wait so rpc.cast has a chance to finish', 'include_SATD': False}, {'start_line': 88, 'end_line': 88, 'comment': '# NOTE(vish): create depends on pool, so just call helper directly', 'include_SATD': False}, {'start_line': 137, 'end_line': 138, 'comment': '# TODO(jkoelker) Probably need to query for instance_type_id and #                make sure we get a valid one', 'include_SATD': True}, {'start_line': 153, 'end_line': 153, 'comment': '# TODO(jkoelker) Make this mas bueno', 'include_SATD': True}, {'start_line': 179, 'end_line': 179, 'comment': '# NOTE(vish): should have the default group as well', 'include_SATD': False}, {'start_line': 525, 'end_line': 525, 'comment': '# Now try filtering.', 'include_SATD': False}, {'start_line': 721, 'end_line': 721, 'comment': ""# NOTE(yamahata): swap/ephemeral device case isn't supported yet."", 'include_SATD': False}, {'start_line': 798, 'end_line': 798, 'comment': '# list all', 'include_SATD': False}, {'start_line': 802, 'end_line': 802, 'comment': '# provided a valid image_id', 'include_SATD': False}, {'start_line': 805, 'end_line': 805, 'comment': '# provide more than 1 valid image_id', 'include_SATD': False}, {'start_line': 809, 'end_line': 809, 'comment': '# provide an non-existing image_id', 'include_SATD': False}, {'start_line': 913, 'end_line': 915, 'comment': ""# NOTE(yamahata): noDevice doesn't make sense when returning mapping #                 It makes sense only when user overriding existing #                 mapping."", 'include_SATD': False}, {'start_line': 923, 'end_line': 923, 'comment': ""# {'deviceName': '/dev/sdb4', 'noDevice': True},"", 'include_SATD': False}, {'start_line': 931, 'end_line': 931, 'comment': ""# {'deviceName': '/dev/sdc4', 'noDevice': True}"", 'include_SATD': False}, {'start_line': 938, 'end_line': 949, 'comment': '# NOTE(yamahata): # InstanceBlockDeviceMappingItemType # rootDeviceType # rootDeviceName # blockDeviceMapping #  deviceName #  virtualName #  ebs #    snapshotId #    volumeSize #    deleteOnTermination #  noDevice', 'include_SATD': False}, {'start_line': 1040, 'end_line': 1040, 'comment': '# valid image', 'include_SATD': False}, {'start_line': 1043, 'end_line': 1043, 'comment': '# invalid image', 'include_SATD': False}, {'start_line': 1081, 'end_line': 1082, 'comment': '# TODO(soren): We need this until we can stop polling in the rpc code #              for unit tests.', 'include_SATD': True}, {'start_line': 1091, 'end_line': 1092, 'comment': '# TODO(soren): We need this until we can stop polling in the rpc code #              for unit tests.', 'include_SATD': True}, {'start_line': 1105, 'end_line': 1105, 'comment': '# assert key fields are equal', 'include_SATD': False}, {'start_line': 1118, 'end_line': 1118, 'comment': '# test when user provides all values', 'include_SATD': False}, {'start_line': 1129, 'end_line': 1129, 'comment': '# test when user omits fingerprint', 'include_SATD': False}, {'start_line': 1216, 'end_line': 1216, 'comment': '# valid instance_id', 'include_SATD': False}, {'start_line': 1219, 'end_line': 1219, 'comment': '# non-existing instance_id', 'include_SATD': False}, {'start_line': 1299, 'end_line': 1300, 'comment': '# NOTE(vish): Wait for InstanceNotFound, then verify that #             the instance is actually deleted.', 'include_SATD': False}, {'start_line': 1313, 'end_line': 1313, 'comment': '# enforce periodic tasks run in short time to avoid wait for 60s.', 'include_SATD': False}, {'start_line': 1321, 'end_line': 1321, 'comment': ""# a running instance can't be started. It is just ignored."", 'include_SATD': False}, {'start_line': 1366, 'end_line': 1366, 'comment': '# enforce periodic tasks run in short time to avoid wait for 60s.', 'include_SATD': False}, {'start_line': 1433, 'end_line': 1433, 'comment': '# enforce periodic tasks run in short time to avoid wait for 60s.', 'include_SATD': False}, {'start_line': 1567, 'end_line': 1567, 'comment': '# enforce periodic tasks run in short time to avoid wait for 60s.', 'include_SATD': False}, {'start_line': 1578, 'end_line': 1584, 'comment': ""# TODO(yamahata): s3._s3_create() can't be tested easily by unit test #                 as there is no unit test for s3.create() ## result = self.cloud.create_image(self.context, ec2_instance_id, ##                                  no_reboot=True) ## ec2_image_id = result['imageId'] ## created_image = self.cloud.describe_images(self.context, ##                                            [ec2_image_id])"", 'include_SATD': True}, {'start_line': 1591, 'end_line': 1591, 'comment': '# TODO(yamahata): clean up snapshot created by CreateImage.', 'include_SATD': True}, {'start_line': 1711, 'end_line': 1712, 'comment': ""# NOTE(yamahata): this isn't supported # get_attribute('disableApiTermination')"", 'include_SATD': False}, {'start_line': 1735, 'end_line': 1736, 'comment': ""# NOTE(yamahata): this isn't supported # get_attribute('sourceDestCheck')"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_auth.py'}, {'a_comments': [{'start_line': 152, 'end_line': 153, 'comment': ""# NOTE(justinsb): I believe this should still use the v1.0 XSD, # because the element hasn't changed definition"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_images.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_auth.py'}, {'a_comments': [{'start_line': 152, 'end_line': 153, 'comment': ""# NOTE(justinsb): I believe this should still use the v1.0 XSD, # because the element hasn't changed definition"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_images.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_auth.py'}, {'a_comments': [{'start_line': 152, 'end_line': 153, 'comment': ""# NOTE(justinsb): I believe this should still use the v1.0 XSD, # because the element hasn't changed definition"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_images.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_auth.py'}, {'a_comments': [{'start_line': 152, 'end_line': 153, 'comment': ""# NOTE(justinsb): I believe this should still use the v1.0 XSD, # because the element hasn't changed definition"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_images.py'}]}, {'revision': 5, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_auth.py'}, {'a_comments': [{'start_line': 152, 'end_line': 153, 'comment': ""# NOTE(justinsb): I believe this should still use the v1.0 XSD, # because the element hasn't changed definition"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_images.py'}]}, {'revision': 6, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_auth.py'}, {'a_comments': [{'start_line': 152, 'end_line': 153, 'comment': ""# NOTE(justinsb): I believe this should still use the v1.0 XSD, # because the element hasn't changed definition"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_images.py'}]}]",6,15,2,MERGED,True,https://review.opendev.org/#/c/892,Refactoring nova.tests.api.openstack.test_images,True,{},False,"{'# TODO(jkoelker) Probably need to query for instance_type_id and #                make sure we get a valid one': 1, '# TODO(jkoelker) Make this mas bueno': 1, '# TODO(soren): We need this until we can stop polling in the rpc code #              for unit tests.': 1, ""# TODO(yamahata): s3._s3_create() can't be tested easily by unit test #                 as there is no unit test for s3.create() ## result = self.cloud.create_image(self.context, ec2_instance_id, ##                                  no_reboot=True) ## ec2_image_id = result['imageId'] ## created_image = self.cloud.describe_images(self.context, ##                                            [ec2_image_id])"": 1, '# TODO(yamahata): clean up snapshot created by CreateImage.': 1}",True,{}
334,912,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/server_metadata.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_image_metadata.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_metadata.py'}]}]",1,3,0,MERGED,True,https://review.opendev.org/#/c/912,Refactoring image and server metadata api tests,True,{},False,{},False,{}
335,913,"[{'revision': 1, 'changed_files': []}]",1,3,0,MERGED,True,https://review.opendev.org/#/c/913,Updated RST docs: bzr/launchpad -> git/github,False,{},False,{},False,{}
336,818,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/accounts.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/common.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/consoles.py'}, {'a_comments': [], 'b_comments': [{'start_line': 163, 'end_line': 163, 'comment': '# Deserialize the response body, if any', 'include_SATD': False}, {'start_line': 172, 'end_line': 172, 'comment': '# Reserialize the response body', 'include_SATD': False}], 'filename': 'nova/api/openstack/extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/ips.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/limits.py'}, {'a_comments': [{'start_line': 1218, 'end_line': 1219, 'comment': '#NOTE(bcwaldon): We need a way to serialize actions individually. This # assumes all actions return a server entity', 'include_SATD': False}], 'b_comments': [{'start_line': 1126, 'end_line': 1126, 'comment': '# Attach image node', 'include_SATD': False}, {'start_line': 1131, 'end_line': 1131, 'comment': '# Attach flavor node', 'include_SATD': False}, {'start_line': 1136, 'end_line': 1136, 'comment': '# Attach metadata node', 'include_SATD': False}, {'start_line': 1139, 'end_line': 1139, 'comment': '# Attach addresses node', 'include_SATD': False}, {'start_line': 1142, 'end_line': 1142, 'comment': '# Attach security groups node', 'include_SATD': False}], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/users.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/versions.py'}, {'a_comments': [], 'b_comments': [{'start_line': 505, 'end_line': 505, 'comment': ""# See if there's a serializer..."", 'include_SATD': False}, {'start_line': 510, 'end_line': 510, 'comment': '# OK, build up the arguments for the serialize() method', 'include_SATD': False}, {'start_line': 515, 'end_line': 515, 'comment': '# Re-serialize the body', 'include_SATD': False}], 'filename': 'nova/api/openstack/wsgi.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 50, 'end_line': 50, 'comment': '# Walk the selector list', 'include_SATD': False}, {'start_line': 52, 'end_line': 52, 'comment': ""# If it's callable, call it"", 'include_SATD': False}, {'start_line': 56, 'end_line': 56, 'comment': '# Use indexing', 'include_SATD': False}, {'start_line': 60, 'end_line': 60, 'comment': '# No sense going any further', 'include_SATD': False}, {'start_line': 62, 'end_line': 62, 'comment': '# Convert to a KeyError, for consistency', 'include_SATD': False}, {'start_line': 66, 'end_line': 66, 'comment': '# Return the finally-selected object', 'include_SATD': False}, {'start_line': 130, 'end_line': 130, 'comment': '# Convert selector into a Selector', 'include_SATD': False}, {'start_line': 143, 'end_line': 144, 'comment': '# Run the incoming attributes through set() so that they # become selectorized', 'include_SATD': False}, {'start_line': 154, 'end_line': 154, 'comment': ""#x>' %"", 'include_SATD': False}, {'start_line': 172, 'end_line': 172, 'comment': '# Allow access by node name', 'include_SATD': False}, {'start_line': 180, 'end_line': 180, 'comment': '# Unwrap templates...', 'include_SATD': False}, {'start_line': 183, 'end_line': 183, 'comment': '# Avoid duplications', 'include_SATD': False}, {'start_line': 193, 'end_line': 193, 'comment': '# Pre-evaluate the elements', 'include_SATD': False}, {'start_line': 197, 'end_line': 197, 'comment': '# Unwrap templates...', 'include_SATD': False}, {'start_line': 200, 'end_line': 200, 'comment': '# Avoid duplications', 'include_SATD': False}, {'start_line': 207, 'end_line': 207, 'comment': '# Update the children', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# Unwrap templates...', 'include_SATD': False}, {'start_line': 217, 'end_line': 217, 'comment': '# Avoid duplications', 'include_SATD': False}, {'start_line': 227, 'end_line': 227, 'comment': '# Unwrap templates...', 'include_SATD': False}, {'start_line': 230, 'end_line': 230, 'comment': '# Check if element exists', 'include_SATD': False}, {'start_line': 256, 'end_line': 256, 'comment': '# Convert value to a selector', 'include_SATD': False}, {'start_line': 277, 'end_line': 277, 'comment': '# We are a template element', 'include_SATD': False}, {'start_line': 283, 'end_line': 283, 'comment': '# Wrap in a basic Template', 'include_SATD': False}, {'start_line': 297, 'end_line': 297, 'comment': '# Start with the text...', 'include_SATD': False}, {'start_line': 301, 'end_line': 301, 'comment': '# Now set up all the attributes...', 'include_SATD': False}, {'start_line': 306, 'end_line': 306, 'comment': ""# Attribute has no value, so don't include it"", 'include_SATD': False}, {'start_line': 323, 'end_line': 323, 'comment': '# Allocate a node', 'include_SATD': False}, {'start_line': 330, 'end_line': 330, 'comment': '# If we have a parent, append the node to the parent', 'include_SATD': False}, {'start_line': 334, 'end_line': 334, 'comment': '# If the datum is None, do nothing else', 'include_SATD': False}, {'start_line': 338, 'end_line': 338, 'comment': '# Apply this template element to the element', 'include_SATD': False}, {'start_line': 341, 'end_line': 341, 'comment': '# Additionally, apply the patches', 'include_SATD': False}, {'start_line': 345, 'end_line': 345, 'comment': '# We have fully rendered the element; return it', 'include_SATD': False}, {'start_line': 365, 'end_line': 365, 'comment': ""# First, get the datum we're rendering"", 'include_SATD': False}, {'start_line': 368, 'end_line': 368, 'comment': '# Check if we should render at all', 'include_SATD': False}, {'start_line': 374, 'end_line': 374, 'comment': ""# Make the data into a list if it isn't already"", 'include_SATD': False}, {'start_line': 380, 'end_line': 380, 'comment': '# Render all the elements', 'include_SATD': False}, {'start_line': 385, 'end_line': 386, 'comment': '# Return all the elements rendered, as well as the # corresponding datum for the next step down the tree', 'include_SATD': False}, {'start_line': 399, 'end_line': 399, 'comment': ""# Don't render if datum is None"", 'include_SATD': False}, {'start_line': 413, 'end_line': 413, 'comment': '# Convert value to a selector', 'include_SATD': False}, {'start_line': 431, 'end_line': 431, 'comment': '# Build the inner contents of the tag...', 'include_SATD': False}, {'start_line': 434, 'end_line': 434, 'comment': '# Add the text...', 'include_SATD': False}, {'start_line': 438, 'end_line': 438, 'comment': '# Add all the other attributes', 'include_SATD': False}, {'start_line': 442, 'end_line': 442, 'comment': '# If there are no children, return it as a closed tag', 'include_SATD': False}, {'start_line': 446, 'end_line': 446, 'comment': '# OK, recurse to our children', 'include_SATD': False}, {'start_line': 449, 'end_line': 449, 'comment': '# Return the result', 'include_SATD': False}, {'start_line': 461, 'end_line': 461, 'comment': '# Convert attributes', 'include_SATD': False}, {'start_line': 465, 'end_line': 465, 'comment': '# Get a TemplateElement', 'include_SATD': False}, {'start_line': 468, 'end_line': 468, 'comment': '# Append the parent safely', 'include_SATD': False}, {'start_line': 507, 'end_line': 507, 'comment': '# First step, render the element', 'include_SATD': False}, {'start_line': 510, 'end_line': 510, 'comment': '# Now, recurse to all child elements', 'include_SATD': False}, {'start_line': 514, 'end_line': 514, 'comment': '# Have we handled this child already?', 'include_SATD': False}, {'start_line': 519, 'end_line': 519, 'comment': ""# Determine the child's siblings"", 'include_SATD': False}, {'start_line': 525, 'end_line': 525, 'comment': '# Now we recurse for every data element', 'include_SATD': False}, {'start_line': 529, 'end_line': 530, 'comment': '# Return the first element; at the top level, this will be the # root element', 'include_SATD': False}, {'start_line': 548, 'end_line': 548, 'comment': '# Serialize it into XML', 'include_SATD': False}, {'start_line': 560, 'end_line': 560, 'comment': '# If the template is empty, return the empty string', 'include_SATD': False}, {'start_line': 564, 'end_line': 564, 'comment': '# Get the siblings and nsmap of the root element', 'include_SATD': False}, {'start_line': 568, 'end_line': 568, 'comment': '# Form the element tree', 'include_SATD': False}, {'start_line': 591, 'end_line': 591, 'comment': '# Return the root element', 'include_SATD': False}, {'start_line': 597, 'end_line': 597, 'comment': '# We are a template', 'include_SATD': False}, {'start_line': 647, 'end_line': 647, 'comment': '#x>"" %', 'include_SATD': False}, {'start_line': 691, 'end_line': 691, 'comment': '# Make sure we have a tree match', 'include_SATD': False}, {'start_line': 699, 'end_line': 699, 'comment': '# Make sure slave applies to this template', 'include_SATD': False}, {'start_line': 705, 'end_line': 705, 'comment': '# Add the slaves', 'include_SATD': False}, {'start_line': 711, 'end_line': 711, 'comment': '# Return a copy of the MasterTemplate', 'include_SATD': False}, {'start_line': 745, 'end_line': 745, 'comment': '#x>"" %', 'include_SATD': False}, {'start_line': 760, 'end_line': 760, 'comment': '# Does the master meet our minimum version requirement?', 'include_SATD': False}, {'start_line': 764, 'end_line': 764, 'comment': '# How about our maximum version requirement?', 'include_SATD': False}, {'start_line': 792, 'end_line': 792, 'comment': '# Do we need to construct the template?', 'include_SATD': False}, {'start_line': 796, 'end_line': 796, 'comment': '# Construct the template', 'include_SATD': False}, {'start_line': 799, 'end_line': 800, 'comment': '# If the template has a copy attribute, return the result of # calling it', 'include_SATD': False}, {'start_line': 804, 'end_line': 804, 'comment': '# Return the template', 'include_SATD': False}, {'start_line': 839, 'end_line': 839, 'comment': '# No template provided, look one up', 'include_SATD': False}, {'start_line': 843, 'end_line': 844, 'comment': ""# Still couldn't find a template; try the base # XMLDictSerializer"", 'include_SATD': False}, {'start_line': 849, 'end_line': 849, 'comment': '# Serialize the template', 'include_SATD': False}, {'start_line': 870, 'end_line': 870, 'comment': '# Just for completeness...', 'include_SATD': False}], 'filename': 'nova/api/openstack/xmltmpl.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/zones.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/extensions/foxinsocks.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_accounts.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_consoles.py'}, {'a_comments': [], 'b_comments': [{'start_line': 273, 'end_line': 274, 'comment': ""# Don't need the serialization middleware here because we're # not testing any serialization"", 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/test_extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_limits.py'}, {'a_comments': [], 'b_comments': [{'start_line': 169, 'end_line': 170, 'comment': '# NOTE(justinsb): This is a questionable assertion in general # fake sets id=name, but others might not...', 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/test_users.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_wsgi.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 83, 'end_line': 83, 'comment': '# Create a template element with some attributes', 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': '# Verify all the attributes are as expected', 'include_SATD': False}, {'start_line': 95, 'end_line': 95, 'comment': '# Create a template element with some attributes', 'include_SATD': False}, {'start_line': 98, 'end_line': 98, 'comment': '# Verify that get() retrieves the attributes', 'include_SATD': False}, {'start_line': 105, 'end_line': 105, 'comment': '# Create a bare template element with no attributes', 'include_SATD': False}, {'start_line': 108, 'end_line': 108, 'comment': '# Set the attribute values', 'include_SATD': False}, {'start_line': 112, 'end_line': 112, 'comment': '# Now verify what got set', 'include_SATD': False}, {'start_line': 122, 'end_line': 122, 'comment': '# Create a template element with some attributes', 'include_SATD': False}, {'start_line': 125, 'end_line': 125, 'comment': '# Now verify keys', 'include_SATD': False}, {'start_line': 134, 'end_line': 134, 'comment': '# Create a template element with some attributes', 'include_SATD': False}, {'start_line': 137, 'end_line': 137, 'comment': '# Now verify items', 'include_SATD': False}, {'start_line': 142, 'end_line': 142, 'comment': '# Did we visit all keys?', 'include_SATD': False}, {'start_line': 146, 'end_line': 146, 'comment': '# Create a template element with no selector', 'include_SATD': False}, {'start_line': 152, 'end_line': 152, 'comment': '# Create a template element with a string selector', 'include_SATD': False}, {'start_line': 161, 'end_line': 161, 'comment': '# Create a template element with an explicit selector', 'include_SATD': False}, {'start_line': 167, 'end_line': 167, 'comment': '# Create an element', 'include_SATD': False}, {'start_line': 170, 'end_line': 170, 'comment': '# Make sure the element starts off empty', 'include_SATD': False}, {'start_line': 173, 'end_line': 173, 'comment': '# Create a child element', 'include_SATD': False}, {'start_line': 176, 'end_line': 176, 'comment': '# Append the child to the parent', 'include_SATD': False}, {'start_line': 179, 'end_line': 179, 'comment': '# Verify that the child was added', 'include_SATD': False}, {'start_line': 185, 'end_line': 185, 'comment': '# Ensure that multiple children of the same name are rejected', 'include_SATD': False}, {'start_line': 190, 'end_line': 190, 'comment': '# Create an element', 'include_SATD': False}, {'start_line': 193, 'end_line': 193, 'comment': '# Make sure the element starts off empty', 'include_SATD': False}, {'start_line': 196, 'end_line': 196, 'comment': '# Create a few children', 'include_SATD': False}, {'start_line': 203, 'end_line': 203, 'comment': '# Extend the parent by those children', 'include_SATD': False}, {'start_line': 206, 'end_line': 206, 'comment': '# Verify that the children were added', 'include_SATD': False}, {'start_line': 213, 'end_line': 213, 'comment': '# Ensure that multiple children of the same name are rejected', 'include_SATD': False}, {'start_line': 220, 'end_line': 220, 'comment': '# Also ensure that child4 was not added', 'include_SATD': False}, {'start_line': 225, 'end_line': 225, 'comment': '# Create an element', 'include_SATD': False}, {'start_line': 228, 'end_line': 228, 'comment': '# Make sure the element starts off empty', 'include_SATD': False}, {'start_line': 231, 'end_line': 231, 'comment': '# Create a few children', 'include_SATD': False}, {'start_line': 238, 'end_line': 238, 'comment': '# Extend the parent by those children', 'include_SATD': False}, {'start_line': 241, 'end_line': 241, 'comment': '# Create a child to insert', 'include_SATD': False}, {'start_line': 244, 'end_line': 244, 'comment': '# Insert it', 'include_SATD': False}, {'start_line': 247, 'end_line': 247, 'comment': '# Ensure the child was inserted in the right place', 'include_SATD': False}, {'start_line': 255, 'end_line': 255, 'comment': '# Ensure that multiple children of the same name are rejected', 'include_SATD': False}, {'start_line': 260, 'end_line': 260, 'comment': '# Create an element', 'include_SATD': False}, {'start_line': 263, 'end_line': 263, 'comment': '# Make sure the element starts off empty', 'include_SATD': False}, {'start_line': 266, 'end_line': 266, 'comment': '# Create a few children', 'include_SATD': False}, {'start_line': 273, 'end_line': 273, 'comment': '# Extend the parent by those children', 'include_SATD': False}, {'start_line': 276, 'end_line': 276, 'comment': '# Create a test child to remove', 'include_SATD': False}, {'start_line': 279, 'end_line': 279, 'comment': '# Try to remove it', 'include_SATD': False}, {'start_line': 282, 'end_line': 282, 'comment': '# Ensure that no child was removed', 'include_SATD': False}, {'start_line': 285, 'end_line': 285, 'comment': '# Now remove a legitimate child', 'include_SATD': False}, {'start_line': 288, 'end_line': 288, 'comment': '# Ensure that the child was removed', 'include_SATD': False}, {'start_line': 294, 'end_line': 294, 'comment': '# Ensure the child cannot be retrieved by name', 'include_SATD': False}, {'start_line': 300, 'end_line': 300, 'comment': '# Create an element', 'include_SATD': False}, {'start_line': 303, 'end_line': 303, 'comment': '# Ensure that it has no text', 'include_SATD': False}, {'start_line': 306, 'end_line': 306, 'comment': '# Try setting it to a string and ensure it becomes a selector', 'include_SATD': False}, {'start_line': 312, 'end_line': 312, 'comment': '# Try resetting the text to None', 'include_SATD': False}, {'start_line': 316, 'end_line': 316, 'comment': '# Now make up a selector and try setting the text to that', 'include_SATD': False}, {'start_line': 321, 'end_line': 321, 'comment': '# Finally, try deleting the text and see what happens', 'include_SATD': False}, {'start_line': 326, 'end_line': 326, 'comment': '# Create a template element', 'include_SATD': False}, {'start_line': 331, 'end_line': 331, 'comment': '# Create an etree element', 'include_SATD': False}, {'start_line': 334, 'end_line': 334, 'comment': '# Apply the template to the element', 'include_SATD': False}, {'start_line': 337, 'end_line': 337, 'comment': '# Now, verify the correct attributes were set', 'include_SATD': False}, {'start_line': 342, 'end_line': 342, 'comment': '# Create a template element', 'include_SATD': False}, {'start_line': 346, 'end_line': 346, 'comment': '# Create an etree element', 'include_SATD': False}, {'start_line': 349, 'end_line': 349, 'comment': '# Apply the template to the element', 'include_SATD': False}, {'start_line': 352, 'end_line': 352, 'comment': '# Now, verify the text was set', 'include_SATD': False}, {'start_line': 360, 'end_line': 360, 'comment': '# Create a master template element', 'include_SATD': False}, {'start_line': 363, 'end_line': 363, 'comment': '# Create a couple of slave template element', 'include_SATD': False}, {'start_line': 369, 'end_line': 369, 'comment': '# Try the render', 'include_SATD': False}, {'start_line': 372, 'end_line': 372, 'comment': '# Verify the particulars of the render', 'include_SATD': False}, {'start_line': 378, 'end_line': 378, 'comment': '# Create a parent for the element to be rendered', 'include_SATD': False}, {'start_line': 381, 'end_line': 381, 'comment': '# Try the render again...', 'include_SATD': False}, {'start_line': 384, 'end_line': 384, 'comment': '# Verify the particulars of the render', 'include_SATD': False}, {'start_line': 391, 'end_line': 391, 'comment': '# Create a template element', 'include_SATD': False}, {'start_line': 395, 'end_line': 395, 'comment': ""# Create the object we're going to render"", 'include_SATD': False}, {'start_line': 398, 'end_line': 398, 'comment': '# Try a render with no object', 'include_SATD': False}, {'start_line': 402, 'end_line': 402, 'comment': '# Try a render with one object', 'include_SATD': False}, {'start_line': 408, 'end_line': 408, 'comment': '# Now, try rendering an object with multiple entries', 'include_SATD': False}, {'start_line': 413, 'end_line': 413, 'comment': '# Check the results', 'include_SATD': False}, {'start_line': 419, 'end_line': 419, 'comment': '# Try the SubTemplateElement constructor', 'include_SATD': False}, {'start_line': 424, 'end_line': 424, 'comment': '# Now try it with a parent element', 'include_SATD': False}, {'start_line': 431, 'end_line': 431, 'comment': '# These are strange methods, but they make things easier', 'include_SATD': False}, {'start_line': 439, 'end_line': 439, 'comment': '# Create a template element with a dynamic tag', 'include_SATD': False}, {'start_line': 442, 'end_line': 442, 'comment': '# Try the render', 'include_SATD': False}, {'start_line': 446, 'end_line': 446, 'comment': '# Verify the particulars of the render', 'include_SATD': False}, {'start_line': 454, 'end_line': 454, 'comment': '# These are strange methods, but they make things easier', 'include_SATD': False}, {'start_line': 461, 'end_line': 461, 'comment': '# Set up a basic template', 'include_SATD': False}, {'start_line': 465, 'end_line': 465, 'comment': '# Check that we get the right siblings', 'include_SATD': False}, {'start_line': 471, 'end_line': 471, 'comment': '# Set up a basic template', 'include_SATD': False}, {'start_line': 475, 'end_line': 475, 'comment': '# Check out that we get the right namespace dictionary', 'include_SATD': False}, {'start_line': 482, 'end_line': 482, 'comment': '# Set up a master template', 'include_SATD': False}, {'start_line': 486, 'end_line': 486, 'comment': '# Make sure it has a root but no slaves', 'include_SATD': False}, {'start_line': 490, 'end_line': 490, 'comment': '# Try to attach an invalid slave', 'include_SATD': False}, {'start_line': 495, 'end_line': 495, 'comment': '# Try to attach an invalid and a valid slave', 'include_SATD': False}, {'start_line': 500, 'end_line': 500, 'comment': '# Try to attach an inapplicable template', 'include_SATD': False}, {'start_line': 508, 'end_line': 508, 'comment': '# Now try attaching an applicable template', 'include_SATD': False}, {'start_line': 514, 'end_line': 514, 'comment': '# Construct a master template', 'include_SATD': False}, {'start_line': 518, 'end_line': 518, 'comment': '# Give it a slave', 'include_SATD': False}, {'start_line': 522, 'end_line': 522, 'comment': '# Construct a copy', 'include_SATD': False}, {'start_line': 525, 'end_line': 525, 'comment': '# Check to see if we actually managed a copy', 'include_SATD': False}, {'start_line': 535, 'end_line': 535, 'comment': '# Construct a master template', 'include_SATD': False}, {'start_line': 539, 'end_line': 539, 'comment': '# Construct a slave template with applicable minimum version', 'include_SATD': False}, {'start_line': 543, 'end_line': 543, 'comment': '# Construct a slave template with equal minimum version', 'include_SATD': False}, {'start_line': 547, 'end_line': 547, 'comment': '# Construct a slave template with inapplicable minimum version', 'include_SATD': False}, {'start_line': 551, 'end_line': 551, 'comment': '# Construct a slave template with applicable version range', 'include_SATD': False}, {'start_line': 555, 'end_line': 555, 'comment': '# Construct a slave template with low version range', 'include_SATD': False}, {'start_line': 559, 'end_line': 559, 'comment': '# Construct a slave template with high version range', 'include_SATD': False}, {'start_line': 563, 'end_line': 563, 'comment': '# Construct a slave template with matching version range', 'include_SATD': False}, {'start_line': 568, 'end_line': 568, 'comment': '# Our test object to serialize', 'include_SATD': False}, {'start_line': 586, 'end_line': 586, 'comment': '# Set up our master template', 'include_SATD': False}, {'start_line': 596, 'end_line': 596, 'comment': '# Set up our slave template', 'include_SATD': False}, {'start_line': 603, 'end_line': 603, 'comment': '# Attach the slave to the master...', 'include_SATD': False}, {'start_line': 606, 'end_line': 606, 'comment': '# Try serializing our object', 'include_SATD': False}, {'start_line': 611, 'end_line': 611, 'comment': '# Now we get to manually walk the element tree...', 'include_SATD': False}, {'start_line': 647, 'end_line': 647, 'comment': ""# Make sure the template hasn't been built yet"", 'include_SATD': False}, {'start_line': 650, 'end_line': 650, 'comment': '# Now, construct the template', 'include_SATD': False}, {'start_line': 653, 'end_line': 653, 'comment': '# Make sure that there is a template cached...', 'include_SATD': False}, {'start_line': 656, 'end_line': 656, 'comment': ""# Make sure it wasn't what was returned..."", 'include_SATD': False}, {'start_line': 659, 'end_line': 659, 'comment': ""# Make sure it doesn't get rebuilt"", 'include_SATD': False}, {'start_line': 664, 'end_line': 664, 'comment': ""# Make sure we're always getting fresh copies"", 'include_SATD': False}, {'start_line': 667, 'end_line': 667, 'comment': '# Make sure we can override the copying behavior', 'include_SATD': False}, {'start_line': 672, 'end_line': 672, 'comment': ""# Make sure the template hasn't been built yet"", 'include_SATD': False}, {'start_line': 675, 'end_line': 675, 'comment': '# Now, construct the template', 'include_SATD': False}, {'start_line': 678, 'end_line': 678, 'comment': '# Make sure there is a template cached...', 'include_SATD': False}, {'start_line': 681, 'end_line': 681, 'comment': '# Make sure it was what was returned...', 'include_SATD': False}, {'start_line': 684, 'end_line': 684, 'comment': ""# Make sure it doesn't get rebuilt"", 'include_SATD': False}, {'start_line': 688, 'end_line': 688, 'comment': ""# Make sure we're always getting the cached copy"", 'include_SATD': False}, {'start_line': 708, 'end_line': 709, 'comment': '# First, check what happens when we fall back on the default # option', 'include_SATD': False}, {'start_line': 713, 'end_line': 713, 'comment': '# Now, check that we get back a template', 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/test_xmltmpl.py'}, {'a_comments': [], 'b_comments': [{'start_line': 327, 'end_line': 328, 'comment': '# Select queries end up being JSON encoded twice. # Once to a string and again as an HTTP POST Body', 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/test_zones.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/accounts.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/common.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/consoles.py'}, {'a_comments': [], 'b_comments': [{'start_line': 163, 'end_line': 163, 'comment': '# Deserialize the response body, if any', 'include_SATD': False}, {'start_line': 172, 'end_line': 172, 'comment': '# Reserialize the response body', 'include_SATD': False}], 'filename': 'nova/api/openstack/extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/ips.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/limits.py'}, {'a_comments': [{'start_line': 1221, 'end_line': 1222, 'comment': '#NOTE(bcwaldon): We need a way to serialize actions individually. This # assumes all actions return a server entity', 'include_SATD': False}], 'b_comments': [{'start_line': 1127, 'end_line': 1127, 'comment': '# Attach image node', 'include_SATD': False}, {'start_line': 1132, 'end_line': 1132, 'comment': '# Attach flavor node', 'include_SATD': False}, {'start_line': 1137, 'end_line': 1137, 'comment': '# Attach metadata node', 'include_SATD': False}, {'start_line': 1140, 'end_line': 1140, 'comment': '# Attach addresses node', 'include_SATD': False}, {'start_line': 1143, 'end_line': 1143, 'comment': '# Attach security groups node', 'include_SATD': False}], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/users.py'}, {'a_comments': [], 'b_comments': [{'start_line': 496, 'end_line': 496, 'comment': '# Request lazy serialization', 'include_SATD': False}, {'start_line': 501, 'end_line': 501, 'comment': ""# See if there's a serializer..."", 'include_SATD': False}, {'start_line': 506, 'end_line': 506, 'comment': '# OK, build up the arguments for the serialize() method', 'include_SATD': False}, {'start_line': 511, 'end_line': 511, 'comment': '# Re-serialize the body', 'include_SATD': False}], 'filename': 'nova/api/openstack/wsgi.py'}, {'a_comments': [], 'b_comments': [{'start_line': 70, 'end_line': 70, 'comment': '# Walk the selector list', 'include_SATD': False}, {'start_line': 72, 'end_line': 72, 'comment': ""# If it's callable, call it"", 'include_SATD': False}, {'start_line': 76, 'end_line': 76, 'comment': '# Use indexing', 'include_SATD': False}, {'start_line': 80, 'end_line': 80, 'comment': '# No sense going any further', 'include_SATD': False}, {'start_line': 82, 'end_line': 82, 'comment': '# Convert to a KeyError, for consistency', 'include_SATD': False}, {'start_line': 86, 'end_line': 86, 'comment': '# Return the finally-selected object', 'include_SATD': False}, {'start_line': 150, 'end_line': 150, 'comment': '# Convert selector into a Selector', 'include_SATD': False}, {'start_line': 163, 'end_line': 164, 'comment': '# Run the incoming attributes through set() so that they # become selectorized', 'include_SATD': False}, {'start_line': 174, 'end_line': 174, 'comment': ""#x>' %"", 'include_SATD': False}, {'start_line': 192, 'end_line': 192, 'comment': '# Allow access by node name', 'include_SATD': False}, {'start_line': 200, 'end_line': 200, 'comment': '# Unwrap templates...', 'include_SATD': False}, {'start_line': 203, 'end_line': 203, 'comment': '# Avoid duplications', 'include_SATD': False}, {'start_line': 213, 'end_line': 213, 'comment': '# Pre-evaluate the elements', 'include_SATD': False}, {'start_line': 217, 'end_line': 217, 'comment': '# Unwrap templates...', 'include_SATD': False}, {'start_line': 220, 'end_line': 220, 'comment': '# Avoid duplications', 'include_SATD': False}, {'start_line': 227, 'end_line': 227, 'comment': '# Update the children', 'include_SATD': False}, {'start_line': 234, 'end_line': 234, 'comment': '# Unwrap templates...', 'include_SATD': False}, {'start_line': 237, 'end_line': 237, 'comment': '# Avoid duplications', 'include_SATD': False}, {'start_line': 247, 'end_line': 247, 'comment': '# Unwrap templates...', 'include_SATD': False}, {'start_line': 250, 'end_line': 250, 'comment': '# Check if element exists', 'include_SATD': False}, {'start_line': 279, 'end_line': 279, 'comment': '# Convert value to a selector', 'include_SATD': False}, {'start_line': 300, 'end_line': 300, 'comment': '# We are a template element', 'include_SATD': False}, {'start_line': 306, 'end_line': 306, 'comment': '# Wrap in a basic Template', 'include_SATD': False}, {'start_line': 320, 'end_line': 320, 'comment': '# Start with the text...', 'include_SATD': False}, {'start_line': 324, 'end_line': 324, 'comment': '# Now set up all the attributes...', 'include_SATD': False}, {'start_line': 329, 'end_line': 329, 'comment': ""# Attribute has no value, so don't include it"", 'include_SATD': False}, {'start_line': 346, 'end_line': 346, 'comment': '# Allocate a node', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': '# If we have a parent, append the node to the parent', 'include_SATD': False}, {'start_line': 357, 'end_line': 357, 'comment': '# If the datum is None, do nothing else', 'include_SATD': False}, {'start_line': 361, 'end_line': 361, 'comment': '# Apply this template element to the element', 'include_SATD': False}, {'start_line': 364, 'end_line': 364, 'comment': '# Additionally, apply the patches', 'include_SATD': False}, {'start_line': 368, 'end_line': 368, 'comment': '# We have fully rendered the element; return it', 'include_SATD': False}, {'start_line': 388, 'end_line': 388, 'comment': ""# First, get the datum we're rendering"", 'include_SATD': False}, {'start_line': 391, 'end_line': 391, 'comment': '# Check if we should render at all', 'include_SATD': False}, {'start_line': 397, 'end_line': 397, 'comment': ""# Make the data into a list if it isn't already"", 'include_SATD': False}, {'start_line': 403, 'end_line': 403, 'comment': '# Render all the elements', 'include_SATD': False}, {'start_line': 408, 'end_line': 409, 'comment': '# Return all the elements rendered, as well as the # corresponding datum for the next step down the tree', 'include_SATD': False}, {'start_line': 422, 'end_line': 422, 'comment': ""# Don't render if datum is None"", 'include_SATD': False}, {'start_line': 436, 'end_line': 436, 'comment': '# Convert value to a selector', 'include_SATD': False}, {'start_line': 454, 'end_line': 454, 'comment': '# Build the inner contents of the tag...', 'include_SATD': False}, {'start_line': 457, 'end_line': 457, 'comment': '# Add the text...', 'include_SATD': False}, {'start_line': 461, 'end_line': 461, 'comment': '# Add all the other attributes', 'include_SATD': False}, {'start_line': 465, 'end_line': 465, 'comment': '# If there are no children, return it as a closed tag', 'include_SATD': False}, {'start_line': 469, 'end_line': 469, 'comment': '# OK, recurse to our children', 'include_SATD': False}, {'start_line': 472, 'end_line': 472, 'comment': '# Return the result', 'include_SATD': False}, {'start_line': 484, 'end_line': 484, 'comment': '# Convert attributes', 'include_SATD': False}, {'start_line': 488, 'end_line': 488, 'comment': '# Get a TemplateElement', 'include_SATD': False}, {'start_line': 491, 'end_line': 491, 'comment': '# Append the parent safely', 'include_SATD': False}, {'start_line': 530, 'end_line': 530, 'comment': '# First step, render the element', 'include_SATD': False}, {'start_line': 533, 'end_line': 533, 'comment': '# Now, recurse to all child elements', 'include_SATD': False}, {'start_line': 537, 'end_line': 537, 'comment': '# Have we handled this child already?', 'include_SATD': False}, {'start_line': 542, 'end_line': 542, 'comment': ""# Determine the child's siblings"", 'include_SATD': False}, {'start_line': 548, 'end_line': 548, 'comment': '# Now we recurse for every data element', 'include_SATD': False}, {'start_line': 552, 'end_line': 553, 'comment': '# Return the first element; at the top level, this will be the # root element', 'include_SATD': False}, {'start_line': 571, 'end_line': 571, 'comment': '# Serialize it into XML', 'include_SATD': False}, {'start_line': 583, 'end_line': 583, 'comment': '# If the template is empty, return the empty string', 'include_SATD': False}, {'start_line': 587, 'end_line': 587, 'comment': '# Get the siblings and nsmap of the root element', 'include_SATD': False}, {'start_line': 591, 'end_line': 591, 'comment': '# Form the element tree', 'include_SATD': False}, {'start_line': 614, 'end_line': 614, 'comment': '# Return the root element', 'include_SATD': False}, {'start_line': 620, 'end_line': 620, 'comment': '# We are a template', 'include_SATD': False}, {'start_line': 670, 'end_line': 670, 'comment': '#x>"" %', 'include_SATD': False}, {'start_line': 714, 'end_line': 714, 'comment': '# Make sure we have a tree match', 'include_SATD': False}, {'start_line': 722, 'end_line': 722, 'comment': '# Make sure slave applies to this template', 'include_SATD': False}, {'start_line': 728, 'end_line': 728, 'comment': '# Add the slaves', 'include_SATD': False}, {'start_line': 734, 'end_line': 734, 'comment': '# Return a copy of the MasterTemplate', 'include_SATD': False}, {'start_line': 768, 'end_line': 768, 'comment': '#x>"" %', 'include_SATD': False}, {'start_line': 783, 'end_line': 783, 'comment': '# Does the master meet our minimum version requirement?', 'include_SATD': False}, {'start_line': 787, 'end_line': 787, 'comment': '# How about our maximum version requirement?', 'include_SATD': False}, {'start_line': 815, 'end_line': 815, 'comment': '# Do we need to construct the template?', 'include_SATD': False}, {'start_line': 819, 'end_line': 819, 'comment': '# Construct the template', 'include_SATD': False}, {'start_line': 822, 'end_line': 823, 'comment': '# If the template has a copy attribute, return the result of # calling it', 'include_SATD': False}, {'start_line': 827, 'end_line': 827, 'comment': '# Return the template', 'include_SATD': False}, {'start_line': 862, 'end_line': 862, 'comment': '# No template provided, look one up', 'include_SATD': False}, {'start_line': 866, 'end_line': 867, 'comment': ""# Still couldn't find a template; try the base # XMLDictSerializer"", 'include_SATD': False}, {'start_line': 872, 'end_line': 872, 'comment': '# Serialize the template', 'include_SATD': False}, {'start_line': 893, 'end_line': 893, 'comment': '# Just for completeness...', 'include_SATD': False}], 'filename': 'nova/api/openstack/xmlutil.py'}, {'a_comments': [], 'b_comments': [{'start_line': 153, 'end_line': 153, 'comment': ""#elem = xmlutil.SubTemplateElement(parent, 'zone', selector=selector)"", 'include_SATD': False}], 'filename': 'nova/api/openstack/zones.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/extensions/foxinsocks.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_accounts.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_consoles.py'}, {'a_comments': [], 'b_comments': [{'start_line': 280, 'end_line': 281, 'comment': ""# Don't need the serialization middleware here because we're # not testing any serialization"", 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/test_extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_limits.py'}, {'a_comments': [], 'b_comments': [{'start_line': 169, 'end_line': 170, 'comment': '# NOTE(justinsb): This is a questionable assertion in general # fake sets id=name, but others might not...', 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/test_users.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_wsgi.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 83, 'end_line': 83, 'comment': '# Create a template element with some attributes', 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': '# Verify all the attributes are as expected', 'include_SATD': False}, {'start_line': 95, 'end_line': 95, 'comment': '# Create a template element with some attributes', 'include_SATD': False}, {'start_line': 98, 'end_line': 98, 'comment': '# Verify that get() retrieves the attributes', 'include_SATD': False}, {'start_line': 105, 'end_line': 105, 'comment': '# Create a bare template element with no attributes', 'include_SATD': False}, {'start_line': 108, 'end_line': 108, 'comment': '# Set the attribute values', 'include_SATD': False}, {'start_line': 112, 'end_line': 112, 'comment': '# Now verify what got set', 'include_SATD': False}, {'start_line': 123, 'end_line': 123, 'comment': '# Create a template element with some attributes', 'include_SATD': False}, {'start_line': 126, 'end_line': 126, 'comment': '# Now verify keys', 'include_SATD': False}, {'start_line': 135, 'end_line': 135, 'comment': '# Create a template element with some attributes', 'include_SATD': False}, {'start_line': 138, 'end_line': 138, 'comment': '# Now verify items', 'include_SATD': False}, {'start_line': 143, 'end_line': 143, 'comment': '# Did we visit all keys?', 'include_SATD': False}, {'start_line': 147, 'end_line': 147, 'comment': '# Create a template element with no selector', 'include_SATD': False}, {'start_line': 153, 'end_line': 153, 'comment': '# Create a template element with a string selector', 'include_SATD': False}, {'start_line': 162, 'end_line': 162, 'comment': '# Create a template element with an explicit selector', 'include_SATD': False}, {'start_line': 168, 'end_line': 168, 'comment': '# Create an element', 'include_SATD': False}, {'start_line': 171, 'end_line': 171, 'comment': '# Make sure the element starts off empty', 'include_SATD': False}, {'start_line': 174, 'end_line': 174, 'comment': '# Create a child element', 'include_SATD': False}, {'start_line': 177, 'end_line': 177, 'comment': '# Append the child to the parent', 'include_SATD': False}, {'start_line': 180, 'end_line': 180, 'comment': '# Verify that the child was added', 'include_SATD': False}, {'start_line': 186, 'end_line': 186, 'comment': '# Ensure that multiple children of the same name are rejected', 'include_SATD': False}, {'start_line': 191, 'end_line': 191, 'comment': '# Create an element', 'include_SATD': False}, {'start_line': 194, 'end_line': 194, 'comment': '# Make sure the element starts off empty', 'include_SATD': False}, {'start_line': 197, 'end_line': 197, 'comment': '# Create a few children', 'include_SATD': False}, {'start_line': 204, 'end_line': 204, 'comment': '# Extend the parent by those children', 'include_SATD': False}, {'start_line': 207, 'end_line': 207, 'comment': '# Verify that the children were added', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# Ensure that multiple children of the same name are rejected', 'include_SATD': False}, {'start_line': 221, 'end_line': 221, 'comment': '# Also ensure that child4 was not added', 'include_SATD': False}, {'start_line': 226, 'end_line': 226, 'comment': '# Create an element', 'include_SATD': False}, {'start_line': 229, 'end_line': 229, 'comment': '# Make sure the element starts off empty', 'include_SATD': False}, {'start_line': 232, 'end_line': 232, 'comment': '# Create a few children', 'include_SATD': False}, {'start_line': 239, 'end_line': 239, 'comment': '# Extend the parent by those children', 'include_SATD': False}, {'start_line': 242, 'end_line': 242, 'comment': '# Create a child to insert', 'include_SATD': False}, {'start_line': 245, 'end_line': 245, 'comment': '# Insert it', 'include_SATD': False}, {'start_line': 248, 'end_line': 248, 'comment': '# Ensure the child was inserted in the right place', 'include_SATD': False}, {'start_line': 256, 'end_line': 256, 'comment': '# Ensure that multiple children of the same name are rejected', 'include_SATD': False}, {'start_line': 261, 'end_line': 261, 'comment': '# Create an element', 'include_SATD': False}, {'start_line': 264, 'end_line': 264, 'comment': '# Make sure the element starts off empty', 'include_SATD': False}, {'start_line': 267, 'end_line': 267, 'comment': '# Create a few children', 'include_SATD': False}, {'start_line': 274, 'end_line': 274, 'comment': '# Extend the parent by those children', 'include_SATD': False}, {'start_line': 277, 'end_line': 277, 'comment': '# Create a test child to remove', 'include_SATD': False}, {'start_line': 280, 'end_line': 280, 'comment': '# Try to remove it', 'include_SATD': False}, {'start_line': 283, 'end_line': 283, 'comment': '# Ensure that no child was removed', 'include_SATD': False}, {'start_line': 286, 'end_line': 286, 'comment': '# Now remove a legitimate child', 'include_SATD': False}, {'start_line': 289, 'end_line': 289, 'comment': '# Ensure that the child was removed', 'include_SATD': False}, {'start_line': 295, 'end_line': 295, 'comment': '# Ensure the child cannot be retrieved by name', 'include_SATD': False}, {'start_line': 301, 'end_line': 301, 'comment': '# Create an element', 'include_SATD': False}, {'start_line': 304, 'end_line': 304, 'comment': '# Ensure that it has no text', 'include_SATD': False}, {'start_line': 307, 'end_line': 307, 'comment': '# Try setting it to a string and ensure it becomes a selector', 'include_SATD': False}, {'start_line': 313, 'end_line': 313, 'comment': '# Try resetting the text to None', 'include_SATD': False}, {'start_line': 317, 'end_line': 317, 'comment': '# Now make up a selector and try setting the text to that', 'include_SATD': False}, {'start_line': 322, 'end_line': 322, 'comment': '# Finally, try deleting the text and see what happens', 'include_SATD': False}, {'start_line': 327, 'end_line': 327, 'comment': '# Create a template element', 'include_SATD': False}, {'start_line': 332, 'end_line': 332, 'comment': '# Create an etree element', 'include_SATD': False}, {'start_line': 335, 'end_line': 335, 'comment': '# Apply the template to the element', 'include_SATD': False}, {'start_line': 338, 'end_line': 338, 'comment': '# Now, verify the correct attributes were set', 'include_SATD': False}, {'start_line': 343, 'end_line': 343, 'comment': '# Create a template element', 'include_SATD': False}, {'start_line': 347, 'end_line': 347, 'comment': '# Create an etree element', 'include_SATD': False}, {'start_line': 350, 'end_line': 350, 'comment': '# Apply the template to the element', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': '# Now, verify the text was set', 'include_SATD': False}, {'start_line': 361, 'end_line': 361, 'comment': '# Create a master template element', 'include_SATD': False}, {'start_line': 364, 'end_line': 364, 'comment': '# Create a couple of slave template element', 'include_SATD': False}, {'start_line': 370, 'end_line': 370, 'comment': '# Try the render', 'include_SATD': False}, {'start_line': 373, 'end_line': 373, 'comment': '# Verify the particulars of the render', 'include_SATD': False}, {'start_line': 379, 'end_line': 379, 'comment': '# Create a parent for the element to be rendered', 'include_SATD': False}, {'start_line': 382, 'end_line': 382, 'comment': '# Try the render again...', 'include_SATD': False}, {'start_line': 385, 'end_line': 385, 'comment': '# Verify the particulars of the render', 'include_SATD': False}, {'start_line': 392, 'end_line': 392, 'comment': '# Create a template element', 'include_SATD': False}, {'start_line': 396, 'end_line': 396, 'comment': ""# Create the object we're going to render"", 'include_SATD': False}, {'start_line': 399, 'end_line': 399, 'comment': '# Try a render with no object', 'include_SATD': False}, {'start_line': 403, 'end_line': 403, 'comment': '# Try a render with one object', 'include_SATD': False}, {'start_line': 409, 'end_line': 409, 'comment': '# Now, try rendering an object with multiple entries', 'include_SATD': False}, {'start_line': 414, 'end_line': 414, 'comment': '# Check the results', 'include_SATD': False}, {'start_line': 420, 'end_line': 420, 'comment': '# Try the SubTemplateElement constructor', 'include_SATD': False}, {'start_line': 425, 'end_line': 425, 'comment': '# Now try it with a parent element', 'include_SATD': False}, {'start_line': 432, 'end_line': 432, 'comment': '# These are strange methods, but they make things easier', 'include_SATD': False}, {'start_line': 440, 'end_line': 440, 'comment': '# Create a template element with a dynamic tag', 'include_SATD': False}, {'start_line': 443, 'end_line': 443, 'comment': '# Try the render', 'include_SATD': False}, {'start_line': 447, 'end_line': 447, 'comment': '# Verify the particulars of the render', 'include_SATD': False}, {'start_line': 455, 'end_line': 455, 'comment': '# These are strange methods, but they make things easier', 'include_SATD': False}, {'start_line': 462, 'end_line': 462, 'comment': '# Set up a basic template', 'include_SATD': False}, {'start_line': 466, 'end_line': 466, 'comment': '# Check that we get the right siblings', 'include_SATD': False}, {'start_line': 472, 'end_line': 472, 'comment': '# Set up a basic template', 'include_SATD': False}, {'start_line': 476, 'end_line': 476, 'comment': '# Check out that we get the right namespace dictionary', 'include_SATD': False}, {'start_line': 483, 'end_line': 483, 'comment': '# Set up a master template', 'include_SATD': False}, {'start_line': 487, 'end_line': 487, 'comment': '# Make sure it has a root but no slaves', 'include_SATD': False}, {'start_line': 491, 'end_line': 491, 'comment': '# Try to attach an invalid slave', 'include_SATD': False}, {'start_line': 496, 'end_line': 496, 'comment': '# Try to attach an invalid and a valid slave', 'include_SATD': False}, {'start_line': 501, 'end_line': 501, 'comment': '# Try to attach an inapplicable template', 'include_SATD': False}, {'start_line': 509, 'end_line': 509, 'comment': '# Now try attaching an applicable template', 'include_SATD': False}, {'start_line': 515, 'end_line': 515, 'comment': '# Construct a master template', 'include_SATD': False}, {'start_line': 519, 'end_line': 519, 'comment': '# Give it a slave', 'include_SATD': False}, {'start_line': 523, 'end_line': 523, 'comment': '# Construct a copy', 'include_SATD': False}, {'start_line': 526, 'end_line': 526, 'comment': '# Check to see if we actually managed a copy', 'include_SATD': False}, {'start_line': 536, 'end_line': 536, 'comment': '# Construct a master template', 'include_SATD': False}, {'start_line': 540, 'end_line': 540, 'comment': '# Construct a slave template with applicable minimum version', 'include_SATD': False}, {'start_line': 544, 'end_line': 544, 'comment': '# Construct a slave template with equal minimum version', 'include_SATD': False}, {'start_line': 548, 'end_line': 548, 'comment': '# Construct a slave template with inapplicable minimum version', 'include_SATD': False}, {'start_line': 552, 'end_line': 552, 'comment': '# Construct a slave template with applicable version range', 'include_SATD': False}, {'start_line': 556, 'end_line': 556, 'comment': '# Construct a slave template with low version range', 'include_SATD': False}, {'start_line': 560, 'end_line': 560, 'comment': '# Construct a slave template with high version range', 'include_SATD': False}, {'start_line': 564, 'end_line': 564, 'comment': '# Construct a slave template with matching version range', 'include_SATD': False}, {'start_line': 569, 'end_line': 569, 'comment': '# Our test object to serialize', 'include_SATD': False}, {'start_line': 587, 'end_line': 587, 'comment': '# Set up our master template', 'include_SATD': False}, {'start_line': 597, 'end_line': 597, 'comment': '# Set up our slave template', 'include_SATD': False}, {'start_line': 604, 'end_line': 604, 'comment': '# Attach the slave to the master...', 'include_SATD': False}, {'start_line': 607, 'end_line': 607, 'comment': '# Try serializing our object', 'include_SATD': False}, {'start_line': 612, 'end_line': 612, 'comment': '# Now we get to manually walk the element tree...', 'include_SATD': False}, {'start_line': 648, 'end_line': 648, 'comment': ""# Make sure the template hasn't been built yet"", 'include_SATD': False}, {'start_line': 651, 'end_line': 651, 'comment': '# Now, construct the template', 'include_SATD': False}, {'start_line': 654, 'end_line': 654, 'comment': '# Make sure that there is a template cached...', 'include_SATD': False}, {'start_line': 657, 'end_line': 657, 'comment': ""# Make sure it wasn't what was returned..."", 'include_SATD': False}, {'start_line': 660, 'end_line': 660, 'comment': ""# Make sure it doesn't get rebuilt"", 'include_SATD': False}, {'start_line': 665, 'end_line': 665, 'comment': ""# Make sure we're always getting fresh copies"", 'include_SATD': False}, {'start_line': 668, 'end_line': 668, 'comment': '# Make sure we can override the copying behavior', 'include_SATD': False}, {'start_line': 673, 'end_line': 673, 'comment': ""# Make sure the template hasn't been built yet"", 'include_SATD': False}, {'start_line': 676, 'end_line': 676, 'comment': '# Now, construct the template', 'include_SATD': False}, {'start_line': 679, 'end_line': 679, 'comment': '# Make sure there is a template cached...', 'include_SATD': False}, {'start_line': 682, 'end_line': 682, 'comment': '# Make sure it was what was returned...', 'include_SATD': False}, {'start_line': 685, 'end_line': 685, 'comment': ""# Make sure it doesn't get rebuilt"", 'include_SATD': False}, {'start_line': 689, 'end_line': 689, 'comment': ""# Make sure we're always getting the cached copy"", 'include_SATD': False}, {'start_line': 709, 'end_line': 710, 'comment': '# First, check what happens when we fall back on the default # option', 'include_SATD': False}, {'start_line': 714, 'end_line': 714, 'comment': '# Now, check that we get back a template', 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/test_xmlutil.py'}, {'a_comments': [], 'b_comments': [{'start_line': 327, 'end_line': 328, 'comment': '# Select queries end up being JSON encoded twice. # Once to a string and again as an HTTP POST Body', 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/test_zones.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/accounts.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/common.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/consoles.py'}, {'a_comments': [], 'b_comments': [{'start_line': 163, 'end_line': 163, 'comment': '# Deserialize the response body, if any', 'include_SATD': False}, {'start_line': 172, 'end_line': 172, 'comment': '# Reserialize the response body', 'include_SATD': False}], 'filename': 'nova/api/openstack/extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/flavors.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/ips.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/limits.py'}, {'a_comments': [{'start_line': 1105, 'end_line': 1106, 'comment': '#NOTE(bcwaldon): We need a way to serialize actions individually. This # assumes all actions return a server entity', 'include_SATD': False}], 'b_comments': [{'start_line': 1011, 'end_line': 1011, 'comment': '# Attach image node', 'include_SATD': False}, {'start_line': 1016, 'end_line': 1016, 'comment': '# Attach flavor node', 'include_SATD': False}, {'start_line': 1021, 'end_line': 1021, 'comment': '# Attach metadata node', 'include_SATD': False}, {'start_line': 1024, 'end_line': 1024, 'comment': '# Attach addresses node', 'include_SATD': False}, {'start_line': 1027, 'end_line': 1027, 'comment': '# Attach security groups node', 'include_SATD': False}], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/users.py'}, {'a_comments': [], 'b_comments': [{'start_line': 496, 'end_line': 496, 'comment': '# Request lazy serialization', 'include_SATD': False}, {'start_line': 501, 'end_line': 501, 'comment': ""# See if there's a serializer..."", 'include_SATD': False}, {'start_line': 506, 'end_line': 506, 'comment': '# OK, build up the arguments for the serialize() method', 'include_SATD': False}, {'start_line': 511, 'end_line': 511, 'comment': '# Re-serialize the body', 'include_SATD': False}], 'filename': 'nova/api/openstack/wsgi.py'}, {'a_comments': [], 'b_comments': [{'start_line': 70, 'end_line': 70, 'comment': '# Walk the selector list', 'include_SATD': False}, {'start_line': 72, 'end_line': 72, 'comment': ""# If it's callable, call it"", 'include_SATD': False}, {'start_line': 76, 'end_line': 76, 'comment': '# Use indexing', 'include_SATD': False}, {'start_line': 80, 'end_line': 80, 'comment': '# No sense going any further', 'include_SATD': False}, {'start_line': 82, 'end_line': 82, 'comment': '# Convert to a KeyError, for consistency', 'include_SATD': False}, {'start_line': 86, 'end_line': 86, 'comment': '# Return the finally-selected object', 'include_SATD': False}, {'start_line': 150, 'end_line': 150, 'comment': '# Convert selector into a Selector', 'include_SATD': False}, {'start_line': 163, 'end_line': 164, 'comment': '# Run the incoming attributes through set() so that they # become selectorized', 'include_SATD': False}, {'start_line': 174, 'end_line': 174, 'comment': ""#x>' %"", 'include_SATD': False}, {'start_line': 192, 'end_line': 192, 'comment': '# Allow access by node name', 'include_SATD': False}, {'start_line': 200, 'end_line': 200, 'comment': '# Unwrap templates...', 'include_SATD': False}, {'start_line': 203, 'end_line': 203, 'comment': '# Avoid duplications', 'include_SATD': False}, {'start_line': 213, 'end_line': 213, 'comment': '# Pre-evaluate the elements', 'include_SATD': False}, {'start_line': 217, 'end_line': 217, 'comment': '# Unwrap templates...', 'include_SATD': False}, {'start_line': 220, 'end_line': 220, 'comment': '# Avoid duplications', 'include_SATD': False}, {'start_line': 227, 'end_line': 227, 'comment': '# Update the children', 'include_SATD': False}, {'start_line': 234, 'end_line': 234, 'comment': '# Unwrap templates...', 'include_SATD': False}, {'start_line': 237, 'end_line': 237, 'comment': '# Avoid duplications', 'include_SATD': False}, {'start_line': 247, 'end_line': 247, 'comment': '# Unwrap templates...', 'include_SATD': False}, {'start_line': 250, 'end_line': 250, 'comment': '# Check if element exists', 'include_SATD': False}, {'start_line': 279, 'end_line': 279, 'comment': '# Convert value to a selector', 'include_SATD': False}, {'start_line': 300, 'end_line': 300, 'comment': '# We are a template element', 'include_SATD': False}, {'start_line': 306, 'end_line': 306, 'comment': '# Wrap in a basic Template', 'include_SATD': False}, {'start_line': 320, 'end_line': 320, 'comment': '# Start with the text...', 'include_SATD': False}, {'start_line': 324, 'end_line': 324, 'comment': '# Now set up all the attributes...', 'include_SATD': False}, {'start_line': 329, 'end_line': 329, 'comment': ""# Attribute has no value, so don't include it"", 'include_SATD': False}, {'start_line': 346, 'end_line': 346, 'comment': '# Allocate a node', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': '# If we have a parent, append the node to the parent', 'include_SATD': False}, {'start_line': 357, 'end_line': 357, 'comment': '# If the datum is None, do nothing else', 'include_SATD': False}, {'start_line': 361, 'end_line': 361, 'comment': '# Apply this template element to the element', 'include_SATD': False}, {'start_line': 364, 'end_line': 364, 'comment': '# Additionally, apply the patches', 'include_SATD': False}, {'start_line': 368, 'end_line': 368, 'comment': '# We have fully rendered the element; return it', 'include_SATD': False}, {'start_line': 388, 'end_line': 388, 'comment': ""# First, get the datum we're rendering"", 'include_SATD': False}, {'start_line': 391, 'end_line': 391, 'comment': '# Check if we should render at all', 'include_SATD': False}, {'start_line': 397, 'end_line': 397, 'comment': ""# Make the data into a list if it isn't already"", 'include_SATD': False}, {'start_line': 403, 'end_line': 403, 'comment': '# Render all the elements', 'include_SATD': False}, {'start_line': 408, 'end_line': 409, 'comment': '# Return all the elements rendered, as well as the # corresponding datum for the next step down the tree', 'include_SATD': False}, {'start_line': 422, 'end_line': 422, 'comment': ""# Don't render if datum is None"", 'include_SATD': False}, {'start_line': 436, 'end_line': 436, 'comment': '# Convert value to a selector', 'include_SATD': False}, {'start_line': 454, 'end_line': 454, 'comment': '# Build the inner contents of the tag...', 'include_SATD': False}, {'start_line': 457, 'end_line': 457, 'comment': '# Add the text...', 'include_SATD': False}, {'start_line': 461, 'end_line': 461, 'comment': '# Add all the other attributes', 'include_SATD': False}, {'start_line': 465, 'end_line': 465, 'comment': '# If there are no children, return it as a closed tag', 'include_SATD': False}, {'start_line': 469, 'end_line': 469, 'comment': '# OK, recurse to our children', 'include_SATD': False}, {'start_line': 472, 'end_line': 472, 'comment': '# Return the result', 'include_SATD': False}, {'start_line': 484, 'end_line': 484, 'comment': '# Convert attributes', 'include_SATD': False}, {'start_line': 488, 'end_line': 488, 'comment': '# Get a TemplateElement', 'include_SATD': False}, {'start_line': 491, 'end_line': 491, 'comment': '# Append the parent safely', 'include_SATD': False}, {'start_line': 530, 'end_line': 530, 'comment': '# First step, render the element', 'include_SATD': False}, {'start_line': 533, 'end_line': 533, 'comment': '# Now, recurse to all child elements', 'include_SATD': False}, {'start_line': 537, 'end_line': 537, 'comment': '# Have we handled this child already?', 'include_SATD': False}, {'start_line': 542, 'end_line': 542, 'comment': ""# Determine the child's siblings"", 'include_SATD': False}, {'start_line': 548, 'end_line': 548, 'comment': '# Now we recurse for every data element', 'include_SATD': False}, {'start_line': 552, 'end_line': 553, 'comment': '# Return the first element; at the top level, this will be the # root element', 'include_SATD': False}, {'start_line': 571, 'end_line': 571, 'comment': '# Serialize it into XML', 'include_SATD': False}, {'start_line': 583, 'end_line': 583, 'comment': '# If the template is empty, return the empty string', 'include_SATD': False}, {'start_line': 587, 'end_line': 587, 'comment': '# Get the siblings and nsmap of the root element', 'include_SATD': False}, {'start_line': 591, 'end_line': 591, 'comment': '# Form the element tree', 'include_SATD': False}, {'start_line': 614, 'end_line': 614, 'comment': '# Return the root element', 'include_SATD': False}, {'start_line': 620, 'end_line': 620, 'comment': '# We are a template', 'include_SATD': False}, {'start_line': 670, 'end_line': 670, 'comment': '#x>"" %', 'include_SATD': False}, {'start_line': 714, 'end_line': 714, 'comment': '# Make sure we have a tree match', 'include_SATD': False}, {'start_line': 722, 'end_line': 722, 'comment': '# Make sure slave applies to this template', 'include_SATD': False}, {'start_line': 728, 'end_line': 728, 'comment': '# Add the slaves', 'include_SATD': False}, {'start_line': 734, 'end_line': 734, 'comment': '# Return a copy of the MasterTemplate', 'include_SATD': False}, {'start_line': 768, 'end_line': 768, 'comment': '#x>"" %', 'include_SATD': False}, {'start_line': 783, 'end_line': 783, 'comment': '# Does the master meet our minimum version requirement?', 'include_SATD': False}, {'start_line': 787, 'end_line': 787, 'comment': '# How about our maximum version requirement?', 'include_SATD': False}, {'start_line': 815, 'end_line': 815, 'comment': '# Do we need to construct the template?', 'include_SATD': False}, {'start_line': 819, 'end_line': 819, 'comment': '# Construct the template', 'include_SATD': False}, {'start_line': 822, 'end_line': 823, 'comment': '# If the template has a copy attribute, return the result of # calling it', 'include_SATD': False}, {'start_line': 827, 'end_line': 827, 'comment': '# Return the template', 'include_SATD': False}, {'start_line': 862, 'end_line': 862, 'comment': '# No template provided, look one up', 'include_SATD': False}, {'start_line': 866, 'end_line': 867, 'comment': ""# Still couldn't find a template; try the base # XMLDictSerializer"", 'include_SATD': False}, {'start_line': 872, 'end_line': 872, 'comment': '# Serialize the template', 'include_SATD': False}, {'start_line': 893, 'end_line': 893, 'comment': '# Just for completeness...', 'include_SATD': False}], 'filename': 'nova/api/openstack/xmlutil.py'}, {'a_comments': [], 'b_comments': [{'start_line': 153, 'end_line': 153, 'comment': ""#elem = xmlutil.SubTemplateElement(parent, 'zone', selector=selector)"", 'include_SATD': False}], 'filename': 'nova/api/openstack/zones.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/extensions/foxinsocks.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_accounts.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_consoles.py'}, {'a_comments': [], 'b_comments': [{'start_line': 280, 'end_line': 281, 'comment': ""# Don't need the serialization middleware here because we're # not testing any serialization"", 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/test_extensions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_limits.py'}, {'a_comments': [], 'b_comments': [{'start_line': 169, 'end_line': 170, 'comment': '# NOTE(justinsb): This is a questionable assertion in general # fake sets id=name, but others might not...', 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/test_users.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_wsgi.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 83, 'end_line': 83, 'comment': '# Create a template element with some attributes', 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': '# Verify all the attributes are as expected', 'include_SATD': False}, {'start_line': 95, 'end_line': 95, 'comment': '# Create a template element with some attributes', 'include_SATD': False}, {'start_line': 98, 'end_line': 98, 'comment': '# Verify that get() retrieves the attributes', 'include_SATD': False}, {'start_line': 105, 'end_line': 105, 'comment': '# Create a bare template element with no attributes', 'include_SATD': False}, {'start_line': 108, 'end_line': 108, 'comment': '# Set the attribute values', 'include_SATD': False}, {'start_line': 112, 'end_line': 112, 'comment': '# Now verify what got set', 'include_SATD': False}, {'start_line': 123, 'end_line': 123, 'comment': '# Create a template element with some attributes', 'include_SATD': False}, {'start_line': 126, 'end_line': 126, 'comment': '# Now verify keys', 'include_SATD': False}, {'start_line': 135, 'end_line': 135, 'comment': '# Create a template element with some attributes', 'include_SATD': False}, {'start_line': 138, 'end_line': 138, 'comment': '# Now verify items', 'include_SATD': False}, {'start_line': 143, 'end_line': 143, 'comment': '# Did we visit all keys?', 'include_SATD': False}, {'start_line': 147, 'end_line': 147, 'comment': '# Create a template element with no selector', 'include_SATD': False}, {'start_line': 153, 'end_line': 153, 'comment': '# Create a template element with a string selector', 'include_SATD': False}, {'start_line': 162, 'end_line': 162, 'comment': '# Create a template element with an explicit selector', 'include_SATD': False}, {'start_line': 168, 'end_line': 168, 'comment': '# Create an element', 'include_SATD': False}, {'start_line': 171, 'end_line': 171, 'comment': '# Make sure the element starts off empty', 'include_SATD': False}, {'start_line': 174, 'end_line': 174, 'comment': '# Create a child element', 'include_SATD': False}, {'start_line': 177, 'end_line': 177, 'comment': '# Append the child to the parent', 'include_SATD': False}, {'start_line': 180, 'end_line': 180, 'comment': '# Verify that the child was added', 'include_SATD': False}, {'start_line': 186, 'end_line': 186, 'comment': '# Ensure that multiple children of the same name are rejected', 'include_SATD': False}, {'start_line': 191, 'end_line': 191, 'comment': '# Create an element', 'include_SATD': False}, {'start_line': 194, 'end_line': 194, 'comment': '# Make sure the element starts off empty', 'include_SATD': False}, {'start_line': 197, 'end_line': 197, 'comment': '# Create a few children', 'include_SATD': False}, {'start_line': 204, 'end_line': 204, 'comment': '# Extend the parent by those children', 'include_SATD': False}, {'start_line': 207, 'end_line': 207, 'comment': '# Verify that the children were added', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# Ensure that multiple children of the same name are rejected', 'include_SATD': False}, {'start_line': 221, 'end_line': 221, 'comment': '# Also ensure that child4 was not added', 'include_SATD': False}, {'start_line': 226, 'end_line': 226, 'comment': '# Create an element', 'include_SATD': False}, {'start_line': 229, 'end_line': 229, 'comment': '# Make sure the element starts off empty', 'include_SATD': False}, {'start_line': 232, 'end_line': 232, 'comment': '# Create a few children', 'include_SATD': False}, {'start_line': 239, 'end_line': 239, 'comment': '# Extend the parent by those children', 'include_SATD': False}, {'start_line': 242, 'end_line': 242, 'comment': '# Create a child to insert', 'include_SATD': False}, {'start_line': 245, 'end_line': 245, 'comment': '# Insert it', 'include_SATD': False}, {'start_line': 248, 'end_line': 248, 'comment': '# Ensure the child was inserted in the right place', 'include_SATD': False}, {'start_line': 256, 'end_line': 256, 'comment': '# Ensure that multiple children of the same name are rejected', 'include_SATD': False}, {'start_line': 261, 'end_line': 261, 'comment': '# Create an element', 'include_SATD': False}, {'start_line': 264, 'end_line': 264, 'comment': '# Make sure the element starts off empty', 'include_SATD': False}, {'start_line': 267, 'end_line': 267, 'comment': '# Create a few children', 'include_SATD': False}, {'start_line': 274, 'end_line': 274, 'comment': '# Extend the parent by those children', 'include_SATD': False}, {'start_line': 277, 'end_line': 277, 'comment': '# Create a test child to remove', 'include_SATD': False}, {'start_line': 280, 'end_line': 280, 'comment': '# Try to remove it', 'include_SATD': False}, {'start_line': 283, 'end_line': 283, 'comment': '# Ensure that no child was removed', 'include_SATD': False}, {'start_line': 286, 'end_line': 286, 'comment': '# Now remove a legitimate child', 'include_SATD': False}, {'start_line': 289, 'end_line': 289, 'comment': '# Ensure that the child was removed', 'include_SATD': False}, {'start_line': 295, 'end_line': 295, 'comment': '# Ensure the child cannot be retrieved by name', 'include_SATD': False}, {'start_line': 301, 'end_line': 301, 'comment': '# Create an element', 'include_SATD': False}, {'start_line': 304, 'end_line': 304, 'comment': '# Ensure that it has no text', 'include_SATD': False}, {'start_line': 307, 'end_line': 307, 'comment': '# Try setting it to a string and ensure it becomes a selector', 'include_SATD': False}, {'start_line': 313, 'end_line': 313, 'comment': '# Try resetting the text to None', 'include_SATD': False}, {'start_line': 317, 'end_line': 317, 'comment': '# Now make up a selector and try setting the text to that', 'include_SATD': False}, {'start_line': 322, 'end_line': 322, 'comment': '# Finally, try deleting the text and see what happens', 'include_SATD': False}, {'start_line': 327, 'end_line': 327, 'comment': '# Create a template element', 'include_SATD': False}, {'start_line': 332, 'end_line': 332, 'comment': '# Create an etree element', 'include_SATD': False}, {'start_line': 335, 'end_line': 335, 'comment': '# Apply the template to the element', 'include_SATD': False}, {'start_line': 338, 'end_line': 338, 'comment': '# Now, verify the correct attributes were set', 'include_SATD': False}, {'start_line': 343, 'end_line': 343, 'comment': '# Create a template element', 'include_SATD': False}, {'start_line': 347, 'end_line': 347, 'comment': '# Create an etree element', 'include_SATD': False}, {'start_line': 350, 'end_line': 350, 'comment': '# Apply the template to the element', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': '# Now, verify the text was set', 'include_SATD': False}, {'start_line': 361, 'end_line': 361, 'comment': '# Create a master template element', 'include_SATD': False}, {'start_line': 364, 'end_line': 364, 'comment': '# Create a couple of slave template element', 'include_SATD': False}, {'start_line': 370, 'end_line': 370, 'comment': '# Try the render', 'include_SATD': False}, {'start_line': 373, 'end_line': 373, 'comment': '# Verify the particulars of the render', 'include_SATD': False}, {'start_line': 379, 'end_line': 379, 'comment': '# Create a parent for the element to be rendered', 'include_SATD': False}, {'start_line': 382, 'end_line': 382, 'comment': '# Try the render again...', 'include_SATD': False}, {'start_line': 385, 'end_line': 385, 'comment': '# Verify the particulars of the render', 'include_SATD': False}, {'start_line': 392, 'end_line': 392, 'comment': '# Create a template element', 'include_SATD': False}, {'start_line': 396, 'end_line': 396, 'comment': ""# Create the object we're going to render"", 'include_SATD': False}, {'start_line': 399, 'end_line': 399, 'comment': '# Try a render with no object', 'include_SATD': False}, {'start_line': 403, 'end_line': 403, 'comment': '# Try a render with one object', 'include_SATD': False}, {'start_line': 409, 'end_line': 409, 'comment': '# Now, try rendering an object with multiple entries', 'include_SATD': False}, {'start_line': 414, 'end_line': 414, 'comment': '# Check the results', 'include_SATD': False}, {'start_line': 420, 'end_line': 420, 'comment': '# Try the SubTemplateElement constructor', 'include_SATD': False}, {'start_line': 425, 'end_line': 425, 'comment': '# Now try it with a parent element', 'include_SATD': False}, {'start_line': 432, 'end_line': 432, 'comment': '# These are strange methods, but they make things easier', 'include_SATD': False}, {'start_line': 440, 'end_line': 440, 'comment': '# Create a template element with a dynamic tag', 'include_SATD': False}, {'start_line': 443, 'end_line': 443, 'comment': '# Try the render', 'include_SATD': False}, {'start_line': 447, 'end_line': 447, 'comment': '# Verify the particulars of the render', 'include_SATD': False}, {'start_line': 455, 'end_line': 455, 'comment': '# These are strange methods, but they make things easier', 'include_SATD': False}, {'start_line': 462, 'end_line': 462, 'comment': '# Set up a basic template', 'include_SATD': False}, {'start_line': 466, 'end_line': 466, 'comment': '# Check that we get the right siblings', 'include_SATD': False}, {'start_line': 472, 'end_line': 472, 'comment': '# Set up a basic template', 'include_SATD': False}, {'start_line': 476, 'end_line': 476, 'comment': '# Check out that we get the right namespace dictionary', 'include_SATD': False}, {'start_line': 483, 'end_line': 483, 'comment': '# Set up a master template', 'include_SATD': False}, {'start_line': 487, 'end_line': 487, 'comment': '# Make sure it has a root but no slaves', 'include_SATD': False}, {'start_line': 491, 'end_line': 491, 'comment': '# Try to attach an invalid slave', 'include_SATD': False}, {'start_line': 496, 'end_line': 496, 'comment': '# Try to attach an invalid and a valid slave', 'include_SATD': False}, {'start_line': 501, 'end_line': 501, 'comment': '# Try to attach an inapplicable template', 'include_SATD': False}, {'start_line': 509, 'end_line': 509, 'comment': '# Now try attaching an applicable template', 'include_SATD': False}, {'start_line': 515, 'end_line': 515, 'comment': '# Construct a master template', 'include_SATD': False}, {'start_line': 519, 'end_line': 519, 'comment': '# Give it a slave', 'include_SATD': False}, {'start_line': 523, 'end_line': 523, 'comment': '# Construct a copy', 'include_SATD': False}, {'start_line': 526, 'end_line': 526, 'comment': '# Check to see if we actually managed a copy', 'include_SATD': False}, {'start_line': 536, 'end_line': 536, 'comment': '# Construct a master template', 'include_SATD': False}, {'start_line': 540, 'end_line': 540, 'comment': '# Construct a slave template with applicable minimum version', 'include_SATD': False}, {'start_line': 544, 'end_line': 544, 'comment': '# Construct a slave template with equal minimum version', 'include_SATD': False}, {'start_line': 548, 'end_line': 548, 'comment': '# Construct a slave template with inapplicable minimum version', 'include_SATD': False}, {'start_line': 552, 'end_line': 552, 'comment': '# Construct a slave template with applicable version range', 'include_SATD': False}, {'start_line': 556, 'end_line': 556, 'comment': '# Construct a slave template with low version range', 'include_SATD': False}, {'start_line': 560, 'end_line': 560, 'comment': '# Construct a slave template with high version range', 'include_SATD': False}, {'start_line': 564, 'end_line': 564, 'comment': '# Construct a slave template with matching version range', 'include_SATD': False}, {'start_line': 569, 'end_line': 569, 'comment': '# Our test object to serialize', 'include_SATD': False}, {'start_line': 587, 'end_line': 587, 'comment': '# Set up our master template', 'include_SATD': False}, {'start_line': 597, 'end_line': 597, 'comment': '# Set up our slave template', 'include_SATD': False}, {'start_line': 604, 'end_line': 604, 'comment': '# Attach the slave to the master...', 'include_SATD': False}, {'start_line': 607, 'end_line': 607, 'comment': '# Try serializing our object', 'include_SATD': False}, {'start_line': 612, 'end_line': 612, 'comment': '# Now we get to manually walk the element tree...', 'include_SATD': False}, {'start_line': 648, 'end_line': 648, 'comment': ""# Make sure the template hasn't been built yet"", 'include_SATD': False}, {'start_line': 651, 'end_line': 651, 'comment': '# Now, construct the template', 'include_SATD': False}, {'start_line': 654, 'end_line': 654, 'comment': '# Make sure that there is a template cached...', 'include_SATD': False}, {'start_line': 657, 'end_line': 657, 'comment': ""# Make sure it wasn't what was returned..."", 'include_SATD': False}, {'start_line': 660, 'end_line': 660, 'comment': ""# Make sure it doesn't get rebuilt"", 'include_SATD': False}, {'start_line': 665, 'end_line': 665, 'comment': ""# Make sure we're always getting fresh copies"", 'include_SATD': False}, {'start_line': 668, 'end_line': 668, 'comment': '# Make sure we can override the copying behavior', 'include_SATD': False}, {'start_line': 673, 'end_line': 673, 'comment': ""# Make sure the template hasn't been built yet"", 'include_SATD': False}, {'start_line': 676, 'end_line': 676, 'comment': '# Now, construct the template', 'include_SATD': False}, {'start_line': 679, 'end_line': 679, 'comment': '# Make sure there is a template cached...', 'include_SATD': False}, {'start_line': 682, 'end_line': 682, 'comment': '# Make sure it was what was returned...', 'include_SATD': False}, {'start_line': 685, 'end_line': 685, 'comment': ""# Make sure it doesn't get rebuilt"", 'include_SATD': False}, {'start_line': 689, 'end_line': 689, 'comment': ""# Make sure we're always getting the cached copy"", 'include_SATD': False}, {'start_line': 709, 'end_line': 710, 'comment': '# First, check what happens when we fall back on the default # option', 'include_SATD': False}, {'start_line': 714, 'end_line': 714, 'comment': '# Now, check that we get back a template', 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/test_xmlutil.py'}, {'a_comments': [], 'b_comments': [{'start_line': 327, 'end_line': 328, 'comment': '# Select queries end up being JSON encoded twice. # Once to a string and again as an HTTP POST Body', 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/test_zones.py'}]}]",3,15,30,MERGED,True,https://review.opendev.org/#/c/818,Add XML templates.,True,{},False,{},False,{}
337,900,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 53, 'end_line': 56, 'comment': ""# We're doing some hacky stuff here so that we don't have to copy # out all the code of the original verbatim and then tweak a few lines. # We're hijacking the output of getopt so we can still return the # leftover args at the end"", 'include_SATD': True}, {'start_line': 76, 'end_line': 79, 'comment': ""# Undefined args were found, for now we don't care so just # act like everything went well # (these three lines are copied pretty much verbatim from the end # of the __call__ function we are wrapping)"", 'include_SATD': False}, {'start_line': 91, 'end_line': 92, 'comment': ""# Store the arguments for later, we'll need them for new flags # added at runtime"", 'include_SATD': False}, {'start_line': 169, 'end_line': 172, 'comment': '# Copied from gflags with small mods to get the naming correct. # Originally gflags checks for the first module that is not gflags that is # in the call chain, we want to check for the first module that is not gflags # and not this module.', 'include_SATD': False}, {'start_line': 180, 'end_line': 180, 'comment': ""# Walk down the stack to find the first globals dict that's not ours."", 'include_SATD': False}, {'start_line': 191, 'end_line': 191, 'comment': '# Copied from gflags because it is a private function', 'include_SATD': False}], 'b_comments': [{'start_line': 5, 'end_line': 5, 'comment': '# Copyright 2011 Red Hat, Inc.', 'include_SATD': False}, {'start_line': 64, 'end_line': 68, 'comment': '# # optparse encountered an unknown option, so # let\'s remove it. Error message looks like # e.g. msg = ""no such option: --runtime_answer"" #', 'include_SATD': False}, {'start_line': 78, 'end_line': 81, 'comment': '# # This horrendous hack allows us to stop optparse # exiting when it encounters an unknown option #', 'include_SATD': True}, {'start_line': 118, 'end_line': 118, 'comment': '# Can\'t do if not value, b/c value might be \'0\' or """"', 'include_SATD': False}, {'start_line': 174, 'end_line': 176, 'comment': ""# # FIXME(markmc): this doesn't support --boolflag=true/false/t/f/1/0 #"", 'include_SATD': True}, {'start_line': 216, 'end_line': 216, 'comment': '# FIXME(markmc): ignoring lower_bound', 'include_SATD': True}], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [{'start_line': 5, 'end_line': 5, 'comment': '# Copyright 2011 Red Hat, Inc.', 'include_SATD': False}], 'filename': 'nova/tests/test_flags.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [{'start_line': 53, 'end_line': 56, 'comment': ""# We're doing some hacky stuff here so that we don't have to copy # out all the code of the original verbatim and then tweak a few lines. # We're hijacking the output of getopt so we can still return the # leftover args at the end"", 'include_SATD': True}, {'start_line': 76, 'end_line': 79, 'comment': ""# Undefined args were found, for now we don't care so just # act like everything went well # (these three lines are copied pretty much verbatim from the end # of the __call__ function we are wrapping)"", 'include_SATD': False}, {'start_line': 91, 'end_line': 92, 'comment': ""# Store the arguments for later, we'll need them for new flags # added at runtime"", 'include_SATD': False}, {'start_line': 169, 'end_line': 172, 'comment': '# Copied from gflags with small mods to get the naming correct. # Originally gflags checks for the first module that is not gflags that is # in the call chain, we want to check for the first module that is not gflags # and not this module.', 'include_SATD': False}, {'start_line': 180, 'end_line': 180, 'comment': ""# Walk down the stack to find the first globals dict that's not ours."", 'include_SATD': False}, {'start_line': 191, 'end_line': 191, 'comment': '# Copied from gflags because it is a private function', 'include_SATD': False}], 'b_comments': [{'start_line': 5, 'end_line': 5, 'comment': '# Copyright 2011 Red Hat, Inc.', 'include_SATD': False}, {'start_line': 61, 'end_line': 61, 'comment': '# Error message is e.g. ""no such option: --runtime_answer""', 'include_SATD': False}, {'start_line': 79, 'end_line': 82, 'comment': '# # This horrendous hack allows us to stop optparse # exiting when it encounters an unknown option #', 'include_SATD': True}, {'start_line': 119, 'end_line': 119, 'comment': '# Can\'t do if not value, b/c value might be \'0\' or """"', 'include_SATD': False}, {'start_line': 175, 'end_line': 177, 'comment': ""# # FIXME(markmc): this doesn't support --boolflag=true/false/t/f/1/0 #"", 'include_SATD': True}, {'start_line': 217, 'end_line': 217, 'comment': '# FIXME(markmc): ignoring lower_bound', 'include_SATD': True}], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [{'start_line': 5, 'end_line': 5, 'comment': '# Copyright 2011 Red Hat, Inc.', 'include_SATD': False}], 'filename': 'nova/tests/test_flags.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [{'start_line': 53, 'end_line': 56, 'comment': ""# We're doing some hacky stuff here so that we don't have to copy # out all the code of the original verbatim and then tweak a few lines. # We're hijacking the output of getopt so we can still return the # leftover args at the end"", 'include_SATD': True}, {'start_line': 76, 'end_line': 79, 'comment': ""# Undefined args were found, for now we don't care so just # act like everything went well # (these three lines are copied pretty much verbatim from the end # of the __call__ function we are wrapping)"", 'include_SATD': False}, {'start_line': 91, 'end_line': 92, 'comment': ""# Store the arguments for later, we'll need them for new flags # added at runtime"", 'include_SATD': False}, {'start_line': 169, 'end_line': 172, 'comment': '# Copied from gflags with small mods to get the naming correct. # Originally gflags checks for the first module that is not gflags that is # in the call chain, we want to check for the first module that is not gflags # and not this module.', 'include_SATD': False}, {'start_line': 180, 'end_line': 180, 'comment': ""# Walk down the stack to find the first globals dict that's not ours."", 'include_SATD': False}, {'start_line': 191, 'end_line': 191, 'comment': '# Copied from gflags because it is a private function', 'include_SATD': False}], 'b_comments': [{'start_line': 5, 'end_line': 5, 'comment': '# Copyright 2011 Red Hat, Inc.', 'include_SATD': False}, {'start_line': 65, 'end_line': 65, 'comment': '# Error message is e.g. ""no such option: --runtime_answer""', 'include_SATD': False}, {'start_line': 83, 'end_line': 86, 'comment': '# # This horrendous hack allows us to stop optparse # exiting when it encounters an unknown option #', 'include_SATD': True}, {'start_line': 122, 'end_line': 122, 'comment': '# value might be \'0\' or """"', 'include_SATD': False}, {'start_line': 178, 'end_line': 180, 'comment': ""# # FIXME(markmc): this doesn't support --boolflag=true/false/t/f/1/0 #"", 'include_SATD': True}, {'start_line': 220, 'end_line': 220, 'comment': '# FIXME(markmc): ignoring lower_bound', 'include_SATD': True}], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [{'start_line': 5, 'end_line': 5, 'comment': '# Copyright 2011 Red Hat, Inc.', 'include_SATD': False}], 'filename': 'nova/tests/test_flags.py'}]}]",3,18,0,MERGED,True,https://review.opendev.org/#/c/900,Start switching from gflags to optparse,True,"{'# # This horrendous hack allows us to stop optparse # exiting when it encounters an unknown option #': 1, ""# # FIXME(markmc): this doesn't support --boolflag=true/false/t/f/1/0 #"": 1, '# FIXME(markmc): ignoring lower_bound': 1}",True,"{""# We're doing some hacky stuff here so that we don't have to copy # out all the code of the original verbatim and then tweak a few lines. # We're hijacking the output of getopt so we can still return the # leftover args at the end"": 1}",True,{}
338,915,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 108, 'end_line': 111, 'comment': ""# TODO(bgh): The project_id isn't getting populated here for some # reason.. I'm not sure if it's an invalid assumption or just a bug. # In order to get the right quantum_net_id we'll have to query all the # project_ids for now."", 'include_SATD': True}], 'filename': 'nova/network/quantum/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/quantum/nova_ipam_lib.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/915,Change network delete to delete by uuid instead of cidr,True,"{""# TODO(bgh): The project_id isn't getting populated here for some # reason.. I'm not sure if it's an invalid assumption or just a bug. # In order to get the right quantum_net_id we'll have to query all the # project_ids for now."": 1}",True,{},False,{}
339,918,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/connection.py'}]}]",1,10,0,ABANDONED,False,https://review.opendev.org/#/c/918,"This enhances nova-compute to use the flag --multiple_storage_path. This is a comma separated list of directories. When spawning an instance, the directory with the most free space is chosen to store the image files. The neccessary information are stored ",True,{},False,{},False,{}
340,924,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}]}]",3,4,0,MERGED,True,https://review.opendev.org/#/c/924,Only log instance actions once if instance action logging is enabled (now disabled by default).,True,{},False,{},False,{}
341,906,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 457, 'end_line': 457, 'comment': '# 1. Delete and recreate partition to end of disk', 'include_SATD': False}, {'start_line': 468, 'end_line': 468, 'comment': '# 2. Remove ext3 journal (making it ext2)', 'include_SATD': False}, {'start_line': 472, 'end_line': 474, 'comment': '# 3. fsck the disk # NOTE(sirp): using -p here to automatically repair filesystem, is # this okay?', 'include_SATD': False}, {'start_line': 477, 'end_line': 477, 'comment': '# 4. Resize the disk', 'include_SATD': False}, {'start_line': 480, 'end_line': 480, 'comment': '# 5. Add back journal', 'include_SATD': False}], 'filename': 'nova/virt/xenapi/vm_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 457, 'end_line': 457, 'comment': '# 1. Delete and recreate partition to end of disk', 'include_SATD': False}, {'start_line': 468, 'end_line': 468, 'comment': '# 2. Remove ext3 journal (making it ext2)', 'include_SATD': False}, {'start_line': 472, 'end_line': 474, 'comment': '# 3. fsck the disk # NOTE(sirp): using -p here to automatically repair filesystem, is # this okay?', 'include_SATD': False}, {'start_line': 477, 'end_line': 477, 'comment': '# 4. Resize the disk', 'include_SATD': False}, {'start_line': 480, 'end_line': 480, 'comment': '# 5. Add back journal', 'include_SATD': False}], 'filename': 'nova/virt/xenapi/vm_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1120, 'end_line': 1120, 'comment': '# m1.large', 'include_SATD': False}], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 457, 'end_line': 457, 'comment': '# 1. Delete and recreate partition to end of disk', 'include_SATD': False}, {'start_line': 468, 'end_line': 468, 'comment': '# 2. Remove ext3 journal (making it ext2)', 'include_SATD': False}, {'start_line': 472, 'end_line': 474, 'comment': '# 3. fsck the disk # NOTE(sirp): using -p here to automatically repair filesystem, is # this okay?', 'include_SATD': False}, {'start_line': 477, 'end_line': 477, 'comment': '# 4. Resize the disk', 'include_SATD': False}, {'start_line': 480, 'end_line': 480, 'comment': '# 5. Add back journal', 'include_SATD': False}], 'filename': 'nova/virt/xenapi/vm_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1120, 'end_line': 1120, 'comment': '# m1.large', 'include_SATD': False}], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 457, 'end_line': 457, 'comment': '# 1. Delete and recreate partition to end of disk', 'include_SATD': False}, {'start_line': 469, 'end_line': 469, 'comment': '# 2. Remove ext3 journal (making it ext2)', 'include_SATD': False}, {'start_line': 473, 'end_line': 475, 'comment': '# 3. fsck the disk # NOTE(sirp): using -p here to automatically repair filesystem, is # this okay?', 'include_SATD': False}, {'start_line': 478, 'end_line': 478, 'comment': '# 4. Resize the disk', 'include_SATD': False}, {'start_line': 481, 'end_line': 481, 'comment': '# 5. Add back journal', 'include_SATD': False}], 'filename': 'nova/virt/xenapi/vm_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}]}]",4,7,0,MERGED,True,https://review.opendev.org/#/c/906,Repartition and resize disk when marked as managed.,True,{},False,{},False,{}
342,909,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}, {'a_comments': [{'start_line': 1101, 'end_line': 1102, 'comment': '# The following assert will fail if either of the asserts in # fake_get_all() fail', 'include_SATD': False}, {'start_line': 1120, 'end_line': 1120, 'comment': '# Use admin context', 'include_SATD': False}, {'start_line': 1125, 'end_line': 1125, 'comment': '# Failure in fake_get_all returns non 200 status code', 'include_SATD': False}, {'start_line': 1141, 'end_line': 1142, 'comment': '# The following assert will fail if either of the asserts in # fake_get_all() fail', 'include_SATD': False}, {'start_line': 1160, 'end_line': 1161, 'comment': '# The following assert will fail if either of the asserts in # fake_get_all() fail', 'include_SATD': False}, {'start_line': 1187, 'end_line': 1188, 'comment': '# The following assert will fail if either of the asserts in # fake_get_all() fail', 'include_SATD': False}, {'start_line': 1242, 'end_line': 1242, 'comment': '# Request admin context', 'include_SATD': False}, {'start_line': 1246, 'end_line': 1247, 'comment': '# The following assert will fail if either of the asserts in # fake_get_all() fail', 'include_SATD': False}, {'start_line': 1276, 'end_line': 1276, 'comment': '# Request admin context', 'include_SATD': False}, {'start_line': 1280, 'end_line': 1281, 'comment': '# The following assert will fail if either of the asserts in # fake_get_all() fail', 'include_SATD': False}, {'start_line': 1309, 'end_line': 1309, 'comment': '# Request admin context', 'include_SATD': False}, {'start_line': 1313, 'end_line': 1314, 'comment': '# The following assert will fail if either of the asserts in # fake_get_all() fail', 'include_SATD': False}, {'start_line': 1335, 'end_line': 1335, 'comment': '# Request admin context', 'include_SATD': False}, {'start_line': 1339, 'end_line': 1340, 'comment': '# The following assert will fail if either of the asserts in # fake_get_all() fail', 'include_SATD': False}, {'start_line': 1361, 'end_line': 1361, 'comment': '# Request admin context', 'include_SATD': False}, {'start_line': 1365, 'end_line': 1366, 'comment': '# The following assert will fail if either of the asserts in # fake_get_all() fail', 'include_SATD': False}, {'start_line': 2212, 'end_line': 2212, 'comment': ""        '''"", 'include_SATD': False}, {'start_line': 2217, 'end_line': 2217, 'comment': ""        '''"", 'include_SATD': False}, {'start_line': 2904, 'end_line': 2904, 'comment': '#!/bin/bash\\necho ""Hello, World!""\\n\'', 'include_SATD': False}, {'start_line': 2914, 'end_line': 2914, 'comment': '#!/bin/bash\\necho ""Hello, World!""\\n\'', 'include_SATD': False}, {'start_line': 2968, 'end_line': 2968, 'comment': '#!/bin/bash\\necho ""Oh no!""\\n\'', 'include_SATD': False}], 'b_comments': [{'start_line': 1329, 'end_line': 1329, 'comment': ""        '''"", 'include_SATD': False}, {'start_line': 1334, 'end_line': 1334, 'comment': ""        '''"", 'include_SATD': False}], 'filename': 'nova/tests/api/openstack/test_servers.py'}]}]",1,3,0,MERGED,True,https://review.opendev.org/#/c/909,Refactoring nova.tests.api.openstack.test_servers,True,{},False,{},False,{}
343,930,"[{'revision': 1, 'changed_files': []}]",1,1,0,MERGED,True,https://review.opendev.org/#/c/930,Point tools/rfc.sh at the right branch,False,{},False,{},False,{}
344,914,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/network/quantum/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 219, 'end_line': 221, 'comment': ""# There isn't a good way of figuring out what the ipam # tenant id should be before hand so we have to try both # (project_id and None)."", 'include_SATD': True}, {'start_line': 308, 'end_line': 309, 'comment': '# Figure out which ipam tenant id we need here, either the project # id or None (which corresponds to the provider address space).', 'include_SATD': False}, {'start_line': 336, 'end_line': 337, 'comment': '# TODO(bgh): At some point we should figure out whether or # not we want the verify_subnet_exists call to be optional.', 'include_SATD': True}], 'filename': 'nova/network/quantum/manager.py'}, {'a_comments': [{'start_line': 141, 'end_line': 145, 'comment': '# FIXME(danwent):  Melange actually returns the subnet info # when we query for a particular interface.  We may want to # rework the ipam_manager python API to let us take advantage of # this, as right now we have to get all blocks and cycle through # them.', 'include_SATD': True}], 'b_comments': [{'start_line': 187, 'end_line': 190, 'comment': '# TODO(bgh): Would be nice if we could just do something like: # GET /ipam/tenants/{tenant_id}/networks/{network_id}/ instead # of searching through all the blocks.  Checking for a 404 # will then determine whether it exists.', 'include_SATD': True}], 'filename': 'nova/network/quantum/melange_ipam_lib.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/quantum/nova_ipam_lib.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/quantum/quantum_connection.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quantum.py'}]}]",1,3,7,ABANDONED,False,https://review.opendev.org/#/c/914,Fix quantum/melange ipam interaction,True,"{""# There isn't a good way of figuring out what the ipam # tenant id should be before hand so we have to try both # (project_id and None)."": 1, '# TODO(bgh): At some point we should figure out whether or # not we want the verify_subnet_exists call to be optional.': 1, '# TODO(bgh): Would be nice if we could just do something like: # GET /ipam/tenants/{tenant_id}/networks/{network_id}/ instead # of searching through all the blocks.  Checking for a 404 # will then determine whether it exists.': 1}",True,"{'# FIXME(danwent):  Melange actually returns the subnet info # when we query for a particular interface.  We may want to # rework the ipam_manager python API to let us take advantage of # this, as right now we have to get all blocks and cycle through # them.': 1}",True,{}
345,917,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 285, 'end_line': 285, 'comment': '# And then we add a floating-snat chain and jump to first thing in', 'include_SATD': False}], 'b_comments': [{'start_line': 285, 'end_line': 285, 'comment': '# And then we add a float-snat chain and jump to first thing in', 'include_SATD': False}], 'filename': 'nova/network/linux_net.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [{'start_line': 285, 'end_line': 285, 'comment': '# And then we add a floating-snat chain and jump to first thing in', 'include_SATD': False}], 'b_comments': [{'start_line': 285, 'end_line': 285, 'comment': '# And then we add a float-snat chain and jump to first thing in', 'include_SATD': False}], 'filename': 'nova/network/linux_net.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [{'start_line': 285, 'end_line': 285, 'comment': '# And then we add a floating-snat chain and jump to first thing in', 'include_SATD': False}], 'b_comments': [{'start_line': 285, 'end_line': 285, 'comment': '# And then we add a float-snat chain and jump to first thing in', 'include_SATD': False}], 'filename': 'nova/network/linux_net.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [{'start_line': 285, 'end_line': 285, 'comment': '# And then we add a floating-snat chain and jump to first thing in', 'include_SATD': False}], 'b_comments': [{'start_line': 285, 'end_line': 285, 'comment': '# And then we add a float-snat chain and jump to first thing in', 'include_SATD': False}], 'filename': 'nova/network/linux_net.py'}]}, {'revision': 5, 'changed_files': [{'a_comments': [{'start_line': 285, 'end_line': 285, 'comment': '# And then we add a floating-snat chain and jump to first thing in', 'include_SATD': False}], 'b_comments': [{'start_line': 285, 'end_line': 285, 'comment': '# And then we add a float-snat chain and jump to first thing in', 'include_SATD': False}], 'filename': 'nova/network/linux_net.py'}]}, {'revision': 6, 'changed_files': [{'a_comments': [{'start_line': 285, 'end_line': 285, 'comment': '# And then we add a floating-snat chain and jump to first thing in', 'include_SATD': False}], 'b_comments': [{'start_line': 285, 'end_line': 285, 'comment': '# And then we add a float-snat chain and jump to first thing in', 'include_SATD': False}], 'filename': 'nova/network/linux_net.py'}]}, {'revision': 7, 'changed_files': [{'a_comments': [{'start_line': 285, 'end_line': 285, 'comment': '# And then we add a floating-snat chain and jump to first thing in', 'include_SATD': False}], 'b_comments': [{'start_line': 285, 'end_line': 285, 'comment': '# And then we add a float-snat chain and jump to first thing in', 'include_SATD': False}], 'filename': 'nova/network/linux_net.py'}]}]",7,15,0,MERGED,True,https://review.opendev.org/#/c/917,Change floating-snat to float-snat,True,{},False,{},False,{}
346,933,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/network/linux_net.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_linux_net.py'}]}]",1,4,0,MERGED,True,https://review.opendev.org/#/c/933,Makes sure to recreate gateway for moved ip,True,{},False,{},False,{}
347,934,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/linux_net.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_metadata.py'}]}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/934,put fully qualified domain name in local-hostname,True,{},False,{},False,{}
348,935,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 2833, 'end_line': 2833, 'comment': '# TODO(vish): Join to group and check for project_id', 'include_SATD': True}], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}]}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/935,Fix the grantee group loading for source groups,True,{},False,{'# TODO(vish): Join to group and check for project_id': 1},True,{}
349,936,"[{'revision': 1, 'changed_files': []}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/936,Call endheaders when auth_token is None. Fixes bug 856721.,False,{},False,{},False,{}
350,927,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/network/api.py'}, {'a_comments': [{'start_line': 78, 'end_line': 78, 'comment': '# NOTE(vish): set up a manual wait so rpc.cast has a chance to finish', 'include_SATD': False}, {'start_line': 1299, 'end_line': 1300, 'comment': '# NOTE(vish): Wait for InstanceNotFound, then verify that #             the instance is actually deleted.', 'include_SATD': False}], 'b_comments': [{'start_line': 52, 'end_line': 52, 'comment': ""# Fake ajax proxy service, so that an 'rpc.call' will work."", 'include_SATD': False}, {'start_line': 90, 'end_line': 91, 'comment': ""# NOTE(comstud): Make 'cast' behave like a 'call' which will # ensure that operations complete"", 'include_SATD': False}], 'filename': 'nova/tests/api/ec2/test_cloud.py'}]}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/927,Fix EC2 test_cloud timing issues,True,{},False,{},False,{}
351,897,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 1597, 'end_line': 1597, 'comment': '####################', 'include_SATD': False}, {'start_line': 1630, 'end_line': 1630, 'comment': '####################', 'include_SATD': False}, {'start_line': 1658, 'end_line': 1658, 'comment': '####################', 'include_SATD': False}], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 4010, 'end_line': 4010, 'comment': '####################', 'include_SATD': False}, {'start_line': 4067, 'end_line': 4067, 'comment': '####################', 'include_SATD': False}, {'start_line': 4116, 'end_line': 4116, 'comment': '###############################', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 12, 'comment': '# Copyright (c) 2011 Citrix Systems, Inc. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 22, 'end_line': 25, 'comment': '# Table stub-definitions # Just for the ForeignKey and column creation to succeed, these are not the # actual definitions of instances or services. #', 'include_SATD': False}, {'start_line': 30, 'end_line': 32, 'comment': '# # New Tables #', 'include_SATD': False}, {'start_line': 82, 'end_line': 84, 'comment': '# # Tables to alter #', 'include_SATD': False}, {'start_line': 86, 'end_line': 86, 'comment': '# (none currently)', 'include_SATD': False}, {'start_line': 90, 'end_line': 91, 'comment': ""# Upgrade operations go here. Don't create your own engine; # bind migrate_engine to your metadata"", 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/055_add_sm_driver_tables.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migration.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [{'start_line': 386, 'end_line': 386, 'comment': '# make forgotten = 0 and return ref', 'include_SATD': False}, {'start_line': 390, 'end_line': 390, 'comment': '# SR not found in db, so we create one', 'include_SATD': False}, {'start_line': 398, 'end_line': 398, 'comment': '# Just to be clear', 'include_SATD': False}, {'start_line': 401, 'end_line': 402, 'comment': '# we need to create a vdi because this introduce # is likely meant for a single vdi', 'include_SATD': False}], 'filename': 'nova/virt/xenapi/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}, {'a_comments': [], 'b_comments': [{'start_line': 103, 'end_line': 103, 'comment': '#Create pbd', 'include_SATD': False}, {'start_line': 107, 'end_line': 107, 'comment': '#Plug pbd', 'include_SATD': False}, {'start_line': 262, 'end_line': 262, 'comment': '# We do not need to introduce the vdi', 'include_SATD': False}], 'filename': 'nova/virt/xenapi/volume_utils.py'}, {'a_comments': [{'start_line': 54, 'end_line': 55, 'comment': '# Create the iSCSI SR, and the PDB through which hosts access SRs. # But first, retrieve target info, like Host, IQN, LUN and SCSIID', 'include_SATD': False}, {'start_line': 59, 'end_line': 59, 'comment': '# Create SR', 'include_SATD': False}, {'start_line': 125, 'end_line': 125, 'comment': '# Forget SR', 'include_SATD': False}], 'b_comments': [{'start_line': 51, 'end_line': 51, 'comment': '#Create VDI', 'include_SATD': False}, {'start_line': 53, 'end_line': 53, 'comment': '# size presented to xenapi is in bytes, while euca api is in GB', 'include_SATD': False}, {'start_line': 82, 'end_line': 82, 'comment': '# Checks if sr has already been introduced to this host', 'include_SATD': False}, {'start_line': 102, 'end_line': 102, 'comment': '# Checks if sr has been introduced', 'include_SATD': False}, {'start_line': 150, 'end_line': 150, 'comment': '# Introduce SR', 'include_SATD': False}, {'start_line': 227, 'end_line': 227, 'comment': '# Forget SR only if no other volumes on this host are using it', 'include_SATD': False}], 'filename': 'nova/virt/xenapi/volumeops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 12, 'comment': '# Copyright (c) 2011 Citrix Systems, Inc. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 56, 'end_line': 56, 'comment': '# run the sr create command', 'include_SATD': False}, {'start_line': 61, 'end_line': 61, 'comment': '# update sr_uuid and created in db', 'include_SATD': False}, {'start_line': 77, 'end_line': 77, 'comment': '# sr introduce, if not already done', 'include_SATD': False}, {'start_line': 100, 'end_line': 101, 'comment': '# This driver leverages Xen storage manager, and hence requires # hypervisor to be Xen', 'include_SATD': False}, {'start_line': 123, 'end_line': 123, 'comment': '# TODO purge storage repos', 'include_SATD': True}, {'start_line': 131, 'end_line': 133, 'comment': '# For now the scheduling logic will be to try to fit the volume in # the first available backend. # TODO better scheduling once APIs are in place', 'include_SATD': True}, {'start_line': 137, 'end_line': 140, 'comment': '# Ensure that storage repo exists, if not create. # This needs to be done because if nova compute and # volume are both running on this host, then, as a # part of detach_volume, compute could potentially forget SR', 'include_SATD': False}, {'start_line': 151, 'end_line': 151, 'comment': '# Update db', 'include_SATD': False}, {'start_line': 168, 'end_line': 168, 'comment': '# If compute runs on this node, detach could have disconnected SR', 'include_SATD': False}, {'start_line': 198, 'end_line': 198, 'comment': '# !!! TODO', 'include_SATD': True}], 'filename': 'nova/volume/xensm.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 1592, 'end_line': 1592, 'comment': '####################', 'include_SATD': False}, {'start_line': 1625, 'end_line': 1625, 'comment': '####################', 'include_SATD': False}, {'start_line': 1653, 'end_line': 1653, 'comment': '####################', 'include_SATD': False}], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 4005, 'end_line': 4005, 'comment': '####################', 'include_SATD': False}, {'start_line': 4062, 'end_line': 4062, 'comment': '####################', 'include_SATD': False}, {'start_line': 4111, 'end_line': 4111, 'comment': '###############################', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 12, 'comment': '# Copyright (c) 2011 Citrix Systems, Inc. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 22, 'end_line': 25, 'comment': '# Table stub-definitions # Just for the ForeignKey and column creation to succeed, these are not the # actual definitions of instances or services. #', 'include_SATD': False}, {'start_line': 30, 'end_line': 32, 'comment': '# # New Tables #', 'include_SATD': False}, {'start_line': 82, 'end_line': 84, 'comment': '# # Tables to alter #', 'include_SATD': False}, {'start_line': 86, 'end_line': 86, 'comment': '# (none currently)', 'include_SATD': False}, {'start_line': 90, 'end_line': 91, 'comment': ""# Upgrade operations go here. Don't create your own engine; # bind migrate_engine to your metadata"", 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/055_add_sm_driver_tables.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migration.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [{'start_line': 386, 'end_line': 386, 'comment': '# make forgotten = 0 and return ref', 'include_SATD': False}, {'start_line': 390, 'end_line': 390, 'comment': '# SR not found in db, so we create one', 'include_SATD': False}, {'start_line': 398, 'end_line': 398, 'comment': '# Just to be clear', 'include_SATD': False}, {'start_line': 401, 'end_line': 402, 'comment': '# we need to create a vdi because this introduce # is likely meant for a single vdi', 'include_SATD': False}], 'filename': 'nova/virt/xenapi/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}, {'a_comments': [], 'b_comments': [{'start_line': 104, 'end_line': 104, 'comment': '#Create pbd', 'include_SATD': False}, {'start_line': 108, 'end_line': 108, 'comment': '#Plug pbd', 'include_SATD': False}, {'start_line': 262, 'end_line': 262, 'comment': '# We do not need to introduce the vdi', 'include_SATD': False}], 'filename': 'nova/virt/xenapi/volume_utils.py'}, {'a_comments': [{'start_line': 54, 'end_line': 55, 'comment': '# Create the iSCSI SR, and the PDB through which hosts access SRs. # But first, retrieve target info, like Host, IQN, LUN and SCSIID', 'include_SATD': False}, {'start_line': 59, 'end_line': 59, 'comment': '# Create SR', 'include_SATD': False}, {'start_line': 125, 'end_line': 125, 'comment': '# Forget SR', 'include_SATD': False}], 'b_comments': [{'start_line': 51, 'end_line': 51, 'comment': '#Create VDI', 'include_SATD': False}, {'start_line': 53, 'end_line': 53, 'comment': '# size presented to xenapi is in bytes, while euca api is in GB', 'include_SATD': False}, {'start_line': 82, 'end_line': 82, 'comment': '# Checks if sr has already been introduced to this host', 'include_SATD': False}, {'start_line': 102, 'end_line': 102, 'comment': '# Checks if sr has been introduced', 'include_SATD': False}, {'start_line': 150, 'end_line': 150, 'comment': '# Introduce SR', 'include_SATD': False}, {'start_line': 227, 'end_line': 227, 'comment': '# Forget SR only if no other volumes on this host are using it', 'include_SATD': False}], 'filename': 'nova/virt/xenapi/volumeops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 12, 'comment': '# Copyright (c) 2011 Citrix Systems, Inc. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 56, 'end_line': 56, 'comment': '# run the sr create command', 'include_SATD': False}, {'start_line': 61, 'end_line': 61, 'comment': '# update sr_uuid and created in db', 'include_SATD': False}, {'start_line': 77, 'end_line': 77, 'comment': '# sr introduce, if not already done', 'include_SATD': False}, {'start_line': 100, 'end_line': 101, 'comment': '# This driver leverages Xen storage manager, and hence requires # hypervisor to be Xen', 'include_SATD': False}, {'start_line': 123, 'end_line': 123, 'comment': '# TODO purge storage repos', 'include_SATD': True}, {'start_line': 131, 'end_line': 133, 'comment': '# For now the scheduling logic will be to try to fit the volume in # the first available backend. # TODO better scheduling once APIs are in place', 'include_SATD': True}, {'start_line': 137, 'end_line': 140, 'comment': '# Ensure that storage repo exists, if not create. # This needs to be done because if nova compute and # volume are both running on this host, then, as a # part of detach_volume, compute could potentially forget SR', 'include_SATD': False}, {'start_line': 151, 'end_line': 151, 'comment': '# Update db', 'include_SATD': False}, {'start_line': 168, 'end_line': 168, 'comment': '# If compute runs on this node, detach could have disconnected SR', 'include_SATD': False}, {'start_line': 198, 'end_line': 198, 'comment': '# !!! TODO', 'include_SATD': True}], 'filename': 'nova/volume/xensm.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 1592, 'end_line': 1592, 'comment': '####################', 'include_SATD': False}, {'start_line': 1625, 'end_line': 1625, 'comment': '####################', 'include_SATD': False}, {'start_line': 1653, 'end_line': 1653, 'comment': '####################', 'include_SATD': False}], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 4005, 'end_line': 4005, 'comment': '####################', 'include_SATD': False}, {'start_line': 4062, 'end_line': 4062, 'comment': '####################', 'include_SATD': False}, {'start_line': 4111, 'end_line': 4111, 'comment': '###############################', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 12, 'comment': '# Copyright (c) 2011 Citrix Systems, Inc. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 22, 'end_line': 25, 'comment': '# Table stub-definitions # Just for the ForeignKey and column creation to succeed, these are not the # actual definitions of instances or services. #', 'include_SATD': False}, {'start_line': 30, 'end_line': 32, 'comment': '# # New Tables #', 'include_SATD': False}, {'start_line': 82, 'end_line': 84, 'comment': '# # Tables to alter #', 'include_SATD': False}, {'start_line': 86, 'end_line': 86, 'comment': '# (none currently)', 'include_SATD': False}, {'start_line': 90, 'end_line': 91, 'comment': ""# Upgrade operations go here. Don't create your own engine; # bind migrate_engine to your metadata"", 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/055_add_sm_driver_tables.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/migration.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [{'start_line': 386, 'end_line': 386, 'comment': '# make forgotten = 0 and return ref', 'include_SATD': False}, {'start_line': 390, 'end_line': 390, 'comment': '# SR not found in db, so we create one', 'include_SATD': False}, {'start_line': 398, 'end_line': 398, 'comment': '# Just to be clear', 'include_SATD': False}, {'start_line': 401, 'end_line': 402, 'comment': '# we need to create a vdi because this introduce # is likely meant for a single vdi', 'include_SATD': False}], 'filename': 'nova/virt/xenapi/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}, {'a_comments': [], 'b_comments': [{'start_line': 104, 'end_line': 104, 'comment': '#Create pbd', 'include_SATD': False}, {'start_line': 108, 'end_line': 108, 'comment': '#Plug pbd', 'include_SATD': False}, {'start_line': 262, 'end_line': 262, 'comment': '# We do not need to introduce the vdi', 'include_SATD': False}], 'filename': 'nova/virt/xenapi/volume_utils.py'}, {'a_comments': [{'start_line': 54, 'end_line': 55, 'comment': '# Create the iSCSI SR, and the PDB through which hosts access SRs. # But first, retrieve target info, like Host, IQN, LUN and SCSIID', 'include_SATD': False}, {'start_line': 59, 'end_line': 59, 'comment': '# Create SR', 'include_SATD': False}, {'start_line': 125, 'end_line': 125, 'comment': '# Forget SR', 'include_SATD': False}], 'b_comments': [{'start_line': 51, 'end_line': 51, 'comment': '#Create VDI', 'include_SATD': False}, {'start_line': 53, 'end_line': 53, 'comment': '# size presented to xenapi is in bytes, while euca api is in GB', 'include_SATD': False}, {'start_line': 82, 'end_line': 82, 'comment': '# Checks if sr has already been introduced to this host', 'include_SATD': False}, {'start_line': 102, 'end_line': 102, 'comment': '# Checks if sr has been introduced', 'include_SATD': False}, {'start_line': 150, 'end_line': 150, 'comment': '# Introduce SR', 'include_SATD': False}, {'start_line': 227, 'end_line': 227, 'comment': '# Forget SR only if no other volumes on this host are using it', 'include_SATD': False}], 'filename': 'nova/virt/xenapi/volumeops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 12, 'comment': '# Copyright (c) 2011 Citrix Systems, Inc. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 56, 'end_line': 56, 'comment': '# run the sr create command', 'include_SATD': False}, {'start_line': 61, 'end_line': 61, 'comment': '# update sr_uuid and created in db', 'include_SATD': False}, {'start_line': 77, 'end_line': 77, 'comment': '# sr introduce, if not already done', 'include_SATD': False}, {'start_line': 100, 'end_line': 101, 'comment': '# This driver leverages Xen storage manager, and hence requires # hypervisor to be Xen', 'include_SATD': False}, {'start_line': 123, 'end_line': 123, 'comment': '# TODO purge storage repos', 'include_SATD': True}, {'start_line': 131, 'end_line': 133, 'comment': '# For now the scheduling logic will be to try to fit the volume in # the first available backend. # TODO better scheduling once APIs are in place', 'include_SATD': True}, {'start_line': 137, 'end_line': 140, 'comment': '# Ensure that storage repo exists, if not create. # This needs to be done because if nova compute and # volume are both running on this host, then, as a # part of detach_volume, compute could potentially forget SR', 'include_SATD': False}, {'start_line': 151, 'end_line': 151, 'comment': '# Update db', 'include_SATD': False}, {'start_line': 168, 'end_line': 168, 'comment': '# If compute runs on this node, detach could have disconnected SR', 'include_SATD': False}, {'start_line': 198, 'end_line': 198, 'comment': '# !!! TODO', 'include_SATD': True}], 'filename': 'nova/volume/xensm.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 1597, 'end_line': 1597, 'comment': '####################', 'include_SATD': False}, {'start_line': 1630, 'end_line': 1630, 'comment': '####################', 'include_SATD': False}, {'start_line': 1658, 'end_line': 1658, 'comment': '####################', 'include_SATD': False}], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 4019, 'end_line': 4019, 'comment': '####################', 'include_SATD': False}, {'start_line': 4076, 'end_line': 4076, 'comment': '####################', 'include_SATD': False}, {'start_line': 4125, 'end_line': 4125, 'comment': '###############################', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 12, 'comment': '# Copyright (c) 2011 Citrix Systems, Inc. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 22, 'end_line': 25, 'comment': '# Table stub-definitions # Just for the ForeignKey and column creation to succeed, these are not the # actual definitions of instances or services. #', 'include_SATD': False}, {'start_line': 30, 'end_line': 32, 'comment': '# # New Tables #', 'include_SATD': False}, {'start_line': 82, 'end_line': 84, 'comment': '# # Tables to alter #', 'include_SATD': False}, {'start_line': 86, 'end_line': 86, 'comment': '# (none currently)', 'include_SATD': False}, {'start_line': 90, 'end_line': 91, 'comment': ""# Upgrade operations go here. Don't create your own engine; # bind migrate_engine to your metadata"", 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/056_add_sm_driver_tables.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [{'start_line': 386, 'end_line': 386, 'comment': '# make forgotten = 0 and return ref', 'include_SATD': False}, {'start_line': 390, 'end_line': 390, 'comment': '# SR not found in db, so we create one', 'include_SATD': False}, {'start_line': 398, 'end_line': 398, 'comment': '# Just to be clear', 'include_SATD': False}, {'start_line': 401, 'end_line': 402, 'comment': '# we need to create a vdi because this introduce # is likely meant for a single vdi', 'include_SATD': False}], 'filename': 'nova/virt/xenapi/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}, {'a_comments': [], 'b_comments': [{'start_line': 104, 'end_line': 104, 'comment': '#Create pbd', 'include_SATD': False}, {'start_line': 108, 'end_line': 108, 'comment': '#Plug pbd', 'include_SATD': False}, {'start_line': 262, 'end_line': 262, 'comment': '# We do not need to introduce the vdi', 'include_SATD': False}], 'filename': 'nova/virt/xenapi/volume_utils.py'}, {'a_comments': [{'start_line': 54, 'end_line': 55, 'comment': '# Create the iSCSI SR, and the PDB through which hosts access SRs. # But first, retrieve target info, like Host, IQN, LUN and SCSIID', 'include_SATD': False}, {'start_line': 59, 'end_line': 59, 'comment': '# Create SR', 'include_SATD': False}, {'start_line': 125, 'end_line': 125, 'comment': '# Forget SR', 'include_SATD': False}], 'b_comments': [{'start_line': 51, 'end_line': 51, 'comment': '#Create VDI', 'include_SATD': False}, {'start_line': 53, 'end_line': 53, 'comment': '# size presented to xenapi is in bytes, while euca api is in GB', 'include_SATD': False}, {'start_line': 82, 'end_line': 82, 'comment': '# Checks if sr has already been introduced to this host', 'include_SATD': False}, {'start_line': 102, 'end_line': 102, 'comment': '# Checks if sr has been introduced', 'include_SATD': False}, {'start_line': 153, 'end_line': 153, 'comment': '# Introduce SR', 'include_SATD': False}, {'start_line': 230, 'end_line': 230, 'comment': '# Forget SR only if no other volumes on this host are using it', 'include_SATD': False}], 'filename': 'nova/virt/xenapi/volumeops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 12, 'comment': '# Copyright (c) 2011 Citrix Systems, Inc. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 56, 'end_line': 56, 'comment': '# run the sr create command', 'include_SATD': False}, {'start_line': 61, 'end_line': 61, 'comment': '# update sr_uuid and created in db', 'include_SATD': False}, {'start_line': 77, 'end_line': 77, 'comment': '# sr introduce, if not already done', 'include_SATD': False}, {'start_line': 100, 'end_line': 101, 'comment': '# This driver leverages Xen storage manager, and hence requires # hypervisor to be Xen', 'include_SATD': False}, {'start_line': 123, 'end_line': 123, 'comment': '# TODO purge storage repos', 'include_SATD': True}, {'start_line': 131, 'end_line': 133, 'comment': '# For now the scheduling logic will be to try to fit the volume in # the first available backend. # TODO better scheduling once APIs are in place', 'include_SATD': True}, {'start_line': 137, 'end_line': 140, 'comment': '# Ensure that storage repo exists, if not create. # This needs to be done because if nova compute and # volume are both running on this host, then, as a # part of detach_volume, compute could potentially forget SR', 'include_SATD': False}, {'start_line': 151, 'end_line': 151, 'comment': '# Update db', 'include_SATD': False}, {'start_line': 168, 'end_line': 168, 'comment': '# If compute runs on this node, detach could have disconnected SR', 'include_SATD': False}, {'start_line': 198, 'end_line': 198, 'comment': '# !!! TODO', 'include_SATD': True}], 'filename': 'nova/volume/xensm.py'}]}, {'revision': 5, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 1615, 'end_line': 1615, 'comment': '####################', 'include_SATD': False}, {'start_line': 1648, 'end_line': 1648, 'comment': '####################', 'include_SATD': False}, {'start_line': 1676, 'end_line': 1676, 'comment': '####################', 'include_SATD': False}], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 4060, 'end_line': 4060, 'comment': '####################', 'include_SATD': False}, {'start_line': 4117, 'end_line': 4117, 'comment': '####################', 'include_SATD': False}, {'start_line': 4166, 'end_line': 4166, 'comment': '###############################', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 12, 'comment': '# Copyright (c) 2011 Citrix Systems, Inc. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 22, 'end_line': 25, 'comment': '# Table stub-definitions # Just for the ForeignKey and column creation to succeed, these are not the # actual definitions of instances or services. #', 'include_SATD': False}, {'start_line': 30, 'end_line': 32, 'comment': '# # New Tables #', 'include_SATD': False}, {'start_line': 82, 'end_line': 84, 'comment': '# # Tables to alter #', 'include_SATD': False}, {'start_line': 86, 'end_line': 86, 'comment': '# (none currently)', 'include_SATD': False}, {'start_line': 90, 'end_line': 91, 'comment': ""# Upgrade operations go here. Don't create your own engine; # bind migrate_engine to your metadata"", 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/057_add_sm_driver_tables.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [{'start_line': 386, 'end_line': 386, 'comment': '# make forgotten = 0 and return ref', 'include_SATD': False}, {'start_line': 390, 'end_line': 390, 'comment': '# SR not found in db, so we create one', 'include_SATD': False}, {'start_line': 398, 'end_line': 398, 'comment': '# Just to be clear', 'include_SATD': False}, {'start_line': 401, 'end_line': 402, 'comment': '# we need to create a vdi because this introduce # is likely meant for a single vdi', 'include_SATD': False}], 'filename': 'nova/virt/xenapi/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}, {'a_comments': [], 'b_comments': [{'start_line': 104, 'end_line': 104, 'comment': '#Create pbd', 'include_SATD': False}, {'start_line': 108, 'end_line': 108, 'comment': '#Plug pbd', 'include_SATD': False}, {'start_line': 262, 'end_line': 262, 'comment': '# We do not need to introduce the vdi', 'include_SATD': False}], 'filename': 'nova/virt/xenapi/volume_utils.py'}, {'a_comments': [{'start_line': 54, 'end_line': 55, 'comment': '# Create the iSCSI SR, and the PDB through which hosts access SRs. # But first, retrieve target info, like Host, IQN, LUN and SCSIID', 'include_SATD': False}, {'start_line': 59, 'end_line': 59, 'comment': '# Create SR', 'include_SATD': False}, {'start_line': 125, 'end_line': 125, 'comment': '# Forget SR', 'include_SATD': False}], 'b_comments': [{'start_line': 51, 'end_line': 51, 'comment': '#Create VDI', 'include_SATD': False}, {'start_line': 53, 'end_line': 53, 'comment': '# size presented to xenapi is in bytes, while euca api is in GB', 'include_SATD': False}, {'start_line': 82, 'end_line': 82, 'comment': '# Checks if sr has already been introduced to this host', 'include_SATD': False}, {'start_line': 102, 'end_line': 102, 'comment': '# Checks if sr has been introduced', 'include_SATD': False}, {'start_line': 153, 'end_line': 153, 'comment': '# Introduce SR', 'include_SATD': False}, {'start_line': 230, 'end_line': 230, 'comment': '# Forget SR only if no other volumes on this host are using it', 'include_SATD': False}], 'filename': 'nova/virt/xenapi/volumeops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 12, 'comment': '# Copyright (c) 2011 Citrix Systems, Inc. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 56, 'end_line': 56, 'comment': '# run the sr create command', 'include_SATD': False}, {'start_line': 61, 'end_line': 61, 'comment': '# update sr_uuid and created in db', 'include_SATD': False}, {'start_line': 77, 'end_line': 77, 'comment': '# sr introduce, if not already done', 'include_SATD': False}, {'start_line': 100, 'end_line': 101, 'comment': '# This driver leverages Xen storage manager, and hence requires # hypervisor to be Xen', 'include_SATD': False}, {'start_line': 123, 'end_line': 123, 'comment': '# TODO purge storage repos', 'include_SATD': True}, {'start_line': 131, 'end_line': 133, 'comment': '# For now the scheduling logic will be to try to fit the volume in # the first available backend. # TODO better scheduling once APIs are in place', 'include_SATD': True}, {'start_line': 137, 'end_line': 140, 'comment': '# Ensure that storage repo exists, if not create. # This needs to be done because if nova compute and # volume are both running on this host, then, as a # part of detach_volume, compute could potentially forget SR', 'include_SATD': False}, {'start_line': 151, 'end_line': 151, 'comment': '# Update db', 'include_SATD': False}, {'start_line': 168, 'end_line': 168, 'comment': '# If compute runs on this node, detach could have disconnected SR', 'include_SATD': False}, {'start_line': 198, 'end_line': 198, 'comment': '# !!! TODO', 'include_SATD': True}], 'filename': 'nova/volume/xensm.py'}]}, {'revision': 6, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 1620, 'end_line': 1620, 'comment': '####################', 'include_SATD': False}, {'start_line': 1653, 'end_line': 1653, 'comment': '####################', 'include_SATD': False}, {'start_line': 1681, 'end_line': 1681, 'comment': '####################', 'include_SATD': False}], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 4071, 'end_line': 4071, 'comment': '####################', 'include_SATD': False}, {'start_line': 4128, 'end_line': 4128, 'comment': '####################', 'include_SATD': False}, {'start_line': 4177, 'end_line': 4177, 'comment': '###############################', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 12, 'comment': '# Copyright (c) 2011 Citrix Systems, Inc. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 22, 'end_line': 25, 'comment': '# Table stub-definitions # Just for the ForeignKey and column creation to succeed, these are not the # actual definitions of instances or services. #', 'include_SATD': False}, {'start_line': 30, 'end_line': 32, 'comment': '# # New Tables #', 'include_SATD': False}, {'start_line': 82, 'end_line': 84, 'comment': '# # Tables to alter #', 'include_SATD': False}, {'start_line': 86, 'end_line': 86, 'comment': '# (none currently)', 'include_SATD': False}, {'start_line': 90, 'end_line': 91, 'comment': ""# Upgrade operations go here. Don't create your own engine; # bind migrate_engine to your metadata"", 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/057_add_sm_driver_tables.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [{'start_line': 386, 'end_line': 386, 'comment': '# make forgotten = 0 and return ref', 'include_SATD': False}, {'start_line': 390, 'end_line': 390, 'comment': '# SR not found in db, so we create one', 'include_SATD': False}, {'start_line': 398, 'end_line': 398, 'comment': '# Just to be clear', 'include_SATD': False}, {'start_line': 401, 'end_line': 402, 'comment': '# we need to create a vdi because this introduce # is likely meant for a single vdi', 'include_SATD': False}], 'filename': 'nova/virt/xenapi/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vm_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}, {'a_comments': [], 'b_comments': [{'start_line': 104, 'end_line': 104, 'comment': '#Create pbd', 'include_SATD': False}, {'start_line': 108, 'end_line': 108, 'comment': '#Plug pbd', 'include_SATD': False}, {'start_line': 262, 'end_line': 262, 'comment': '# We do not need to introduce the vdi', 'include_SATD': False}], 'filename': 'nova/virt/xenapi/volume_utils.py'}, {'a_comments': [{'start_line': 54, 'end_line': 55, 'comment': '# Create the iSCSI SR, and the PDB through which hosts access SRs. # But first, retrieve target info, like Host, IQN, LUN and SCSIID', 'include_SATD': False}, {'start_line': 59, 'end_line': 59, 'comment': '# Create SR', 'include_SATD': False}, {'start_line': 125, 'end_line': 125, 'comment': '# Forget SR', 'include_SATD': False}], 'b_comments': [{'start_line': 51, 'end_line': 51, 'comment': '#Create VDI', 'include_SATD': False}, {'start_line': 53, 'end_line': 53, 'comment': '# size presented to xenapi is in bytes, while euca api is in GB', 'include_SATD': False}, {'start_line': 82, 'end_line': 82, 'comment': '# Checks if sr has already been introduced to this host', 'include_SATD': False}, {'start_line': 102, 'end_line': 102, 'comment': '# Checks if sr has been introduced', 'include_SATD': False}, {'start_line': 153, 'end_line': 153, 'comment': '# Introduce SR', 'include_SATD': False}, {'start_line': 230, 'end_line': 230, 'comment': '# Forget SR only if no other volumes on this host are using it', 'include_SATD': False}], 'filename': 'nova/virt/xenapi/volumeops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/driver.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/volume/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 12, 'comment': '# Copyright (c) 2011 Citrix Systems, Inc. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 56, 'end_line': 56, 'comment': '# run the sr create command', 'include_SATD': False}, {'start_line': 61, 'end_line': 61, 'comment': '# update sr_uuid and created in db', 'include_SATD': False}, {'start_line': 77, 'end_line': 77, 'comment': '# sr introduce, if not already done', 'include_SATD': False}, {'start_line': 100, 'end_line': 101, 'comment': '# This driver leverages Xen storage manager, and hence requires # hypervisor to be Xen', 'include_SATD': False}, {'start_line': 123, 'end_line': 123, 'comment': '# TODO purge storage repos', 'include_SATD': True}, {'start_line': 131, 'end_line': 133, 'comment': '# For now the scheduling logic will be to try to fit the volume in # the first available backend. # TODO better scheduling once APIs are in place', 'include_SATD': True}, {'start_line': 137, 'end_line': 140, 'comment': '# Ensure that storage repo exists, if not create. # This needs to be done because if nova compute and # volume are both running on this host, then, as a # part of detach_volume, compute could potentially forget SR', 'include_SATD': False}, {'start_line': 151, 'end_line': 151, 'comment': '# Update db', 'include_SATD': False}, {'start_line': 168, 'end_line': 168, 'comment': '# If compute runs on this node, detach could have disconnected SR', 'include_SATD': False}, {'start_line': 198, 'end_line': 198, 'comment': '# !!! TODO', 'include_SATD': True}, {'start_line': 217, 'end_line': 217, 'comment': '# Keep the volume id key consistent with what ISCSI driver calls it', 'include_SATD': False}], 'filename': 'nova/volume/xensm.py'}]}]",6,20,12,MERGED,True,https://review.opendev.org/#/c/897,Xen Storage Manager Volume Driver,True,"{'# TODO purge storage repos': 1, '# For now the scheduling logic will be to try to fit the volume in # the first available backend. # TODO better scheduling once APIs are in place': 1, '# !!! TODO': 1}",True,{},False,{}
352,938,"[{'revision': 1, 'changed_files': []}, {'revision': 2, 'changed_files': []}]",2,5,1,MERGED,True,https://review.opendev.org/#/c/938,Add documentation for Swift Recon.,False,{},False,{},False,{}
353,940,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/__init__.py'}]}]",1,3,0,MERGED,True,https://review.opendev.org/#/c/940,Don't leak exceptions out to users,True,{},False,{},False,{}
354,929,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'quantum/api/networks.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/api/ports.py'}, {'a_comments': [{'start_line': 296, 'end_line': 296, 'comment': '# Response has no body. Use data for populating output', 'include_SATD': False}], 'b_comments': [{'start_line': 302, 'end_line': 302, 'comment': '# Response has no body. Use data for populating output', 'include_SATD': False}], 'filename': 'quantum/cli_lib.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/db/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/SamplePlugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/openvswitch/ovs_quantum_plugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/quantum_plugin_base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'tests/unit/database_stubs.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'tests/unit/test_cli.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'tests/unit/test_clientlib.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'tests/unit/test_database.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'quantum/api/networks.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/api/ports.py'}, {'a_comments': [{'start_line': 296, 'end_line': 296, 'comment': '# Response has no body. Use data for populating output', 'include_SATD': False}], 'b_comments': [{'start_line': 302, 'end_line': 302, 'comment': '# Response has no body. Use data for populating output', 'include_SATD': False}], 'filename': 'quantum/cli_lib.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/db/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/SamplePlugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/db/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/l2device_inventory_base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/l2device_plugin_base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/l2network_model_base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/l2network_plugin.py'}, {'a_comments': [], 'b_comments': [{'start_line': 99, 'end_line': 99, 'comment': '# If the last param is a dict, add it to kwargs', 'include_SATD': False}], 'filename': 'quantum/plugins/cisco/models/l2network_multi_blade.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/nexus/cisco_nexus_plugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/tests/unit/test_database.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/tests/unit/test_l2networkApi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/tests/unit/test_l2network_multi_blade.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/tests/unit/test_nexus_plugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/tests/unit/test_ucs_inventory.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/ucs/cisco_ucs_inventory.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/ucs/cisco_ucs_plugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/openvswitch/ovs_quantum_plugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/quantum_plugin_base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'tests/unit/database_stubs.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'tests/unit/test_cli.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'tests/unit/test_clientlib.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'tests/unit/test_database.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'quantum/api/networks.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/api/ports.py'}, {'a_comments': [{'start_line': 296, 'end_line': 296, 'comment': '# Response has no body. Use data for populating output', 'include_SATD': False}], 'b_comments': [{'start_line': 302, 'end_line': 302, 'comment': '# Response has no body. Use data for populating output', 'include_SATD': False}], 'filename': 'quantum/cli_lib.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/db/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/SamplePlugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/db/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/l2device_inventory_base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/l2device_plugin_base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/l2network_model_base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/l2network_plugin.py'}, {'a_comments': [], 'b_comments': [{'start_line': 99, 'end_line': 99, 'comment': '# If the last param is a dict, add it to kwargs', 'include_SATD': False}], 'filename': 'quantum/plugins/cisco/models/l2network_multi_blade.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/nexus/cisco_nexus_plugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/tests/unit/test_database.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/tests/unit/test_l2networkApi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/tests/unit/test_l2network_multi_blade.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/tests/unit/test_nexus_plugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/tests/unit/test_ucs_inventory.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/ucs/cisco_ucs_inventory.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/ucs/cisco_ucs_plugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/openvswitch/ovs_quantum_plugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/quantum_plugin_base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'tests/unit/database_stubs.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'tests/unit/test_cli.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'tests/unit/test_clientlib.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'tests/unit/test_database.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'quantum/api/networks.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/api/ports.py'}, {'a_comments': [{'start_line': 296, 'end_line': 296, 'comment': '# Response has no body. Use data for populating output', 'include_SATD': False}], 'b_comments': [{'start_line': 302, 'end_line': 302, 'comment': '# Response has no body. Use data for populating output', 'include_SATD': False}], 'filename': 'quantum/cli_lib.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/db/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/SamplePlugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/db/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/l2device_inventory_base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/l2device_plugin_base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/l2network_model_base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/l2network_plugin.py'}, {'a_comments': [], 'b_comments': [{'start_line': 99, 'end_line': 99, 'comment': '# If the last param is a dict, add it to kwargs', 'include_SATD': False}], 'filename': 'quantum/plugins/cisco/models/l2network_multi_blade.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/nexus/cisco_nexus_plugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/tests/unit/test_database.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/tests/unit/test_l2networkApi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/tests/unit/test_l2network_multi_blade.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/tests/unit/test_nexus_plugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/tests/unit/test_ucs_inventory.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/ucs/cisco_ucs_inventory.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/cisco/ucs/cisco_ucs_plugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/plugins/openvswitch/ovs_quantum_plugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'quantum/quantum_plugin_base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'tests/unit/database_stubs.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'tests/unit/test_cli.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'tests/unit/test_clientlib.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'tests/unit/test_database.py'}]}, {'revision': 5, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'client/lib/quantum/cli.py'}, {'a_comments': [{'start_line': 296, 'end_line': 296, 'comment': '# Response has no body. Use data for populating output', 'include_SATD': False}], 'b_comments': [{'start_line': 302, 'end_line': 302, 'comment': '# Response has no body. Use data for populating output', 'include_SATD': False}], 'filename': 'client/lib/quantum/cli_lib.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'client/lib/quantum/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'client/lib/quantum/tests/unit/test_clientlib.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/plugins/cisco/db/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/plugins/cisco/l2device_inventory_base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/plugins/cisco/l2device_plugin_base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/plugins/cisco/l2network_model_base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/plugins/cisco/l2network_plugin.py'}, {'a_comments': [], 'b_comments': [{'start_line': 92, 'end_line': 92, 'comment': '# If the last param is a dict, add it to kwargs', 'include_SATD': False}], 'filename': 'plugins/cisco-plugin/lib/quantum/plugins/cisco/models/l2network_single_blade.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/plugins/cisco/nexus/cisco_nexus_plugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/plugins/cisco/ucs/cisco_ucs_inventory.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/plugins/cisco/ucs/cisco_ucs_plugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/tests/unit/test_database.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/tests/unit/test_l2networkApi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/tests/unit/test_l2network_multi_blade.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/tests/unit/test_nexus_plugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/tests/unit/test_ucs_inventory.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/openvswitch-plugin/lib/quantum/plugins/openvswitch/ovs_quantum_plugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/sample-plugin/lib/quantum/plugins/SamplePlugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'server/lib/quantum/api/networks.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'server/lib/quantum/api/ports.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'server/lib/quantum/db/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'server/lib/quantum/quantum_plugin_base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'server/lib/quantum/tests/unit/database_stubs.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'server/lib/quantum/tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'server/lib/quantum/tests/unit/test_cli.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'server/lib/quantum/tests/unit/test_database.py'}]}, {'revision': 6, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'client/lib/quantum/cli.py'}, {'a_comments': [{'start_line': 296, 'end_line': 296, 'comment': '# Response has no body. Use data for populating output', 'include_SATD': False}], 'b_comments': [{'start_line': 302, 'end_line': 302, 'comment': '# Response has no body. Use data for populating output', 'include_SATD': False}], 'filename': 'client/lib/quantum/cli_lib.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'client/lib/quantum/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'client/lib/quantum/tests/unit/test_clientlib.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/plugins/cisco/db/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/plugins/cisco/l2device_inventory_base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/plugins/cisco/l2device_plugin_base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/plugins/cisco/l2network_model_base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/plugins/cisco/l2network_plugin.py'}, {'a_comments': [], 'b_comments': [{'start_line': 99, 'end_line': 99, 'comment': '# If the last param is a dict, add it to kwargs', 'include_SATD': False}], 'filename': 'plugins/cisco-plugin/lib/quantum/plugins/cisco/models/l2network_multi_blade.py'}, {'a_comments': [], 'b_comments': [{'start_line': 92, 'end_line': 92, 'comment': '# If the last param is a dict, add it to kwargs', 'include_SATD': False}], 'filename': 'plugins/cisco-plugin/lib/quantum/plugins/cisco/models/l2network_single_blade.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/plugins/cisco/nexus/cisco_nexus_plugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/plugins/cisco/ucs/cisco_ucs_inventory.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/plugins/cisco/ucs/cisco_ucs_plugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/tests/unit/test_database.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/tests/unit/test_l2networkApi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/tests/unit/test_l2network_multi_blade.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/tests/unit/test_nexus_plugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/tests/unit/test_ucs_inventory.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/openvswitch-plugin/lib/quantum/plugins/openvswitch/ovs_quantum_plugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/sample-plugin/lib/quantum/plugins/SamplePlugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'server/lib/quantum/api/networks.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'server/lib/quantum/api/ports.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'server/lib/quantum/db/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'server/lib/quantum/quantum_plugin_base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'server/lib/quantum/tests/unit/database_stubs.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'server/lib/quantum/tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'server/lib/quantum/tests/unit/test_cli.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'server/lib/quantum/tests/unit/test_database.py'}]}, {'revision': 7, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'client/lib/quantum/cli.py'}, {'a_comments': [{'start_line': 296, 'end_line': 296, 'comment': '# Response has no body. Use data for populating output', 'include_SATD': False}], 'b_comments': [{'start_line': 302, 'end_line': 302, 'comment': '# Response has no body. Use data for populating output', 'include_SATD': False}], 'filename': 'client/lib/quantum/cli_lib.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'client/lib/quantum/client.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'client/lib/quantum/tests/unit/test_clientlib.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/plugins/cisco/db/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/plugins/cisco/l2device_inventory_base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/plugins/cisco/l2device_plugin_base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/plugins/cisco/l2network_model_base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/plugins/cisco/l2network_plugin.py'}, {'a_comments': [], 'b_comments': [{'start_line': 99, 'end_line': 99, 'comment': '# If the last param is a dict, add it to kwargs', 'include_SATD': False}], 'filename': 'plugins/cisco-plugin/lib/quantum/plugins/cisco/models/l2network_multi_blade.py'}, {'a_comments': [], 'b_comments': [{'start_line': 92, 'end_line': 92, 'comment': '# If the last param is a dict, add it to kwargs', 'include_SATD': False}], 'filename': 'plugins/cisco-plugin/lib/quantum/plugins/cisco/models/l2network_single_blade.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/plugins/cisco/nexus/cisco_nexus_plugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/plugins/cisco/ucs/cisco_ucs_inventory.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/plugins/cisco/ucs/cisco_ucs_plugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/tests/unit/test_database.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/tests/unit/test_l2networkApi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/tests/unit/test_l2network_multi_blade.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/tests/unit/test_nexus_plugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/cisco-plugin/lib/quantum/tests/unit/test_ucs_inventory.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/openvswitch-plugin/lib/quantum/plugins/openvswitch/ovs_quantum_plugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'plugins/sample-plugin/lib/quantum/plugins/SamplePlugin.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'server/lib/quantum/api/networks.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'server/lib/quantum/api/ports.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'server/lib/quantum/db/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'server/lib/quantum/quantum_plugin_base.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'server/lib/quantum/tests/unit/database_stubs.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'server/lib/quantum/tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'server/lib/quantum/tests/unit/test_cli.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'server/lib/quantum/tests/unit/test_database.py'}]}]",7,17,0,MERGED,True,https://review.opendev.org/#/c/929,"Swich over to update_{net,port} instead of rename_net and set_port_state",True,{},False,{},False,{}
355,944,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_db_api.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_db_api.py'}]}]",3,8,0,MERGED,True,https://review.opendev.org/#/c/944,Fix lp:861160 -- newly created network has no uuid,True,{},False,{},False,{}
356,950,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/950,Catch exception when there are no fixed ips for an instance when deallocating it.,True,{},False,{},False,{}
357,923,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 87, 'end_line': 88, 'comment': ""# Make sure we're not already prefetching or caching the image # that just generated the miss"", 'include_SATD': False}, {'start_line': 98, 'end_line': 100, 'comment': ""# NOTE(sirp): If we're about to download and cache an # image which is currently in the prefetch queue, just # delete the queue items since we're caching it anyway"", 'include_SATD': False}, {'start_line': 123, 'end_line': 124, 'comment': ""# Make sure we're not already prefetching or caching the image # that just generated the miss"", 'include_SATD': False}, {'start_line': 135, 'end_line': 138, 'comment': ""# TODO(jaypipes): This is so incredibly wasteful, but because # the image cache needs the image's name, we have to do this. # In the next iteration, remove the image cache's need for # any attribute other than the id..."", 'include_SATD': True}], 'filename': 'glance/api/middleware/cache.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/api/middleware/cache_manage.py'}, {'a_comments': [{'start_line': 239, 'end_line': 239, 'comment': '# hit', 'include_SATD': False}, {'start_line': 243, 'end_line': 243, 'comment': '# miss', 'include_SATD': False}, {'start_line': 246, 'end_line': 247, 'comment': ""# Make sure we're not already prefetching or caching the image # that just generated the miss"", 'include_SATD': False}, {'start_line': 257, 'end_line': 259, 'comment': ""# NOTE(sirp): If we're about to download and cache an # image which is currently in the prefetch queue, just # delete the queue items since we're caching it anyway"", 'include_SATD': False}, {'start_line': 267, 'end_line': 267, 'comment': '# disabled', 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 217, 'end_line': 217, 'comment': '# bump the hit count', 'include_SATD': False}], 'filename': 'glance/image_cache/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 176, 'end_line': 176, 'comment': '# Set to cache for cache middleware', 'include_SATD': False}], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 54, 'end_line': 54, 'comment': '# Verify no image 1', 'include_SATD': False}, {'start_line': 60, 'end_line': 60, 'comment': '# Add an image and verify a 200 OK is returned', 'include_SATD': False}, {'start_line': 77, 'end_line': 77, 'comment': '# Verify image not in cache', 'include_SATD': False}, {'start_line': 82, 'end_line': 82, 'comment': '# Grab the image', 'include_SATD': False}, {'start_line': 88, 'end_line': 88, 'comment': '# Verify image now in cache', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_image_cache.py'}, {'a_comments': [], 'b_comments': [{'start_line': 236, 'end_line': 236, 'comment': '# httplib.Response has a read() method...fake it out', 'include_SATD': False}], 'filename': 'glance/tests/stubs.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 80, 'end_line': 80, 'comment': ""#1'}"", 'include_SATD': False}, {'start_line': 97, 'end_line': 97, 'comment': ""# We do this to trigger tee'ing the file"", 'include_SATD': False}, {'start_line': 102, 'end_line': 103, 'comment': '# Now verify that the next call to GET /images/1 # yields the image from the cache...', 'include_SATD': False}, {'start_line': 110, 'end_line': 110, 'comment': '# We do this to trigger a hit read', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_cache_middleware.py'}, {'a_comments': [], 'b_comments': [{'start_line': 197, 'end_line': 198, 'comment': '# Test that an exception is raised if we try to queue the # same image for prefetching', 'include_SATD': False}, {'start_line': 206, 'end_line': 207, 'comment': '# Test that an exception is raised if we try to queue for # prefetching an image that has already been cached', 'include_SATD': False}, {'start_line': 219, 'end_line': 220, 'comment': ""# We can't prefetch an image that has not been queued # for prefetching"", 'include_SATD': False}], 'filename': 'glance/tests/unit/test_image_cache.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/utils.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 87, 'end_line': 88, 'comment': ""# Make sure we're not already prefetching or caching the image # that just generated the miss"", 'include_SATD': False}, {'start_line': 98, 'end_line': 100, 'comment': ""# NOTE(sirp): If we're about to download and cache an # image which is currently in the prefetch queue, just # delete the queue items since we're caching it anyway"", 'include_SATD': False}, {'start_line': 123, 'end_line': 124, 'comment': ""# Make sure we're not already prefetching or caching the image # that just generated the miss"", 'include_SATD': False}, {'start_line': 135, 'end_line': 138, 'comment': ""# TODO(jaypipes): This is so incredibly wasteful, but because # the image cache needs the image's name, we have to do this. # In the next iteration, remove the image cache's need for # any attribute other than the id..."", 'include_SATD': True}], 'filename': 'glance/api/middleware/cache.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/api/middleware/cache_manage.py'}, {'a_comments': [{'start_line': 239, 'end_line': 239, 'comment': '# hit', 'include_SATD': False}, {'start_line': 243, 'end_line': 243, 'comment': '# miss', 'include_SATD': False}, {'start_line': 246, 'end_line': 247, 'comment': ""# Make sure we're not already prefetching or caching the image # that just generated the miss"", 'include_SATD': False}, {'start_line': 257, 'end_line': 259, 'comment': ""# NOTE(sirp): If we're about to download and cache an # image which is currently in the prefetch queue, just # delete the queue items since we're caching it anyway"", 'include_SATD': False}, {'start_line': 267, 'end_line': 267, 'comment': '# disabled', 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 217, 'end_line': 217, 'comment': '# bump the hit count', 'include_SATD': False}], 'filename': 'glance/image_cache/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 176, 'end_line': 176, 'comment': '# Set to cache for cache middleware', 'include_SATD': False}], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 54, 'end_line': 54, 'comment': '# Verify no image 1', 'include_SATD': False}, {'start_line': 60, 'end_line': 60, 'comment': '# Add an image and verify a 200 OK is returned', 'include_SATD': False}, {'start_line': 77, 'end_line': 77, 'comment': '# Verify image not in cache', 'include_SATD': False}, {'start_line': 82, 'end_line': 82, 'comment': '# Grab the image', 'include_SATD': False}, {'start_line': 88, 'end_line': 88, 'comment': '# Verify image now in cache', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_image_cache.py'}, {'a_comments': [], 'b_comments': [{'start_line': 236, 'end_line': 236, 'comment': '# httplib.Response has a read() method...fake it out', 'include_SATD': False}], 'filename': 'glance/tests/stubs.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 80, 'end_line': 80, 'comment': ""#1'}"", 'include_SATD': False}, {'start_line': 97, 'end_line': 97, 'comment': ""# We do this to trigger tee'ing the file"", 'include_SATD': False}, {'start_line': 102, 'end_line': 103, 'comment': '# Now verify that the next call to GET /images/1 # yields the image from the cache...', 'include_SATD': False}, {'start_line': 110, 'end_line': 110, 'comment': '# We do this to trigger a hit read', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_cache_middleware.py'}, {'a_comments': [], 'b_comments': [{'start_line': 197, 'end_line': 198, 'comment': '# Test that an exception is raised if we try to queue the # same image for prefetching', 'include_SATD': False}, {'start_line': 206, 'end_line': 207, 'comment': '# Test that an exception is raised if we try to queue for # prefetching an image that has already been cached', 'include_SATD': False}, {'start_line': 219, 'end_line': 220, 'comment': ""# We can't prefetch an image that has not been queued # for prefetching"", 'include_SATD': False}], 'filename': 'glance/tests/unit/test_image_cache.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/utils.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 87, 'end_line': 88, 'comment': ""# Make sure we're not already prefetching or caching the image # that just generated the miss"", 'include_SATD': False}, {'start_line': 98, 'end_line': 100, 'comment': ""# NOTE(sirp): If we're about to download and cache an # image which is currently in the prefetch queue, just # delete the queue items since we're caching it anyway"", 'include_SATD': False}, {'start_line': 123, 'end_line': 124, 'comment': ""# Make sure we're not already prefetching or caching the image # that just generated the miss"", 'include_SATD': False}, {'start_line': 135, 'end_line': 138, 'comment': ""# TODO(jaypipes): This is so incredibly wasteful, but because # the image cache needs the image's name, we have to do this. # In the next iteration, remove the image cache's need for # any attribute other than the id..."", 'include_SATD': True}], 'filename': 'glance/api/middleware/cache.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/api/middleware/cache_manage.py'}, {'a_comments': [{'start_line': 239, 'end_line': 239, 'comment': '# hit', 'include_SATD': False}, {'start_line': 243, 'end_line': 243, 'comment': '# miss', 'include_SATD': False}, {'start_line': 246, 'end_line': 247, 'comment': ""# Make sure we're not already prefetching or caching the image # that just generated the miss"", 'include_SATD': False}, {'start_line': 257, 'end_line': 259, 'comment': ""# NOTE(sirp): If we're about to download and cache an # image which is currently in the prefetch queue, just # delete the queue items since we're caching it anyway"", 'include_SATD': False}, {'start_line': 267, 'end_line': 267, 'comment': '# disabled', 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 217, 'end_line': 217, 'comment': '# bump the hit count', 'include_SATD': False}], 'filename': 'glance/image_cache/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 176, 'end_line': 176, 'comment': '# Set to cache for cache middleware', 'include_SATD': False}], 'filename': 'glance/tests/functional/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 54, 'end_line': 54, 'comment': '# Verify no image 1', 'include_SATD': False}, {'start_line': 60, 'end_line': 60, 'comment': '# Add an image and verify a 200 OK is returned', 'include_SATD': False}, {'start_line': 77, 'end_line': 77, 'comment': '# Verify image not in cache', 'include_SATD': False}, {'start_line': 82, 'end_line': 82, 'comment': '# Grab the image', 'include_SATD': False}, {'start_line': 88, 'end_line': 88, 'comment': '# Verify image now in cache', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_image_cache.py'}, {'a_comments': [], 'b_comments': [{'start_line': 236, 'end_line': 236, 'comment': '# httplib.Response has a read() method...fake it out', 'include_SATD': False}], 'filename': 'glance/tests/stubs.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack, LLC # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}, {'start_line': 80, 'end_line': 80, 'comment': ""#1'}"", 'include_SATD': False}, {'start_line': 97, 'end_line': 97, 'comment': ""# We do this to trigger tee'ing the file"", 'include_SATD': False}, {'start_line': 102, 'end_line': 103, 'comment': '# Now verify that the next call to GET /images/1 # yields the image from the cache...', 'include_SATD': False}, {'start_line': 110, 'end_line': 110, 'comment': '# We do this to trigger a hit read', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_cache_middleware.py'}, {'a_comments': [], 'b_comments': [{'start_line': 197, 'end_line': 198, 'comment': '# Test that an exception is raised if we try to queue the # same image for prefetching', 'include_SATD': False}, {'start_line': 206, 'end_line': 207, 'comment': '# Test that an exception is raised if we try to queue for # prefetching an image that has already been cached', 'include_SATD': False}, {'start_line': 219, 'end_line': 220, 'comment': ""# We can't prefetch an image that has not been queued # for prefetching"", 'include_SATD': False}], 'filename': 'glance/tests/unit/test_image_cache.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/utils.py'}]}]",3,9,6,MERGED,True,https://review.opendev.org/#/c/923,Overhauls the image cache to be truly optional,True,"{""# TODO(jaypipes): This is so incredibly wasteful, but because # the image cache needs the image's name, we have to do this. # In the next iteration, remove the image cache's need for # any attribute other than the id..."": 1}",True,{},False,{}
358,951,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/connection.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/951,Indent domain removal to only be ran when it is not None.,True,{},False,{},False,{}
359,953,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}]}]",1,5,0,MERGED,True,https://review.opendev.org/#/c/953,Raise InsufficientFreeMemory,True,{},False,{},False,{}
360,954,"[{'revision': 1, 'changed_files': []}, {'revision': 2, 'changed_files': []}]",2,7,0,MERGED,True,https://review.opendev.org/#/c/954,Make snapshots private by default,False,{},False,{},False,{}
361,955,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_compute.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/exception.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_compute.py'}]}]",2,7,0,MERGED,True,https://review.opendev.org/#/c/955,Snapshots/backups can no longer happen simultaneously. Tests included.,True,{},False,{},False,{}
362,937,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 75, 'end_line': 75, 'comment': ""# MySQLdb won't accept 'None' in the password field"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/session.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}]}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/937,Removed db_pool complexities from nova.db.sqlalchemy.session. Fixes bug 838581.,True,{},False,{},False,{}
363,959,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/xenapi/stubs.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/xenapi/stubs.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}]}]",2,6,0,MERGED,True,https://review.opendev.org/#/c/959,bug lp845714,True,{},False,{},False,{}
364,960,"[{'revision': 1, 'changed_files': []}, {'revision': 2, 'changed_files': []}]",2,6,0,MERGED,True,https://review.opendev.org/#/c/960,Added ==1.0.4 version specifier to kombu in pip-requires to ensure tests pass in a clean venv.,False,{},False,{},False,{}
365,946,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'swift/proxy/server.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'swift/proxy/server.py'}, {'a_comments': [{'start_line': 889, 'end_line': 889, 'comment': '# extra slash', 'include_SATD': False}], 'b_comments': [{'start_line': 804, 'end_line': 804, 'comment': '# makes sure to test encoded characters""', 'include_SATD': False}], 'filename': 'test/functional/tests.py'}]}]",2,4,0,MERGED,True,https://review.opendev.org/#/c/946,requote the source when doing a COPY,True,{},False,{},False,{}
366,941,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/api/v1/members.py'}, {'a_comments': [], 'b_comments': [{'start_line': 48, 'end_line': 49, 'comment': '#Services #2 Service Name:swift Type:object-store', 'include_SATD': False}, {'start_line': 54, 'end_line': 54, 'comment': '#3 Service Name:cdn Type:object-store', 'include_SATD': False}, {'start_line': 57, 'end_line': 57, 'comment': '#4 Service Name:nova Type:compute', 'include_SATD': False}, {'start_line': 64, 'end_line': 64, 'comment': '#5 Service Name:nova_compat Type:Compute', 'include_SATD': False}, {'start_line': 67, 'end_line': 67, 'comment': '#6 Service Name:glance Type:image', 'include_SATD': False}, {'start_line': 72, 'end_line': 72, 'comment': '#7 Service Name:keystone Type:identity', 'include_SATD': False}], 'filename': 'glance/tests/functional/data/keystone_data.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/keystone_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_private_images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_shared_images.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/api/v1/members.py'}, {'a_comments': [], 'b_comments': [{'start_line': 48, 'end_line': 49, 'comment': '#Services #2 Service Name:swift Type:object-store', 'include_SATD': False}, {'start_line': 54, 'end_line': 54, 'comment': '#3 Service Name:cdn Type:object-store', 'include_SATD': False}, {'start_line': 57, 'end_line': 57, 'comment': '#4 Service Name:nova Type:compute', 'include_SATD': False}, {'start_line': 64, 'end_line': 64, 'comment': '#5 Service Name:nova_compat Type:Compute', 'include_SATD': False}, {'start_line': 67, 'end_line': 67, 'comment': '#6 Service Name:glance Type:image', 'include_SATD': False}, {'start_line': 72, 'end_line': 72, 'comment': '#7 Service Name:keystone Type:identity', 'include_SATD': False}], 'filename': 'glance/tests/functional/data/keystone_data.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/keystone_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_private_images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_shared_images.py'}]}]",2,5,1,MERGED,True,https://review.opendev.org/#/c/941,Fixing functional tests that require keystone,True,{},False,{},False,{}
367,961,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/db/api.py'}]}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/961,Remove dead DB API call.,True,{},False,{},False,{}
368,962,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}]}, {'revision': 5, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}]}, {'revision': 6, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/xenapi/stubs.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}]}, {'revision': 7, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_xenapi.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/xenapi/stubs.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi/vmops.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/xenapi_conn.py'}]}]",7,30,8,MERGED,True,https://review.opendev.org/#/c/962,Fixes LP878319,True,{},False,{},False,{}
369,966,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/966,Catch exception when there are no fixed ips for an instance when deallocating it.,True,{},False,{},False,{}
370,957,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 56, 'end_line': 56, 'comment': '# Make sure if there are compute hosts to serve the request.', 'include_SATD': False}], 'filename': 'nova/scheduler/base_scheduler.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 56, 'end_line': 56, 'comment': '# Make sure if there are compute hosts to serve the request.', 'include_SATD': False}], 'filename': 'nova/scheduler/base_scheduler.py'}]}]",2,8,0,MERGED,True,https://review.opendev.org/#/c/957,bug 861310,True,{},False,{},False,{}
371,956,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_libvirt.py'}, {'a_comments': [{'start_line': 1724, 'end_line': 1724, 'comment': '# Get image type and create empty disk image.', 'include_SATD': False}], 'b_comments': [{'start_line': 1724, 'end_line': 1725, 'comment': '# Get image type and create empty disk image, and # create backing file in case of qcow2.', 'include_SATD': False}, {'start_line': 1732, 'end_line': 1732, 'comment': '# Creating backing file follows same way as spawning instances.', 'include_SATD': True}], 'filename': 'nova/virt/libvirt/connection.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_libvirt.py'}, {'a_comments': [{'start_line': 1724, 'end_line': 1724, 'comment': '# Get image type and create empty disk image.', 'include_SATD': False}], 'b_comments': [{'start_line': 1724, 'end_line': 1725, 'comment': '# Get image type and create empty disk image, and # create backing file in case of qcow2.', 'include_SATD': False}, {'start_line': 1732, 'end_line': 1732, 'comment': '# Creating backing file follows same way as spawning instances.', 'include_SATD': True}], 'filename': 'nova/virt/libvirt/connection.py'}]}]",2,6,0,MERGED,True,https://review.opendev.org/#/c/956,Fixed bug lp850602. Adding backing file copy operation on kvm block migration.,True,{'# Creating backing file follows same way as spawning instances.': 1},True,{},False,{}
372,958,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 460, 'end_line': 460, 'comment': '# Upload that image to the image service', 'include_SATD': False}, {'start_line': 467, 'end_line': 467, 'comment': '# Clean up', 'include_SATD': False}], 'b_comments': [{'start_line': 461, 'end_line': 461, 'comment': '# Upload that image to the image service', 'include_SATD': False}, {'start_line': 469, 'end_line': 469, 'comment': '# Clean up', 'include_SATD': False}], 'filename': 'nova/virt/libvirt/connection.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [{'start_line': 460, 'end_line': 460, 'comment': '# Upload that image to the image service', 'include_SATD': False}, {'start_line': 467, 'end_line': 467, 'comment': '# Clean up', 'include_SATD': False}], 'b_comments': [{'start_line': 461, 'end_line': 461, 'comment': '# Upload that image to the image service', 'include_SATD': False}, {'start_line': 469, 'end_line': 469, 'comment': '# Clean up', 'include_SATD': False}], 'filename': 'nova/virt/libvirt/connection.py'}]}]",2,6,0,MERGED,True,https://review.opendev.org/#/c/958,Enforce snapshot cleanup.,True,{},False,{},False,{}
373,971,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/network/quantum/manager.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/971,Make sure networks returned from get_instance_nw_info have a label,True,{},False,{},False,{}
374,916,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 641, 'end_line': 642, 'comment': '# Using symlinks can cause problems here so just compare the name # of the file itself', 'include_SATD': False}, {'start_line': 1003, 'end_line': 1003, 'comment': ""# Don't forward traffic unless we were told to be a gateway"", 'include_SATD': False}, {'start_line': 1041, 'end_line': 1042, 'comment': ""# If we weren't instructed to act as a gateway then add the # appropriate flows to block all non-dhcp traffic."", 'include_SATD': False}], 'filename': 'nova/network/linux_net.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}, {'a_comments': [{'start_line': 108, 'end_line': 111, 'comment': ""# TODO(bgh): The project_id isn't getting populated here for some # reason.. I'm not sure if it's an invalid assumption or just a bug. # In order to get the right quantum_net_id we'll have to query all the # project_ids for now."", 'include_SATD': True}, {'start_line': 231, 'end_line': 233, 'comment': ""# There isn't a good way of figuring out what the ipam # tenant id should be before hand so we have to try both # (project_id and None)."", 'include_SATD': True}, {'start_line': 320, 'end_line': 321, 'comment': '# Figure out which ipam tenant id we need here, either the project # id or None (which corresponds to the provider address space).', 'include_SATD': False}], 'b_comments': [{'start_line': 75, 'end_line': 78, 'comment': ""# TODO(bgh): We'll need to enable these when we implement the full L3 # functionalities # self.driver.ensure_metadata_ip() # self.driver.metadata_forward()"", 'include_SATD': True}, {'start_line': 168, 'end_line': 170, 'comment': ""# Quantum may also know about networks that aren't in the networks # table so we need to query Quanutm for any tenant networks and add # them to net_proj_pairs."", 'include_SATD': False}, {'start_line': 190, 'end_line': 191, 'comment': ""# We may not be able to get a network_ref here if this network # isn't in the database (i.e. it came from Quantum)."", 'include_SATD': False}, {'start_line': 198, 'end_line': 207, 'comment': ""# NOTE(bgh): We need to document this somewhere but since # we don't know the priority of any networks we get from # quantum we just give them a priority of 0.  If its # necessary to specify the order of the vifs and what # network they map to then the user will have to use the # OSCreateServer extension and specify them explicitly. # # In the future users will be able to tag quantum networks # with a priority .. and at that point we can update the # code here to reflect that."", 'include_SATD': False}, {'start_line': 219, 'end_line': 219, 'comment': '# Tell melange to allocate an IP', 'include_SATD': False}, {'start_line': 222, 'end_line': 222, 'comment': '# Set up/start the dhcp server for this network if necessary', 'include_SATD': False}, {'start_line': 232, 'end_line': 234, 'comment': '# Figure out the ipam tenant id for this subnet:  We need to # query for the tenant_id since the network could be created # with the project_id as the tenant or the default tenant.', 'include_SATD': False}, {'start_line': 237, 'end_line': 237, 'comment': '# Figure out what subnets correspond to this network', 'include_SATD': False}, {'start_line': 240, 'end_line': 241, 'comment': '# Set up (or find) the dhcp server for each of the subnets # returned above (both v4 and v6).', 'include_SATD': False}, {'start_line': 245, 'end_line': 247, 'comment': ""# Fill in some of the network fields that we would have # previously gotten from the network table (they'll be # passed to the linux_net functions)."", 'include_SATD': False}, {'start_line': 251, 'end_line': 251, 'comment': '# TODO(bgh): Melange should probably track dhcp_start', 'include_SATD': True}, {'start_line': 257, 'end_line': 257, 'comment': ""# Construct the interface id that we'll use for the bridge"", 'include_SATD': False}, {'start_line': 260, 'end_line': 264, 'comment': ""# Query quantum to see if we've already created a port for # the gateway device and attached the device to the port. # If we haven't then we need to intiialize it and create # it.  This device will be the one serving dhcp via # dnsmasq."", 'include_SATD': False}, {'start_line': 268, 'end_line': 268, 'comment': '# No dhcp server has been started', 'include_SATD': False}, {'start_line': 277, 'end_line': 277, 'comment': ""# We've already got one and its plugged in"", 'include_SATD': False}, {'start_line': 413, 'end_line': 414, 'comment': '# If DHCP is enabled on this network then we need to update the # leases and restart the server.', 'include_SATD': False}, {'start_line': 425, 'end_line': 426, 'comment': '# TODO(bgh): At some point we should consider merging enable_dhcp() and # update_dhcp()', 'include_SATD': True}, {'start_line': 429, 'end_line': 429, 'comment': '# Figure out what subnet corresponds to this network/vif', 'include_SATD': False}, {'start_line': 435, 'end_line': 437, 'comment': ""# Fill in some of the network fields that we would have # previously gotten from the network table (they'll be # passed to the linux_net functions)."", 'include_SATD': False}, {'start_line': 445, 'end_line': 445, 'comment': '# And remove the dhcp mappings for the subnet', 'include_SATD': False}, {'start_line': 449, 'end_line': 449, 'comment': '# Restart dnsmasq', 'include_SATD': False}, {'start_line': 453, 'end_line': 454, 'comment': '# TODO(bgh): if this is the last instance for the network # then we should actually just kill the dhcp server.', 'include_SATD': True}, {'start_line': 475, 'end_line': 479, 'comment': ""# NOTE(bgh): deallocate_for_instance will take care of this..  The reason # we're providing this is so that NetworkManager::release_fixed_ip() isn't # called.  It does some database operations that we don't want to happen # and since the majority of the stuff that it does is already taken care # of in our deallocate_for_instance call we don't need to do anything."", 'include_SATD': True}], 'filename': 'nova/network/quantum/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 139, 'end_line': 140, 'comment': '# TODO(bgh): This request fails if you add the "".json"" to the end so # it has to call do_request itself.  Melange bug?', 'include_SATD': True}], 'filename': 'nova/network/quantum/melange_connection.py'}, {'a_comments': [], 'b_comments': [{'start_line': 158, 'end_line': 160, 'comment': '# TODO(bgh): Rename this method .. it\'s now more of a # ""get_subnets_by_net_id_and_vif_id"" method, but we could probably just # call it ""get_subnets"".', 'include_SATD': True}], 'filename': 'nova/network/quantum/melange_ipam_lib.py'}, {'a_comments': [], 'b_comments': [{'start_line': 210, 'end_line': 210, 'comment': '# Get all allocated IPs that are part of this subnet', 'include_SATD': False}, {'start_line': 213, 'end_line': 213, 'comment': '# Skip unallocated IPs', 'include_SATD': False}], 'filename': 'nova/network/quantum/nova_ipam_lib.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/quantum/quantum_connection.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_network.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_nova_manage.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quantum.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 641, 'end_line': 642, 'comment': '# Using symlinks can cause problems here so just compare the name # of the file itself', 'include_SATD': False}, {'start_line': 1003, 'end_line': 1003, 'comment': ""# Don't forward traffic unless we were told to be a gateway"", 'include_SATD': False}, {'start_line': 1041, 'end_line': 1042, 'comment': ""# If we weren't instructed to act as a gateway then add the # appropriate flows to block all non-dhcp traffic."", 'include_SATD': False}], 'filename': 'nova/network/linux_net.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/quantum/client.py'}, {'a_comments': [{'start_line': 111, 'end_line': 114, 'comment': ""# TODO(bgh): The project_id isn't getting populated here for some # reason.. I'm not sure if it's an invalid assumption or just a bug. # In order to get the right quantum_net_id we'll have to query all the # project_ids for now."", 'include_SATD': True}], 'b_comments': [{'start_line': 75, 'end_line': 78, 'comment': ""# TODO(bgh): We'll need to enable these when we implement the full L3 # functionalities # self.driver.ensure_metadata_ip() # self.driver.metadata_forward()"", 'include_SATD': True}, {'start_line': 171, 'end_line': 173, 'comment': ""# Quantum may also know about networks that aren't in the networks # table so we need to query Quanutm for any tenant networks and add # them to net_proj_pairs."", 'include_SATD': False}, {'start_line': 193, 'end_line': 194, 'comment': ""# We may not be able to get a network_ref here if this network # isn't in the database (i.e. it came from Quantum)."", 'include_SATD': False}, {'start_line': 201, 'end_line': 210, 'comment': ""# NOTE(bgh): We need to document this somewhere but since # we don't know the priority of any networks we get from # quantum we just give them a priority of 0.  If its # necessary to specify the order of the vifs and what # network they map to then the user will have to use the # OSCreateServer extension and specify them explicitly. # # In the future users will be able to tag quantum networks # with a priority .. and at that point we can update the # code here to reflect that."", 'include_SATD': False}, {'start_line': 222, 'end_line': 222, 'comment': '# Tell melange to allocate an IP', 'include_SATD': False}, {'start_line': 225, 'end_line': 225, 'comment': '# Set up/start the dhcp server for this network if necessary', 'include_SATD': False}, {'start_line': 235, 'end_line': 237, 'comment': '# Figure out the ipam tenant id for this subnet:  We need to # query for the tenant_id since the network could be created # with the project_id as the tenant or the default tenant.', 'include_SATD': False}, {'start_line': 240, 'end_line': 240, 'comment': '# Figure out what subnets correspond to this network', 'include_SATD': False}, {'start_line': 243, 'end_line': 244, 'comment': '# Set up (or find) the dhcp server for each of the subnets # returned above (both v4 and v6).', 'include_SATD': False}, {'start_line': 248, 'end_line': 250, 'comment': ""# Fill in some of the network fields that we would have # previously gotten from the network table (they'll be # passed to the linux_net functions)."", 'include_SATD': False}, {'start_line': 254, 'end_line': 254, 'comment': '# TODO(bgh): Melange should probably track dhcp_start', 'include_SATD': True}, {'start_line': 260, 'end_line': 260, 'comment': ""# Construct the interface id that we'll use for the bridge"", 'include_SATD': False}, {'start_line': 263, 'end_line': 267, 'comment': ""# Query quantum to see if we've already created a port for # the gateway device and attached the device to the port. # If we haven't then we need to intiialize it and create # it.  This device will be the one serving dhcp via # dnsmasq."", 'include_SATD': False}, {'start_line': 271, 'end_line': 271, 'comment': '# No dhcp server has been started', 'include_SATD': False}, {'start_line': 280, 'end_line': 280, 'comment': ""# We've already got one and its plugged in"", 'include_SATD': False}, {'start_line': 416, 'end_line': 417, 'comment': '# If DHCP is enabled on this network then we need to update the # leases and restart the server.', 'include_SATD': False}, {'start_line': 428, 'end_line': 429, 'comment': '# TODO(bgh): At some point we should consider merging enable_dhcp() and # update_dhcp()', 'include_SATD': True}, {'start_line': 432, 'end_line': 432, 'comment': '# Figure out what subnet corresponds to this network/vif', 'include_SATD': False}, {'start_line': 438, 'end_line': 440, 'comment': ""# Fill in some of the network fields that we would have # previously gotten from the network table (they'll be # passed to the linux_net functions)."", 'include_SATD': False}, {'start_line': 448, 'end_line': 448, 'comment': '# And remove the dhcp mappings for the subnet', 'include_SATD': False}, {'start_line': 452, 'end_line': 452, 'comment': '# Restart dnsmasq', 'include_SATD': False}, {'start_line': 456, 'end_line': 471, 'comment': '# TODO(bgh): if this is the last instance for the network # then we should actually just kill the dhcp server. # TODO(bgh): At some point we should figure out whether or # not we want the verify_subnet_exists call to be optional.', 'include_SATD': True}, {'start_line': 478, 'end_line': 482, 'comment': ""# NOTE(bgh): deallocate_for_instance will take care of this..  The reason # we're providing this is so that NetworkManager::release_fixed_ip() isn't # called.  It does some database operations that we don't want to happen # and since the majority of the stuff that it does is already taken care # of in our deallocate_for_instance call we don't need to do anything."", 'include_SATD': True}], 'filename': 'nova/network/quantum/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 139, 'end_line': 140, 'comment': '# TODO(bgh): This request fails if you add the "".json"" to the end so # it has to call do_request itself.  Melange bug?', 'include_SATD': True}], 'filename': 'nova/network/quantum/melange_connection.py'}, {'a_comments': [{'start_line': 141, 'end_line': 145, 'comment': '# FIXME(danwent):  Melange actually returns the subnet info # when we query for a particular interface.  We may want to # rework the ipam_manager python API to let us take advantage of # this, as right now we have to get all blocks and cycle through # them.', 'include_SATD': True}], 'b_comments': [{'start_line': 158, 'end_line': 160, 'comment': '# TODO(bgh): Rename this method .. it\'s now more of a # ""get_subnets_by_net_id_and_vif_id"" method, but we could probably just # call it ""get_subnets"".', 'include_SATD': True}, {'start_line': 213, 'end_line': 216, 'comment': '# TODO(bgh): Would be nice if we could just do something like: # GET /ipam/tenants/{tenant_id}/networks/{network_id}/ instead # of searching through all the blocks.  Checking for a 404 # will then determine whether it exists.', 'include_SATD': True}], 'filename': 'nova/network/quantum/melange_ipam_lib.py'}, {'a_comments': [], 'b_comments': [{'start_line': 210, 'end_line': 210, 'comment': '# Get all allocated IPs that are part of this subnet', 'include_SATD': False}, {'start_line': 213, 'end_line': 213, 'comment': '# Skip unallocated IPs', 'include_SATD': False}], 'filename': 'nova/network/quantum/nova_ipam_lib.py'}, {'a_comments': [], 'b_comments': [{'start_line': 115, 'end_line': 115, 'comment': '# Skip ports without an attachment', 'include_SATD': False}], 'filename': 'nova/network/quantum/quantum_connection.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_network.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_nova_manage.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quantum.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 641, 'end_line': 642, 'comment': '# Using symlinks can cause problems here so just compare the name # of the file itself', 'include_SATD': False}, {'start_line': 1003, 'end_line': 1003, 'comment': ""# Don't forward traffic unless we were told to be a gateway"", 'include_SATD': False}, {'start_line': 1041, 'end_line': 1042, 'comment': ""# If we weren't instructed to act as a gateway then add the # appropriate flows to block all non-dhcp traffic."", 'include_SATD': False}], 'filename': 'nova/network/linux_net.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/quantum/client.py'}, {'a_comments': [{'start_line': 111, 'end_line': 114, 'comment': ""# TODO(bgh): The project_id isn't getting populated here for some # reason.. I'm not sure if it's an invalid assumption or just a bug. # In order to get the right quantum_net_id we'll have to query all the # project_ids for now."", 'include_SATD': True}], 'b_comments': [{'start_line': 75, 'end_line': 78, 'comment': ""# TODO(bgh): We'll need to enable these when we implement the full L3 # functionalities # self.driver.ensure_metadata_ip() # self.driver.metadata_forward()"", 'include_SATD': True}, {'start_line': 171, 'end_line': 173, 'comment': ""# Quantum may also know about networks that aren't in the networks # table so we need to query Quanutm for any tenant networks and add # them to net_proj_pairs."", 'include_SATD': False}, {'start_line': 193, 'end_line': 194, 'comment': ""# We may not be able to get a network_ref here if this network # isn't in the database (i.e. it came from Quantum)."", 'include_SATD': False}, {'start_line': 201, 'end_line': 210, 'comment': ""# NOTE(bgh): We need to document this somewhere but since # we don't know the priority of any networks we get from # quantum we just give them a priority of 0.  If its # necessary to specify the order of the vifs and what # network they map to then the user will have to use the # OSCreateServer extension and specify them explicitly. # # In the future users will be able to tag quantum networks # with a priority .. and at that point we can update the # code here to reflect that."", 'include_SATD': False}, {'start_line': 222, 'end_line': 222, 'comment': '# Tell melange to allocate an IP', 'include_SATD': False}, {'start_line': 225, 'end_line': 225, 'comment': '# Set up/start the dhcp server for this network if necessary', 'include_SATD': False}, {'start_line': 235, 'end_line': 237, 'comment': '# Figure out the ipam tenant id for this subnet:  We need to # query for the tenant_id since the network could be created # with the project_id as the tenant or the default tenant.', 'include_SATD': False}, {'start_line': 240, 'end_line': 240, 'comment': '# Figure out what subnets correspond to this network', 'include_SATD': False}, {'start_line': 243, 'end_line': 244, 'comment': '# Set up (or find) the dhcp server for each of the subnets # returned above (both v4 and v6).', 'include_SATD': False}, {'start_line': 248, 'end_line': 250, 'comment': ""# Fill in some of the network fields that we would have # previously gotten from the network table (they'll be # passed to the linux_net functions)."", 'include_SATD': False}, {'start_line': 254, 'end_line': 254, 'comment': '# TODO(bgh): Melange should probably track dhcp_start', 'include_SATD': True}, {'start_line': 260, 'end_line': 260, 'comment': ""# Construct the interface id that we'll use for the bridge"", 'include_SATD': False}, {'start_line': 263, 'end_line': 267, 'comment': ""# Query quantum to see if we've already created a port for # the gateway device and attached the device to the port. # If we haven't then we need to intiialize it and create # it.  This device will be the one serving dhcp via # dnsmasq."", 'include_SATD': False}, {'start_line': 271, 'end_line': 271, 'comment': '# No dhcp server has been started', 'include_SATD': False}, {'start_line': 280, 'end_line': 280, 'comment': ""# We've already got one and its plugged in"", 'include_SATD': False}, {'start_line': 414, 'end_line': 415, 'comment': '# If DHCP is enabled on this network then we need to update the # leases and restart the server.', 'include_SATD': False}, {'start_line': 426, 'end_line': 427, 'comment': '# TODO(bgh): At some point we should consider merging enable_dhcp() and # update_dhcp()', 'include_SATD': True}, {'start_line': 430, 'end_line': 430, 'comment': '# Figure out what subnet corresponds to this network/vif', 'include_SATD': False}, {'start_line': 436, 'end_line': 438, 'comment': ""# Fill in some of the network fields that we would have # previously gotten from the network table (they'll be # passed to the linux_net functions)."", 'include_SATD': False}, {'start_line': 446, 'end_line': 446, 'comment': '# And remove the dhcp mappings for the subnet', 'include_SATD': False}, {'start_line': 450, 'end_line': 450, 'comment': '# Restart dnsmasq', 'include_SATD': False}, {'start_line': 454, 'end_line': 469, 'comment': '# TODO(bgh): if this is the last instance for the network # then we should actually just kill the dhcp server. # TODO(bgh): At some point we should figure out whether or # not we want the verify_subnet_exists call to be optional.', 'include_SATD': True}, {'start_line': 476, 'end_line': 480, 'comment': ""# NOTE(bgh): deallocate_for_instance will take care of this..  The reason # we're providing this is so that NetworkManager::release_fixed_ip() isn't # called.  It does some database operations that we don't want to happen # and since the majority of the stuff that it does is already taken care # of in our deallocate_for_instance call we don't need to do anything."", 'include_SATD': True}], 'filename': 'nova/network/quantum/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 139, 'end_line': 140, 'comment': '# TODO(bgh): This request fails if you add the "".json"" to the end so # it has to call do_request itself.  Melange bug?', 'include_SATD': True}], 'filename': 'nova/network/quantum/melange_connection.py'}, {'a_comments': [{'start_line': 141, 'end_line': 145, 'comment': '# FIXME(danwent):  Melange actually returns the subnet info # when we query for a particular interface.  We may want to # rework the ipam_manager python API to let us take advantage of # this, as right now we have to get all blocks and cycle through # them.', 'include_SATD': True}], 'b_comments': [{'start_line': 158, 'end_line': 160, 'comment': '# TODO(bgh): Rename this method .. it\'s now more of a # ""get_subnets_by_net_id_and_vif_id"" method, but we could probably just # call it ""get_subnets"".', 'include_SATD': True}, {'start_line': 213, 'end_line': 216, 'comment': '# TODO(bgh): Would be nice if we could just do something like: # GET /ipam/tenants/{tenant_id}/networks/{network_id}/ instead # of searching through all the blocks.  Checking for a 404 # will then determine whether it exists.', 'include_SATD': True}], 'filename': 'nova/network/quantum/melange_ipam_lib.py'}, {'a_comments': [], 'b_comments': [{'start_line': 210, 'end_line': 210, 'comment': '# Get all allocated IPs that are part of this subnet', 'include_SATD': False}, {'start_line': 213, 'end_line': 213, 'comment': '# Skip unallocated IPs', 'include_SATD': False}], 'filename': 'nova/network/quantum/nova_ipam_lib.py'}, {'a_comments': [], 'b_comments': [{'start_line': 115, 'end_line': 115, 'comment': '# Skip ports without an attachment', 'include_SATD': False}], 'filename': 'nova/network/quantum/quantum_connection.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_network.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_nova_manage.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quantum.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 641, 'end_line': 642, 'comment': '# Using symlinks can cause problems here so just compare the name # of the file itself', 'include_SATD': False}, {'start_line': 992, 'end_line': 992, 'comment': ""# Don't forward traffic unless we were told to be a gateway"", 'include_SATD': False}, {'start_line': 1030, 'end_line': 1031, 'comment': ""# If we weren't instructed to act as a gateway then add the # appropriate flows to block all non-dhcp traffic."", 'include_SATD': False}], 'filename': 'nova/network/linux_net.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/quantum/client.py'}, {'a_comments': [{'start_line': 111, 'end_line': 114, 'comment': ""# TODO(bgh): The project_id isn't getting populated here for some # reason.. I'm not sure if it's an invalid assumption or just a bug. # In order to get the right quantum_net_id we'll have to query all the # project_ids for now."", 'include_SATD': True}], 'b_comments': [{'start_line': 75, 'end_line': 78, 'comment': ""# TODO(bgh): We'll need to enable these when we implement the full L3 # functionalities # self.driver.ensure_metadata_ip() # self.driver.metadata_forward()"", 'include_SATD': True}, {'start_line': 171, 'end_line': 173, 'comment': ""# Quantum may also know about networks that aren't in the networks # table so we need to query Quanutm for any tenant networks and add # them to net_proj_pairs."", 'include_SATD': False}, {'start_line': 193, 'end_line': 194, 'comment': ""# We may not be able to get a network_ref here if this network # isn't in the database (i.e. it came from Quantum)."", 'include_SATD': False}, {'start_line': 201, 'end_line': 210, 'comment': ""# NOTE(bgh): We need to document this somewhere but since # we don't know the priority of any networks we get from # quantum we just give them a priority of 0.  If its # necessary to specify the order of the vifs and what # network they map to then the user will have to use the # OSCreateServer extension and specify them explicitly. # # In the future users will be able to tag quantum networks # with a priority .. and at that point we can update the # code here to reflect that."", 'include_SATD': False}, {'start_line': 222, 'end_line': 222, 'comment': '# Tell melange to allocate an IP', 'include_SATD': False}, {'start_line': 225, 'end_line': 225, 'comment': '# Set up/start the dhcp server for this network if necessary', 'include_SATD': False}, {'start_line': 235, 'end_line': 237, 'comment': '# Figure out the ipam tenant id for this subnet:  We need to # query for the tenant_id since the network could be created # with the project_id as the tenant or the default tenant.', 'include_SATD': False}, {'start_line': 240, 'end_line': 240, 'comment': '# Figure out what subnets correspond to this network', 'include_SATD': False}, {'start_line': 243, 'end_line': 244, 'comment': '# Set up (or find) the dhcp server for each of the subnets # returned above (both v4 and v6).', 'include_SATD': False}, {'start_line': 248, 'end_line': 250, 'comment': ""# Fill in some of the network fields that we would have # previously gotten from the network table (they'll be # passed to the linux_net functions)."", 'include_SATD': False}, {'start_line': 254, 'end_line': 254, 'comment': '# TODO(bgh): Melange should probably track dhcp_start', 'include_SATD': True}, {'start_line': 260, 'end_line': 260, 'comment': ""# Construct the interface id that we'll use for the bridge"", 'include_SATD': False}, {'start_line': 263, 'end_line': 267, 'comment': ""# Query quantum to see if we've already created a port for # the gateway device and attached the device to the port. # If we haven't then we need to intiialize it and create # it.  This device will be the one serving dhcp via # dnsmasq."", 'include_SATD': False}, {'start_line': 271, 'end_line': 271, 'comment': '# No dhcp server has been started', 'include_SATD': False}, {'start_line': 280, 'end_line': 280, 'comment': ""# We've already got one and its plugged in"", 'include_SATD': False}, {'start_line': 414, 'end_line': 415, 'comment': '# If DHCP is enabled on this network then we need to update the # leases and restart the server.', 'include_SATD': False}, {'start_line': 426, 'end_line': 427, 'comment': '# TODO(bgh): At some point we should consider merging enable_dhcp() and # update_dhcp()', 'include_SATD': True}, {'start_line': 430, 'end_line': 430, 'comment': '# Figure out what subnet corresponds to this network/vif', 'include_SATD': False}, {'start_line': 436, 'end_line': 438, 'comment': ""# Fill in some of the network fields that we would have # previously gotten from the network table (they'll be # passed to the linux_net functions)."", 'include_SATD': False}, {'start_line': 446, 'end_line': 446, 'comment': '# And remove the dhcp mappings for the subnet', 'include_SATD': False}, {'start_line': 450, 'end_line': 450, 'comment': '# Restart dnsmasq', 'include_SATD': False}, {'start_line': 454, 'end_line': 469, 'comment': '# TODO(bgh): if this is the last instance for the network # then we should actually just kill the dhcp server. # TODO(bgh): At some point we should figure out whether or # not we want the verify_subnet_exists call to be optional.', 'include_SATD': True}, {'start_line': 476, 'end_line': 480, 'comment': ""# NOTE(bgh): deallocate_for_instance will take care of this..  The reason # we're providing this is so that NetworkManager::release_fixed_ip() isn't # called.  It does some database operations that we don't want to happen # and since the majority of the stuff that it does is already taken care # of in our deallocate_for_instance call we don't need to do anything."", 'include_SATD': True}], 'filename': 'nova/network/quantum/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 139, 'end_line': 140, 'comment': '# TODO(bgh): This request fails if you add the "".json"" to the end so # it has to call do_request itself.  Melange bug?', 'include_SATD': True}], 'filename': 'nova/network/quantum/melange_connection.py'}, {'a_comments': [{'start_line': 141, 'end_line': 145, 'comment': '# FIXME(danwent):  Melange actually returns the subnet info # when we query for a particular interface.  We may want to # rework the ipam_manager python API to let us take advantage of # this, as right now we have to get all blocks and cycle through # them.', 'include_SATD': True}], 'b_comments': [{'start_line': 158, 'end_line': 160, 'comment': '# TODO(bgh): Rename this method .. it\'s now more of a # ""get_subnets_by_net_id_and_vif_id"" method, but we could probably just # call it ""get_subnets"".', 'include_SATD': True}, {'start_line': 213, 'end_line': 216, 'comment': '# TODO(bgh): Would be nice if we could just do something like: # GET /ipam/tenants/{tenant_id}/networks/{network_id}/ instead # of searching through all the blocks.  Checking for a 404 # will then determine whether it exists.', 'include_SATD': True}], 'filename': 'nova/network/quantum/melange_ipam_lib.py'}, {'a_comments': [], 'b_comments': [{'start_line': 211, 'end_line': 211, 'comment': '# Get all allocated IPs that are part of this subnet', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# Skip unallocated IPs', 'include_SATD': False}], 'filename': 'nova/network/quantum/nova_ipam_lib.py'}, {'a_comments': [], 'b_comments': [{'start_line': 115, 'end_line': 115, 'comment': '# Skip ports without an attachment', 'include_SATD': False}], 'filename': 'nova/network/quantum/quantum_connection.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_network.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_nova_manage.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quantum.py'}]}, {'revision': 5, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 641, 'end_line': 642, 'comment': '# Using symlinks can cause problems here so just compare the name # of the file itself', 'include_SATD': False}, {'start_line': 992, 'end_line': 992, 'comment': ""# Don't forward traffic unless we were told to be a gateway"", 'include_SATD': False}, {'start_line': 1030, 'end_line': 1031, 'comment': ""# If we weren't instructed to act as a gateway then add the # appropriate flows to block all non-dhcp traffic."", 'include_SATD': False}], 'filename': 'nova/network/linux_net.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/quantum/client.py'}, {'a_comments': [{'start_line': 111, 'end_line': 114, 'comment': ""# TODO(bgh): The project_id isn't getting populated here for some # reason.. I'm not sure if it's an invalid assumption or just a bug. # In order to get the right quantum_net_id we'll have to query all the # project_ids for now."", 'include_SATD': True}], 'b_comments': [{'start_line': 75, 'end_line': 78, 'comment': ""# TODO(bgh): We'll need to enable these when we implement the full L3 # functionalities # self.driver.ensure_metadata_ip() # self.driver.metadata_forward()"", 'include_SATD': True}, {'start_line': 171, 'end_line': 173, 'comment': ""# Quantum may also know about networks that aren't in the networks # table so we need to query Quanutm for any tenant networks and add # them to net_proj_pairs."", 'include_SATD': False}, {'start_line': 193, 'end_line': 194, 'comment': ""# We may not be able to get a network_ref here if this network # isn't in the database (i.e. it came from Quantum)."", 'include_SATD': False}, {'start_line': 201, 'end_line': 210, 'comment': ""# NOTE(bgh): We need to document this somewhere but since # we don't know the priority of any networks we get from # quantum we just give them a priority of 0.  If its # necessary to specify the order of the vifs and what # network they map to then the user will have to use the # OSCreateServer extension and specify them explicitly. # # In the future users will be able to tag quantum networks # with a priority .. and at that point we can update the # code here to reflect that."", 'include_SATD': False}, {'start_line': 222, 'end_line': 222, 'comment': '# Tell melange to allocate an IP', 'include_SATD': False}, {'start_line': 225, 'end_line': 225, 'comment': '# Set up/start the dhcp server for this network if necessary', 'include_SATD': False}, {'start_line': 235, 'end_line': 237, 'comment': '# Figure out the ipam tenant id for this subnet:  We need to # query for the tenant_id since the network could be created # with the project_id as the tenant or the default tenant.', 'include_SATD': False}, {'start_line': 240, 'end_line': 240, 'comment': '# Figure out what subnets correspond to this network', 'include_SATD': False}, {'start_line': 243, 'end_line': 244, 'comment': '# Set up (or find) the dhcp server for each of the subnets # returned above (both v4 and v6).', 'include_SATD': False}, {'start_line': 248, 'end_line': 250, 'comment': ""# Fill in some of the network fields that we would have # previously gotten from the network table (they'll be # passed to the linux_net functions)."", 'include_SATD': False}, {'start_line': 254, 'end_line': 254, 'comment': '# TODO(bgh): Melange should probably track dhcp_start', 'include_SATD': True}, {'start_line': 260, 'end_line': 260, 'comment': ""# Construct the interface id that we'll use for the bridge"", 'include_SATD': False}, {'start_line': 263, 'end_line': 267, 'comment': ""# Query quantum to see if we've already created a port for # the gateway device and attached the device to the port. # If we haven't then we need to intiialize it and create # it.  This device will be the one serving dhcp via # dnsmasq."", 'include_SATD': False}, {'start_line': 271, 'end_line': 271, 'comment': '# No dhcp server has been started', 'include_SATD': False}, {'start_line': 280, 'end_line': 280, 'comment': ""# We've already got one and its plugged in"", 'include_SATD': False}, {'start_line': 414, 'end_line': 415, 'comment': '# If DHCP is enabled on this network then we need to update the # leases and restart the server.', 'include_SATD': False}, {'start_line': 426, 'end_line': 427, 'comment': '# TODO(bgh): At some point we should consider merging enable_dhcp() and # update_dhcp()', 'include_SATD': True}, {'start_line': 430, 'end_line': 430, 'comment': '# Figure out what subnet corresponds to this network/vif', 'include_SATD': False}, {'start_line': 436, 'end_line': 438, 'comment': ""# Fill in some of the network fields that we would have # previously gotten from the network table (they'll be # passed to the linux_net functions)."", 'include_SATD': False}, {'start_line': 446, 'end_line': 446, 'comment': '# And remove the dhcp mappings for the subnet', 'include_SATD': False}, {'start_line': 450, 'end_line': 450, 'comment': '# Restart dnsmasq', 'include_SATD': False}, {'start_line': 454, 'end_line': 469, 'comment': '# TODO(bgh): if this is the last instance for the network # then we should actually just kill the dhcp server. # TODO(bgh): At some point we should figure out whether or # not we want the verify_subnet_exists call to be optional.', 'include_SATD': True}, {'start_line': 476, 'end_line': 480, 'comment': ""# NOTE(bgh): deallocate_for_instance will take care of this..  The reason # we're providing this is so that NetworkManager::release_fixed_ip() isn't # called.  It does some database operations that we don't want to happen # and since the majority of the stuff that it does is already taken care # of in our deallocate_for_instance call we don't need to do anything."", 'include_SATD': True}], 'filename': 'nova/network/quantum/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 139, 'end_line': 140, 'comment': '# TODO(bgh): This request fails if you add the "".json"" to the end so # it has to call do_request itself.  Melange bug?', 'include_SATD': True}], 'filename': 'nova/network/quantum/melange_connection.py'}, {'a_comments': [{'start_line': 141, 'end_line': 145, 'comment': '# FIXME(danwent):  Melange actually returns the subnet info # when we query for a particular interface.  We may want to # rework the ipam_manager python API to let us take advantage of # this, as right now we have to get all blocks and cycle through # them.', 'include_SATD': True}], 'b_comments': [{'start_line': 158, 'end_line': 160, 'comment': '# TODO(bgh): Rename this method .. it\'s now more of a # ""get_subnets_by_net_id_and_vif_id"" method, but we could probably just # call it ""get_subnets"".', 'include_SATD': True}, {'start_line': 213, 'end_line': 216, 'comment': '# TODO(bgh): Would be nice if we could just do something like: # GET /ipam/tenants/{tenant_id}/networks/{network_id}/ instead # of searching through all the blocks.  Checking for a 404 # will then determine whether it exists.', 'include_SATD': True}], 'filename': 'nova/network/quantum/melange_ipam_lib.py'}, {'a_comments': [], 'b_comments': [{'start_line': 211, 'end_line': 211, 'comment': '# Get all allocated IPs that are part of this subnet', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# Skip unallocated IPs', 'include_SATD': False}], 'filename': 'nova/network/quantum/nova_ipam_lib.py'}, {'a_comments': [], 'b_comments': [{'start_line': 115, 'end_line': 115, 'comment': '# Skip ports without an attachment', 'include_SATD': False}], 'filename': 'nova/network/quantum/quantum_connection.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_network.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_nova_manage.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quantum.py'}]}, {'revision': 6, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 641, 'end_line': 642, 'comment': '# Using symlinks can cause problems here so just compare the name # of the file itself', 'include_SATD': False}, {'start_line': 992, 'end_line': 992, 'comment': ""# Don't forward traffic unless we were told to be a gateway"", 'include_SATD': False}, {'start_line': 1030, 'end_line': 1031, 'comment': ""# If we weren't instructed to act as a gateway then add the # appropriate flows to block all non-dhcp traffic."", 'include_SATD': False}], 'filename': 'nova/network/linux_net.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/quantum/client.py'}, {'a_comments': [{'start_line': 111, 'end_line': 114, 'comment': ""# TODO(bgh): The project_id isn't getting populated here for some # reason.. I'm not sure if it's an invalid assumption or just a bug. # In order to get the right quantum_net_id we'll have to query all the # project_ids for now."", 'include_SATD': True}], 'b_comments': [{'start_line': 75, 'end_line': 78, 'comment': ""# TODO(bgh): We'll need to enable these when we implement the full L3 # functionalities # self.driver.ensure_metadata_ip() # self.driver.metadata_forward()"", 'include_SATD': True}, {'start_line': 171, 'end_line': 173, 'comment': ""# Quantum may also know about networks that aren't in the networks # table so we need to query Quanutm for any tenant networks and add # them to net_proj_pairs."", 'include_SATD': False}, {'start_line': 193, 'end_line': 194, 'comment': ""# We may not be able to get a network_ref here if this network # isn't in the database (i.e. it came from Quantum)."", 'include_SATD': False}, {'start_line': 201, 'end_line': 210, 'comment': ""# NOTE(bgh): We need to document this somewhere but since # we don't know the priority of any networks we get from # quantum we just give them a priority of 0.  If its # necessary to specify the order of the vifs and what # network they map to then the user will have to use the # OSCreateServer extension and specify them explicitly. # # In the future users will be able to tag quantum networks # with a priority .. and at that point we can update the # code here to reflect that."", 'include_SATD': False}, {'start_line': 222, 'end_line': 222, 'comment': '# Tell melange to allocate an IP', 'include_SATD': False}, {'start_line': 225, 'end_line': 225, 'comment': '# Set up/start the dhcp server for this network if necessary', 'include_SATD': False}, {'start_line': 235, 'end_line': 237, 'comment': '# Figure out the ipam tenant id for this subnet:  We need to # query for the tenant_id since the network could be created # with the project_id as the tenant or the default tenant.', 'include_SATD': False}, {'start_line': 240, 'end_line': 240, 'comment': '# Figure out what subnets correspond to this network', 'include_SATD': False}, {'start_line': 243, 'end_line': 244, 'comment': '# Set up (or find) the dhcp server for each of the subnets # returned above (both v4 and v6).', 'include_SATD': False}, {'start_line': 248, 'end_line': 250, 'comment': ""# Fill in some of the network fields that we would have # previously gotten from the network table (they'll be # passed to the linux_net functions)."", 'include_SATD': False}, {'start_line': 254, 'end_line': 254, 'comment': '# TODO(bgh): Melange should probably track dhcp_start', 'include_SATD': True}, {'start_line': 260, 'end_line': 260, 'comment': ""# Construct the interface id that we'll use for the bridge"", 'include_SATD': False}, {'start_line': 263, 'end_line': 267, 'comment': ""# Query quantum to see if we've already created a port for # the gateway device and attached the device to the port. # If we haven't then we need to intiialize it and create # it.  This device will be the one serving dhcp via # dnsmasq."", 'include_SATD': False}, {'start_line': 271, 'end_line': 271, 'comment': '# No dhcp server has been started', 'include_SATD': False}, {'start_line': 280, 'end_line': 280, 'comment': ""# We've already got one and its plugged in"", 'include_SATD': False}, {'start_line': 415, 'end_line': 416, 'comment': '# If DHCP is enabled on this network then we need to update the # leases and restart the server.', 'include_SATD': False}, {'start_line': 427, 'end_line': 428, 'comment': '# TODO(bgh): At some point we should consider merging enable_dhcp() and # update_dhcp()', 'include_SATD': True}, {'start_line': 431, 'end_line': 431, 'comment': '# Figure out what subnet corresponds to this network/vif', 'include_SATD': False}, {'start_line': 437, 'end_line': 439, 'comment': ""# Fill in some of the network fields that we would have # previously gotten from the network table (they'll be # passed to the linux_net functions)."", 'include_SATD': False}, {'start_line': 447, 'end_line': 447, 'comment': '# And remove the dhcp mappings for the subnet', 'include_SATD': False}, {'start_line': 451, 'end_line': 451, 'comment': '# Restart dnsmasq', 'include_SATD': False}, {'start_line': 455, 'end_line': 470, 'comment': '# TODO(bgh): if this is the last instance for the network # then we should actually just kill the dhcp server. # TODO(bgh): At some point we should figure out whether or # not we want the verify_subnet_exists call to be optional.', 'include_SATD': True}, {'start_line': 477, 'end_line': 481, 'comment': ""# NOTE(bgh): deallocate_for_instance will take care of this..  The reason # we're providing this is so that NetworkManager::release_fixed_ip() isn't # called.  It does some database operations that we don't want to happen # and since the majority of the stuff that it does is already taken care # of in our deallocate_for_instance call we don't need to do anything."", 'include_SATD': True}], 'filename': 'nova/network/quantum/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 139, 'end_line': 140, 'comment': '# TODO(bgh): This request fails if you add the "".json"" to the end so # it has to call do_request itself.  Melange bug?', 'include_SATD': True}], 'filename': 'nova/network/quantum/melange_connection.py'}, {'a_comments': [{'start_line': 141, 'end_line': 145, 'comment': '# FIXME(danwent):  Melange actually returns the subnet info # when we query for a particular interface.  We may want to # rework the ipam_manager python API to let us take advantage of # this, as right now we have to get all blocks and cycle through # them.', 'include_SATD': True}], 'b_comments': [{'start_line': 158, 'end_line': 160, 'comment': '# TODO(bgh): Rename this method .. it\'s now more of a # ""get_subnets_by_net_id_and_vif_id"" method, but we could probably just # call it ""get_subnets"".', 'include_SATD': True}, {'start_line': 213, 'end_line': 216, 'comment': '# TODO(bgh): Would be nice if we could just do something like: # GET /ipam/tenants/{tenant_id}/networks/{network_id}/ instead # of searching through all the blocks.  Checking for a 404 # will then determine whether it exists.', 'include_SATD': True}], 'filename': 'nova/network/quantum/melange_ipam_lib.py'}, {'a_comments': [], 'b_comments': [{'start_line': 211, 'end_line': 211, 'comment': '# Get all allocated IPs that are part of this subnet', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# Skip unallocated IPs', 'include_SATD': False}], 'filename': 'nova/network/quantum/nova_ipam_lib.py'}, {'a_comments': [], 'b_comments': [{'start_line': 119, 'end_line': 119, 'comment': '# Skip ports without an attachment', 'include_SATD': False}], 'filename': 'nova/network/quantum/quantum_connection.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_network.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_nova_manage.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quantum.py'}]}, {'revision': 7, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 643, 'end_line': 644, 'comment': '# Using symlinks can cause problems here so just compare the name # of the file itself', 'include_SATD': False}, {'start_line': 994, 'end_line': 994, 'comment': ""# Don't forward traffic unless we were told to be a gateway"", 'include_SATD': False}, {'start_line': 1032, 'end_line': 1033, 'comment': ""# If we weren't instructed to act as a gateway then add the # appropriate flows to block all non-dhcp traffic."", 'include_SATD': False}], 'filename': 'nova/network/linux_net.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/quantum/client.py'}, {'a_comments': [{'start_line': 111, 'end_line': 114, 'comment': ""# TODO(bgh): The project_id isn't getting populated here for some # reason.. I'm not sure if it's an invalid assumption or just a bug. # In order to get the right quantum_net_id we'll have to query all the # project_ids for now."", 'include_SATD': True}], 'b_comments': [{'start_line': 75, 'end_line': 78, 'comment': ""# TODO(bgh): We'll need to enable these when we implement the full L3 # functionalities # self.driver.ensure_metadata_ip() # self.driver.metadata_forward()"", 'include_SATD': True}, {'start_line': 171, 'end_line': 173, 'comment': ""# Quantum may also know about networks that aren't in the networks # table so we need to query Quanutm for any tenant networks and add # them to net_proj_pairs."", 'include_SATD': False}, {'start_line': 193, 'end_line': 194, 'comment': ""# We may not be able to get a network_ref here if this network # isn't in the database (i.e. it came from Quantum)."", 'include_SATD': False}, {'start_line': 201, 'end_line': 210, 'comment': ""# NOTE(bgh): We need to document this somewhere but since # we don't know the priority of any networks we get from # quantum we just give them a priority of 0.  If its # necessary to specify the order of the vifs and what # network they map to then the user will have to use the # OSCreateServer extension and specify them explicitly. # # In the future users will be able to tag quantum networks # with a priority .. and at that point we can update the # code here to reflect that."", 'include_SATD': False}, {'start_line': 222, 'end_line': 222, 'comment': '# Tell melange to allocate an IP', 'include_SATD': False}, {'start_line': 225, 'end_line': 225, 'comment': '# Set up/start the dhcp server for this network if necessary', 'include_SATD': False}, {'start_line': 235, 'end_line': 237, 'comment': '# Figure out the ipam tenant id for this subnet:  We need to # query for the tenant_id since the network could be created # with the project_id as the tenant or the default tenant.', 'include_SATD': False}, {'start_line': 240, 'end_line': 240, 'comment': '# Figure out what subnets correspond to this network', 'include_SATD': False}, {'start_line': 243, 'end_line': 244, 'comment': '# Set up (or find) the dhcp server for each of the subnets # returned above (both v4 and v6).', 'include_SATD': False}, {'start_line': 248, 'end_line': 250, 'comment': ""# Fill in some of the network fields that we would have # previously gotten from the network table (they'll be # passed to the linux_net functions)."", 'include_SATD': False}, {'start_line': 254, 'end_line': 254, 'comment': '# TODO(bgh): Melange should probably track dhcp_start', 'include_SATD': True}, {'start_line': 260, 'end_line': 260, 'comment': ""# Construct the interface id that we'll use for the bridge"", 'include_SATD': False}, {'start_line': 263, 'end_line': 267, 'comment': ""# Query quantum to see if we've already created a port for # the gateway device and attached the device to the port. # If we haven't then we need to intiialize it and create # it.  This device will be the one serving dhcp via # dnsmasq."", 'include_SATD': False}, {'start_line': 271, 'end_line': 271, 'comment': '# No dhcp server has been started', 'include_SATD': False}, {'start_line': 280, 'end_line': 280, 'comment': ""# We've already got one and its plugged in"", 'include_SATD': False}, {'start_line': 415, 'end_line': 416, 'comment': '# If DHCP is enabled on this network then we need to update the # leases and restart the server.', 'include_SATD': False}, {'start_line': 427, 'end_line': 428, 'comment': '# TODO(bgh): At some point we should consider merging enable_dhcp() and # update_dhcp()', 'include_SATD': True}, {'start_line': 431, 'end_line': 431, 'comment': '# Figure out what subnet corresponds to this network/vif', 'include_SATD': False}, {'start_line': 437, 'end_line': 439, 'comment': ""# Fill in some of the network fields that we would have # previously gotten from the network table (they'll be # passed to the linux_net functions)."", 'include_SATD': False}, {'start_line': 447, 'end_line': 447, 'comment': '# And remove the dhcp mappings for the subnet', 'include_SATD': False}, {'start_line': 451, 'end_line': 451, 'comment': '# Restart dnsmasq', 'include_SATD': False}, {'start_line': 455, 'end_line': 470, 'comment': '# TODO(bgh): if this is the last instance for the network # then we should actually just kill the dhcp server. # TODO(bgh): At some point we should figure out whether or # not we want the verify_subnet_exists call to be optional.', 'include_SATD': True}, {'start_line': 477, 'end_line': 481, 'comment': ""# NOTE(bgh): deallocate_for_instance will take care of this..  The reason # we're providing this is so that NetworkManager::release_fixed_ip() isn't # called.  It does some database operations that we don't want to happen # and since the majority of the stuff that it does is already taken care # of in our deallocate_for_instance call we don't need to do anything."", 'include_SATD': True}], 'filename': 'nova/network/quantum/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 139, 'end_line': 140, 'comment': '# TODO(bgh): This request fails if you add the "".json"" to the end so # it has to call do_request itself.  Melange bug?', 'include_SATD': True}], 'filename': 'nova/network/quantum/melange_connection.py'}, {'a_comments': [{'start_line': 141, 'end_line': 145, 'comment': '# FIXME(danwent):  Melange actually returns the subnet info # when we query for a particular interface.  We may want to # rework the ipam_manager python API to let us take advantage of # this, as right now we have to get all blocks and cycle through # them.', 'include_SATD': True}], 'b_comments': [{'start_line': 157, 'end_line': 159, 'comment': '# TODO(bgh): Rename this method .. it\'s now more of a # ""get_subnets_by_net_id_and_vif_id"" method, but we could probably just # call it ""get_subnets"".', 'include_SATD': True}, {'start_line': 212, 'end_line': 215, 'comment': '# TODO(bgh): Would be nice if we could just do something like: # GET /ipam/tenants/{tenant_id}/networks/{network_id}/ instead # of searching through all the blocks.  Checking for a 404 # will then determine whether it exists.', 'include_SATD': True}], 'filename': 'nova/network/quantum/melange_ipam_lib.py'}, {'a_comments': [], 'b_comments': [{'start_line': 211, 'end_line': 211, 'comment': '# Get all allocated IPs that are part of this subnet', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# Skip unallocated IPs', 'include_SATD': False}], 'filename': 'nova/network/quantum/nova_ipam_lib.py'}, {'a_comments': [], 'b_comments': [{'start_line': 119, 'end_line': 119, 'comment': '# Skip ports without an attachment', 'include_SATD': False}], 'filename': 'nova/network/quantum/quantum_connection.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_network.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_nova_manage.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quantum.py'}]}, {'revision': 8, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 643, 'end_line': 644, 'comment': '# Using symlinks can cause problems here so just compare the name # of the file itself', 'include_SATD': False}, {'start_line': 994, 'end_line': 994, 'comment': ""# Don't forward traffic unless we were told to be a gateway"", 'include_SATD': False}, {'start_line': 1032, 'end_line': 1033, 'comment': ""# If we weren't instructed to act as a gateway then add the # appropriate flows to block all non-dhcp traffic."", 'include_SATD': False}], 'filename': 'nova/network/linux_net.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/quantum/client.py'}, {'a_comments': [{'start_line': 111, 'end_line': 114, 'comment': ""# TODO(bgh): The project_id isn't getting populated here for some # reason.. I'm not sure if it's an invalid assumption or just a bug. # In order to get the right quantum_net_id we'll have to query all the # project_ids for now."", 'include_SATD': True}], 'b_comments': [{'start_line': 75, 'end_line': 78, 'comment': ""# TODO(bgh): We'll need to enable these when we implement the full L3 # functionalities # self.driver.ensure_metadata_ip() # self.driver.metadata_forward()"", 'include_SATD': True}, {'start_line': 170, 'end_line': 172, 'comment': ""# Quantum may also know about networks that aren't in the networks # table so we need to query Quanutm for any tenant networks and add # them to net_proj_pairs."", 'include_SATD': False}, {'start_line': 192, 'end_line': 193, 'comment': ""# We may not be able to get a network_ref here if this network # isn't in the database (i.e. it came from Quantum)."", 'include_SATD': False}, {'start_line': 200, 'end_line': 209, 'comment': ""# NOTE(bgh): We need to document this somewhere but since # we don't know the priority of any networks we get from # quantum we just give them a priority of 0.  If its # necessary to specify the order of the vifs and what # network they map to then the user will have to use the # OSCreateServer extension and specify them explicitly. # # In the future users will be able to tag quantum networks # with a priority .. and at that point we can update the # code here to reflect that."", 'include_SATD': False}, {'start_line': 221, 'end_line': 221, 'comment': '# Tell melange to allocate an IP', 'include_SATD': False}, {'start_line': 224, 'end_line': 224, 'comment': '# Set up/start the dhcp server for this network if necessary', 'include_SATD': False}, {'start_line': 234, 'end_line': 236, 'comment': '# Figure out the ipam tenant id for this subnet:  We need to # query for the tenant_id since the network could be created # with the project_id as the tenant or the default tenant.', 'include_SATD': False}, {'start_line': 239, 'end_line': 239, 'comment': '# Figure out what subnets correspond to this network', 'include_SATD': False}, {'start_line': 242, 'end_line': 243, 'comment': '# Set up (or find) the dhcp server for each of the subnets # returned above (both v4 and v6).', 'include_SATD': False}, {'start_line': 247, 'end_line': 249, 'comment': ""# Fill in some of the network fields that we would have # previously gotten from the network table (they'll be # passed to the linux_net functions)."", 'include_SATD': False}, {'start_line': 253, 'end_line': 253, 'comment': '# TODO(bgh): Melange should probably track dhcp_start', 'include_SATD': True}, {'start_line': 259, 'end_line': 259, 'comment': ""# Construct the interface id that we'll use for the bridge"", 'include_SATD': False}, {'start_line': 262, 'end_line': 266, 'comment': ""# Query quantum to see if we've already created a port for # the gateway device and attached the device to the port. # If we haven't then we need to intiialize it and create # it.  This device will be the one serving dhcp via # dnsmasq."", 'include_SATD': False}, {'start_line': 270, 'end_line': 270, 'comment': '# No dhcp server has been started', 'include_SATD': False}, {'start_line': 279, 'end_line': 279, 'comment': ""# We've already got one and its plugged in"", 'include_SATD': False}, {'start_line': 414, 'end_line': 415, 'comment': '# If DHCP is enabled on this network then we need to update the # leases and restart the server.', 'include_SATD': False}, {'start_line': 426, 'end_line': 427, 'comment': '# TODO(bgh): At some point we should consider merging enable_dhcp() and # update_dhcp()', 'include_SATD': True}, {'start_line': 430, 'end_line': 430, 'comment': '# Figure out what subnet corresponds to this network/vif', 'include_SATD': False}, {'start_line': 436, 'end_line': 438, 'comment': ""# Fill in some of the network fields that we would have # previously gotten from the network table (they'll be # passed to the linux_net functions)."", 'include_SATD': False}, {'start_line': 446, 'end_line': 446, 'comment': '# And remove the dhcp mappings for the subnet', 'include_SATD': False}, {'start_line': 450, 'end_line': 450, 'comment': '# Restart dnsmasq', 'include_SATD': False}, {'start_line': 454, 'end_line': 469, 'comment': '# TODO(bgh): if this is the last instance for the network # then we should actually just kill the dhcp server. # TODO(bgh): At some point we should figure out whether or # not we want the verify_subnet_exists call to be optional.', 'include_SATD': True}, {'start_line': 476, 'end_line': 480, 'comment': ""# NOTE(bgh): deallocate_for_instance will take care of this..  The reason # we're providing this is so that NetworkManager::release_fixed_ip() isn't # called.  It does some database operations that we don't want to happen # and since the majority of the stuff that it does is already taken care # of in our deallocate_for_instance call we don't need to do anything."", 'include_SATD': True}], 'filename': 'nova/network/quantum/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 139, 'end_line': 140, 'comment': '# TODO(bgh): This request fails if you add the "".json"" to the end so # it has to call do_request itself.  Melange bug?', 'include_SATD': True}], 'filename': 'nova/network/quantum/melange_connection.py'}, {'a_comments': [{'start_line': 141, 'end_line': 145, 'comment': '# FIXME(danwent):  Melange actually returns the subnet info # when we query for a particular interface.  We may want to # rework the ipam_manager python API to let us take advantage of # this, as right now we have to get all blocks and cycle through # them.', 'include_SATD': True}], 'b_comments': [{'start_line': 157, 'end_line': 159, 'comment': '# TODO(bgh): Rename this method .. it\'s now more of a # ""get_subnets_by_net_id_and_vif_id"" method, but we could probably just # call it ""get_subnets"".', 'include_SATD': True}, {'start_line': 212, 'end_line': 215, 'comment': '# TODO(bgh): Would be nice if we could just do something like: # GET /ipam/tenants/{tenant_id}/networks/{network_id}/ instead # of searching through all the blocks.  Checking for a 404 # will then determine whether it exists.', 'include_SATD': True}], 'filename': 'nova/network/quantum/melange_ipam_lib.py'}, {'a_comments': [], 'b_comments': [{'start_line': 211, 'end_line': 211, 'comment': '# Get all allocated IPs that are part of this subnet', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# Skip unallocated IPs', 'include_SATD': False}], 'filename': 'nova/network/quantum/nova_ipam_lib.py'}, {'a_comments': [], 'b_comments': [{'start_line': 119, 'end_line': 119, 'comment': '# Skip ports without an attachment', 'include_SATD': False}], 'filename': 'nova/network/quantum/quantum_connection.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_network.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_nova_manage.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quantum.py'}]}, {'revision': 9, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 643, 'end_line': 644, 'comment': '# Using symlinks can cause problems here so just compare the name # of the file itself', 'include_SATD': False}, {'start_line': 994, 'end_line': 994, 'comment': ""# Don't forward traffic unless we were told to be a gateway"", 'include_SATD': False}, {'start_line': 1032, 'end_line': 1033, 'comment': ""# If we weren't instructed to act as a gateway then add the # appropriate flows to block all non-dhcp traffic."", 'include_SATD': False}], 'filename': 'nova/network/linux_net.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/quantum/client.py'}, {'a_comments': [{'start_line': 111, 'end_line': 114, 'comment': ""# TODO(bgh): The project_id isn't getting populated here for some # reason.. I'm not sure if it's an invalid assumption or just a bug. # In order to get the right quantum_net_id we'll have to query all the # project_ids for now."", 'include_SATD': True}], 'b_comments': [{'start_line': 75, 'end_line': 78, 'comment': ""# TODO(bgh): We'll need to enable these when we implement the full L3 # functionalities # self.driver.ensure_metadata_ip() # self.driver.metadata_forward()"", 'include_SATD': True}, {'start_line': 170, 'end_line': 172, 'comment': ""# Quantum may also know about networks that aren't in the networks # table so we need to query Quanutm for any tenant networks and add # them to net_proj_pairs."", 'include_SATD': False}, {'start_line': 192, 'end_line': 193, 'comment': ""# We may not be able to get a network_ref here if this network # isn't in the database (i.e. it came from Quantum)."", 'include_SATD': False}, {'start_line': 200, 'end_line': 209, 'comment': ""# NOTE(bgh): We need to document this somewhere but since # we don't know the priority of any networks we get from # quantum we just give them a priority of 0.  If its # necessary to specify the order of the vifs and what # network they map to then the user will have to use the # OSCreateServer extension and specify them explicitly. # # In the future users will be able to tag quantum networks # with a priority .. and at that point we can update the # code here to reflect that."", 'include_SATD': False}, {'start_line': 221, 'end_line': 221, 'comment': '# Tell melange to allocate an IP', 'include_SATD': False}, {'start_line': 224, 'end_line': 224, 'comment': '# Set up/start the dhcp server for this network if necessary', 'include_SATD': False}, {'start_line': 234, 'end_line': 236, 'comment': '# Figure out the ipam tenant id for this subnet:  We need to # query for the tenant_id since the network could be created # with the project_id as the tenant or the default tenant.', 'include_SATD': False}, {'start_line': 239, 'end_line': 239, 'comment': '# Figure out what subnets correspond to this network', 'include_SATD': False}, {'start_line': 242, 'end_line': 243, 'comment': '# Set up (or find) the dhcp server for each of the subnets # returned above (both v4 and v6).', 'include_SATD': False}, {'start_line': 247, 'end_line': 249, 'comment': ""# Fill in some of the network fields that we would have # previously gotten from the network table (they'll be # passed to the linux_net functions)."", 'include_SATD': False}, {'start_line': 253, 'end_line': 253, 'comment': '# TODO(bgh): Melange should probably track dhcp_start', 'include_SATD': True}, {'start_line': 259, 'end_line': 259, 'comment': ""# Construct the interface id that we'll use for the bridge"", 'include_SATD': False}, {'start_line': 262, 'end_line': 266, 'comment': ""# Query quantum to see if we've already created a port for # the gateway device and attached the device to the port. # If we haven't then we need to intiialize it and create # it.  This device will be the one serving dhcp via # dnsmasq."", 'include_SATD': False}, {'start_line': 270, 'end_line': 270, 'comment': '# No dhcp server has been started', 'include_SATD': False}, {'start_line': 279, 'end_line': 279, 'comment': ""# We've already got one and its plugged in"", 'include_SATD': False}, {'start_line': 414, 'end_line': 415, 'comment': '# If DHCP is enabled on this network then we need to update the # leases and restart the server.', 'include_SATD': False}, {'start_line': 426, 'end_line': 427, 'comment': '# TODO(bgh): At some point we should consider merging enable_dhcp() and # update_dhcp()', 'include_SATD': True}, {'start_line': 430, 'end_line': 430, 'comment': '# Figure out what subnet corresponds to this network/vif', 'include_SATD': False}, {'start_line': 436, 'end_line': 438, 'comment': ""# Fill in some of the network fields that we would have # previously gotten from the network table (they'll be # passed to the linux_net functions)."", 'include_SATD': False}, {'start_line': 446, 'end_line': 446, 'comment': '# And remove the dhcp mappings for the subnet', 'include_SATD': False}, {'start_line': 450, 'end_line': 450, 'comment': '# Restart dnsmasq', 'include_SATD': False}, {'start_line': 454, 'end_line': 469, 'comment': '# TODO(bgh): if this is the last instance for the network # then we should actually just kill the dhcp server. # TODO(bgh): At some point we should figure out whether or # not we want the verify_subnet_exists call to be optional.', 'include_SATD': True}, {'start_line': 476, 'end_line': 480, 'comment': ""# NOTE(bgh): deallocate_for_instance will take care of this..  The reason # we're providing this is so that NetworkManager::release_fixed_ip() isn't # called.  It does some database operations that we don't want to happen # and since the majority of the stuff that it does is already taken care # of in our deallocate_for_instance call we don't need to do anything."", 'include_SATD': True}], 'filename': 'nova/network/quantum/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 139, 'end_line': 140, 'comment': '# TODO(bgh): This request fails if you add the "".json"" to the end so # it has to call do_request itself.  Melange bug?', 'include_SATD': True}], 'filename': 'nova/network/quantum/melange_connection.py'}, {'a_comments': [{'start_line': 141, 'end_line': 145, 'comment': '# FIXME(danwent):  Melange actually returns the subnet info # when we query for a particular interface.  We may want to # rework the ipam_manager python API to let us take advantage of # this, as right now we have to get all blocks and cycle through # them.', 'include_SATD': True}], 'b_comments': [{'start_line': 157, 'end_line': 159, 'comment': '# TODO(bgh): Rename this method .. it\'s now more of a # ""get_subnets_by_net_id_and_vif_id"" method, but we could probably just # call it ""get_subnets"".', 'include_SATD': True}, {'start_line': 212, 'end_line': 215, 'comment': '# TODO(bgh): Would be nice if we could just do something like: # GET /ipam/tenants/{tenant_id}/networks/{network_id}/ instead # of searching through all the blocks.  Checking for a 404 # will then determine whether it exists.', 'include_SATD': True}], 'filename': 'nova/network/quantum/melange_ipam_lib.py'}, {'a_comments': [], 'b_comments': [{'start_line': 211, 'end_line': 211, 'comment': '# Get all allocated IPs that are part of this subnet', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# Skip unallocated IPs', 'include_SATD': False}], 'filename': 'nova/network/quantum/nova_ipam_lib.py'}, {'a_comments': [], 'b_comments': [{'start_line': 119, 'end_line': 119, 'comment': '# Skip ports without an attachment', 'include_SATD': False}], 'filename': 'nova/network/quantum/quantum_connection.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_network.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_nova_manage.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quantum.py'}]}, {'revision': 10, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 643, 'end_line': 644, 'comment': '# Using symlinks can cause problems here so just compare the name # of the file itself', 'include_SATD': False}, {'start_line': 994, 'end_line': 994, 'comment': ""# Don't forward traffic unless we were told to be a gateway"", 'include_SATD': False}, {'start_line': 1032, 'end_line': 1033, 'comment': ""# If we weren't instructed to act as a gateway then add the # appropriate flows to block all non-dhcp traffic."", 'include_SATD': False}], 'filename': 'nova/network/linux_net.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/quantum/client.py'}, {'a_comments': [], 'b_comments': [{'start_line': 75, 'end_line': 78, 'comment': ""# TODO(bgh): We'll need to enable these when we implement the full L3 # functionalities # self.driver.ensure_metadata_ip() # self.driver.metadata_forward()"", 'include_SATD': True}, {'start_line': 137, 'end_line': 137, 'comment': '# If nothing was found we default to this', 'include_SATD': False}, {'start_line': 183, 'end_line': 185, 'comment': ""# Quantum may also know about networks that aren't in the networks # table so we need to query Quanutm for any tenant networks and add # them to net_proj_pairs."", 'include_SATD': False}, {'start_line': 205, 'end_line': 206, 'comment': ""# We may not be able to get a network_ref here if this network # isn't in the database (i.e. it came from Quantum)."", 'include_SATD': False}, {'start_line': 213, 'end_line': 222, 'comment': ""# NOTE(bgh): We need to document this somewhere but since # we don't know the priority of any networks we get from # quantum we just give them a priority of 0.  If its # necessary to specify the order of the vifs and what # network they map to then the user will have to use the # OSCreateServer extension and specify them explicitly. # # In the future users will be able to tag quantum networks # with a priority .. and at that point we can update the # code here to reflect that."", 'include_SATD': False}, {'start_line': 234, 'end_line': 234, 'comment': '# Tell melange to allocate an IP', 'include_SATD': False}, {'start_line': 237, 'end_line': 237, 'comment': '# Set up/start the dhcp server for this network if necessary', 'include_SATD': False}, {'start_line': 247, 'end_line': 249, 'comment': '# Figure out the ipam tenant id for this subnet:  We need to # query for the tenant_id since the network could be created # with the project_id as the tenant or the default tenant.', 'include_SATD': False}, {'start_line': 252, 'end_line': 252, 'comment': '# Figure out what subnets correspond to this network', 'include_SATD': False}, {'start_line': 255, 'end_line': 256, 'comment': '# Set up (or find) the dhcp server for each of the subnets # returned above (both v4 and v6).', 'include_SATD': False}, {'start_line': 260, 'end_line': 262, 'comment': ""# Fill in some of the network fields that we would have # previously gotten from the network table (they'll be # passed to the linux_net functions)."", 'include_SATD': False}, {'start_line': 266, 'end_line': 266, 'comment': '# TODO(bgh): Melange should probably track dhcp_start', 'include_SATD': True}, {'start_line': 272, 'end_line': 272, 'comment': ""# Construct the interface id that we'll use for the bridge"", 'include_SATD': False}, {'start_line': 275, 'end_line': 279, 'comment': ""# Query quantum to see if we've already created a port for # the gateway device and attached the device to the port. # If we haven't then we need to intiialize it and create # it.  This device will be the one serving dhcp via # dnsmasq."", 'include_SATD': False}, {'start_line': 283, 'end_line': 283, 'comment': '# No dhcp server has been started', 'include_SATD': False}, {'start_line': 292, 'end_line': 292, 'comment': ""# We've already got one and its plugged in"", 'include_SATD': False}, {'start_line': 427, 'end_line': 428, 'comment': '# If DHCP is enabled on this network then we need to update the # leases and restart the server.', 'include_SATD': False}, {'start_line': 439, 'end_line': 440, 'comment': '# TODO(bgh): At some point we should consider merging enable_dhcp() and # update_dhcp()', 'include_SATD': True}, {'start_line': 443, 'end_line': 443, 'comment': '# Figure out what subnet corresponds to this network/vif', 'include_SATD': False}, {'start_line': 449, 'end_line': 451, 'comment': ""# Fill in some of the network fields that we would have # previously gotten from the network table (they'll be # passed to the linux_net functions)."", 'include_SATD': False}, {'start_line': 459, 'end_line': 459, 'comment': '# And remove the dhcp mappings for the subnet', 'include_SATD': False}, {'start_line': 463, 'end_line': 463, 'comment': '# Restart dnsmasq', 'include_SATD': False}, {'start_line': 467, 'end_line': 482, 'comment': '# TODO(bgh): if this is the last instance for the network # then we should actually just kill the dhcp server. # TODO(bgh): At some point we should figure out whether or # not we want the verify_subnet_exists call to be optional.', 'include_SATD': True}, {'start_line': 489, 'end_line': 493, 'comment': ""# NOTE(bgh): deallocate_for_instance will take care of this..  The reason # we're providing this is so that NetworkManager::release_fixed_ip() isn't # called.  It does some database operations that we don't want to happen # and since the majority of the stuff that it does is already taken care # of in our deallocate_for_instance call we don't need to do anything."", 'include_SATD': True}], 'filename': 'nova/network/quantum/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 139, 'end_line': 140, 'comment': '# TODO(bgh): This request fails if you add the "".json"" to the end so # it has to call do_request itself.  Melange bug?', 'include_SATD': True}], 'filename': 'nova/network/quantum/melange_connection.py'}, {'a_comments': [{'start_line': 141, 'end_line': 145, 'comment': '# FIXME(danwent):  Melange actually returns the subnet info # when we query for a particular interface.  We may want to # rework the ipam_manager python API to let us take advantage of # this, as right now we have to get all blocks and cycle through # them.', 'include_SATD': True}], 'b_comments': [{'start_line': 157, 'end_line': 159, 'comment': '# TODO(bgh): Rename this method .. it\'s now more of a # ""get_subnets_by_net_id_and_vif_id"" method, but we could probably just # call it ""get_subnets"".', 'include_SATD': True}, {'start_line': 212, 'end_line': 215, 'comment': '# TODO(bgh): Would be nice if we could just do something like: # GET /ipam/tenants/{tenant_id}/networks/{network_id}/ instead # of searching through all the blocks.  Checking for a 404 # will then determine whether it exists.', 'include_SATD': True}], 'filename': 'nova/network/quantum/melange_ipam_lib.py'}, {'a_comments': [], 'b_comments': [{'start_line': 211, 'end_line': 211, 'comment': '# Get all allocated IPs that are part of this subnet', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# Skip unallocated IPs', 'include_SATD': False}], 'filename': 'nova/network/quantum/nova_ipam_lib.py'}, {'a_comments': [], 'b_comments': [{'start_line': 119, 'end_line': 119, 'comment': '# Skip ports without an attachment', 'include_SATD': False}], 'filename': 'nova/network/quantum/quantum_connection.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_network.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_nova_manage.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quantum.py'}]}]",10,30,49,MERGED,True,https://review.opendev.org/#/c/916,Add DHCP support to the QuantumManager and break apart dhcp/gateway,True,"{""# TODO(bgh): We'll need to enable these when we implement the full L3 # functionalities # self.driver.ensure_metadata_ip() # self.driver.metadata_forward()"": 1, '# TODO(bgh): Melange should probably track dhcp_start': 1, '# TODO(bgh): At some point we should consider merging enable_dhcp() and # update_dhcp()': 1, '# TODO(bgh): if this is the last instance for the network # then we should actually just kill the dhcp server.': 1, ""# NOTE(bgh): deallocate_for_instance will take care of this..  The reason # we're providing this is so that NetworkManager::release_fixed_ip() isn't # called.  It does some database operations that we don't want to happen # and since the majority of the stuff that it does is already taken care # of in our deallocate_for_instance call we don't need to do anything."": 1, '# TODO(bgh): This request fails if you add the "".json"" to the end so # it has to call do_request itself.  Melange bug?': 1, '# TODO(bgh): Rename this method .. it\'s now more of a # ""get_subnets_by_net_id_and_vif_id"" method, but we could probably just # call it ""get_subnets"".': 1, '# TODO(bgh): if this is the last instance for the network # then we should actually just kill the dhcp server. # TODO(bgh): At some point we should figure out whether or # not we want the verify_subnet_exists call to be optional.': 2, '# TODO(bgh): Would be nice if we could just do something like: # GET /ipam/tenants/{tenant_id}/networks/{network_id}/ instead # of searching through all the blocks.  Checking for a 404 # will then determine whether it exists.': 2}",True,"{""# TODO(bgh): The project_id isn't getting populated here for some # reason.. I'm not sure if it's an invalid assumption or just a bug. # In order to get the right quantum_net_id we'll have to query all the # project_ids for now."": 1, ""# There isn't a good way of figuring out what the ipam # tenant id should be before hand so we have to try both # (project_id and None)."": 1, '# FIXME(danwent):  Melange actually returns the subnet info # when we query for a particular interface.  We may want to # rework the ipam_manager python API to let us take advantage of # this, as right now we have to get all blocks and cycle through # them.': 2}",True,{}
375,973,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/network/quantum/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/quantum/quantum_connection.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/network/quantum/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/quantum/quantum_connection.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quantum.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/network/quantum/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/quantum/quantum_connection.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quantum.py'}]}]",3,7,0,MERGED,True,https://review.opendev.org/#/c/973,Make sure networks returned from get_instance_nw_info have a label,True,{},False,{},False,{}
376,963,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 772, 'end_line': 772, 'comment': '# pylint: disable=W0703', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/network/linux_net.py'}]}]",1,5,0,MERGED,True,https://review.opendev.org/#/c/963,Fixes bug 872459.,True,{},False,{},False,{}
377,979,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/network/linux_net.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/network/linux_net.py'}]}]",2,8,0,MERGED,True,https://review.opendev.org/#/c/979,Remove nova dependency on vconfig on Linux.,True,{},False,{},False,{}
378,964,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/common.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_admin_actions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_diskconfig.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_virtual_interfaces.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_common.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_extensions.py'}, {'a_comments': [{'start_line': 819, 'end_line': 819, 'comment': ""# 'server' should be converted to 'property-instance_ref'"", 'include_SATD': False}, {'start_line': 914, 'end_line': 914, 'comment': ""# 'server' should be converted to 'property-instance_ref'"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_metadata.py'}, {'a_comments': [{'start_line': 360, 'end_line': 360, 'comment': '#FIXME(wwolf) Do we want the links to be id or uuid?', 'include_SATD': True}, {'start_line': 956, 'end_line': 956, 'comment': '# 1.1 API also ignores unknown options', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_versions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_volumes.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/common.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_admin_actions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_diskconfig.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_virtual_interfaces.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_common.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_extensions.py'}, {'a_comments': [{'start_line': 819, 'end_line': 819, 'comment': ""# 'server' should be converted to 'property-instance_ref'"", 'include_SATD': False}, {'start_line': 914, 'end_line': 914, 'comment': ""# 'server' should be converted to 'property-instance_ref'"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_metadata.py'}, {'a_comments': [{'start_line': 360, 'end_line': 360, 'comment': '#FIXME(wwolf) Do we want the links to be id or uuid?', 'include_SATD': True}, {'start_line': 956, 'end_line': 956, 'comment': '# 1.1 API also ignores unknown options', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_versions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_volumes.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/common.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_admin_actions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_diskconfig.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_virtual_interfaces.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_common.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_extensions.py'}, {'a_comments': [{'start_line': 819, 'end_line': 819, 'comment': ""# 'server' should be converted to 'property-instance_ref'"", 'include_SATD': False}, {'start_line': 914, 'end_line': 914, 'comment': ""# 'server' should be converted to 'property-instance_ref'"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_metadata.py'}, {'a_comments': [{'start_line': 360, 'end_line': 360, 'comment': '#FIXME(wwolf) Do we want the links to be id or uuid?', 'include_SATD': True}, {'start_line': 956, 'end_line': 956, 'comment': '# 1.1 API also ignores unknown options', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_versions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_volumes.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/common.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_admin_actions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_diskconfig.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_virtual_interfaces.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_common.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_extensions.py'}, {'a_comments': [{'start_line': 819, 'end_line': 819, 'comment': ""# 'server' should be converted to 'property-instance_ref'"", 'include_SATD': False}, {'start_line': 914, 'end_line': 914, 'comment': ""# 'server' should be converted to 'property-instance_ref'"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_metadata.py'}, {'a_comments': [{'start_line': 360, 'end_line': 360, 'comment': '#FIXME(wwolf) Do we want the links to be id or uuid?', 'include_SATD': True}, {'start_line': 956, 'end_line': 956, 'comment': '# 1.1 API also ignores unknown options', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_versions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_volumes.py'}]}, {'revision': 5, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/common.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/contrib/volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/views/servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_admin_actions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_diskconfig.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_virtual_interfaces.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/fakes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_common.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_extensions.py'}, {'a_comments': [{'start_line': 819, 'end_line': 819, 'comment': ""# 'server' should be converted to 'property-instance_ref'"", 'include_SATD': False}, {'start_line': 914, 'end_line': 914, 'comment': ""# 'server' should be converted to 'property-instance_ref'"", 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_actions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_server_metadata.py'}, {'a_comments': [{'start_line': 360, 'end_line': 360, 'comment': '#FIXME(wwolf) Do we want the links to be id or uuid?', 'include_SATD': True}, {'start_line': 956, 'end_line': 956, 'comment': '# 1.1 API also ignores unknown options', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_versions.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_volumes.py'}]}]",5,12,7,MERGED,True,https://review.opendev.org/#/c/964,Use UUIDs instead of IDs for OSAPI servers.,True,{},False,{'#FIXME(wwolf) Do we want the links to be id or uuid?': 1},True,{}
379,967,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 307, 'end_line': 309, 'comment': '# NOTE(justinsb): We remove the domain definition. We probably # would do better to keep it if cleanup=False (e.g. volumes?) # (e.g. #2 - not losing machines on failure)', 'include_SATD': True}], 'b_comments': [{'start_line': 307, 'end_line': 310, 'comment': '# NOTE(justinsb): We remove the domain definition. We # probably would do better to keep it if # cleanup=False (e.g. volumes?) (e.g. #2 - not # losing machines on failure)', 'include_SATD': True}], 'filename': 'nova/virt/libvirt/connection.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/967,Indent domain removal to only be ran when it is not None.,True,{'# NOTE(justinsb): We remove the domain definition. We # probably would do better to keep it if # cleanup=False (e.g. volumes?) (e.g. #2 - not # losing machines on failure)': 1},True,{'# NOTE(justinsb): We remove the domain definition. We probably # would do better to keep it if cleanup=False (e.g. volumes?) # (e.g. #2 - not losing machines on failure)': 1},True,{}
380,986,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 12, 'comment': '# Copyright 2011 OpenStack LLC. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/055_add_indexes_to_instances.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 12, 'comment': '# Copyright 2011 OpenStack LLC. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/055_add_indexes_to_instances.py'}]}]",2,4,0,ABANDONED,False,https://review.opendev.org/#/c/986,"Migration 055: Adds indexes on `instances` to uuid, reservation_id, display_name and power_state.",True,{},False,{},False,{}
381,969,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 992, 'end_line': 994, 'comment': '# Run it twice to make it fault if it does not handle # instances without fixed networks # If this fails in either, it does not handle having no addresses', 'include_SATD': False}], 'filename': 'nova/tests/test_network.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 994, 'end_line': 996, 'comment': '# Run it twice to make it fault if it does not handle # instances without fixed networks # If this fails in either, it does not handle having no addresses', 'include_SATD': False}], 'filename': 'nova/tests/test_network.py'}]}, {'revision': 5, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 994, 'end_line': 996, 'comment': '# Run it twice to make it fault if it does not handle # instances without fixed networks # If this fails in either, it does not handle having no addresses', 'include_SATD': False}], 'filename': 'nova/tests/test_network.py'}]}, {'revision': 6, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 994, 'end_line': 996, 'comment': '# Run it twice to make it fault if it does not handle # instances without fixed networks # If this fails in either, it does not handle having no addresses', 'include_SATD': False}], 'filename': 'nova/tests/test_network.py'}]}]",6,11,0,MERGED,True,https://review.opendev.org/#/c/969,Fix deletion of instances without fixed ips.,True,{},False,{},False,{}
382,972,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 152, 'end_line': 152, 'comment': '# First things first, make sure our venv has the latest pip.', 'include_SATD': False}], 'filename': 'tools/install_venv.py'}]}]",1,3,0,MERGED,True,https://review.opendev.org/#/c/972,Upgrade pip in the venv when we build it.,True,{},False,{},False,{}
383,993,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/openstack/__init__.py'}]}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/993,Don't leak exceptions out to users,True,{},False,{},False,{}
384,997,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/log.py'}]}]",1,3,0,ABANDONED,False,https://review.opendev.org/#/c/997,Ensure non-default FLAGS.logfile_mode is properly converted to an octet.,True,{},False,{},False,{}
385,976,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 988, 'end_line': 988, 'comment': ""# Prefer uuid but we'll also take cidr for backwards compatibility"", 'include_SATD': False}], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 111, 'end_line': 114, 'comment': ""# TODO(bgh): The project_id isn't getting populated here for some # reason.. I'm not sure if it's an invalid assumption or just a bug. # In order to get the right quantum_net_id we'll have to query all the # project_ids for now."", 'include_SATD': True}], 'filename': 'nova/network/quantum/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/quantum/nova_ipam_lib.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 988, 'end_line': 988, 'comment': ""# Prefer uuid but we'll also take cidr for backwards compatibility"", 'include_SATD': False}], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 111, 'end_line': 114, 'comment': ""# TODO(bgh): The project_id isn't getting populated here for some # reason.. I'm not sure if it's an invalid assumption or just a bug. # In order to get the right quantum_net_id we'll have to query all the # project_ids for now."", 'include_SATD': True}], 'filename': 'nova/network/quantum/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/quantum/nova_ipam_lib.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_nova_manage.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 988, 'end_line': 988, 'comment': ""# Prefer uuid but we'll also take cidr for backwards compatibility"", 'include_SATD': False}], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 111, 'end_line': 114, 'comment': ""# TODO(bgh): The project_id isn't getting populated here for some # reason.. I'm not sure if it's an invalid assumption or just a bug. # In order to get the right quantum_net_id we'll have to query all the # project_ids for now."", 'include_SATD': True}], 'filename': 'nova/network/quantum/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/quantum/nova_ipam_lib.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_nova_manage.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quantum.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 988, 'end_line': 988, 'comment': ""# Prefer uuid but we'll also take cidr for backwards compatibility"", 'include_SATD': False}], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 111, 'end_line': 114, 'comment': ""# TODO(bgh): The project_id isn't getting populated here for some # reason.. I'm not sure if it's an invalid assumption or just a bug. # In order to get the right quantum_net_id we'll have to query all the # project_ids for now."", 'include_SATD': True}], 'filename': 'nova/network/quantum/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/quantum/nova_ipam_lib.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_nova_manage.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quantum.py'}]}, {'revision': 5, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 988, 'end_line': 988, 'comment': ""# Prefer uuid but we'll also take cidr for backwards compatibility"", 'include_SATD': False}], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 111, 'end_line': 114, 'comment': ""# TODO(bgh): The project_id isn't getting populated here for some # reason.. I'm not sure if it's an invalid assumption or just a bug. # In order to get the right quantum_net_id we'll have to query all the # project_ids for now."", 'include_SATD': True}], 'filename': 'nova/network/quantum/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/quantum/nova_ipam_lib.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_nova_manage.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quantum.py'}]}, {'revision': 6, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 992, 'end_line': 992, 'comment': ""# Prefer uuid but we'll also take cidr for backwards compatibility"", 'include_SATD': False}], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 111, 'end_line': 114, 'comment': ""# TODO(bgh): The project_id isn't getting populated here for some # reason.. I'm not sure if it's an invalid assumption or just a bug. # In order to get the right quantum_net_id we'll have to query all the # project_ids for now."", 'include_SATD': True}], 'filename': 'nova/network/quantum/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/quantum/nova_ipam_lib.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_nova_manage.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quantum.py'}]}, {'revision': 7, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 992, 'end_line': 992, 'comment': ""# Prefer uuid but we'll also take cidr for backwards compatibility"", 'include_SATD': False}], 'filename': 'nova/network/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 111, 'end_line': 114, 'comment': ""# TODO(bgh): The project_id isn't getting populated here for some # reason.. I'm not sure if it's an invalid assumption or just a bug. # In order to get the right quantum_net_id we'll have to query all the # project_ids for now."", 'include_SATD': True}], 'filename': 'nova/network/quantum/manager.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/quantum/nova_ipam_lib.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_nova_manage.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quantum.py'}]}]",7,16,0,MERGED,True,https://review.opendev.org/#/c/976,Change network delete to delete by uuid or cidr,True,"{""# TODO(bgh): The project_id isn't getting populated here for some # reason.. I'm not sure if it's an invalid assumption or just a bug. # In order to get the right quantum_net_id we'll have to query all the # project_ids for now."": 1}",True,{},False,{}
386,977,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 285, 'end_line': 285, 'comment': '# And then we add a floating-snat chain and jump to first thing in', 'include_SATD': False}], 'b_comments': [{'start_line': 285, 'end_line': 285, 'comment': '# And then we add a float-snat chain and jump to first thing in', 'include_SATD': False}], 'filename': 'nova/network/linux_net.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/977,Change floating-snat to float-snat,True,{},False,{},False,{}
387,978,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 641, 'end_line': 642, 'comment': '# Using symlinks can cause problems here so just compare the name # of the file itself', 'include_SATD': False}, {'start_line': 1003, 'end_line': 1003, 'comment': ""# Don't forward traffic unless we were told to be a gateway"", 'include_SATD': False}, {'start_line': 1041, 'end_line': 1042, 'comment': ""# If we weren't instructed to act as a gateway then add the # appropriate flows to block all non-dhcp traffic."", 'include_SATD': False}], 'filename': 'nova/network/linux_net.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/manager.py'}, {'a_comments': [{'start_line': 111, 'end_line': 114, 'comment': ""# TODO(bgh): The project_id isn't getting populated here for some # reason.. I'm not sure if it's an invalid assumption or just a bug. # In order to get the right quantum_net_id we'll have to query all the # project_ids for now."", 'include_SATD': True}], 'b_comments': [{'start_line': 75, 'end_line': 78, 'comment': ""# TODO(bgh): We'll need to enable these when we implement the full L3 # functionalities # self.driver.ensure_metadata_ip() # self.driver.metadata_forward()"", 'include_SATD': True}, {'start_line': 171, 'end_line': 173, 'comment': ""# Quantum may also know about networks that aren't in the networks # table so we need to query Quanutm for any tenant networks and add # them to net_proj_pairs."", 'include_SATD': False}, {'start_line': 193, 'end_line': 194, 'comment': ""# We may not be able to get a network_ref here if this network # isn't in the database (i.e. it came from Quantum)."", 'include_SATD': False}, {'start_line': 201, 'end_line': 210, 'comment': ""# NOTE(bgh): We need to document this somewhere but since # we don't know the priority of any networks we get from # quantum we just give them a priority of 0.  If its # necessary to specify the order of the vifs and what # network they map to then the user will have to use the # OSCreateServer extension and specify them explicitly. # # In the future users will be able to tag quantum networks # with a priority .. and at that point we can update the # code here to reflect that."", 'include_SATD': False}, {'start_line': 222, 'end_line': 222, 'comment': '# Tell melange to allocate an IP', 'include_SATD': False}, {'start_line': 225, 'end_line': 225, 'comment': '# Set up/start the dhcp server for this network if necessary', 'include_SATD': False}, {'start_line': 235, 'end_line': 237, 'comment': '# Figure out the ipam tenant id for this subnet:  We need to # query for the tenant_id since the network could be created # with the project_id as the tenant or the default tenant.', 'include_SATD': False}, {'start_line': 240, 'end_line': 240, 'comment': '# Figure out what subnets correspond to this network', 'include_SATD': False}, {'start_line': 243, 'end_line': 244, 'comment': '# Set up (or find) the dhcp server for each of the subnets # returned above (both v4 and v6).', 'include_SATD': False}, {'start_line': 248, 'end_line': 250, 'comment': ""# Fill in some of the network fields that we would have # previously gotten from the network table (they'll be # passed to the linux_net functions)."", 'include_SATD': False}, {'start_line': 254, 'end_line': 254, 'comment': '# TODO(bgh): Melange should probably track dhcp_start', 'include_SATD': True}, {'start_line': 260, 'end_line': 260, 'comment': ""# Construct the interface id that we'll use for the bridge"", 'include_SATD': False}, {'start_line': 263, 'end_line': 267, 'comment': ""# Query quantum to see if we've already created a port for # the gateway device and attached the device to the port. # If we haven't then we need to intiialize it and create # it.  This device will be the one serving dhcp via # dnsmasq."", 'include_SATD': False}, {'start_line': 271, 'end_line': 271, 'comment': '# No dhcp server has been started', 'include_SATD': False}, {'start_line': 280, 'end_line': 280, 'comment': ""# We've already got one and its plugged in"", 'include_SATD': False}, {'start_line': 422, 'end_line': 423, 'comment': '# If DHCP is enabled on this network then we need to update the # leases and restart the server.', 'include_SATD': False}, {'start_line': 434, 'end_line': 435, 'comment': '# TODO(bgh): At some point we should consider merging enable_dhcp() and # update_dhcp()', 'include_SATD': True}, {'start_line': 438, 'end_line': 438, 'comment': '# Figure out what subnet corresponds to this network/vif', 'include_SATD': False}, {'start_line': 444, 'end_line': 446, 'comment': ""# Fill in some of the network fields that we would have # previously gotten from the network table (they'll be # passed to the linux_net functions)."", 'include_SATD': False}, {'start_line': 454, 'end_line': 454, 'comment': '# And remove the dhcp mappings for the subnet', 'include_SATD': False}, {'start_line': 458, 'end_line': 458, 'comment': '# Restart dnsmasq', 'include_SATD': False}, {'start_line': 462, 'end_line': 463, 'comment': '# TODO(bgh): if this is the last instance for the network # then we should actually just kill the dhcp server.', 'include_SATD': True}, {'start_line': 480, 'end_line': 484, 'comment': ""# NOTE(bgh): deallocate_for_instance will take care of this..  The reason # we're providing this is so that NetworkManager::release_fixed_ip() isn't # called.  It does some database operations that we don't want to happen # and since the majority of the stuff that it does is already taken care # of in our deallocate_for_instance call we don't need to do anything."", 'include_SATD': True}], 'filename': 'nova/network/quantum/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 139, 'end_line': 140, 'comment': '# TODO(bgh): This request fails if you add the "".json"" to the end so # it has to call do_request itself.  Melange bug?', 'include_SATD': True}], 'filename': 'nova/network/quantum/melange_connection.py'}, {'a_comments': [], 'b_comments': [{'start_line': 158, 'end_line': 160, 'comment': '# TODO(bgh): Rename this method .. it\'s now more of a # ""get_subnets_by_net_id_and_vif_id"" method, but we could probably just # call it ""get_subnets"".', 'include_SATD': True}], 'filename': 'nova/network/quantum/melange_ipam_lib.py'}, {'a_comments': [], 'b_comments': [{'start_line': 209, 'end_line': 209, 'comment': '# Get all allocated IPs that are part of this subnet', 'include_SATD': False}, {'start_line': 212, 'end_line': 212, 'comment': '# Skip unallocated IPs', 'include_SATD': False}], 'filename': 'nova/network/quantum/nova_ipam_lib.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/network/quantum/quantum_connection.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/__init__.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_network.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_nova_manage.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quantum.py'}]}]",1,1,0,ABANDONED,False,https://review.opendev.org/#/c/978,Add DHCP support to the QuantumManager and break apart dhcp/gateway,True,"{""# TODO(bgh): We'll need to enable these when we implement the full L3 # functionalities # self.driver.ensure_metadata_ip() # self.driver.metadata_forward()"": 1, '# TODO(bgh): Melange should probably track dhcp_start': 1, '# TODO(bgh): At some point we should consider merging enable_dhcp() and # update_dhcp()': 1, '# TODO(bgh): if this is the last instance for the network # then we should actually just kill the dhcp server.': 1, ""# NOTE(bgh): deallocate_for_instance will take care of this..  The reason # we're providing this is so that NetworkManager::release_fixed_ip() isn't # called.  It does some database operations that we don't want to happen # and since the majority of the stuff that it does is already taken care # of in our deallocate_for_instance call we don't need to do anything."": 1, '# TODO(bgh): This request fails if you add the "".json"" to the end so # it has to call do_request itself.  Melange bug?': 1, '# TODO(bgh): Rename this method .. it\'s now more of a # ""get_subnets_by_net_id_and_vif_id"" method, but we could probably just # call it ""get_subnets"".': 1}",True,"{""# TODO(bgh): The project_id isn't getting populated here for some # reason.. I'm not sure if it's an invalid assumption or just a bug. # In order to get the right quantum_net_id we'll have to query all the # project_ids for now."": 1}",True,{}
388,996,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/image/fake.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_image.py'}, {'a_comments': [], 'b_comments': [{'start_line': 348, 'end_line': 348, 'comment': '# Start test', 'include_SATD': False}, {'start_line': 351, 'end_line': 352, 'comment': '# Assign image_ref = 3 from nova/images/fakes for testing # ami image', 'include_SATD': False}, {'start_line': 356, 'end_line': 356, 'comment': '# Assuming that base image already exists in image_service', 'include_SATD': False}, {'start_line': 363, 'end_line': 364, 'comment': '# Create new image. It will be updated in snapshot method # To work with it from snapshot, the single image_service is needed', 'include_SATD': False}], 'filename': 'nova/tests/test_libvirt.py'}, {'a_comments': [], 'b_comments': [{'start_line': 423, 'end_line': 423, 'comment': '# NOTE(vish): assume amis are raw', 'include_SATD': False}, {'start_line': 428, 'end_line': 428, 'comment': '# NOTE(vish): glance forces ami disk format to be ami', 'include_SATD': False}], 'filename': 'nova/virt/libvirt/connection.py'}]}]",1,2,0,MERGED,True,https://review.opendev.org/#/c/996,Makes snapshots work for amis. Fixes bug 873156,True,{},False,{},False,{}
389,998,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 761, 'end_line': 761, 'comment': '# pylint: disable=W0703', 'include_SATD': False}], 'b_comments': [], 'filename': 'nova/network/linux_net.py'}]}]",1,9,0,ABANDONED,False,https://review.opendev.org/#/c/998,Fixes bug 872459.,True,{},False,{},False,{}
390,1000,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 467, 'end_line': 467, 'comment': '# Upload that image to the image service', 'include_SATD': False}, {'start_line': 474, 'end_line': 474, 'comment': '# Clean up', 'include_SATD': False}], 'b_comments': [{'start_line': 468, 'end_line': 468, 'comment': '# Upload that image to the image service', 'include_SATD': False}, {'start_line': 476, 'end_line': 476, 'comment': '# Clean up', 'include_SATD': False}], 'filename': 'nova/virt/libvirt/connection.py'}]}]",1,3,0,ABANDONED,False,https://review.opendev.org/#/c/1000,Enforce snapshot cleanup.,True,{},False,{},False,{}
391,999,"[{'revision': 1, 'changed_files': [{'a_comments': [{'start_line': 385, 'end_line': 388, 'comment': ""# NOTE(vish): This could be a cast because we don't do anything #             with the address currently, but I'm leaving it as #             a call to ensure that network setup completes.  We #             will eventually also need to save the address here."", 'include_SATD': False}, {'start_line': 395, 'end_line': 398, 'comment': '# TODO(tr3buchet) not really sure how this should be handled. # virt requires network_info to be passed in but stub_network # is enabled. Setting to [] for now will cause virt to skip # all vif creation and network injection, maybe this is correct', 'include_SATD': True}], 'b_comments': [{'start_line': 364, 'end_line': 367, 'comment': '# TODO(tr3buchet) not really sure how this should be handled. # virt requires network_info to be passed in but stub_network # is enabled. Setting to [] for now will cause virt to skip # all vif creation and network injection, maybe this is correct', 'include_SATD': True}, {'start_line': 370, 'end_line': 373, 'comment': ""# NOTE(vish): This could be a cast because we don't do # anything with the address currently, but I'm leaving it as a # call to ensure that network setup completes.  We will # eventually also need to save the address here."", 'include_SATD': False}, {'start_line': 466, 'end_line': 467, 'comment': '# NOTE(sirp): 3-arg raise needed since Eventlet clears exceptions # when switching between greenthreads.', 'include_SATD': False}, {'start_line': 472, 'end_line': 474, 'comment': '# FIXME(sirp): when/if # httpsgithub.com/jcrocholl/pep8/pull/27 merges, we can add # a per-line disable flag here for W602', 'include_SATD': True}], 'filename': 'nova/compute/manager.py'}]}]",1,3,0,ABANDONED,False,https://review.opendev.org/#/c/999,Deallocate ip if build fails.,True,"{'# TODO(tr3buchet) not really sure how this should be handled. # virt requires network_info to be passed in but stub_network # is enabled. Setting to [] for now will cause virt to skip # all vif creation and network injection, maybe this is correct': 1, '# FIXME(sirp): when/if # httpsgithub.com/jcrocholl/pep8/pull/27 merges, we can add # a per-line disable flag here for W602': 1}",True,"{'# TODO(tr3buchet) not really sure how this should be handled. # virt requires network_info to be passed in but stub_network # is enabled. Setting to [] for now will cause virt to skip # all vif creation and network injection, maybe this is correct': 1}",True,{}
392,988,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/ec2utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1592, 'end_line': 1592, 'comment': '###################', 'include_SATD': False}], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 4010, 'end_line': 4010, 'comment': '####################', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/055_add_s3_images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [{'start_line': 42, 'end_line': 42, 'comment': '# check if this is not a uri', 'include_SATD': False}], 'filename': 'nova/image/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 44, 'end_line': 44, 'comment': ""# NOTE(bcwaldon): was image '123456'"", 'include_SATD': False}, {'start_line': 59, 'end_line': 59, 'comment': ""# NOTE(bcwaldon): was image 'fake'"", 'include_SATD': False}, {'start_line': 73, 'end_line': 73, 'comment': ""# NOTE(bcwaldon): was image '2'"", 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': ""# NOTE(bcwaldon): was image '1'"", 'include_SATD': False}, {'start_line': 101, 'end_line': 101, 'comment': ""# NOTE(bcwaldon): was image '3'"", 'include_SATD': False}], 'filename': 'nova/image/fake.py'}, {'a_comments': [], 'b_comments': [{'start_line': 102, 'end_line': 102, 'comment': '# check if this is an id', 'include_SATD': False}], 'filename': 'nova/image/glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 199, 'end_line': 200, 'comment': '#TODO(bcwaldon): right now, this removes user-defined ids. # We need to re-enable this.', 'include_SATD': True}, {'start_line': 205, 'end_line': 205, 'comment': '# extract the new uuid and generate an int id to present back to user', 'include_SATD': False}, {'start_line': 209, 'end_line': 209, 'comment': '# return image_uuid so the caller can still make use of image_service', 'include_SATD': False}], 'filename': 'nova/image/s3.py'}, {'a_comments': [], 'b_comments': [{'start_line': 94, 'end_line': 94, 'comment': '# make sure we can map ami-00000001/2 to a uuid in FakeImageService', 'include_SATD': False}], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_urlmap.py'}, {'a_comments': [], 'b_comments': [{'start_line': 66, 'end_line': 66, 'comment': ""# set up one fixture to test shows, should have id '1'"", 'include_SATD': False}], 'filename': 'nova/tests/image/test_s3.py'}, {'a_comments': [{'start_line': 25, 'end_line': 25, 'comment': '# For the flags', 'include_SATD': False}], 'b_comments': [{'start_line': 27, 'end_line': 27, 'comment': '# For the flags', 'include_SATD': False}], 'filename': 'nova/tests/integrated/integrated_helpers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_scheduler.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_image.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quota.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/ec2utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1592, 'end_line': 1592, 'comment': '###################', 'include_SATD': False}], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 4010, 'end_line': 4010, 'comment': '####################', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/055_add_s3_images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [{'start_line': 42, 'end_line': 42, 'comment': '# check if this is not a uri', 'include_SATD': False}], 'filename': 'nova/image/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 44, 'end_line': 44, 'comment': ""# NOTE(bcwaldon): was image '123456'"", 'include_SATD': False}, {'start_line': 59, 'end_line': 59, 'comment': ""# NOTE(bcwaldon): was image 'fake'"", 'include_SATD': False}, {'start_line': 73, 'end_line': 73, 'comment': ""# NOTE(bcwaldon): was image '2'"", 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': ""# NOTE(bcwaldon): was image '1'"", 'include_SATD': False}, {'start_line': 101, 'end_line': 101, 'comment': ""# NOTE(bcwaldon): was image '3'"", 'include_SATD': False}], 'filename': 'nova/image/fake.py'}, {'a_comments': [], 'b_comments': [{'start_line': 102, 'end_line': 102, 'comment': '# check if this is an id', 'include_SATD': False}], 'filename': 'nova/image/glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 199, 'end_line': 200, 'comment': '#TODO(bcwaldon): right now, this removes user-defined ids. # We need to re-enable this.', 'include_SATD': True}, {'start_line': 205, 'end_line': 205, 'comment': '# extract the new uuid and generate an int id to present back to user', 'include_SATD': False}, {'start_line': 209, 'end_line': 209, 'comment': '# return image_uuid so the caller can still make use of image_service', 'include_SATD': False}], 'filename': 'nova/image/s3.py'}, {'a_comments': [], 'b_comments': [{'start_line': 94, 'end_line': 94, 'comment': '# make sure we can map ami-00000001/2 to a uuid in FakeImageService', 'include_SATD': False}], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_urlmap.py'}, {'a_comments': [], 'b_comments': [{'start_line': 66, 'end_line': 66, 'comment': ""# set up one fixture to test shows, should have id '1'"", 'include_SATD': False}], 'filename': 'nova/tests/image/test_s3.py'}, {'a_comments': [{'start_line': 25, 'end_line': 25, 'comment': '# For the flags', 'include_SATD': False}], 'b_comments': [{'start_line': 27, 'end_line': 27, 'comment': '# For the flags', 'include_SATD': False}], 'filename': 'nova/tests/integrated/integrated_helpers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_scheduler.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_image.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quota.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/ec2utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1592, 'end_line': 1592, 'comment': '###################', 'include_SATD': False}], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 4010, 'end_line': 4010, 'comment': '####################', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/055_add_s3_images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [{'start_line': 42, 'end_line': 42, 'comment': '# check if this is not a uri', 'include_SATD': False}], 'filename': 'nova/image/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 44, 'end_line': 44, 'comment': ""# NOTE(bcwaldon): was image '123456'"", 'include_SATD': False}, {'start_line': 59, 'end_line': 59, 'comment': ""# NOTE(bcwaldon): was image 'fake'"", 'include_SATD': False}, {'start_line': 73, 'end_line': 73, 'comment': ""# NOTE(bcwaldon): was image '2'"", 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': ""# NOTE(bcwaldon): was image '1'"", 'include_SATD': False}, {'start_line': 101, 'end_line': 101, 'comment': ""# NOTE(bcwaldon): was image '3'"", 'include_SATD': False}], 'filename': 'nova/image/fake.py'}, {'a_comments': [], 'b_comments': [{'start_line': 102, 'end_line': 102, 'comment': '# check if this is an id', 'include_SATD': False}], 'filename': 'nova/image/glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 199, 'end_line': 200, 'comment': '#TODO(bcwaldon): right now, this removes user-defined ids. # We need to re-enable this.', 'include_SATD': True}, {'start_line': 205, 'end_line': 205, 'comment': '# extract the new uuid and generate an int id to present back to user', 'include_SATD': False}, {'start_line': 209, 'end_line': 209, 'comment': '# return image_uuid so the caller can still make use of image_service', 'include_SATD': False}], 'filename': 'nova/image/s3.py'}, {'a_comments': [], 'b_comments': [{'start_line': 94, 'end_line': 94, 'comment': '# make sure we can map ami-00000001/2 to a uuid in FakeImageService', 'include_SATD': False}], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_urlmap.py'}, {'a_comments': [], 'b_comments': [{'start_line': 64, 'end_line': 64, 'comment': ""# set up one fixture to test shows, should have id '1'"", 'include_SATD': False}], 'filename': 'nova/tests/image/test_s3.py'}, {'a_comments': [{'start_line': 25, 'end_line': 25, 'comment': '# For the flags', 'include_SATD': False}], 'b_comments': [{'start_line': 27, 'end_line': 27, 'comment': '# For the flags', 'include_SATD': False}], 'filename': 'nova/tests/integrated/integrated_helpers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_scheduler.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quota.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/ec2utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1592, 'end_line': 1592, 'comment': '###################', 'include_SATD': False}], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 4005, 'end_line': 4005, 'comment': '####################', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/056_add_s3_images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [{'start_line': 42, 'end_line': 42, 'comment': '# check if this is not a uri', 'include_SATD': False}], 'filename': 'nova/image/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 44, 'end_line': 44, 'comment': ""# NOTE(bcwaldon): was image '123456'"", 'include_SATD': False}, {'start_line': 59, 'end_line': 59, 'comment': ""# NOTE(bcwaldon): was image 'fake'"", 'include_SATD': False}, {'start_line': 73, 'end_line': 73, 'comment': ""# NOTE(bcwaldon): was image '2'"", 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': ""# NOTE(bcwaldon): was image '1'"", 'include_SATD': False}, {'start_line': 101, 'end_line': 101, 'comment': ""# NOTE(bcwaldon): was image '3'"", 'include_SATD': False}], 'filename': 'nova/image/fake.py'}, {'a_comments': [], 'b_comments': [{'start_line': 102, 'end_line': 102, 'comment': '# check if this is an id', 'include_SATD': False}], 'filename': 'nova/image/glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 199, 'end_line': 200, 'comment': '#TODO(bcwaldon): right now, this removes user-defined ids. # We need to re-enable this.', 'include_SATD': True}, {'start_line': 205, 'end_line': 205, 'comment': '# extract the new uuid and generate an int id to present back to user', 'include_SATD': False}, {'start_line': 209, 'end_line': 209, 'comment': '# return image_uuid so the caller can still make use of image_service', 'include_SATD': False}], 'filename': 'nova/image/s3.py'}, {'a_comments': [], 'b_comments': [{'start_line': 94, 'end_line': 94, 'comment': '# make sure we can map ami-00000001/2 to a uuid in FakeImageService', 'include_SATD': False}], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_urlmap.py'}, {'a_comments': [], 'b_comments': [{'start_line': 64, 'end_line': 64, 'comment': ""# set up one fixture to test shows, should have id '1'"", 'include_SATD': False}], 'filename': 'nova/tests/image/test_s3.py'}, {'a_comments': [{'start_line': 25, 'end_line': 25, 'comment': '# For the flags', 'include_SATD': False}], 'b_comments': [{'start_line': 27, 'end_line': 27, 'comment': '# For the flags', 'include_SATD': False}], 'filename': 'nova/tests/integrated/integrated_helpers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_scheduler.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quota.py'}]}, {'revision': 5, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/ec2utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1592, 'end_line': 1592, 'comment': '###################', 'include_SATD': False}], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 4005, 'end_line': 4005, 'comment': '####################', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/056_add_s3_images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [{'start_line': 42, 'end_line': 42, 'comment': '# check if this is not a uri', 'include_SATD': False}], 'filename': 'nova/image/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 44, 'end_line': 44, 'comment': ""# NOTE(bcwaldon): was image '123456'"", 'include_SATD': False}, {'start_line': 59, 'end_line': 59, 'comment': ""# NOTE(bcwaldon): was image 'fake'"", 'include_SATD': False}, {'start_line': 73, 'end_line': 73, 'comment': ""# NOTE(bcwaldon): was image '2'"", 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': ""# NOTE(bcwaldon): was image '1'"", 'include_SATD': False}, {'start_line': 101, 'end_line': 101, 'comment': ""# NOTE(bcwaldon): was image '3'"", 'include_SATD': False}], 'filename': 'nova/image/fake.py'}, {'a_comments': [], 'b_comments': [{'start_line': 102, 'end_line': 102, 'comment': '# check if this is an id', 'include_SATD': False}], 'filename': 'nova/image/glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 199, 'end_line': 200, 'comment': '#TODO(bcwaldon): right now, this removes user-defined ids. # We need to re-enable this.', 'include_SATD': True}, {'start_line': 205, 'end_line': 205, 'comment': '# extract the new uuid and generate an int id to present back to user', 'include_SATD': False}, {'start_line': 209, 'end_line': 209, 'comment': '# return image_uuid so the caller can still make use of image_service', 'include_SATD': False}], 'filename': 'nova/image/s3.py'}, {'a_comments': [], 'b_comments': [{'start_line': 94, 'end_line': 94, 'comment': '# make sure we can map ami-00000001/2 to a uuid in FakeImageService', 'include_SATD': False}], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_urlmap.py'}, {'a_comments': [], 'b_comments': [{'start_line': 64, 'end_line': 64, 'comment': ""# set up one fixture to test shows, should have id '1'"", 'include_SATD': False}], 'filename': 'nova/tests/image/test_s3.py'}, {'a_comments': [{'start_line': 25, 'end_line': 25, 'comment': '# For the flags', 'include_SATD': False}], 'b_comments': [{'start_line': 27, 'end_line': 27, 'comment': '# For the flags', 'include_SATD': False}], 'filename': 'nova/tests/integrated/integrated_helpers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_scheduler.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quota.py'}]}, {'revision': 6, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/ec2utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1592, 'end_line': 1592, 'comment': '###################', 'include_SATD': False}], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 4005, 'end_line': 4005, 'comment': '####################', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/056_add_s3_images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [{'start_line': 42, 'end_line': 42, 'comment': '# check if this is not a uri', 'include_SATD': False}], 'filename': 'nova/image/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 44, 'end_line': 44, 'comment': ""# NOTE(bcwaldon): was image '123456'"", 'include_SATD': False}, {'start_line': 59, 'end_line': 59, 'comment': ""# NOTE(bcwaldon): was image 'fake'"", 'include_SATD': False}, {'start_line': 73, 'end_line': 73, 'comment': ""# NOTE(bcwaldon): was image '2'"", 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': ""# NOTE(bcwaldon): was image '1'"", 'include_SATD': False}, {'start_line': 101, 'end_line': 101, 'comment': ""# NOTE(bcwaldon): was image '3'"", 'include_SATD': False}], 'filename': 'nova/image/fake.py'}, {'a_comments': [], 'b_comments': [{'start_line': 102, 'end_line': 102, 'comment': '# check if this is an id', 'include_SATD': False}], 'filename': 'nova/image/glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 199, 'end_line': 200, 'comment': '#TODO(bcwaldon): right now, this removes user-defined ids. # We need to re-enable this.', 'include_SATD': True}, {'start_line': 205, 'end_line': 205, 'comment': '# extract the new uuid and generate an int id to present back to user', 'include_SATD': False}, {'start_line': 209, 'end_line': 209, 'comment': '# return image_uuid so the caller can still make use of image_service', 'include_SATD': False}], 'filename': 'nova/image/s3.py'}, {'a_comments': [], 'b_comments': [{'start_line': 94, 'end_line': 94, 'comment': '# make sure we can map ami-00000001/2 to a uuid in FakeImageService', 'include_SATD': False}], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_urlmap.py'}, {'a_comments': [], 'b_comments': [{'start_line': 64, 'end_line': 64, 'comment': ""# set up one fixture to test shows, should have id '1'"", 'include_SATD': False}], 'filename': 'nova/tests/image/test_s3.py'}, {'a_comments': [{'start_line': 25, 'end_line': 25, 'comment': '# For the flags', 'include_SATD': False}], 'b_comments': [{'start_line': 27, 'end_line': 27, 'comment': '# For the flags', 'include_SATD': False}], 'filename': 'nova/tests/integrated/integrated_helpers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_scheduler.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quota.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/connection.py'}]}, {'revision': 7, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/ec2utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1592, 'end_line': 1592, 'comment': '###################', 'include_SATD': False}], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 4005, 'end_line': 4005, 'comment': '####################', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/056_add_s3_images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [{'start_line': 42, 'end_line': 42, 'comment': '# check if this is not a uri', 'include_SATD': False}], 'filename': 'nova/image/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 44, 'end_line': 44, 'comment': ""# NOTE(bcwaldon): was image '123456'"", 'include_SATD': False}, {'start_line': 59, 'end_line': 59, 'comment': ""# NOTE(bcwaldon): was image 'fake'"", 'include_SATD': False}, {'start_line': 73, 'end_line': 73, 'comment': ""# NOTE(bcwaldon): was image '2'"", 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': ""# NOTE(bcwaldon): was image '1'"", 'include_SATD': False}, {'start_line': 101, 'end_line': 101, 'comment': ""# NOTE(bcwaldon): was image '3'"", 'include_SATD': False}], 'filename': 'nova/image/fake.py'}, {'a_comments': [], 'b_comments': [{'start_line': 102, 'end_line': 102, 'comment': '# check if this is an id', 'include_SATD': False}], 'filename': 'nova/image/glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 199, 'end_line': 200, 'comment': '#TODO(bcwaldon): right now, this removes user-defined ids. # We need to re-enable this.', 'include_SATD': True}, {'start_line': 205, 'end_line': 205, 'comment': '# extract the new uuid and generate an int id to present back to user', 'include_SATD': False}, {'start_line': 209, 'end_line': 209, 'comment': '# return image_uuid so the caller can still make use of image_service', 'include_SATD': False}], 'filename': 'nova/image/s3.py'}, {'a_comments': [], 'b_comments': [{'start_line': 94, 'end_line': 94, 'comment': '# make sure we can map ami-00000001/2 to a uuid in FakeImageService', 'include_SATD': False}], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_urlmap.py'}, {'a_comments': [], 'b_comments': [{'start_line': 64, 'end_line': 64, 'comment': ""# set up one fixture to test shows, should have id '1'"", 'include_SATD': False}], 'filename': 'nova/tests/image/test_s3.py'}, {'a_comments': [{'start_line': 25, 'end_line': 25, 'comment': '# For the flags', 'include_SATD': False}], 'b_comments': [{'start_line': 27, 'end_line': 27, 'comment': '# For the flags', 'include_SATD': False}], 'filename': 'nova/tests/integrated/integrated_helpers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_scheduler.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quota.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/connection.py'}]}, {'revision': 8, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/ec2utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1592, 'end_line': 1592, 'comment': '###################', 'include_SATD': False}], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 4005, 'end_line': 4005, 'comment': '####################', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/056_add_s3_images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [{'start_line': 42, 'end_line': 42, 'comment': '# check if this is not a uri', 'include_SATD': False}], 'filename': 'nova/image/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 44, 'end_line': 44, 'comment': ""# NOTE(bcwaldon): was image '123456'"", 'include_SATD': False}, {'start_line': 59, 'end_line': 59, 'comment': ""# NOTE(bcwaldon): was image 'fake'"", 'include_SATD': False}, {'start_line': 73, 'end_line': 73, 'comment': ""# NOTE(bcwaldon): was image '2'"", 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': ""# NOTE(bcwaldon): was image '1'"", 'include_SATD': False}, {'start_line': 101, 'end_line': 101, 'comment': ""# NOTE(bcwaldon): was image '3'"", 'include_SATD': False}], 'filename': 'nova/image/fake.py'}, {'a_comments': [], 'b_comments': [{'start_line': 103, 'end_line': 103, 'comment': '# check if this is an id', 'include_SATD': False}], 'filename': 'nova/image/glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 199, 'end_line': 200, 'comment': '#TODO(bcwaldon): right now, this removes user-defined ids. # We need to re-enable this.', 'include_SATD': True}, {'start_line': 205, 'end_line': 205, 'comment': '# extract the new uuid and generate an int id to present back to user', 'include_SATD': False}, {'start_line': 209, 'end_line': 209, 'comment': '# return image_uuid so the caller can still make use of image_service', 'include_SATD': False}], 'filename': 'nova/image/s3.py'}, {'a_comments': [], 'b_comments': [{'start_line': 94, 'end_line': 94, 'comment': '# make sure we can map ami-00000001/2 to a uuid in FakeImageService', 'include_SATD': False}], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_urlmap.py'}, {'a_comments': [], 'b_comments': [{'start_line': 64, 'end_line': 64, 'comment': ""# set up one fixture to test shows, should have id '1'"", 'include_SATD': False}], 'filename': 'nova/tests/image/test_s3.py'}, {'a_comments': [{'start_line': 25, 'end_line': 25, 'comment': '# For the flags', 'include_SATD': False}], 'b_comments': [{'start_line': 27, 'end_line': 27, 'comment': '# For the flags', 'include_SATD': False}], 'filename': 'nova/tests/integrated/integrated_helpers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_scheduler.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quota.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/connection.py'}]}, {'revision': 9, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/ec2utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1592, 'end_line': 1592, 'comment': '###################', 'include_SATD': False}], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 4005, 'end_line': 4005, 'comment': '####################', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/056_add_s3_images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [{'start_line': 42, 'end_line': 42, 'comment': '# check if this is not a uri', 'include_SATD': False}], 'filename': 'nova/image/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 44, 'end_line': 44, 'comment': ""# NOTE(bcwaldon): was image '123456'"", 'include_SATD': False}, {'start_line': 59, 'end_line': 59, 'comment': ""# NOTE(bcwaldon): was image 'fake'"", 'include_SATD': False}, {'start_line': 73, 'end_line': 73, 'comment': ""# NOTE(bcwaldon): was image '2'"", 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': ""# NOTE(bcwaldon): was image '1'"", 'include_SATD': False}, {'start_line': 101, 'end_line': 101, 'comment': ""# NOTE(bcwaldon): was image '3'"", 'include_SATD': False}], 'filename': 'nova/image/fake.py'}, {'a_comments': [], 'b_comments': [{'start_line': 103, 'end_line': 103, 'comment': '# check if this is an id', 'include_SATD': False}], 'filename': 'nova/image/glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 199, 'end_line': 200, 'comment': '#TODO(bcwaldon): right now, this removes user-defined ids. # We need to re-enable this.', 'include_SATD': True}, {'start_line': 205, 'end_line': 205, 'comment': '# extract the new uuid and generate an int id to present back to user', 'include_SATD': False}, {'start_line': 209, 'end_line': 209, 'comment': '# return image_uuid so the caller can still make use of image_service', 'include_SATD': False}], 'filename': 'nova/image/s3.py'}, {'a_comments': [], 'b_comments': [{'start_line': 94, 'end_line': 94, 'comment': '# make sure we can map ami-00000001/2 to a uuid in FakeImageService', 'include_SATD': False}], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_urlmap.py'}, {'a_comments': [], 'b_comments': [{'start_line': 64, 'end_line': 64, 'comment': ""# set up one fixture to test shows, should have id '1'"", 'include_SATD': False}], 'filename': 'nova/tests/image/test_s3.py'}, {'a_comments': [{'start_line': 25, 'end_line': 25, 'comment': '# For the flags', 'include_SATD': False}], 'b_comments': [{'start_line': 27, 'end_line': 27, 'comment': '# For the flags', 'include_SATD': False}], 'filename': 'nova/tests/integrated/integrated_helpers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_scheduler.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quota.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/connection.py'}]}, {'revision': 10, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/ec2utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1597, 'end_line': 1597, 'comment': '###################', 'include_SATD': False}], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 4019, 'end_line': 4019, 'comment': '####################', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/056_add_s3_images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [{'start_line': 42, 'end_line': 42, 'comment': '# check if this is not a uri', 'include_SATD': False}], 'filename': 'nova/image/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 44, 'end_line': 44, 'comment': ""# NOTE(bcwaldon): was image '123456'"", 'include_SATD': False}, {'start_line': 59, 'end_line': 59, 'comment': ""# NOTE(bcwaldon): was image 'fake'"", 'include_SATD': False}, {'start_line': 73, 'end_line': 73, 'comment': ""# NOTE(bcwaldon): was image '2'"", 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': ""# NOTE(bcwaldon): was image '1'"", 'include_SATD': False}, {'start_line': 101, 'end_line': 101, 'comment': ""# NOTE(bcwaldon): was image '3'"", 'include_SATD': False}], 'filename': 'nova/image/fake.py'}, {'a_comments': [], 'b_comments': [{'start_line': 103, 'end_line': 103, 'comment': '# check if this is an id', 'include_SATD': False}], 'filename': 'nova/image/glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 199, 'end_line': 200, 'comment': '#TODO(bcwaldon): right now, this removes user-defined ids. # We need to re-enable this.', 'include_SATD': True}, {'start_line': 205, 'end_line': 205, 'comment': '# extract the new uuid and generate an int id to present back to user', 'include_SATD': False}, {'start_line': 209, 'end_line': 209, 'comment': '# return image_uuid so the caller can still make use of image_service', 'include_SATD': False}], 'filename': 'nova/image/s3.py'}, {'a_comments': [], 'b_comments': [{'start_line': 123, 'end_line': 123, 'comment': '# make sure we can map ami-00000001/2 to a uuid in FakeImageService', 'include_SATD': False}], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_urlmap.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/image/test_glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 64, 'end_line': 64, 'comment': ""# set up one fixture to test shows, should have id '1'"", 'include_SATD': False}], 'filename': 'nova/tests/image/test_s3.py'}, {'a_comments': [{'start_line': 25, 'end_line': 25, 'comment': '# For the flags', 'include_SATD': False}], 'b_comments': [{'start_line': 27, 'end_line': 27, 'comment': '# For the flags', 'include_SATD': False}], 'filename': 'nova/tests/integrated/integrated_helpers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_scheduler.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quota.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/connection.py'}]}, {'revision': 11, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/ec2utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1597, 'end_line': 1597, 'comment': '###################', 'include_SATD': False}], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 4019, 'end_line': 4019, 'comment': '####################', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/056_add_s3_images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [{'start_line': 42, 'end_line': 42, 'comment': '# check if this is not a uri', 'include_SATD': False}], 'filename': 'nova/image/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 44, 'end_line': 44, 'comment': ""# NOTE(bcwaldon): was image '123456'"", 'include_SATD': False}, {'start_line': 59, 'end_line': 59, 'comment': ""# NOTE(bcwaldon): was image 'fake'"", 'include_SATD': False}, {'start_line': 73, 'end_line': 73, 'comment': ""# NOTE(bcwaldon): was image '2'"", 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': ""# NOTE(bcwaldon): was image '1'"", 'include_SATD': False}, {'start_line': 101, 'end_line': 101, 'comment': ""# NOTE(bcwaldon): was image '3'"", 'include_SATD': False}], 'filename': 'nova/image/fake.py'}, {'a_comments': [], 'b_comments': [{'start_line': 103, 'end_line': 103, 'comment': '# check if this is an id', 'include_SATD': False}], 'filename': 'nova/image/glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 204, 'end_line': 205, 'comment': '#TODO(bcwaldon): right now, this removes user-defined ids. # We need to re-enable this.', 'include_SATD': True}, {'start_line': 210, 'end_line': 210, 'comment': '# extract the new uuid and generate an int id to present back to user', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# return image_uuid so the caller can still make use of image_service', 'include_SATD': False}], 'filename': 'nova/image/s3.py'}, {'a_comments': [], 'b_comments': [{'start_line': 123, 'end_line': 123, 'comment': '# make sure we can map ami-00000001/2 to a uuid in FakeImageService', 'include_SATD': False}], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_urlmap.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/image/test_glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 64, 'end_line': 64, 'comment': ""# set up one fixture to test shows, should have id '1'"", 'include_SATD': False}], 'filename': 'nova/tests/image/test_s3.py'}, {'a_comments': [{'start_line': 25, 'end_line': 25, 'comment': '# For the flags', 'include_SATD': False}], 'b_comments': [{'start_line': 27, 'end_line': 27, 'comment': '# For the flags', 'include_SATD': False}], 'filename': 'nova/tests/integrated/integrated_helpers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_scheduler.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quota.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/connection.py'}]}, {'revision': 12, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 1540, 'end_line': 1541, 'comment': '# TODO(bcwaldon): We need access to the image uuid since we directly # call the compute api from this class', 'include_SATD': True}], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/ec2utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1597, 'end_line': 1597, 'comment': '###################', 'include_SATD': False}], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 4019, 'end_line': 4019, 'comment': '####################', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/056_add_s3_images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [{'start_line': 42, 'end_line': 42, 'comment': '# check if this is not a uri', 'include_SATD': False}], 'filename': 'nova/image/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 44, 'end_line': 44, 'comment': ""# NOTE(bcwaldon): was image '123456'"", 'include_SATD': False}, {'start_line': 59, 'end_line': 59, 'comment': ""# NOTE(bcwaldon): was image 'fake'"", 'include_SATD': False}, {'start_line': 73, 'end_line': 73, 'comment': ""# NOTE(bcwaldon): was image '2'"", 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': ""# NOTE(bcwaldon): was image '1'"", 'include_SATD': False}, {'start_line': 101, 'end_line': 101, 'comment': ""# NOTE(bcwaldon): was image '3'"", 'include_SATD': False}], 'filename': 'nova/image/fake.py'}, {'a_comments': [], 'b_comments': [{'start_line': 103, 'end_line': 103, 'comment': '# check if this is an id', 'include_SATD': False}], 'filename': 'nova/image/glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 102, 'end_line': 103, 'comment': '#NOTE(bcwaldon): sort asc to make sure we assign lower ids # to older images', 'include_SATD': False}, {'start_line': 108, 'end_line': 109, 'comment': '#NOTE(bcwaldon): sort asc to make sure we assign lower ids # to older images', 'include_SATD': False}, {'start_line': 217, 'end_line': 218, 'comment': '#TODO(bcwaldon): right now, this removes user-defined ids. # We need to re-enable this.', 'include_SATD': True}, {'start_line': 223, 'end_line': 223, 'comment': '# extract the new uuid and generate an int id to present back to user', 'include_SATD': False}, {'start_line': 227, 'end_line': 227, 'comment': '# return image_uuid so the caller can still make use of image_service', 'include_SATD': False}], 'filename': 'nova/image/s3.py'}, {'a_comments': [], 'b_comments': [{'start_line': 123, 'end_line': 123, 'comment': '# make sure we can map ami-00000001/2 to a uuid in FakeImageService', 'include_SATD': False}], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_urlmap.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/image/test_glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 64, 'end_line': 64, 'comment': ""# set up one fixture to test shows, should have id '1'"", 'include_SATD': False}], 'filename': 'nova/tests/image/test_s3.py'}, {'a_comments': [{'start_line': 25, 'end_line': 25, 'comment': '# For the flags', 'include_SATD': False}], 'b_comments': [{'start_line': 27, 'end_line': 27, 'comment': '# For the flags', 'include_SATD': False}], 'filename': 'nova/tests/integrated/integrated_helpers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_scheduler.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quota.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/connection.py'}]}, {'revision': 13, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 1540, 'end_line': 1541, 'comment': '# TODO(bcwaldon): We need access to the image uuid since we directly # call the compute api from this class', 'include_SATD': True}], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/ec2utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1597, 'end_line': 1597, 'comment': '###################', 'include_SATD': False}], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 4019, 'end_line': 4019, 'comment': '####################', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/056_add_s3_images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [{'start_line': 42, 'end_line': 42, 'comment': '# check if this is not a uri', 'include_SATD': False}], 'filename': 'nova/image/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 44, 'end_line': 44, 'comment': ""# NOTE(bcwaldon): was image '123456'"", 'include_SATD': False}, {'start_line': 59, 'end_line': 59, 'comment': ""# NOTE(bcwaldon): was image 'fake'"", 'include_SATD': False}, {'start_line': 73, 'end_line': 73, 'comment': ""# NOTE(bcwaldon): was image '2'"", 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': ""# NOTE(bcwaldon): was image '1'"", 'include_SATD': False}, {'start_line': 101, 'end_line': 101, 'comment': ""# NOTE(bcwaldon): was image '3'"", 'include_SATD': False}], 'filename': 'nova/image/fake.py'}, {'a_comments': [], 'b_comments': [{'start_line': 103, 'end_line': 103, 'comment': '# check if this is an id', 'include_SATD': False}], 'filename': 'nova/image/glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 114, 'end_line': 115, 'comment': '#NOTE(bcwaldon): sort asc to make sure we assign lower ids # to older images', 'include_SATD': False}, {'start_line': 120, 'end_line': 121, 'comment': '#NOTE(bcwaldon): sort asc to make sure we assign lower ids # to older images', 'include_SATD': False}, {'start_line': 233, 'end_line': 234, 'comment': '#TODO(bcwaldon): right now, this removes user-defined ids. # We need to re-enable this.', 'include_SATD': True}, {'start_line': 239, 'end_line': 239, 'comment': '# extract the new uuid and generate an int id to present back to user', 'include_SATD': False}, {'start_line': 243, 'end_line': 243, 'comment': '# return image_uuid so the caller can still make use of image_service', 'include_SATD': False}], 'filename': 'nova/image/s3.py'}, {'a_comments': [], 'b_comments': [{'start_line': 123, 'end_line': 123, 'comment': '# make sure we can map ami-00000001/2 to a uuid in FakeImageService', 'include_SATD': False}], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_urlmap.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/image/test_glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 64, 'end_line': 64, 'comment': ""# set up one fixture to test shows, should have id '1'"", 'include_SATD': False}], 'filename': 'nova/tests/image/test_s3.py'}, {'a_comments': [{'start_line': 25, 'end_line': 25, 'comment': '# For the flags', 'include_SATD': False}], 'b_comments': [{'start_line': 27, 'end_line': 27, 'comment': '# For the flags', 'include_SATD': False}], 'filename': 'nova/tests/integrated/integrated_helpers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_scheduler.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quota.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/connection.py'}]}, {'revision': 14, 'changed_files': [{'a_comments': [], 'b_comments': [{'start_line': 1544, 'end_line': 1545, 'comment': '# NOTE(bcwaldon): We need access to the image uuid since we directly # call the compute api from this class', 'include_SATD': False}, {'start_line': 1549, 'end_line': 1549, 'comment': '# NOTE(bcwaldon): We also need to be able to map image uuids to integers', 'include_SATD': False}], 'filename': 'nova/api/ec2/cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/api/ec2/ec2utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/compute/manager.py'}, {'a_comments': [], 'b_comments': [{'start_line': 1597, 'end_line': 1597, 'comment': '###################', 'include_SATD': False}], 'filename': 'nova/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 4019, 'end_line': 4019, 'comment': '####################', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'nova/db/sqlalchemy/migrate_repo/versions/056_add_s3_images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/db/sqlalchemy/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/flags.py'}, {'a_comments': [], 'b_comments': [{'start_line': 42, 'end_line': 42, 'comment': '# check if this is not a uri', 'include_SATD': False}], 'filename': 'nova/image/__init__.py'}, {'a_comments': [], 'b_comments': [{'start_line': 44, 'end_line': 44, 'comment': ""# NOTE(bcwaldon): was image '123456'"", 'include_SATD': False}, {'start_line': 59, 'end_line': 59, 'comment': ""# NOTE(bcwaldon): was image 'fake'"", 'include_SATD': False}, {'start_line': 73, 'end_line': 73, 'comment': ""# NOTE(bcwaldon): was image '2'"", 'include_SATD': False}, {'start_line': 87, 'end_line': 87, 'comment': ""# NOTE(bcwaldon): was image '1'"", 'include_SATD': False}, {'start_line': 101, 'end_line': 101, 'comment': ""# NOTE(bcwaldon): was image '3'"", 'include_SATD': False}], 'filename': 'nova/image/fake.py'}, {'a_comments': [], 'b_comments': [{'start_line': 103, 'end_line': 103, 'comment': '# check if this is an id', 'include_SATD': False}], 'filename': 'nova/image/glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 114, 'end_line': 115, 'comment': '#NOTE(bcwaldon): sort asc to make sure we assign lower ids # to older images', 'include_SATD': False}, {'start_line': 120, 'end_line': 121, 'comment': '#NOTE(bcwaldon): sort asc to make sure we assign lower ids # to older images', 'include_SATD': False}, {'start_line': 233, 'end_line': 234, 'comment': '#TODO(bcwaldon): right now, this removes user-defined ids. # We need to re-enable this.', 'include_SATD': True}, {'start_line': 239, 'end_line': 239, 'comment': '# extract the new uuid and generate an int id to present back to user', 'include_SATD': False}, {'start_line': 243, 'end_line': 243, 'comment': '# return image_uuid so the caller can still make use of image_service', 'include_SATD': False}], 'filename': 'nova/image/s3.py'}, {'a_comments': [], 'b_comments': [{'start_line': 128, 'end_line': 128, 'comment': '# make sure we can map ami-00000001/2 to a uuid in FakeImageService', 'include_SATD': False}], 'filename': 'nova/tests/api/ec2/test_cloud.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_createserverext.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/contrib/test_volumes.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/api/openstack/test_urlmap.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/image/test_glance.py'}, {'a_comments': [], 'b_comments': [{'start_line': 64, 'end_line': 64, 'comment': ""# set up one fixture to test shows, should have id '1'"", 'include_SATD': False}], 'filename': 'nova/tests/image/test_s3.py'}, {'a_comments': [{'start_line': 25, 'end_line': 25, 'comment': '# For the flags', 'include_SATD': False}], 'b_comments': [{'start_line': 27, 'end_line': 27, 'comment': '# For the flags', 'include_SATD': False}], 'filename': 'nova/tests/integrated/integrated_helpers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/integrated/test_servers.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/scheduler/test_scheduler.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/tests/test_quota.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'nova/virt/libvirt/connection.py'}]}]",14,28,8,MERGED,True,https://review.opendev.org/#/c/988,Creating uuid -> id mapping for S3 Image Service,True,"{'#TODO(bcwaldon): right now, this removes user-defined ids. # We need to re-enable this.': 1, '# TODO(bcwaldon): We need access to the image uuid since we directly # call the compute api from this class': 12}",True,{},False,{}
393,987,"[{'revision': 1, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 213, 'end_line': 213, 'comment': '# TODO(wwolf): do some sort of UUID-validity check here?', 'include_SATD': True}], 'filename': 'glance/registry/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/012_id_to_uuid.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/scrubber.py'}, {'a_comments': [{'start_line': 88, 'end_line': 89, 'comment': '# 2. HEAD /images/1 # Verify 404 returned', 'include_SATD': False}, {'start_line': 95, 'end_line': 113, 'comment': '# 3. POST /images with public image named Image1 # 4. HEAD /images/1', 'include_SATD': False}, {'start_line': 121, 'end_line': 121, 'comment': '# 5. GET /images/1', 'include_SATD': False}, {'start_line': 158, 'end_line': 158, 'comment': '# 6. GET /images', 'include_SATD': False}, {'start_line': 174, 'end_line': 174, 'comment': '# 7. GET /images/detail', 'include_SATD': False}, {'start_line': 202, 'end_line': 202, 'comment': '# 8. PUT /images/1 with custom properties of ""distro"" and ""arch""', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# 9. GET /images/detail', 'include_SATD': False}, {'start_line': 242, 'end_line': 242, 'comment': '# 10. PUT /images/1 and remove a previously existing property.', 'include_SATD': False}, {'start_line': 256, 'end_line': 256, 'comment': '# 11. PUT /images/1 and add a previously deleted property.', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': '# 4. PUT /images/1 with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 920, 'end_line': 920, 'comment': '# 2. GET /images with limit of 2', 'include_SATD': False}, {'start_line': 932, 'end_line': 932, 'comment': '# 3. GET /images with marker', 'include_SATD': False}, {'start_line': 944, 'end_line': 944, 'comment': '# 4. GET /images with marker and limit', 'include_SATD': False}, {'start_line': 955, 'end_line': 955, 'comment': '# 5. GET /images/detail with marker and limit', 'include_SATD': False}], 'b_comments': [{'start_line': 86, 'end_line': 86, 'comment': '# 2. POST /images with public image named Image1', 'include_SATD': False}, {'start_line': 105, 'end_line': 105, 'comment': '# 3. HEAD image', 'include_SATD': False}, {'start_line': 114, 'end_line': 114, 'comment': '# 4. GET image', 'include_SATD': False}, {'start_line': 152, 'end_line': 152, 'comment': '# 5. GET /images', 'include_SATD': False}, {'start_line': 168, 'end_line': 168, 'comment': '# 6. GET /images/detail', 'include_SATD': False}, {'start_line': 196, 'end_line': 196, 'comment': '# 7. PUT image with custom properties of ""distro"" and ""arch""', 'include_SATD': False}, {'start_line': 209, 'end_line': 209, 'comment': '# 8. GET /images/detail', 'include_SATD': False}, {'start_line': 237, 'end_line': 237, 'comment': '# 9. PUT image and remove a previously existing property.', 'include_SATD': False}, {'start_line': 252, 'end_line': 252, 'comment': '# 10. PUT image and add a previously deleted property.', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': '# 4. PUT image with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 922, 'end_line': 922, 'comment': '# 2. GET /images with all images', 'include_SATD': False}, {'start_line': 930, 'end_line': 930, 'comment': '# 3. GET /images with limit of 2', 'include_SATD': False}, {'start_line': 942, 'end_line': 942, 'comment': '# 4. GET /images with marker', 'include_SATD': False}, {'start_line': 954, 'end_line': 954, 'comment': '# 5. GET /images with marker and limit', 'include_SATD': False}, {'start_line': 967, 'end_line': 967, 'comment': '# 6. GET /images/detail with marker and limit', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 255, 'end_line': 261, 'comment': '# TODO(wwolf): should this work?! #cmd = ""bin/glance --port=%d show %s"" % (api_port, image_id) #exitcode, out, err = execute(cmd) #self.assertEqual(0, exitcode) #self.assertTrue(\'Status: killed\' in out)', 'include_SATD': True}], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_misc.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_private_images.py'}, {'a_comments': [{'start_line': 176, 'end_line': 176, 'comment': '# 2. GET /images/1', 'include_SATD': False}, {'start_line': 185, 'end_line': 185, 'comment': '# 3. GET /images/1 from registry in order to find S3 location', 'include_SATD': False}, {'start_line': 205, 'end_line': 205, 'comment': '# 5. GET /images/2 and make sure it can stream the image', 'include_SATD': False}, {'start_line': 213, 'end_line': 213, 'comment': '# 6. DELETE /images/1 and /images/2', 'include_SATD': False}], 'b_comments': [{'start_line': 178, 'end_line': 178, 'comment': '# 2. GET first image', 'include_SATD': False}, {'start_line': 189, 'end_line': 189, 'comment': '# 3. GET first image from registry in order to find S3 location', 'include_SATD': False}, {'start_line': 213, 'end_line': 213, 'comment': '# 5. GET second image and make sure it can stream the image', 'include_SATD': False}, {'start_line': 223, 'end_line': 223, 'comment': '# 6. DELETE first and second images', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_s3.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_shared_images.py'}, {'a_comments': [{'start_line': 203, 'end_line': 203, 'comment': '# HEAD /images/1', 'include_SATD': False}, {'start_line': 211, 'end_line': 211, 'comment': '# GET /images/1', 'include_SATD': False}, {'start_line': 285, 'end_line': 285, 'comment': '# DELETE /images/1', 'include_SATD': False}, {'start_line': 341, 'end_line': 341, 'comment': '# 4. HEAD /images/1', 'include_SATD': False}, {'start_line': 349, 'end_line': 349, 'comment': '# 5. GET /images/1', 'include_SATD': False}, {'start_line': 418, 'end_line': 418, 'comment': '# GET /images/1 and make sure data was uploaded', 'include_SATD': False}, {'start_line': 466, 'end_line': 466, 'comment': '# DELETE /images/1 and /image/2', 'include_SATD': False}], 'b_comments': [{'start_line': 205, 'end_line': 205, 'comment': '# HEAD image', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# GET image', 'include_SATD': False}, {'start_line': 290, 'end_line': 290, 'comment': '# DELETE image', 'include_SATD': False}, {'start_line': 349, 'end_line': 349, 'comment': '# 4. HEAD image', 'include_SATD': False}, {'start_line': 358, 'end_line': 358, 'comment': '# 5. GET image', 'include_SATD': False}, {'start_line': 430, 'end_line': 430, 'comment': '# GET image and make sure data was uploaded', 'include_SATD': False}, {'start_line': 483, 'end_line': 483, 'comment': '# DELETE boty images', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_swift.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/stubs.py'}, {'a_comments': [{'start_line': 254, 'end_line': 254, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 458, 'end_line': 458, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 1317, 'end_line': 1317, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1526, 'end_line': 1526, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1781, 'end_line': 1781, 'comment': ""# Image 2 has disk format 'vhd'"", 'include_SATD': False}, {'start_line': 2180, 'end_line': 2180, 'comment': '# deleted', 'include_SATD': False}], 'b_comments': [{'start_line': 276, 'end_line': 276, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 486, 'end_line': 486, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 1313, 'end_line': 1313, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1776, 'end_line': 1776, 'comment': ""# Image 2 has disk format 'vhd'"", 'include_SATD': False}, {'start_line': 2173, 'end_line': 2173, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 2316, 'end_line': 2326, 'comment': '# TODO(wwolf): should this be working?? #expected_headers = {\'x-image-meta-id\': \'3\', #\'x-image-meta-status\': \'killed\'} #req = webob.Request.blank(""/images"") #req.method = \'GET\' #res = req.get_response(self.api) #print res #self.assertEquals(res.status_int, 200) #for key, value in expected_headers.iteritems(): #self.assertEquals(value, res.headers[key])', 'include_SATD': True}], 'filename': 'glance/tests/unit/test_api.py'}, {'a_comments': [{'start_line': 187, 'end_line': 187, 'comment': ""#2'}"", 'include_SATD': False}, {'start_line': 865, 'end_line': 865, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 993, 'end_line': 993, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1018, 'end_line': 1018, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1529, 'end_line': 1529, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1612, 'end_line': 1612, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1651, 'end_line': 1651, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1678, 'end_line': 1678, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1705, 'end_line': 1705, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}], 'b_comments': [{'start_line': 193, 'end_line': 193, 'comment': ""#2'"", 'include_SATD': False}, {'start_line': 860, 'end_line': 860, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1527, 'end_line': 1527, 'comment': '# deleted', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_clients.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_filesystem_store.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_migrations.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_s3_store.py'}, {'a_comments': [{'start_line': 269, 'end_line': 269, 'comment': '# start image id arbitrarily high due to existing fixtures', 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/tests/unit/test_swift_store.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/utils.py'}]}, {'revision': 2, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 213, 'end_line': 213, 'comment': '# TODO(wwolf): do some sort of UUID-validity check here?', 'include_SATD': True}], 'filename': 'glance/registry/api/v1/images.py'}, {'a_comments': [{'start_line': 148, 'end_line': 149, 'comment': '#NOTE(bcwaldon): this is to prevent false matches when mysql compares # an integer to a string that begins with that integer', 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/012_id_to_uuid.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/scrubber.py'}, {'a_comments': [{'start_line': 88, 'end_line': 89, 'comment': '# 2. HEAD /images/1 # Verify 404 returned', 'include_SATD': False}, {'start_line': 95, 'end_line': 113, 'comment': '# 3. POST /images with public image named Image1 # 4. HEAD /images/1', 'include_SATD': False}, {'start_line': 121, 'end_line': 121, 'comment': '# 5. GET /images/1', 'include_SATD': False}, {'start_line': 158, 'end_line': 158, 'comment': '# 6. GET /images', 'include_SATD': False}, {'start_line': 174, 'end_line': 174, 'comment': '# 7. GET /images/detail', 'include_SATD': False}, {'start_line': 202, 'end_line': 202, 'comment': '# 8. PUT /images/1 with custom properties of ""distro"" and ""arch""', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# 9. GET /images/detail', 'include_SATD': False}, {'start_line': 242, 'end_line': 242, 'comment': '# 10. PUT /images/1 and remove a previously existing property.', 'include_SATD': False}, {'start_line': 256, 'end_line': 256, 'comment': '# 11. PUT /images/1 and add a previously deleted property.', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': '# 4. PUT /images/1 with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 920, 'end_line': 920, 'comment': '# 2. GET /images with limit of 2', 'include_SATD': False}, {'start_line': 932, 'end_line': 932, 'comment': '# 3. GET /images with marker', 'include_SATD': False}, {'start_line': 944, 'end_line': 944, 'comment': '# 4. GET /images with marker and limit', 'include_SATD': False}, {'start_line': 955, 'end_line': 955, 'comment': '# 5. GET /images/detail with marker and limit', 'include_SATD': False}], 'b_comments': [{'start_line': 86, 'end_line': 86, 'comment': '# 2. POST /images with public image named Image1', 'include_SATD': False}, {'start_line': 105, 'end_line': 105, 'comment': '# 3. HEAD image', 'include_SATD': False}, {'start_line': 114, 'end_line': 114, 'comment': '# 4. GET image', 'include_SATD': False}, {'start_line': 152, 'end_line': 152, 'comment': '# 5. GET /images', 'include_SATD': False}, {'start_line': 168, 'end_line': 168, 'comment': '# 6. GET /images/detail', 'include_SATD': False}, {'start_line': 196, 'end_line': 196, 'comment': '# 7. PUT image with custom properties of ""distro"" and ""arch""', 'include_SATD': False}, {'start_line': 209, 'end_line': 209, 'comment': '# 8. GET /images/detail', 'include_SATD': False}, {'start_line': 237, 'end_line': 237, 'comment': '# 9. PUT image and remove a previously existing property.', 'include_SATD': False}, {'start_line': 252, 'end_line': 252, 'comment': '# 10. PUT image and add a previously deleted property.', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': '# 4. PUT image with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 922, 'end_line': 922, 'comment': '# 2. GET /images with all images', 'include_SATD': False}, {'start_line': 930, 'end_line': 930, 'comment': '# 3. GET /images with limit of 2', 'include_SATD': False}, {'start_line': 942, 'end_line': 942, 'comment': '# 4. GET /images with marker', 'include_SATD': False}, {'start_line': 954, 'end_line': 954, 'comment': '# 5. GET /images with marker and limit', 'include_SATD': False}, {'start_line': 967, 'end_line': 967, 'comment': '# 6. GET /images/detail with marker and limit', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_misc.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_private_images.py'}, {'a_comments': [{'start_line': 176, 'end_line': 176, 'comment': '# 2. GET /images/1', 'include_SATD': False}, {'start_line': 185, 'end_line': 185, 'comment': '# 3. GET /images/1 from registry in order to find S3 location', 'include_SATD': False}, {'start_line': 205, 'end_line': 205, 'comment': '# 5. GET /images/2 and make sure it can stream the image', 'include_SATD': False}, {'start_line': 213, 'end_line': 213, 'comment': '# 6. DELETE /images/1 and /images/2', 'include_SATD': False}], 'b_comments': [{'start_line': 178, 'end_line': 178, 'comment': '# 2. GET first image', 'include_SATD': False}, {'start_line': 189, 'end_line': 189, 'comment': '# 3. GET first image from registry in order to find S3 location', 'include_SATD': False}, {'start_line': 213, 'end_line': 213, 'comment': '# 5. GET second image and make sure it can stream the image', 'include_SATD': False}, {'start_line': 223, 'end_line': 223, 'comment': '# 6. DELETE first and second images', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_s3.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_shared_images.py'}, {'a_comments': [{'start_line': 203, 'end_line': 203, 'comment': '# HEAD /images/1', 'include_SATD': False}, {'start_line': 211, 'end_line': 211, 'comment': '# GET /images/1', 'include_SATD': False}, {'start_line': 285, 'end_line': 285, 'comment': '# DELETE /images/1', 'include_SATD': False}, {'start_line': 341, 'end_line': 341, 'comment': '# 4. HEAD /images/1', 'include_SATD': False}, {'start_line': 349, 'end_line': 349, 'comment': '# 5. GET /images/1', 'include_SATD': False}, {'start_line': 418, 'end_line': 418, 'comment': '# GET /images/1 and make sure data was uploaded', 'include_SATD': False}, {'start_line': 466, 'end_line': 466, 'comment': '# DELETE /images/1 and /image/2', 'include_SATD': False}], 'b_comments': [{'start_line': 205, 'end_line': 205, 'comment': '# HEAD image', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# GET image', 'include_SATD': False}, {'start_line': 290, 'end_line': 290, 'comment': '# DELETE image', 'include_SATD': False}, {'start_line': 349, 'end_line': 349, 'comment': '# 4. HEAD image', 'include_SATD': False}, {'start_line': 358, 'end_line': 358, 'comment': '# 5. GET image', 'include_SATD': False}, {'start_line': 430, 'end_line': 430, 'comment': '# GET image and make sure data was uploaded', 'include_SATD': False}, {'start_line': 483, 'end_line': 483, 'comment': '# DELETE boty images', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_swift.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/stubs.py'}, {'a_comments': [{'start_line': 254, 'end_line': 254, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 458, 'end_line': 458, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 1317, 'end_line': 1317, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1526, 'end_line': 1526, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1781, 'end_line': 1781, 'comment': ""# Image 2 has disk format 'vhd'"", 'include_SATD': False}, {'start_line': 2180, 'end_line': 2180, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 2320, 'end_line': 2320, 'comment': '# Test the image was killed...', 'include_SATD': False}], 'b_comments': [{'start_line': 276, 'end_line': 276, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 486, 'end_line': 486, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 1313, 'end_line': 1313, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1776, 'end_line': 1776, 'comment': ""# Image 2 has disk format 'vhd'"", 'include_SATD': False}, {'start_line': 2173, 'end_line': 2173, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 2316, 'end_line': 2316, 'comment': '# Test that only one image was returned (that already exists)', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_api.py'}, {'a_comments': [{'start_line': 187, 'end_line': 187, 'comment': ""#2'}"", 'include_SATD': False}, {'start_line': 865, 'end_line': 865, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 993, 'end_line': 993, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1018, 'end_line': 1018, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1529, 'end_line': 1529, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1612, 'end_line': 1612, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1651, 'end_line': 1651, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1678, 'end_line': 1678, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1705, 'end_line': 1705, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}], 'b_comments': [{'start_line': 193, 'end_line': 193, 'comment': ""#2'"", 'include_SATD': False}, {'start_line': 860, 'end_line': 860, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1527, 'end_line': 1527, 'comment': '# deleted', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_clients.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_filesystem_store.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_migrations.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_s3_store.py'}, {'a_comments': [{'start_line': 269, 'end_line': 269, 'comment': '# start image id arbitrarily high due to existing fixtures', 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/tests/unit/test_swift_store.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/utils.py'}]}, {'revision': 3, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/api/v1/images.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/common/utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 213, 'end_line': 213, 'comment': '# TODO(wwolf): do some sort of UUID-validity check here?', 'include_SATD': True}], 'filename': 'glance/registry/api/v1/images.py'}, {'a_comments': [{'start_line': 148, 'end_line': 149, 'comment': '#NOTE(bcwaldon): this is to prevent false matches when mysql compares # an integer to a string that begins with that integer', 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/012_id_to_uuid.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/scrubber.py'}, {'a_comments': [{'start_line': 88, 'end_line': 89, 'comment': '# 2. HEAD /images/1 # Verify 404 returned', 'include_SATD': False}, {'start_line': 95, 'end_line': 113, 'comment': '# 3. POST /images with public image named Image1 # 4. HEAD /images/1', 'include_SATD': False}, {'start_line': 121, 'end_line': 121, 'comment': '# 5. GET /images/1', 'include_SATD': False}, {'start_line': 158, 'end_line': 158, 'comment': '# 6. GET /images', 'include_SATD': False}, {'start_line': 174, 'end_line': 174, 'comment': '# 7. GET /images/detail', 'include_SATD': False}, {'start_line': 202, 'end_line': 202, 'comment': '# 8. PUT /images/1 with custom properties of ""distro"" and ""arch""', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# 9. GET /images/detail', 'include_SATD': False}, {'start_line': 242, 'end_line': 242, 'comment': '# 10. PUT /images/1 and remove a previously existing property.', 'include_SATD': False}, {'start_line': 256, 'end_line': 256, 'comment': '# 11. PUT /images/1 and add a previously deleted property.', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': '# 4. PUT /images/1 with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 920, 'end_line': 920, 'comment': '# 2. GET /images with limit of 2', 'include_SATD': False}, {'start_line': 932, 'end_line': 932, 'comment': '# 3. GET /images with marker', 'include_SATD': False}, {'start_line': 944, 'end_line': 944, 'comment': '# 4. GET /images with marker and limit', 'include_SATD': False}, {'start_line': 955, 'end_line': 955, 'comment': '# 5. GET /images/detail with marker and limit', 'include_SATD': False}], 'b_comments': [{'start_line': 86, 'end_line': 86, 'comment': '# 2. POST /images with public image named Image1', 'include_SATD': False}, {'start_line': 105, 'end_line': 105, 'comment': '# 3. HEAD image', 'include_SATD': False}, {'start_line': 114, 'end_line': 114, 'comment': '# 4. GET image', 'include_SATD': False}, {'start_line': 152, 'end_line': 152, 'comment': '# 5. GET /images', 'include_SATD': False}, {'start_line': 168, 'end_line': 168, 'comment': '# 6. GET /images/detail', 'include_SATD': False}, {'start_line': 196, 'end_line': 196, 'comment': '# 7. PUT image with custom properties of ""distro"" and ""arch""', 'include_SATD': False}, {'start_line': 209, 'end_line': 209, 'comment': '# 8. GET /images/detail', 'include_SATD': False}, {'start_line': 237, 'end_line': 237, 'comment': '# 9. PUT image and remove a previously existing property.', 'include_SATD': False}, {'start_line': 252, 'end_line': 252, 'comment': '# 10. PUT image and add a previously deleted property.', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': '# 4. PUT image with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 922, 'end_line': 922, 'comment': '# 2. GET /images with all images', 'include_SATD': False}, {'start_line': 930, 'end_line': 930, 'comment': '# 3. GET /images with limit of 2', 'include_SATD': False}, {'start_line': 942, 'end_line': 942, 'comment': '# 4. GET /images with marker', 'include_SATD': False}, {'start_line': 954, 'end_line': 954, 'comment': '# 5. GET /images with marker and limit', 'include_SATD': False}, {'start_line': 967, 'end_line': 967, 'comment': '# 6. GET /images/detail with marker and limit', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_api.py'}, {'a_comments': [{'start_line': 251, 'end_line': 251, 'comment': ""# 3. Verify image status in show is 'killed'"", 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [{'start_line': 54, 'end_line': 54, 'comment': '# Verify no image 1', 'include_SATD': False}], 'b_comments': [{'start_line': 54, 'end_line': 54, 'comment': '# Verify no images', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_image_cache.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_misc.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_private_images.py'}, {'a_comments': [{'start_line': 176, 'end_line': 176, 'comment': '# 2. GET /images/1', 'include_SATD': False}, {'start_line': 185, 'end_line': 185, 'comment': '# 3. GET /images/1 from registry in order to find S3 location', 'include_SATD': False}, {'start_line': 205, 'end_line': 205, 'comment': '# 5. GET /images/2 and make sure it can stream the image', 'include_SATD': False}, {'start_line': 213, 'end_line': 213, 'comment': '# 6. DELETE /images/1 and /images/2', 'include_SATD': False}], 'b_comments': [{'start_line': 178, 'end_line': 178, 'comment': '# 2. GET first image', 'include_SATD': False}, {'start_line': 189, 'end_line': 189, 'comment': '# 3. GET first image from registry in order to find S3 location', 'include_SATD': False}, {'start_line': 213, 'end_line': 213, 'comment': '# 5. GET second image and make sure it can stream the image', 'include_SATD': False}, {'start_line': 223, 'end_line': 223, 'comment': '# 6. DELETE first and second images', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_s3.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_shared_images.py'}, {'a_comments': [{'start_line': 131, 'end_line': 132, 'comment': '# 2. HEAD /images/1 # Verify 404 returned', 'include_SATD': False}, {'start_line': 138, 'end_line': 156, 'comment': '# 3. POST /images with public image named Image1 # 4. HEAD /images/1', 'include_SATD': False}, {'start_line': 164, 'end_line': 164, 'comment': '# 5. GET /images/1', 'include_SATD': False}, {'start_line': 201, 'end_line': 201, 'comment': '# 6. GET /images', 'include_SATD': False}, {'start_line': 217, 'end_line': 217, 'comment': '# 7. GET /images/detail', 'include_SATD': False}, {'start_line': 245, 'end_line': 245, 'comment': '# 8. PUT /images/1 with custom properties of ""distro"" and ""arch""', 'include_SATD': False}, {'start_line': 257, 'end_line': 257, 'comment': '# 9. GET /images/detail', 'include_SATD': False}, {'start_line': 285, 'end_line': 285, 'comment': '# 10. PUT /images/1 and remove a previously existing property.', 'include_SATD': False}, {'start_line': 299, 'end_line': 299, 'comment': '# 11. PUT /images/1 and add a previously deleted property.', 'include_SATD': False}, {'start_line': 396, 'end_line': 396, 'comment': '# 4. PUT /images/1 with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 411, 'end_line': 411, 'comment': '# 5. HEAD /images', 'include_SATD': False}], 'b_comments': [{'start_line': 129, 'end_line': 129, 'comment': '# 2. POST /images with public image named Image1', 'include_SATD': False}, {'start_line': 149, 'end_line': 149, 'comment': '# 3. HEAD image', 'include_SATD': False}, {'start_line': 158, 'end_line': 158, 'comment': '# 4. GET image', 'include_SATD': False}, {'start_line': 196, 'end_line': 196, 'comment': '# 5. GET /images', 'include_SATD': False}, {'start_line': 212, 'end_line': 212, 'comment': '# 6. GET /images/detail', 'include_SATD': False}, {'start_line': 240, 'end_line': 240, 'comment': '# 7. PUT image with custom properties of ""distro"" and ""arch""', 'include_SATD': False}, {'start_line': 253, 'end_line': 253, 'comment': '# 8. GET /images/detail', 'include_SATD': False}, {'start_line': 281, 'end_line': 281, 'comment': '# 9. PUT image and remove a previously existing property.', 'include_SATD': False}, {'start_line': 296, 'end_line': 296, 'comment': '# 10. PUT image and add a previously deleted property.', 'include_SATD': False}, {'start_line': 397, 'end_line': 397, 'comment': '# 4. PUT image with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 413, 'end_line': 413, 'comment': '# 5. HEAD image', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_ssl.py'}, {'a_comments': [{'start_line': 203, 'end_line': 203, 'comment': '# HEAD /images/1', 'include_SATD': False}, {'start_line': 211, 'end_line': 211, 'comment': '# GET /images/1', 'include_SATD': False}, {'start_line': 285, 'end_line': 285, 'comment': '# DELETE /images/1', 'include_SATD': False}, {'start_line': 341, 'end_line': 341, 'comment': '# 4. HEAD /images/1', 'include_SATD': False}, {'start_line': 349, 'end_line': 349, 'comment': '# 5. GET /images/1', 'include_SATD': False}, {'start_line': 418, 'end_line': 418, 'comment': '# GET /images/1 and make sure data was uploaded', 'include_SATD': False}, {'start_line': 466, 'end_line': 466, 'comment': '# DELETE /images/1 and /image/2', 'include_SATD': False}], 'b_comments': [{'start_line': 205, 'end_line': 205, 'comment': '# HEAD image', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# GET image', 'include_SATD': False}, {'start_line': 290, 'end_line': 290, 'comment': '# DELETE image', 'include_SATD': False}, {'start_line': 349, 'end_line': 349, 'comment': '# 4. HEAD image', 'include_SATD': False}, {'start_line': 358, 'end_line': 358, 'comment': '# 5. GET image', 'include_SATD': False}, {'start_line': 430, 'end_line': 430, 'comment': '# GET image and make sure data was uploaded', 'include_SATD': False}, {'start_line': 483, 'end_line': 483, 'comment': '# DELETE boty images', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_swift.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/stubs.py'}, {'a_comments': [{'start_line': 254, 'end_line': 254, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 458, 'end_line': 458, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 1317, 'end_line': 1317, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1526, 'end_line': 1526, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1781, 'end_line': 1781, 'comment': ""# Image 2 has disk format 'vhd'"", 'include_SATD': False}, {'start_line': 2180, 'end_line': 2180, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 2320, 'end_line': 2320, 'comment': '# Test the image was killed...', 'include_SATD': False}], 'b_comments': [{'start_line': 276, 'end_line': 276, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 486, 'end_line': 486, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 1313, 'end_line': 1313, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1776, 'end_line': 1776, 'comment': ""# Image 2 has disk format 'vhd'"", 'include_SATD': False}, {'start_line': 2173, 'end_line': 2173, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 2316, 'end_line': 2316, 'comment': '# Test that only one image was returned (that already exists)', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_cache_middleware.py'}, {'a_comments': [{'start_line': 187, 'end_line': 187, 'comment': ""#2'}"", 'include_SATD': False}, {'start_line': 865, 'end_line': 865, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 993, 'end_line': 993, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1018, 'end_line': 1018, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1529, 'end_line': 1529, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1612, 'end_line': 1612, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1651, 'end_line': 1651, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1678, 'end_line': 1678, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1705, 'end_line': 1705, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}], 'b_comments': [{'start_line': 193, 'end_line': 193, 'comment': ""#2'"", 'include_SATD': False}, {'start_line': 860, 'end_line': 860, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1527, 'end_line': 1527, 'comment': '# deleted', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_clients.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_filesystem_store.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_migrations.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_s3_store.py'}, {'a_comments': [{'start_line': 269, 'end_line': 269, 'comment': '# start image id arbitrarily high due to existing fixtures', 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/tests/unit/test_swift_store.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/utils.py'}]}, {'revision': 4, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/common/utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/api/v1/images.py'}, {'a_comments': [{'start_line': 148, 'end_line': 149, 'comment': '#NOTE(bcwaldon): this is to prevent false matches when mysql compares # an integer to a string that begins with that integer', 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/012_id_to_uuid.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/scrubber.py'}, {'a_comments': [{'start_line': 88, 'end_line': 89, 'comment': '# 2. HEAD /images/1 # Verify 404 returned', 'include_SATD': False}, {'start_line': 95, 'end_line': 113, 'comment': '# 3. POST /images with public image named Image1 # 4. HEAD /images/1', 'include_SATD': False}, {'start_line': 121, 'end_line': 121, 'comment': '# 5. GET /images/1', 'include_SATD': False}, {'start_line': 158, 'end_line': 158, 'comment': '# 6. GET /images', 'include_SATD': False}, {'start_line': 174, 'end_line': 174, 'comment': '# 7. GET /images/detail', 'include_SATD': False}, {'start_line': 202, 'end_line': 202, 'comment': '# 8. PUT /images/1 with custom properties of ""distro"" and ""arch""', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# 9. GET /images/detail', 'include_SATD': False}, {'start_line': 242, 'end_line': 242, 'comment': '# 10. PUT /images/1 and remove a previously existing property.', 'include_SATD': False}, {'start_line': 256, 'end_line': 256, 'comment': '# 11. PUT /images/1 and add a previously deleted property.', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': '# 4. PUT /images/1 with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 920, 'end_line': 920, 'comment': '# 2. GET /images with limit of 2', 'include_SATD': False}, {'start_line': 932, 'end_line': 932, 'comment': '# 3. GET /images with marker', 'include_SATD': False}, {'start_line': 944, 'end_line': 944, 'comment': '# 4. GET /images with marker and limit', 'include_SATD': False}, {'start_line': 955, 'end_line': 955, 'comment': '# 5. GET /images/detail with marker and limit', 'include_SATD': False}], 'b_comments': [{'start_line': 86, 'end_line': 86, 'comment': '# 2. POST /images with public image named Image1', 'include_SATD': False}, {'start_line': 105, 'end_line': 105, 'comment': '# 3. HEAD image', 'include_SATD': False}, {'start_line': 114, 'end_line': 114, 'comment': '# 4. GET image', 'include_SATD': False}, {'start_line': 152, 'end_line': 152, 'comment': '# 5. GET /images', 'include_SATD': False}, {'start_line': 168, 'end_line': 168, 'comment': '# 6. GET /images/detail', 'include_SATD': False}, {'start_line': 196, 'end_line': 196, 'comment': '# 7. PUT image with custom properties of ""distro"" and ""arch""', 'include_SATD': False}, {'start_line': 209, 'end_line': 209, 'comment': '# 8. GET /images/detail', 'include_SATD': False}, {'start_line': 237, 'end_line': 237, 'comment': '# 9. PUT image and remove a previously existing property.', 'include_SATD': False}, {'start_line': 252, 'end_line': 252, 'comment': '# 10. PUT image and add a previously deleted property.', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': '# 4. PUT image with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 922, 'end_line': 922, 'comment': '# 2. GET /images with all images', 'include_SATD': False}, {'start_line': 930, 'end_line': 930, 'comment': '# 3. GET /images with limit of 2', 'include_SATD': False}, {'start_line': 942, 'end_line': 942, 'comment': '# 4. GET /images with marker', 'include_SATD': False}, {'start_line': 954, 'end_line': 954, 'comment': '# 5. GET /images with marker and limit', 'include_SATD': False}, {'start_line': 967, 'end_line': 967, 'comment': '# 6. GET /images/detail with marker and limit', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_api.py'}, {'a_comments': [{'start_line': 251, 'end_line': 251, 'comment': ""# 3. Verify image status in show is 'killed'"", 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [{'start_line': 54, 'end_line': 54, 'comment': '# Verify no image 1', 'include_SATD': False}], 'b_comments': [{'start_line': 54, 'end_line': 54, 'comment': '# Verify no images', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_image_cache.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_misc.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_private_images.py'}, {'a_comments': [{'start_line': 176, 'end_line': 176, 'comment': '# 2. GET /images/1', 'include_SATD': False}, {'start_line': 185, 'end_line': 185, 'comment': '# 3. GET /images/1 from registry in order to find S3 location', 'include_SATD': False}, {'start_line': 205, 'end_line': 205, 'comment': '# 5. GET /images/2 and make sure it can stream the image', 'include_SATD': False}, {'start_line': 213, 'end_line': 213, 'comment': '# 6. DELETE /images/1 and /images/2', 'include_SATD': False}], 'b_comments': [{'start_line': 178, 'end_line': 178, 'comment': '# 2. GET first image', 'include_SATD': False}, {'start_line': 189, 'end_line': 189, 'comment': '# 3. GET first image from registry in order to find S3 location', 'include_SATD': False}, {'start_line': 213, 'end_line': 213, 'comment': '# 5. GET second image and make sure it can stream the image', 'include_SATD': False}, {'start_line': 223, 'end_line': 223, 'comment': '# 6. DELETE first and second images', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_s3.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_shared_images.py'}, {'a_comments': [{'start_line': 131, 'end_line': 132, 'comment': '# 2. HEAD /images/1 # Verify 404 returned', 'include_SATD': False}, {'start_line': 138, 'end_line': 156, 'comment': '# 3. POST /images with public image named Image1 # 4. HEAD /images/1', 'include_SATD': False}, {'start_line': 164, 'end_line': 164, 'comment': '# 5. GET /images/1', 'include_SATD': False}, {'start_line': 201, 'end_line': 201, 'comment': '# 6. GET /images', 'include_SATD': False}, {'start_line': 217, 'end_line': 217, 'comment': '# 7. GET /images/detail', 'include_SATD': False}, {'start_line': 245, 'end_line': 245, 'comment': '# 8. PUT /images/1 with custom properties of ""distro"" and ""arch""', 'include_SATD': False}, {'start_line': 257, 'end_line': 257, 'comment': '# 9. GET /images/detail', 'include_SATD': False}, {'start_line': 285, 'end_line': 285, 'comment': '# 10. PUT /images/1 and remove a previously existing property.', 'include_SATD': False}, {'start_line': 299, 'end_line': 299, 'comment': '# 11. PUT /images/1 and add a previously deleted property.', 'include_SATD': False}, {'start_line': 396, 'end_line': 396, 'comment': '# 4. PUT /images/1 with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 411, 'end_line': 411, 'comment': '# 5. HEAD /images', 'include_SATD': False}], 'b_comments': [{'start_line': 129, 'end_line': 129, 'comment': '# 2. POST /images with public image named Image1', 'include_SATD': False}, {'start_line': 149, 'end_line': 149, 'comment': '# 3. HEAD image', 'include_SATD': False}, {'start_line': 158, 'end_line': 158, 'comment': '# 4. GET image', 'include_SATD': False}, {'start_line': 196, 'end_line': 196, 'comment': '# 5. GET /images', 'include_SATD': False}, {'start_line': 212, 'end_line': 212, 'comment': '# 6. GET /images/detail', 'include_SATD': False}, {'start_line': 240, 'end_line': 240, 'comment': '# 7. PUT image with custom properties of ""distro"" and ""arch""', 'include_SATD': False}, {'start_line': 253, 'end_line': 253, 'comment': '# 8. GET /images/detail', 'include_SATD': False}, {'start_line': 281, 'end_line': 281, 'comment': '# 9. PUT image and remove a previously existing property.', 'include_SATD': False}, {'start_line': 296, 'end_line': 296, 'comment': '# 10. PUT image and add a previously deleted property.', 'include_SATD': False}, {'start_line': 397, 'end_line': 397, 'comment': '# 4. PUT image with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 413, 'end_line': 413, 'comment': '# 5. HEAD image', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_ssl.py'}, {'a_comments': [{'start_line': 203, 'end_line': 203, 'comment': '# HEAD /images/1', 'include_SATD': False}, {'start_line': 211, 'end_line': 211, 'comment': '# GET /images/1', 'include_SATD': False}, {'start_line': 285, 'end_line': 285, 'comment': '# DELETE /images/1', 'include_SATD': False}, {'start_line': 341, 'end_line': 341, 'comment': '# 4. HEAD /images/1', 'include_SATD': False}, {'start_line': 349, 'end_line': 349, 'comment': '# 5. GET /images/1', 'include_SATD': False}, {'start_line': 418, 'end_line': 418, 'comment': '# GET /images/1 and make sure data was uploaded', 'include_SATD': False}, {'start_line': 466, 'end_line': 466, 'comment': '# DELETE /images/1 and /image/2', 'include_SATD': False}], 'b_comments': [{'start_line': 205, 'end_line': 205, 'comment': '# HEAD image', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# GET image', 'include_SATD': False}, {'start_line': 290, 'end_line': 290, 'comment': '# DELETE image', 'include_SATD': False}, {'start_line': 349, 'end_line': 349, 'comment': '# 4. HEAD image', 'include_SATD': False}, {'start_line': 358, 'end_line': 358, 'comment': '# 5. GET image', 'include_SATD': False}, {'start_line': 430, 'end_line': 430, 'comment': '# GET image and make sure data was uploaded', 'include_SATD': False}, {'start_line': 483, 'end_line': 483, 'comment': '# DELETE boty images', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_swift.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/stubs.py'}, {'a_comments': [{'start_line': 254, 'end_line': 254, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 458, 'end_line': 458, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 1317, 'end_line': 1317, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1526, 'end_line': 1526, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1781, 'end_line': 1781, 'comment': ""# Image 2 has disk format 'vhd'"", 'include_SATD': False}, {'start_line': 2180, 'end_line': 2180, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 2320, 'end_line': 2320, 'comment': '# Test the image was killed...', 'include_SATD': False}], 'b_comments': [{'start_line': 276, 'end_line': 276, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 486, 'end_line': 486, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 1313, 'end_line': 1313, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1776, 'end_line': 1776, 'comment': ""# Image 2 has disk format 'vhd'"", 'include_SATD': False}, {'start_line': 2173, 'end_line': 2173, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 2316, 'end_line': 2316, 'comment': '# Test that only one image was returned (that already exists)', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_cache_middleware.py'}, {'a_comments': [{'start_line': 187, 'end_line': 187, 'comment': ""#2'}"", 'include_SATD': False}, {'start_line': 865, 'end_line': 865, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 993, 'end_line': 993, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1018, 'end_line': 1018, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1529, 'end_line': 1529, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1612, 'end_line': 1612, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1651, 'end_line': 1651, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1678, 'end_line': 1678, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1705, 'end_line': 1705, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}], 'b_comments': [{'start_line': 193, 'end_line': 193, 'comment': ""#2'"", 'include_SATD': False}, {'start_line': 860, 'end_line': 860, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1527, 'end_line': 1527, 'comment': '# deleted', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_clients.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_filesystem_store.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_s3_store.py'}, {'a_comments': [{'start_line': 269, 'end_line': 269, 'comment': '# start image id arbitrarily high due to existing fixtures', 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/tests/unit/test_swift_store.py'}, {'a_comments': [], 'b_comments': [{'start_line': 114, 'end_line': 114, 'comment': '# make sure there are 4 dashes', 'include_SATD': False}, {'start_line': 120, 'end_line': 120, 'comment': '# casting to set will drop duplicate values', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/utils.py'}]}, {'revision': 5, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/common/utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/api/v1/images.py'}, {'a_comments': [{'start_line': 148, 'end_line': 149, 'comment': '#NOTE(bcwaldon): this is to prevent false matches when mysql compares # an integer to a string that begins with that integer', 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/012_id_to_uuid.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/scrubber.py'}, {'a_comments': [{'start_line': 88, 'end_line': 89, 'comment': '# 2. HEAD /images/1 # Verify 404 returned', 'include_SATD': False}, {'start_line': 95, 'end_line': 113, 'comment': '# 3. POST /images with public image named Image1 # 4. HEAD /images/1', 'include_SATD': False}, {'start_line': 121, 'end_line': 121, 'comment': '# 5. GET /images/1', 'include_SATD': False}, {'start_line': 158, 'end_line': 158, 'comment': '# 6. GET /images', 'include_SATD': False}, {'start_line': 174, 'end_line': 174, 'comment': '# 7. GET /images/detail', 'include_SATD': False}, {'start_line': 202, 'end_line': 202, 'comment': '# 8. PUT /images/1 with custom properties of ""distro"" and ""arch""', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# 9. GET /images/detail', 'include_SATD': False}, {'start_line': 242, 'end_line': 242, 'comment': '# 10. PUT /images/1 and remove a previously existing property.', 'include_SATD': False}, {'start_line': 256, 'end_line': 256, 'comment': '# 11. PUT /images/1 and add a previously deleted property.', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': '# 4. PUT /images/1 with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 920, 'end_line': 920, 'comment': '# 2. GET /images with limit of 2', 'include_SATD': False}, {'start_line': 932, 'end_line': 932, 'comment': '# 3. GET /images with marker', 'include_SATD': False}, {'start_line': 944, 'end_line': 944, 'comment': '# 4. GET /images with marker and limit', 'include_SATD': False}, {'start_line': 955, 'end_line': 955, 'comment': '# 5. GET /images/detail with marker and limit', 'include_SATD': False}], 'b_comments': [{'start_line': 86, 'end_line': 86, 'comment': '# 2. POST /images with public image named Image1', 'include_SATD': False}, {'start_line': 105, 'end_line': 105, 'comment': '# 3. HEAD image', 'include_SATD': False}, {'start_line': 114, 'end_line': 114, 'comment': '# 4. GET image', 'include_SATD': False}, {'start_line': 152, 'end_line': 152, 'comment': '# 5. GET /images', 'include_SATD': False}, {'start_line': 168, 'end_line': 168, 'comment': '# 6. GET /images/detail', 'include_SATD': False}, {'start_line': 196, 'end_line': 196, 'comment': '# 7. PUT image with custom properties of ""distro"" and ""arch""', 'include_SATD': False}, {'start_line': 209, 'end_line': 209, 'comment': '# 8. GET /images/detail', 'include_SATD': False}, {'start_line': 237, 'end_line': 237, 'comment': '# 9. PUT image and remove a previously existing property.', 'include_SATD': False}, {'start_line': 252, 'end_line': 252, 'comment': '# 10. PUT image and add a previously deleted property.', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': '# 4. PUT image with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 922, 'end_line': 922, 'comment': '# 2. GET /images with all images', 'include_SATD': False}, {'start_line': 930, 'end_line': 930, 'comment': '# 3. GET /images with limit of 2', 'include_SATD': False}, {'start_line': 942, 'end_line': 942, 'comment': '# 4. GET /images with marker', 'include_SATD': False}, {'start_line': 954, 'end_line': 954, 'comment': '# 5. GET /images with marker and limit', 'include_SATD': False}, {'start_line': 967, 'end_line': 967, 'comment': '# 6. GET /images/detail with marker and limit', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_api.py'}, {'a_comments': [{'start_line': 251, 'end_line': 251, 'comment': ""# 3. Verify image status in show is 'killed'"", 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [{'start_line': 54, 'end_line': 54, 'comment': '# Verify no image 1', 'include_SATD': False}], 'b_comments': [{'start_line': 54, 'end_line': 54, 'comment': '# Verify no images', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_image_cache.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_misc.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_private_images.py'}, {'a_comments': [{'start_line': 176, 'end_line': 176, 'comment': '# 2. GET /images/1', 'include_SATD': False}, {'start_line': 185, 'end_line': 185, 'comment': '# 3. GET /images/1 from registry in order to find S3 location', 'include_SATD': False}, {'start_line': 205, 'end_line': 205, 'comment': '# 5. GET /images/2 and make sure it can stream the image', 'include_SATD': False}, {'start_line': 213, 'end_line': 213, 'comment': '# 6. DELETE /images/1 and /images/2', 'include_SATD': False}], 'b_comments': [{'start_line': 178, 'end_line': 178, 'comment': '# 2. GET first image', 'include_SATD': False}, {'start_line': 189, 'end_line': 189, 'comment': '# 3. GET first image from registry in order to find S3 location', 'include_SATD': False}, {'start_line': 213, 'end_line': 213, 'comment': '# 5. GET second image and make sure it can stream the image', 'include_SATD': False}, {'start_line': 223, 'end_line': 223, 'comment': '# 6. DELETE first and second images', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_s3.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_shared_images.py'}, {'a_comments': [{'start_line': 131, 'end_line': 132, 'comment': '# 2. HEAD /images/1 # Verify 404 returned', 'include_SATD': False}, {'start_line': 138, 'end_line': 156, 'comment': '# 3. POST /images with public image named Image1 # 4. HEAD /images/1', 'include_SATD': False}, {'start_line': 164, 'end_line': 164, 'comment': '# 5. GET /images/1', 'include_SATD': False}, {'start_line': 201, 'end_line': 201, 'comment': '# 6. GET /images', 'include_SATD': False}, {'start_line': 217, 'end_line': 217, 'comment': '# 7. GET /images/detail', 'include_SATD': False}, {'start_line': 245, 'end_line': 245, 'comment': '# 8. PUT /images/1 with custom properties of ""distro"" and ""arch""', 'include_SATD': False}, {'start_line': 257, 'end_line': 257, 'comment': '# 9. GET /images/detail', 'include_SATD': False}, {'start_line': 285, 'end_line': 285, 'comment': '# 10. PUT /images/1 and remove a previously existing property.', 'include_SATD': False}, {'start_line': 299, 'end_line': 299, 'comment': '# 11. PUT /images/1 and add a previously deleted property.', 'include_SATD': False}, {'start_line': 396, 'end_line': 396, 'comment': '# 4. PUT /images/1 with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 411, 'end_line': 411, 'comment': '# 5. HEAD /images', 'include_SATD': False}], 'b_comments': [{'start_line': 129, 'end_line': 129, 'comment': '# 2. POST /images with public image named Image1', 'include_SATD': False}, {'start_line': 149, 'end_line': 149, 'comment': '# 3. HEAD image', 'include_SATD': False}, {'start_line': 158, 'end_line': 158, 'comment': '# 4. GET image', 'include_SATD': False}, {'start_line': 196, 'end_line': 196, 'comment': '# 5. GET /images', 'include_SATD': False}, {'start_line': 212, 'end_line': 212, 'comment': '# 6. GET /images/detail', 'include_SATD': False}, {'start_line': 240, 'end_line': 240, 'comment': '# 7. PUT image with custom properties of ""distro"" and ""arch""', 'include_SATD': False}, {'start_line': 253, 'end_line': 253, 'comment': '# 8. GET /images/detail', 'include_SATD': False}, {'start_line': 281, 'end_line': 281, 'comment': '# 9. PUT image and remove a previously existing property.', 'include_SATD': False}, {'start_line': 296, 'end_line': 296, 'comment': '# 10. PUT image and add a previously deleted property.', 'include_SATD': False}, {'start_line': 397, 'end_line': 397, 'comment': '# 4. PUT image with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 413, 'end_line': 413, 'comment': '# 5. HEAD image', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_ssl.py'}, {'a_comments': [{'start_line': 203, 'end_line': 203, 'comment': '# HEAD /images/1', 'include_SATD': False}, {'start_line': 211, 'end_line': 211, 'comment': '# GET /images/1', 'include_SATD': False}, {'start_line': 285, 'end_line': 285, 'comment': '# DELETE /images/1', 'include_SATD': False}, {'start_line': 341, 'end_line': 341, 'comment': '# 4. HEAD /images/1', 'include_SATD': False}, {'start_line': 349, 'end_line': 349, 'comment': '# 5. GET /images/1', 'include_SATD': False}, {'start_line': 418, 'end_line': 418, 'comment': '# GET /images/1 and make sure data was uploaded', 'include_SATD': False}, {'start_line': 466, 'end_line': 466, 'comment': '# DELETE /images/1 and /image/2', 'include_SATD': False}], 'b_comments': [{'start_line': 205, 'end_line': 205, 'comment': '# HEAD image', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# GET image', 'include_SATD': False}, {'start_line': 290, 'end_line': 290, 'comment': '# DELETE image', 'include_SATD': False}, {'start_line': 349, 'end_line': 349, 'comment': '# 4. HEAD image', 'include_SATD': False}, {'start_line': 358, 'end_line': 358, 'comment': '# 5. GET image', 'include_SATD': False}, {'start_line': 430, 'end_line': 430, 'comment': '# GET image and make sure data was uploaded', 'include_SATD': False}, {'start_line': 483, 'end_line': 483, 'comment': '# DELETE boty images', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_swift.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/stubs.py'}, {'a_comments': [{'start_line': 254, 'end_line': 254, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 458, 'end_line': 458, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 1317, 'end_line': 1317, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1526, 'end_line': 1526, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1781, 'end_line': 1781, 'comment': ""# Image 2 has disk format 'vhd'"", 'include_SATD': False}, {'start_line': 2180, 'end_line': 2180, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 2320, 'end_line': 2320, 'comment': '# Test the image was killed...', 'include_SATD': False}], 'b_comments': [{'start_line': 276, 'end_line': 276, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 486, 'end_line': 486, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 1313, 'end_line': 1313, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1776, 'end_line': 1776, 'comment': ""# Image 2 has disk format 'vhd'"", 'include_SATD': False}, {'start_line': 2173, 'end_line': 2173, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 2316, 'end_line': 2316, 'comment': '# Test that only one image was returned (that already exists)', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_cache_middleware.py'}, {'a_comments': [{'start_line': 187, 'end_line': 187, 'comment': ""#2'}"", 'include_SATD': False}, {'start_line': 865, 'end_line': 865, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 993, 'end_line': 993, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1018, 'end_line': 1018, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1529, 'end_line': 1529, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1612, 'end_line': 1612, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1651, 'end_line': 1651, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1678, 'end_line': 1678, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1705, 'end_line': 1705, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}], 'b_comments': [{'start_line': 193, 'end_line': 193, 'comment': ""#2'"", 'include_SATD': False}, {'start_line': 860, 'end_line': 860, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1527, 'end_line': 1527, 'comment': '# deleted', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_clients.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_filesystem_store.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_s3_store.py'}, {'a_comments': [{'start_line': 269, 'end_line': 269, 'comment': '# start image id arbitrarily high due to existing fixtures', 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/tests/unit/test_swift_store.py'}, {'a_comments': [], 'b_comments': [{'start_line': 115, 'end_line': 115, 'comment': '# make sure there are 4 dashes', 'include_SATD': False}, {'start_line': 121, 'end_line': 121, 'comment': '# casting to set will drop duplicate values', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/utils.py'}]}, {'revision': 6, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/common/utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/api/v1/images.py'}, {'a_comments': [{'start_line': 148, 'end_line': 149, 'comment': '#NOTE(bcwaldon): this is to prevent false matches when mysql compares # an integer to a string that begins with that integer', 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/012_id_to_uuid.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/scrubber.py'}, {'a_comments': [{'start_line': 88, 'end_line': 89, 'comment': '# 2. HEAD /images/1 # Verify 404 returned', 'include_SATD': False}, {'start_line': 95, 'end_line': 113, 'comment': '# 3. POST /images with public image named Image1 # 4. HEAD /images/1', 'include_SATD': False}, {'start_line': 121, 'end_line': 121, 'comment': '# 5. GET /images/1', 'include_SATD': False}, {'start_line': 158, 'end_line': 158, 'comment': '# 6. GET /images', 'include_SATD': False}, {'start_line': 174, 'end_line': 174, 'comment': '# 7. GET /images/detail', 'include_SATD': False}, {'start_line': 202, 'end_line': 202, 'comment': '# 8. PUT /images/1 with custom properties of ""distro"" and ""arch""', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# 9. GET /images/detail', 'include_SATD': False}, {'start_line': 242, 'end_line': 242, 'comment': '# 10. PUT /images/1 and remove a previously existing property.', 'include_SATD': False}, {'start_line': 256, 'end_line': 256, 'comment': '# 11. PUT /images/1 and add a previously deleted property.', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': '# 4. PUT /images/1 with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 920, 'end_line': 920, 'comment': '# 2. GET /images with limit of 2', 'include_SATD': False}, {'start_line': 932, 'end_line': 932, 'comment': '# 3. GET /images with marker', 'include_SATD': False}, {'start_line': 944, 'end_line': 944, 'comment': '# 4. GET /images with marker and limit', 'include_SATD': False}, {'start_line': 955, 'end_line': 955, 'comment': '# 5. GET /images/detail with marker and limit', 'include_SATD': False}], 'b_comments': [{'start_line': 86, 'end_line': 86, 'comment': '# 2. POST /images with public image named Image1', 'include_SATD': False}, {'start_line': 105, 'end_line': 105, 'comment': '# 3. HEAD image', 'include_SATD': False}, {'start_line': 114, 'end_line': 114, 'comment': '# 4. GET image', 'include_SATD': False}, {'start_line': 152, 'end_line': 152, 'comment': '# 5. GET /images', 'include_SATD': False}, {'start_line': 168, 'end_line': 168, 'comment': '# 6. GET /images/detail', 'include_SATD': False}, {'start_line': 196, 'end_line': 196, 'comment': '# 7. PUT image with custom properties of ""distro"" and ""arch""', 'include_SATD': False}, {'start_line': 209, 'end_line': 209, 'comment': '# 8. GET /images/detail', 'include_SATD': False}, {'start_line': 237, 'end_line': 237, 'comment': '# 9. PUT image and remove a previously existing property.', 'include_SATD': False}, {'start_line': 252, 'end_line': 252, 'comment': '# 10. PUT image and add a previously deleted property.', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': '# 4. PUT image with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 922, 'end_line': 922, 'comment': '# 2. GET /images with all images', 'include_SATD': False}, {'start_line': 930, 'end_line': 930, 'comment': '# 3. GET /images with limit of 2', 'include_SATD': False}, {'start_line': 942, 'end_line': 942, 'comment': '# 4. GET /images with marker', 'include_SATD': False}, {'start_line': 954, 'end_line': 954, 'comment': '# 5. GET /images with marker and limit', 'include_SATD': False}, {'start_line': 967, 'end_line': 967, 'comment': '# 6. GET /images/detail with marker and limit', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_api.py'}, {'a_comments': [{'start_line': 251, 'end_line': 251, 'comment': ""# 3. Verify image status in show is 'killed'"", 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [{'start_line': 54, 'end_line': 54, 'comment': '# Verify no image 1', 'include_SATD': False}], 'b_comments': [{'start_line': 54, 'end_line': 54, 'comment': '# Verify no images', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_image_cache.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_misc.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_private_images.py'}, {'a_comments': [{'start_line': 176, 'end_line': 176, 'comment': '# 2. GET /images/1', 'include_SATD': False}, {'start_line': 185, 'end_line': 185, 'comment': '# 3. GET /images/1 from registry in order to find S3 location', 'include_SATD': False}, {'start_line': 205, 'end_line': 205, 'comment': '# 5. GET /images/2 and make sure it can stream the image', 'include_SATD': False}, {'start_line': 213, 'end_line': 213, 'comment': '# 6. DELETE /images/1 and /images/2', 'include_SATD': False}], 'b_comments': [{'start_line': 178, 'end_line': 178, 'comment': '# 2. GET first image', 'include_SATD': False}, {'start_line': 189, 'end_line': 189, 'comment': '# 3. GET first image from registry in order to find S3 location', 'include_SATD': False}, {'start_line': 213, 'end_line': 213, 'comment': '# 5. GET second image and make sure it can stream the image', 'include_SATD': False}, {'start_line': 223, 'end_line': 223, 'comment': '# 6. DELETE first and second images', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_s3.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_shared_images.py'}, {'a_comments': [{'start_line': 131, 'end_line': 132, 'comment': '# 2. HEAD /images/1 # Verify 404 returned', 'include_SATD': False}, {'start_line': 138, 'end_line': 156, 'comment': '# 3. POST /images with public image named Image1 # 4. HEAD /images/1', 'include_SATD': False}, {'start_line': 164, 'end_line': 164, 'comment': '# 5. GET /images/1', 'include_SATD': False}, {'start_line': 201, 'end_line': 201, 'comment': '# 6. GET /images', 'include_SATD': False}, {'start_line': 217, 'end_line': 217, 'comment': '# 7. GET /images/detail', 'include_SATD': False}, {'start_line': 245, 'end_line': 245, 'comment': '# 8. PUT /images/1 with custom properties of ""distro"" and ""arch""', 'include_SATD': False}, {'start_line': 257, 'end_line': 257, 'comment': '# 9. GET /images/detail', 'include_SATD': False}, {'start_line': 285, 'end_line': 285, 'comment': '# 10. PUT /images/1 and remove a previously existing property.', 'include_SATD': False}, {'start_line': 299, 'end_line': 299, 'comment': '# 11. PUT /images/1 and add a previously deleted property.', 'include_SATD': False}, {'start_line': 396, 'end_line': 396, 'comment': '# 4. PUT /images/1 with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 411, 'end_line': 411, 'comment': '# 5. HEAD /images', 'include_SATD': False}], 'b_comments': [{'start_line': 129, 'end_line': 129, 'comment': '# 2. POST /images with public image named Image1', 'include_SATD': False}, {'start_line': 149, 'end_line': 149, 'comment': '# 3. HEAD image', 'include_SATD': False}, {'start_line': 158, 'end_line': 158, 'comment': '# 4. GET image', 'include_SATD': False}, {'start_line': 196, 'end_line': 196, 'comment': '# 5. GET /images', 'include_SATD': False}, {'start_line': 212, 'end_line': 212, 'comment': '# 6. GET /images/detail', 'include_SATD': False}, {'start_line': 240, 'end_line': 240, 'comment': '# 7. PUT image with custom properties of ""distro"" and ""arch""', 'include_SATD': False}, {'start_line': 253, 'end_line': 253, 'comment': '# 8. GET /images/detail', 'include_SATD': False}, {'start_line': 281, 'end_line': 281, 'comment': '# 9. PUT image and remove a previously existing property.', 'include_SATD': False}, {'start_line': 296, 'end_line': 296, 'comment': '# 10. PUT image and add a previously deleted property.', 'include_SATD': False}, {'start_line': 397, 'end_line': 397, 'comment': '# 4. PUT image with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 413, 'end_line': 413, 'comment': '# 5. HEAD image', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_ssl.py'}, {'a_comments': [{'start_line': 203, 'end_line': 203, 'comment': '# HEAD /images/1', 'include_SATD': False}, {'start_line': 211, 'end_line': 211, 'comment': '# GET /images/1', 'include_SATD': False}, {'start_line': 285, 'end_line': 285, 'comment': '# DELETE /images/1', 'include_SATD': False}, {'start_line': 341, 'end_line': 341, 'comment': '# 4. HEAD /images/1', 'include_SATD': False}, {'start_line': 349, 'end_line': 349, 'comment': '# 5. GET /images/1', 'include_SATD': False}, {'start_line': 418, 'end_line': 418, 'comment': '# GET /images/1 and make sure data was uploaded', 'include_SATD': False}, {'start_line': 466, 'end_line': 466, 'comment': '# DELETE /images/1 and /image/2', 'include_SATD': False}], 'b_comments': [{'start_line': 205, 'end_line': 205, 'comment': '# HEAD image', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# GET image', 'include_SATD': False}, {'start_line': 290, 'end_line': 290, 'comment': '# DELETE image', 'include_SATD': False}, {'start_line': 349, 'end_line': 349, 'comment': '# 4. HEAD image', 'include_SATD': False}, {'start_line': 358, 'end_line': 358, 'comment': '# 5. GET image', 'include_SATD': False}, {'start_line': 430, 'end_line': 430, 'comment': '# GET image and make sure data was uploaded', 'include_SATD': False}, {'start_line': 483, 'end_line': 483, 'comment': '# DELETE boty images', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_swift.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/stubs.py'}, {'a_comments': [{'start_line': 254, 'end_line': 254, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 458, 'end_line': 458, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 1317, 'end_line': 1317, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1526, 'end_line': 1526, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1781, 'end_line': 1781, 'comment': ""# Image 2 has disk format 'vhd'"", 'include_SATD': False}, {'start_line': 2180, 'end_line': 2180, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 2320, 'end_line': 2320, 'comment': '# Test the image was killed...', 'include_SATD': False}], 'b_comments': [{'start_line': 276, 'end_line': 276, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 486, 'end_line': 486, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 1313, 'end_line': 1313, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1776, 'end_line': 1776, 'comment': ""# Image 2 has disk format 'vhd'"", 'include_SATD': False}, {'start_line': 2173, 'end_line': 2173, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 2316, 'end_line': 2316, 'comment': '# Test that only one image was returned (that already exists)', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_cache_middleware.py'}, {'a_comments': [{'start_line': 187, 'end_line': 187, 'comment': ""#2'}"", 'include_SATD': False}, {'start_line': 865, 'end_line': 865, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 993, 'end_line': 993, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1018, 'end_line': 1018, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1529, 'end_line': 1529, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1612, 'end_line': 1612, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1651, 'end_line': 1651, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1678, 'end_line': 1678, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1705, 'end_line': 1705, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}], 'b_comments': [{'start_line': 193, 'end_line': 193, 'comment': ""#2'"", 'include_SATD': False}, {'start_line': 860, 'end_line': 860, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1527, 'end_line': 1527, 'comment': '# deleted', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_clients.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_filesystem_store.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_s3_store.py'}, {'a_comments': [{'start_line': 269, 'end_line': 269, 'comment': '# start image id arbitrarily high due to existing fixtures', 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/tests/unit/test_swift_store.py'}, {'a_comments': [], 'b_comments': [{'start_line': 115, 'end_line': 115, 'comment': '# make sure there are 4 dashes', 'include_SATD': False}, {'start_line': 121, 'end_line': 121, 'comment': '# casting to set will drop duplicate values', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/utils.py'}]}, {'revision': 7, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/common/utils.py'}, {'a_comments': [], 'b_comments': [{'start_line': 213, 'end_line': 213, 'comment': '# TODO(wwolf): do some sort of UUID-validity check here?', 'include_SATD': True}], 'filename': 'glance/registry/api/v1/images.py'}, {'a_comments': [{'start_line': 148, 'end_line': 149, 'comment': '#NOTE(bcwaldon): this is to prevent false matches when mysql compares # an integer to a string that begins with that integer', 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/012_id_to_uuid.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/scrubber.py'}, {'a_comments': [{'start_line': 88, 'end_line': 89, 'comment': '# 2. HEAD /images/1 # Verify 404 returned', 'include_SATD': False}, {'start_line': 95, 'end_line': 113, 'comment': '# 3. POST /images with public image named Image1 # 4. HEAD /images/1', 'include_SATD': False}, {'start_line': 121, 'end_line': 121, 'comment': '# 5. GET /images/1', 'include_SATD': False}, {'start_line': 158, 'end_line': 158, 'comment': '# 6. GET /images', 'include_SATD': False}, {'start_line': 174, 'end_line': 174, 'comment': '# 7. GET /images/detail', 'include_SATD': False}, {'start_line': 202, 'end_line': 202, 'comment': '# 8. PUT /images/1 with custom properties of ""distro"" and ""arch""', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# 9. GET /images/detail', 'include_SATD': False}, {'start_line': 242, 'end_line': 242, 'comment': '# 10. PUT /images/1 and remove a previously existing property.', 'include_SATD': False}, {'start_line': 256, 'end_line': 256, 'comment': '# 11. PUT /images/1 and add a previously deleted property.', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': '# 4. PUT /images/1 with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 920, 'end_line': 920, 'comment': '# 2. GET /images with limit of 2', 'include_SATD': False}, {'start_line': 932, 'end_line': 932, 'comment': '# 3. GET /images with marker', 'include_SATD': False}, {'start_line': 944, 'end_line': 944, 'comment': '# 4. GET /images with marker and limit', 'include_SATD': False}, {'start_line': 955, 'end_line': 955, 'comment': '# 5. GET /images/detail with marker and limit', 'include_SATD': False}], 'b_comments': [{'start_line': 86, 'end_line': 86, 'comment': '# 2. POST /images with public image named Image1', 'include_SATD': False}, {'start_line': 105, 'end_line': 105, 'comment': '# 3. HEAD image', 'include_SATD': False}, {'start_line': 114, 'end_line': 114, 'comment': '# 4. GET image', 'include_SATD': False}, {'start_line': 152, 'end_line': 152, 'comment': '# 5. GET /images', 'include_SATD': False}, {'start_line': 168, 'end_line': 168, 'comment': '# 6. GET /images/detail', 'include_SATD': False}, {'start_line': 196, 'end_line': 196, 'comment': '# 7. PUT image with custom properties of ""distro"" and ""arch""', 'include_SATD': False}, {'start_line': 209, 'end_line': 209, 'comment': '# 8. GET /images/detail', 'include_SATD': False}, {'start_line': 237, 'end_line': 237, 'comment': '# 9. PUT image and remove a previously existing property.', 'include_SATD': False}, {'start_line': 252, 'end_line': 252, 'comment': '# 10. PUT image and add a previously deleted property.', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': '# 4. PUT image with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 922, 'end_line': 922, 'comment': '# 2. GET /images with all images', 'include_SATD': False}, {'start_line': 930, 'end_line': 930, 'comment': '# 3. GET /images with limit of 2', 'include_SATD': False}, {'start_line': 942, 'end_line': 942, 'comment': '# 4. GET /images with marker', 'include_SATD': False}, {'start_line': 954, 'end_line': 954, 'comment': '# 5. GET /images with marker and limit', 'include_SATD': False}, {'start_line': 967, 'end_line': 967, 'comment': '# 6. GET /images/detail with marker and limit', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_api.py'}, {'a_comments': [{'start_line': 251, 'end_line': 251, 'comment': ""# 3. Verify image status in show is 'killed'"", 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [{'start_line': 54, 'end_line': 54, 'comment': '# Verify no image 1', 'include_SATD': False}], 'b_comments': [{'start_line': 54, 'end_line': 54, 'comment': '# Verify no images', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_image_cache.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_misc.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_private_images.py'}, {'a_comments': [{'start_line': 176, 'end_line': 176, 'comment': '# 2. GET /images/1', 'include_SATD': False}, {'start_line': 185, 'end_line': 185, 'comment': '# 3. GET /images/1 from registry in order to find S3 location', 'include_SATD': False}, {'start_line': 205, 'end_line': 205, 'comment': '# 5. GET /images/2 and make sure it can stream the image', 'include_SATD': False}, {'start_line': 213, 'end_line': 213, 'comment': '# 6. DELETE /images/1 and /images/2', 'include_SATD': False}], 'b_comments': [{'start_line': 178, 'end_line': 178, 'comment': '# 2. GET first image', 'include_SATD': False}, {'start_line': 189, 'end_line': 189, 'comment': '# 3. GET first image from registry in order to find S3 location', 'include_SATD': False}, {'start_line': 213, 'end_line': 213, 'comment': '# 5. GET second image and make sure it can stream the image', 'include_SATD': False}, {'start_line': 223, 'end_line': 223, 'comment': '# 6. DELETE first and second images', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_s3.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_shared_images.py'}, {'a_comments': [{'start_line': 131, 'end_line': 132, 'comment': '# 2. HEAD /images/1 # Verify 404 returned', 'include_SATD': False}, {'start_line': 138, 'end_line': 156, 'comment': '# 3. POST /images with public image named Image1 # 4. HEAD /images/1', 'include_SATD': False}, {'start_line': 164, 'end_line': 164, 'comment': '# 5. GET /images/1', 'include_SATD': False}, {'start_line': 201, 'end_line': 201, 'comment': '# 6. GET /images', 'include_SATD': False}, {'start_line': 217, 'end_line': 217, 'comment': '# 7. GET /images/detail', 'include_SATD': False}, {'start_line': 245, 'end_line': 245, 'comment': '# 8. PUT /images/1 with custom properties of ""distro"" and ""arch""', 'include_SATD': False}, {'start_line': 257, 'end_line': 257, 'comment': '# 9. GET /images/detail', 'include_SATD': False}, {'start_line': 285, 'end_line': 285, 'comment': '# 10. PUT /images/1 and remove a previously existing property.', 'include_SATD': False}, {'start_line': 299, 'end_line': 299, 'comment': '# 11. PUT /images/1 and add a previously deleted property.', 'include_SATD': False}, {'start_line': 396, 'end_line': 396, 'comment': '# 4. PUT /images/1 with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 411, 'end_line': 411, 'comment': '# 5. HEAD /images', 'include_SATD': False}], 'b_comments': [{'start_line': 129, 'end_line': 129, 'comment': '# 2. POST /images with public image named Image1', 'include_SATD': False}, {'start_line': 149, 'end_line': 149, 'comment': '# 3. HEAD image', 'include_SATD': False}, {'start_line': 158, 'end_line': 158, 'comment': '# 4. GET image', 'include_SATD': False}, {'start_line': 196, 'end_line': 196, 'comment': '# 5. GET /images', 'include_SATD': False}, {'start_line': 212, 'end_line': 212, 'comment': '# 6. GET /images/detail', 'include_SATD': False}, {'start_line': 240, 'end_line': 240, 'comment': '# 7. PUT image with custom properties of ""distro"" and ""arch""', 'include_SATD': False}, {'start_line': 253, 'end_line': 253, 'comment': '# 8. GET /images/detail', 'include_SATD': False}, {'start_line': 281, 'end_line': 281, 'comment': '# 9. PUT image and remove a previously existing property.', 'include_SATD': False}, {'start_line': 296, 'end_line': 296, 'comment': '# 10. PUT image and add a previously deleted property.', 'include_SATD': False}, {'start_line': 397, 'end_line': 397, 'comment': '# 4. PUT image with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 413, 'end_line': 413, 'comment': '# 5. HEAD image', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_ssl.py'}, {'a_comments': [{'start_line': 203, 'end_line': 203, 'comment': '# HEAD /images/1', 'include_SATD': False}, {'start_line': 211, 'end_line': 211, 'comment': '# GET /images/1', 'include_SATD': False}, {'start_line': 285, 'end_line': 285, 'comment': '# DELETE /images/1', 'include_SATD': False}, {'start_line': 341, 'end_line': 341, 'comment': '# 4. HEAD /images/1', 'include_SATD': False}, {'start_line': 349, 'end_line': 349, 'comment': '# 5. GET /images/1', 'include_SATD': False}, {'start_line': 418, 'end_line': 418, 'comment': '# GET /images/1 and make sure data was uploaded', 'include_SATD': False}, {'start_line': 466, 'end_line': 466, 'comment': '# DELETE /images/1 and /image/2', 'include_SATD': False}], 'b_comments': [{'start_line': 205, 'end_line': 205, 'comment': '# HEAD image', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# GET image', 'include_SATD': False}, {'start_line': 290, 'end_line': 290, 'comment': '# DELETE image', 'include_SATD': False}, {'start_line': 349, 'end_line': 349, 'comment': '# 4. HEAD image', 'include_SATD': False}, {'start_line': 358, 'end_line': 358, 'comment': '# 5. GET image', 'include_SATD': False}, {'start_line': 430, 'end_line': 430, 'comment': '# GET image and make sure data was uploaded', 'include_SATD': False}, {'start_line': 483, 'end_line': 483, 'comment': '# DELETE boty images', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_swift.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/stubs.py'}, {'a_comments': [{'start_line': 254, 'end_line': 254, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 458, 'end_line': 458, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 1317, 'end_line': 1317, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1526, 'end_line': 1526, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1781, 'end_line': 1781, 'comment': ""# Image 2 has disk format 'vhd'"", 'include_SATD': False}, {'start_line': 2180, 'end_line': 2180, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 2320, 'end_line': 2320, 'comment': '# Test the image was killed...', 'include_SATD': False}], 'b_comments': [{'start_line': 276, 'end_line': 276, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 486, 'end_line': 486, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 1313, 'end_line': 1313, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1793, 'end_line': 1793, 'comment': ""# Image 2 has disk format 'vhd'"", 'include_SATD': False}, {'start_line': 2190, 'end_line': 2190, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 2333, 'end_line': 2333, 'comment': '# Test that only one image was returned (that already exists)', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_cache_middleware.py'}, {'a_comments': [{'start_line': 187, 'end_line': 187, 'comment': ""#2'}"", 'include_SATD': False}, {'start_line': 865, 'end_line': 865, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 993, 'end_line': 993, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1018, 'end_line': 1018, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1529, 'end_line': 1529, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1612, 'end_line': 1612, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1651, 'end_line': 1651, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1678, 'end_line': 1678, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1705, 'end_line': 1705, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}], 'b_comments': [{'start_line': 193, 'end_line': 193, 'comment': ""#2'"", 'include_SATD': False}, {'start_line': 860, 'end_line': 860, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1527, 'end_line': 1527, 'comment': '# deleted', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_clients.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_filesystem_store.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_s3_store.py'}, {'a_comments': [{'start_line': 269, 'end_line': 269, 'comment': '# start image id arbitrarily high due to existing fixtures', 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/tests/unit/test_swift_store.py'}, {'a_comments': [], 'b_comments': [{'start_line': 115, 'end_line': 115, 'comment': '# make sure there are 4 dashes', 'include_SATD': False}, {'start_line': 121, 'end_line': 121, 'comment': '# casting to set will drop duplicate values', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/utils.py'}]}, {'revision': 8, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/common/utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/api/v1/images.py'}, {'a_comments': [{'start_line': 148, 'end_line': 149, 'comment': '#NOTE(bcwaldon): this is to prevent false matches when mysql compares # an integer to a string that begins with that integer', 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/012_id_to_uuid.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/scrubber.py'}, {'a_comments': [{'start_line': 88, 'end_line': 89, 'comment': '# 2. HEAD /images/1 # Verify 404 returned', 'include_SATD': False}, {'start_line': 95, 'end_line': 113, 'comment': '# 3. POST /images with public image named Image1 # 4. HEAD /images/1', 'include_SATD': False}, {'start_line': 121, 'end_line': 121, 'comment': '# 5. GET /images/1', 'include_SATD': False}, {'start_line': 158, 'end_line': 158, 'comment': '# 6. GET /images', 'include_SATD': False}, {'start_line': 174, 'end_line': 174, 'comment': '# 7. GET /images/detail', 'include_SATD': False}, {'start_line': 202, 'end_line': 202, 'comment': '# 8. PUT /images/1 with custom properties of ""distro"" and ""arch""', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# 9. GET /images/detail', 'include_SATD': False}, {'start_line': 242, 'end_line': 242, 'comment': '# 10. PUT /images/1 and remove a previously existing property.', 'include_SATD': False}, {'start_line': 256, 'end_line': 256, 'comment': '# 11. PUT /images/1 and add a previously deleted property.', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': '# 4. PUT /images/1 with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 920, 'end_line': 920, 'comment': '# 2. GET /images with limit of 2', 'include_SATD': False}, {'start_line': 932, 'end_line': 932, 'comment': '# 3. GET /images with marker', 'include_SATD': False}, {'start_line': 944, 'end_line': 944, 'comment': '# 4. GET /images with marker and limit', 'include_SATD': False}, {'start_line': 955, 'end_line': 955, 'comment': '# 5. GET /images/detail with marker and limit', 'include_SATD': False}], 'b_comments': [{'start_line': 86, 'end_line': 86, 'comment': '# 2. POST /images with public image named Image1', 'include_SATD': False}, {'start_line': 105, 'end_line': 105, 'comment': '# 3. HEAD image', 'include_SATD': False}, {'start_line': 114, 'end_line': 114, 'comment': '# 4. GET image', 'include_SATD': False}, {'start_line': 152, 'end_line': 152, 'comment': '# 5. GET /images', 'include_SATD': False}, {'start_line': 168, 'end_line': 168, 'comment': '# 6. GET /images/detail', 'include_SATD': False}, {'start_line': 196, 'end_line': 196, 'comment': '# 7. PUT image with custom properties of ""distro"" and ""arch""', 'include_SATD': False}, {'start_line': 209, 'end_line': 209, 'comment': '# 8. GET /images/detail', 'include_SATD': False}, {'start_line': 237, 'end_line': 237, 'comment': '# 9. PUT image and remove a previously existing property.', 'include_SATD': False}, {'start_line': 252, 'end_line': 252, 'comment': '# 10. PUT image and add a previously deleted property.', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': '# 4. PUT image with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 922, 'end_line': 922, 'comment': '# 2. GET /images with all images', 'include_SATD': False}, {'start_line': 930, 'end_line': 930, 'comment': '# 3. GET /images with limit of 2', 'include_SATD': False}, {'start_line': 942, 'end_line': 942, 'comment': '# 4. GET /images with marker', 'include_SATD': False}, {'start_line': 954, 'end_line': 954, 'comment': '# 5. GET /images with marker and limit', 'include_SATD': False}, {'start_line': 967, 'end_line': 967, 'comment': '# 6. GET /images/detail with marker and limit', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_api.py'}, {'a_comments': [{'start_line': 251, 'end_line': 251, 'comment': ""# 3. Verify image status in show is 'killed'"", 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [{'start_line': 54, 'end_line': 54, 'comment': '# Verify no image 1', 'include_SATD': False}], 'b_comments': [{'start_line': 54, 'end_line': 54, 'comment': '# Verify no images', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_image_cache.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_misc.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_private_images.py'}, {'a_comments': [{'start_line': 176, 'end_line': 176, 'comment': '# 2. GET /images/1', 'include_SATD': False}, {'start_line': 185, 'end_line': 185, 'comment': '# 3. GET /images/1 from registry in order to find S3 location', 'include_SATD': False}, {'start_line': 205, 'end_line': 205, 'comment': '# 5. GET /images/2 and make sure it can stream the image', 'include_SATD': False}, {'start_line': 213, 'end_line': 213, 'comment': '# 6. DELETE /images/1 and /images/2', 'include_SATD': False}], 'b_comments': [{'start_line': 178, 'end_line': 178, 'comment': '# 2. GET first image', 'include_SATD': False}, {'start_line': 189, 'end_line': 189, 'comment': '# 3. GET first image from registry in order to find S3 location', 'include_SATD': False}, {'start_line': 213, 'end_line': 213, 'comment': '# 5. GET second image and make sure it can stream the image', 'include_SATD': False}, {'start_line': 223, 'end_line': 223, 'comment': '# 6. DELETE first and second images', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_s3.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_shared_images.py'}, {'a_comments': [{'start_line': 131, 'end_line': 132, 'comment': '# 2. HEAD /images/1 # Verify 404 returned', 'include_SATD': False}, {'start_line': 138, 'end_line': 156, 'comment': '# 3. POST /images with public image named Image1 # 4. HEAD /images/1', 'include_SATD': False}, {'start_line': 164, 'end_line': 164, 'comment': '# 5. GET /images/1', 'include_SATD': False}, {'start_line': 201, 'end_line': 201, 'comment': '# 6. GET /images', 'include_SATD': False}, {'start_line': 217, 'end_line': 217, 'comment': '# 7. GET /images/detail', 'include_SATD': False}, {'start_line': 245, 'end_line': 245, 'comment': '# 8. PUT /images/1 with custom properties of ""distro"" and ""arch""', 'include_SATD': False}, {'start_line': 257, 'end_line': 257, 'comment': '# 9. GET /images/detail', 'include_SATD': False}, {'start_line': 285, 'end_line': 285, 'comment': '# 10. PUT /images/1 and remove a previously existing property.', 'include_SATD': False}, {'start_line': 299, 'end_line': 299, 'comment': '# 11. PUT /images/1 and add a previously deleted property.', 'include_SATD': False}, {'start_line': 396, 'end_line': 396, 'comment': '# 4. PUT /images/1 with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 411, 'end_line': 411, 'comment': '# 5. HEAD /images', 'include_SATD': False}], 'b_comments': [{'start_line': 129, 'end_line': 129, 'comment': '# 2. POST /images with public image named Image1', 'include_SATD': False}, {'start_line': 149, 'end_line': 149, 'comment': '# 3. HEAD image', 'include_SATD': False}, {'start_line': 158, 'end_line': 158, 'comment': '# 4. GET image', 'include_SATD': False}, {'start_line': 196, 'end_line': 196, 'comment': '# 5. GET /images', 'include_SATD': False}, {'start_line': 212, 'end_line': 212, 'comment': '# 6. GET /images/detail', 'include_SATD': False}, {'start_line': 240, 'end_line': 240, 'comment': '# 7. PUT image with custom properties of ""distro"" and ""arch""', 'include_SATD': False}, {'start_line': 253, 'end_line': 253, 'comment': '# 8. GET /images/detail', 'include_SATD': False}, {'start_line': 281, 'end_line': 281, 'comment': '# 9. PUT image and remove a previously existing property.', 'include_SATD': False}, {'start_line': 296, 'end_line': 296, 'comment': '# 10. PUT image and add a previously deleted property.', 'include_SATD': False}, {'start_line': 397, 'end_line': 397, 'comment': '# 4. PUT image with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 413, 'end_line': 413, 'comment': '# 5. HEAD image', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_ssl.py'}, {'a_comments': [{'start_line': 203, 'end_line': 203, 'comment': '# HEAD /images/1', 'include_SATD': False}, {'start_line': 211, 'end_line': 211, 'comment': '# GET /images/1', 'include_SATD': False}, {'start_line': 285, 'end_line': 285, 'comment': '# DELETE /images/1', 'include_SATD': False}, {'start_line': 341, 'end_line': 341, 'comment': '# 4. HEAD /images/1', 'include_SATD': False}, {'start_line': 349, 'end_line': 349, 'comment': '# 5. GET /images/1', 'include_SATD': False}, {'start_line': 418, 'end_line': 418, 'comment': '# GET /images/1 and make sure data was uploaded', 'include_SATD': False}, {'start_line': 466, 'end_line': 466, 'comment': '# DELETE /images/1 and /image/2', 'include_SATD': False}], 'b_comments': [{'start_line': 205, 'end_line': 205, 'comment': '# HEAD image', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# GET image', 'include_SATD': False}, {'start_line': 290, 'end_line': 290, 'comment': '# DELETE image', 'include_SATD': False}, {'start_line': 349, 'end_line': 349, 'comment': '# 4. HEAD image', 'include_SATD': False}, {'start_line': 358, 'end_line': 358, 'comment': '# 5. GET image', 'include_SATD': False}, {'start_line': 430, 'end_line': 430, 'comment': '# GET image and make sure data was uploaded', 'include_SATD': False}, {'start_line': 483, 'end_line': 483, 'comment': '# DELETE boty images', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_swift.py'}, {'a_comments': [{'start_line': 254, 'end_line': 254, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 458, 'end_line': 458, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 1317, 'end_line': 1317, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1526, 'end_line': 1526, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1781, 'end_line': 1781, 'comment': ""# Image 2 has disk format 'vhd'"", 'include_SATD': False}, {'start_line': 2180, 'end_line': 2180, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 2320, 'end_line': 2320, 'comment': '# Test the image was killed...', 'include_SATD': False}], 'b_comments': [{'start_line': 276, 'end_line': 276, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 496, 'end_line': 496, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 1323, 'end_line': 1323, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1803, 'end_line': 1803, 'comment': ""# Image 2 has disk format 'vhd'"", 'include_SATD': False}, {'start_line': 2200, 'end_line': 2200, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 2343, 'end_line': 2343, 'comment': '# Test that only one image was returned (that already exists)', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_api.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_cache_middleware.py'}, {'a_comments': [{'start_line': 187, 'end_line': 187, 'comment': ""#2'}"", 'include_SATD': False}, {'start_line': 865, 'end_line': 865, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 993, 'end_line': 993, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1018, 'end_line': 1018, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1529, 'end_line': 1529, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1612, 'end_line': 1612, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1651, 'end_line': 1651, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1678, 'end_line': 1678, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1705, 'end_line': 1705, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}], 'b_comments': [{'start_line': 193, 'end_line': 193, 'comment': ""#2'"", 'include_SATD': False}, {'start_line': 860, 'end_line': 860, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1527, 'end_line': 1527, 'comment': '# deleted', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_clients.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_filesystem_store.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_s3_store.py'}, {'a_comments': [{'start_line': 269, 'end_line': 269, 'comment': '# start image id arbitrarily high due to existing fixtures', 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/tests/unit/test_swift_store.py'}, {'a_comments': [], 'b_comments': [{'start_line': 115, 'end_line': 115, 'comment': '# make sure there are 4 dashes', 'include_SATD': False}, {'start_line': 121, 'end_line': 121, 'comment': '# casting to set will drop duplicate values', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/utils.py'}]}, {'revision': 9, 'changed_files': [{'a_comments': [], 'b_comments': [], 'filename': 'glance/common/utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/api/v1/images.py'}, {'a_comments': [{'start_line': 148, 'end_line': 149, 'comment': '#NOTE(bcwaldon): this is to prevent false matches when mysql compares # an integer to a string that begins with that integer', 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/registry/db/api.py'}, {'a_comments': [], 'b_comments': [{'start_line': 0, 'end_line': 0, 'comment': '# vim: tabstop=4 shiftwidth=4 softtabstop=4', 'include_SATD': False}, {'start_line': 2, 'end_line': 15, 'comment': '# Copyright 2011 OpenStack LLC. # All Rights Reserved. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         httpwww.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.', 'include_SATD': False}], 'filename': 'glance/registry/db/migrate_repo/versions/012_id_to_uuid.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/registry/db/models.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/store/scrubber.py'}, {'a_comments': [{'start_line': 88, 'end_line': 89, 'comment': '# 2. HEAD /images/1 # Verify 404 returned', 'include_SATD': False}, {'start_line': 95, 'end_line': 113, 'comment': '# 3. POST /images with public image named Image1 # 4. HEAD /images/1', 'include_SATD': False}, {'start_line': 121, 'end_line': 121, 'comment': '# 5. GET /images/1', 'include_SATD': False}, {'start_line': 158, 'end_line': 158, 'comment': '# 6. GET /images', 'include_SATD': False}, {'start_line': 174, 'end_line': 174, 'comment': '# 7. GET /images/detail', 'include_SATD': False}, {'start_line': 202, 'end_line': 202, 'comment': '# 8. PUT /images/1 with custom properties of ""distro"" and ""arch""', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# 9. GET /images/detail', 'include_SATD': False}, {'start_line': 242, 'end_line': 242, 'comment': '# 10. PUT /images/1 and remove a previously existing property.', 'include_SATD': False}, {'start_line': 256, 'end_line': 256, 'comment': '# 11. PUT /images/1 and add a previously deleted property.', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': '# 4. PUT /images/1 with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 920, 'end_line': 920, 'comment': '# 2. GET /images with limit of 2', 'include_SATD': False}, {'start_line': 932, 'end_line': 932, 'comment': '# 3. GET /images with marker', 'include_SATD': False}, {'start_line': 944, 'end_line': 944, 'comment': '# 4. GET /images with marker and limit', 'include_SATD': False}, {'start_line': 955, 'end_line': 955, 'comment': '# 5. GET /images/detail with marker and limit', 'include_SATD': False}], 'b_comments': [{'start_line': 86, 'end_line': 86, 'comment': '# 2. POST /images with public image named Image1', 'include_SATD': False}, {'start_line': 105, 'end_line': 105, 'comment': '# 3. HEAD image', 'include_SATD': False}, {'start_line': 114, 'end_line': 114, 'comment': '# 4. GET image', 'include_SATD': False}, {'start_line': 152, 'end_line': 152, 'comment': '# 5. GET /images', 'include_SATD': False}, {'start_line': 168, 'end_line': 168, 'comment': '# 6. GET /images/detail', 'include_SATD': False}, {'start_line': 196, 'end_line': 196, 'comment': '# 7. PUT image with custom properties of ""distro"" and ""arch""', 'include_SATD': False}, {'start_line': 209, 'end_line': 209, 'comment': '# 8. GET /images/detail', 'include_SATD': False}, {'start_line': 237, 'end_line': 237, 'comment': '# 9. PUT image and remove a previously existing property.', 'include_SATD': False}, {'start_line': 252, 'end_line': 252, 'comment': '# 10. PUT image and add a previously deleted property.', 'include_SATD': False}, {'start_line': 353, 'end_line': 353, 'comment': '# 4. PUT image with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 922, 'end_line': 922, 'comment': '# 2. GET /images with all images', 'include_SATD': False}, {'start_line': 930, 'end_line': 930, 'comment': '# 3. GET /images with limit of 2', 'include_SATD': False}, {'start_line': 942, 'end_line': 942, 'comment': '# 4. GET /images with marker', 'include_SATD': False}, {'start_line': 954, 'end_line': 954, 'comment': '# 5. GET /images with marker and limit', 'include_SATD': False}, {'start_line': 967, 'end_line': 967, 'comment': '# 6. GET /images/detail with marker and limit', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_api.py'}, {'a_comments': [{'start_line': 251, 'end_line': 251, 'comment': ""# 3. Verify image status in show is 'killed'"", 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/tests/functional/test_bin_glance.py'}, {'a_comments': [{'start_line': 53, 'end_line': 53, 'comment': '# Verify no image 1', 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/tests/functional/test_cache_middleware.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_misc.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_private_images.py'}, {'a_comments': [{'start_line': 176, 'end_line': 176, 'comment': '# 2. GET /images/1', 'include_SATD': False}, {'start_line': 185, 'end_line': 185, 'comment': '# 3. GET /images/1 from registry in order to find S3 location', 'include_SATD': False}, {'start_line': 205, 'end_line': 205, 'comment': '# 5. GET /images/2 and make sure it can stream the image', 'include_SATD': False}, {'start_line': 213, 'end_line': 213, 'comment': '# 6. DELETE /images/1 and /images/2', 'include_SATD': False}], 'b_comments': [{'start_line': 178, 'end_line': 178, 'comment': '# 2. GET first image', 'include_SATD': False}, {'start_line': 189, 'end_line': 189, 'comment': '# 3. GET first image from registry in order to find S3 location', 'include_SATD': False}, {'start_line': 213, 'end_line': 213, 'comment': '# 5. GET second image and make sure it can stream the image', 'include_SATD': False}, {'start_line': 223, 'end_line': 223, 'comment': '# 6. DELETE first and second images', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_s3.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/functional/test_shared_images.py'}, {'a_comments': [{'start_line': 131, 'end_line': 132, 'comment': '# 2. HEAD /images/1 # Verify 404 returned', 'include_SATD': False}, {'start_line': 138, 'end_line': 156, 'comment': '# 3. POST /images with public image named Image1 # 4. HEAD /images/1', 'include_SATD': False}, {'start_line': 164, 'end_line': 164, 'comment': '# 5. GET /images/1', 'include_SATD': False}, {'start_line': 201, 'end_line': 201, 'comment': '# 6. GET /images', 'include_SATD': False}, {'start_line': 217, 'end_line': 217, 'comment': '# 7. GET /images/detail', 'include_SATD': False}, {'start_line': 245, 'end_line': 245, 'comment': '# 8. PUT /images/1 with custom properties of ""distro"" and ""arch""', 'include_SATD': False}, {'start_line': 257, 'end_line': 257, 'comment': '# 9. GET /images/detail', 'include_SATD': False}, {'start_line': 285, 'end_line': 285, 'comment': '# 10. PUT /images/1 and remove a previously existing property.', 'include_SATD': False}, {'start_line': 299, 'end_line': 299, 'comment': '# 11. PUT /images/1 and add a previously deleted property.', 'include_SATD': False}, {'start_line': 396, 'end_line': 396, 'comment': '# 4. PUT /images/1 with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 411, 'end_line': 411, 'comment': '# 5. HEAD /images', 'include_SATD': False}], 'b_comments': [{'start_line': 129, 'end_line': 129, 'comment': '# 2. POST /images with public image named Image1', 'include_SATD': False}, {'start_line': 149, 'end_line': 149, 'comment': '# 3. HEAD image', 'include_SATD': False}, {'start_line': 158, 'end_line': 158, 'comment': '# 4. GET image', 'include_SATD': False}, {'start_line': 196, 'end_line': 196, 'comment': '# 5. GET /images', 'include_SATD': False}, {'start_line': 212, 'end_line': 212, 'comment': '# 6. GET /images/detail', 'include_SATD': False}, {'start_line': 240, 'end_line': 240, 'comment': '# 7. PUT image with custom properties of ""distro"" and ""arch""', 'include_SATD': False}, {'start_line': 253, 'end_line': 253, 'comment': '# 8. GET /images/detail', 'include_SATD': False}, {'start_line': 281, 'end_line': 281, 'comment': '# 9. PUT image and remove a previously existing property.', 'include_SATD': False}, {'start_line': 296, 'end_line': 296, 'comment': '# 10. PUT image and add a previously deleted property.', 'include_SATD': False}, {'start_line': 397, 'end_line': 397, 'comment': '# 4. PUT image with image data, verify 200 returned', 'include_SATD': False}, {'start_line': 413, 'end_line': 413, 'comment': '# 5. HEAD image', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_ssl.py'}, {'a_comments': [{'start_line': 203, 'end_line': 203, 'comment': '# HEAD /images/1', 'include_SATD': False}, {'start_line': 211, 'end_line': 211, 'comment': '# GET /images/1', 'include_SATD': False}, {'start_line': 285, 'end_line': 285, 'comment': '# DELETE /images/1', 'include_SATD': False}, {'start_line': 341, 'end_line': 341, 'comment': '# 4. HEAD /images/1', 'include_SATD': False}, {'start_line': 349, 'end_line': 349, 'comment': '# 5. GET /images/1', 'include_SATD': False}, {'start_line': 418, 'end_line': 418, 'comment': '# GET /images/1 and make sure data was uploaded', 'include_SATD': False}, {'start_line': 466, 'end_line': 466, 'comment': '# DELETE /images/1 and /image/2', 'include_SATD': False}], 'b_comments': [{'start_line': 205, 'end_line': 205, 'comment': '# HEAD image', 'include_SATD': False}, {'start_line': 214, 'end_line': 214, 'comment': '# GET image', 'include_SATD': False}, {'start_line': 290, 'end_line': 290, 'comment': '# DELETE image', 'include_SATD': False}, {'start_line': 349, 'end_line': 349, 'comment': '# 4. HEAD image', 'include_SATD': False}, {'start_line': 358, 'end_line': 358, 'comment': '# 5. GET image', 'include_SATD': False}, {'start_line': 430, 'end_line': 430, 'comment': '# GET image and make sure data was uploaded', 'include_SATD': False}, {'start_line': 483, 'end_line': 483, 'comment': '# DELETE boty images', 'include_SATD': False}], 'filename': 'glance/tests/functional/test_swift.py'}, {'a_comments': [{'start_line': 254, 'end_line': 254, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 458, 'end_line': 458, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 1317, 'end_line': 1317, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1526, 'end_line': 1526, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1781, 'end_line': 1781, 'comment': ""# Image 2 has disk format 'vhd'"", 'include_SATD': False}, {'start_line': 2176, 'end_line': 2176, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 2337, 'end_line': 2337, 'comment': '# Test the image was killed...', 'include_SATD': False}], 'b_comments': [{'start_line': 276, 'end_line': 276, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 496, 'end_line': 496, 'comment': ""#123',"", 'include_SATD': False}, {'start_line': 1323, 'end_line': 1323, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1803, 'end_line': 1803, 'comment': ""# Image 2 has disk format 'vhd'"", 'include_SATD': False}, {'start_line': 2197, 'end_line': 2197, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 2361, 'end_line': 2361, 'comment': '# Test that only one image was returned (that already exists)', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_api.py'}, {'a_comments': [{'start_line': 187, 'end_line': 187, 'comment': ""#2'}"", 'include_SATD': False}, {'start_line': 864, 'end_line': 864, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 990, 'end_line': 990, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1015, 'end_line': 1015, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1527, 'end_line': 1527, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1610, 'end_line': 1610, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1649, 'end_line': 1649, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1676, 'end_line': 1676, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}, {'start_line': 1703, 'end_line': 1703, 'comment': '# Test ID auto-assigned properly', 'include_SATD': False}], 'b_comments': [{'start_line': 193, 'end_line': 193, 'comment': ""#2'"", 'include_SATD': False}, {'start_line': 859, 'end_line': 859, 'comment': '# deleted', 'include_SATD': False}, {'start_line': 1525, 'end_line': 1525, 'comment': '# deleted', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_clients.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_filesystem_store.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/tests/unit/test_s3_store.py'}, {'a_comments': [{'start_line': 269, 'end_line': 269, 'comment': '# start image id arbitrarily high due to existing fixtures', 'include_SATD': False}], 'b_comments': [], 'filename': 'glance/tests/unit/test_swift_store.py'}, {'a_comments': [], 'b_comments': [{'start_line': 115, 'end_line': 115, 'comment': '# make sure there are 4 dashes', 'include_SATD': False}, {'start_line': 121, 'end_line': 121, 'comment': '# casting to set will drop duplicate values', 'include_SATD': False}], 'filename': 'glance/tests/unit/test_utils.py'}, {'a_comments': [], 'b_comments': [], 'filename': 'glance/utils.py'}]}]",9,26,32,MERGED,True,https://review.opendev.org/#/c/987,Convert image id value to a uuid,True,"{'# TODO(wwolf): do some sort of UUID-validity check here?': 1, '# TODO(wwolf): should this work?! #cmd = ""bin/glance --port=%d show %s"" % (api_port, image_id) #exitcode, out, err = execute(cmd) #self.assertEqual(0, exitcode) #self.assertTrue(\'Status: killed\' in out)': 1, '# TODO(wwolf): should this be working?? #expected_headers = {\'x-image-meta-id\': \'3\', #\'x-image-meta-status\': \'killed\'} #req = webob.Request.blank(""/images"") #req.method = \'GET\' #res = req.get_response(self.api) #print res #self.assertEquals(res.status_int, 200) #for key, value in expected_headers.iteritems(): #self.assertEquals(value, res.headers[key])': 1}",True,{},False,{}
